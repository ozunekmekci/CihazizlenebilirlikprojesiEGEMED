{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/BIYOMEDIKAL/Desktop/cihazqr/next-js-boilerplate/src/libs/Env.ts"],"sourcesContent":["import { createEnv } from '@t3-oss/env-nextjs';\r\nimport { z } from 'zod';\r\n\r\nexport const Env = createEnv({\r\n  server: {\r\n    ARCJET_KEY: z.string().startsWith('ajkey_').optional(),\r\n    CLERK_SECRET_KEY: z.string().min(1),\r\n    DATABASE_URL: z.string().optional(),\r\n    LOGTAIL_SOURCE_TOKEN: z.string().optional(),\r\n  },\r\n  client: {\r\n    NEXT_PUBLIC_APP_URL: z.string().optional(),\r\n    NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string().min(1),\r\n    NEXT_PUBLIC_POSTHOG_KEY: z.string().optional(),\r\n    NEXT_PUBLIC_POSTHOG_HOST: z.string().optional(),\r\n  },\r\n  shared: {\r\n    NODE_ENV: z.enum(['test', 'development', 'production']).optional(),\r\n  },\r\n  // You need to destructure all the keys manually\r\n  runtimeEnv: {\r\n    ARCJET_KEY: process.env.ARCJET_KEY,\r\n    CLERK_SECRET_KEY: process.env.CLERK_SECRET_KEY,\r\n    DATABASE_URL: process.env.DATABASE_URL,\r\n    LOGTAIL_SOURCE_TOKEN: process.env.LOGTAIL_SOURCE_TOKEN,\r\n    NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,\r\n    NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:\r\n      process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\r\n    NODE_ENV: process.env.NODE_ENV,\r\n    NEXT_PUBLIC_POSTHOG_KEY: process.env.NEXT_PUBLIC_POSTHOG_KEY,\r\n    NEXT_PUBLIC_POSTHOG_HOST: process.env.NEXT_PUBLIC_POSTHOG_HOST,\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,QAAQ;QACN,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,UAAU,CAAC,UAAU,QAAQ;QACpD,kBAAkB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACjC,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACjC,sBAAsB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3C;IACA,QAAQ;QACN,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACxC,mCAAmC,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAClD,yBAAyB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAC5C,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC/C;IACA,QAAQ;QACN,UAAU,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAQ;YAAe;SAAa,EAAE,QAAQ;IAClE;IACA,gDAAgD;IAChD,YAAY;QACV,YAAY,QAAQ,GAAG,CAAC,UAAU;QAClC,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB;QAC9C,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB;QACtD,qBAAqB,QAAQ,GAAG,CAAC,mBAAmB;QACpD,iCAAiC;QAEjC,QAAQ;QACR,uBAAuB;QACvB,wBAAwB;IAC1B;AACF","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/BIYOMEDIKAL/Desktop/cihazqr/next-js-boilerplate/src/components/analytics/PostHogPageView.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { usePathname, useSearchParams } from 'next/navigation';\r\nimport { usePostHog } from 'posthog-js/react';\r\nimport { Suspense, useEffect } from 'react';\r\n\r\nconst PostHogPageView = () => {\r\n  const pathname = usePathname();\r\n  const searchParams = useSearchParams();\r\n  const posthog = usePostHog();\r\n\r\n  // Track pageviews\r\n  useEffect(() => {\r\n    if (pathname && posthog) {\r\n      let url = window.origin + pathname;\r\n      if (searchParams.toString()) {\r\n        url = `${url}?${searchParams.toString()}`;\r\n      }\r\n\r\n      posthog.capture('$pageview', { $current_url: url });\r\n    }\r\n  }, [pathname, searchParams, posthog]);\r\n\r\n  return null;\r\n};\r\n\r\n// Wrap this in Suspense to avoid the `useSearchParams` usage above\r\n// from de-opting the whole app into client-side rendering\r\n// See: https://nextjs.org/docs/messages/deopted-into-client-rendering\r\nexport const SuspendedPostHogPageView = () => {\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <PostHogPageView />\r\n    </Suspense>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,kBAAkB;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,UAAU,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAEzB,kBAAkB;IAClB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY,SAAS;YACvB,IAAI,MAAM,OAAO,MAAM,GAAG;YAC1B,IAAI,aAAa,QAAQ,IAAI;gBAC3B,MAAM,GAAG,IAAI,CAAC,EAAE,aAAa,QAAQ,IAAI;YAC3C;YAEA,QAAQ,OAAO,CAAC,aAAa;gBAAE,cAAc;YAAI;QACnD;IACF,GAAG;QAAC;QAAU;QAAc;KAAQ;IAEpC,OAAO;AACT;AAKO,MAAM,2BAA2B;IACtC,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,UAAU;kBAClB,cAAA,8OAAC;;;;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/BIYOMEDIKAL/Desktop/cihazqr/next-js-boilerplate/src/components/analytics/PostHogProvider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Env } from '@/libs/Env';\r\nimport posthog from 'posthog-js';\r\nimport { PostHogProvider as PHProvider } from 'posthog-js/react';\r\nimport { useEffect } from 'react';\r\nimport { SuspendedPostHogPageView } from './PostHogPageView';\r\n\r\nexport const PostHogProvider = (props: { children: React.ReactNode }) => {\r\n  useEffect(() => {\r\n    if (Env.NEXT_PUBLIC_POSTHOG_KEY) {\r\n      posthog.init(Env.NEXT_PUBLIC_POSTHOG_KEY, {\r\n        api_host: Env.NEXT_PUBLIC_POSTHOG_HOST,\r\n        capture_pageview: false, // Disable automatic pageview capture, as we capture manually\r\n        capture_pageleave: true, // Enable pageleave capture\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  if (!Env.NEXT_PUBLIC_POSTHOG_KEY) {\r\n    return props.children;\r\n  }\r\n\r\n  return (\r\n    <PHProvider client={posthog}>\r\n      <SuspendedPostHogPageView />\r\n      {props.children}\r\n    </PHProvider>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQO,MAAM,kBAAkB,CAAC;IAC9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,kHAAA,CAAA,MAAG,CAAC,uBAAuB,EAAE;YAC/B,+IAAA,CAAA,UAAO,CAAC,IAAI,CAAC,kHAAA,CAAA,MAAG,CAAC,uBAAuB,EAAE;gBACxC,UAAU,kHAAA,CAAA,MAAG,CAAC,wBAAwB;gBACtC,kBAAkB;gBAClB,mBAAmB;YACrB;QACF;IACF,GAAG,EAAE;IAEL,IAAI,CAAC,kHAAA,CAAA,MAAG,CAAC,uBAAuB,EAAE;QAChC,OAAO,MAAM,QAAQ;IACvB;IAEA,qBACE,8OAAC,8JAAA,CAAA,kBAAU;QAAC,QAAQ,+IAAA,CAAA,UAAO;;0BACzB,8OAAC,kJAAA,CAAA,2BAAwB;;;;;YACxB,MAAM,QAAQ;;;;;;;AAGrB","debugId":null}}]
}