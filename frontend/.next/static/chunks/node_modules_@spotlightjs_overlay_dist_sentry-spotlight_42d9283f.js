(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/@spotlightjs/overlay/dist/sentry-spotlight.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "CONTEXT_LINES_ENDPOINT": (()=>Ym),
    "DEFAULT_ANCHOR": (()=>aI),
    "DEFAULT_EXPERIMENTS": (()=>jp),
    "DEFAULT_SIDECAR_URL": (()=>E5),
    "React": (()=>Ou),
    "ReactDOM": (()=>yT),
    "SPOTLIGHT_OPEN_CLASS_NAME": (()=>Xp),
    "closeSpotlight": (()=>yY),
    "console": (()=>bY),
    "hydrationError": (()=>PY),
    "init": (()=>FY),
    "off": (()=>o5),
    "on": (()=>kE),
    "onClose": (()=>DY),
    "onOpen": (()=>xY),
    "onSevereEvent": (()=>UY),
    "openSpotlight": (()=>LY),
    "sendEvent": (()=>wY),
    "sentry": (()=>XG),
    "trigger": (()=>Hl),
    "viteInspect": (()=>MY)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var IL = Object.defineProperty;
var OL = (e, t, n)=>t in e ? IL(e, t, {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: n
    }) : e[t] = n;
var Cn = (e, t, n)=>OL(e, typeof t != "symbol" ? t + "" : t, n);
function CL(e, t) {
    for(var n = 0; n < t.length; n++){
        const r = t[n];
        if (typeof r != "string" && !Array.isArray(r)) {
            for(const s in r)if (s !== "default" && !(s in e)) {
                const i = Object.getOwnPropertyDescriptor(r, s);
                i && Object.defineProperty(e, s, i.get ? i : {
                    enumerable: !0,
                    get: ()=>r[s]
                });
            }
        }
    }
    return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
    }));
}
var at = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Ts(e) {
    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function bm(e) {
    if (e.__esModule) return e;
    var t = e.default;
    if (typeof t == "function") {
        var n = function r() {
            return this instanceof r ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments);
        };
        n.prototype = t.prototype;
    } else n = {};
    return Object.defineProperty(n, "__esModule", {
        value: !0
    }), Object.keys(e).forEach(function(r) {
        var s = Object.getOwnPropertyDescriptor(e, r);
        Object.defineProperty(n, r, s.get ? s : {
            enumerable: !0,
            get: function() {
                return e[r];
            }
        });
    }), n;
}
var Pm = {
    exports: {}
}, NE = {}, Mm = {
    exports: {}
}, De = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var wl = Symbol.for("react.element"), gL = Symbol.for("react.portal"), LL = Symbol.for("react.fragment"), yL = Symbol.for("react.strict_mode"), vL = Symbol.for("react.profiler"), bL = Symbol.for("react.provider"), PL = Symbol.for("react.context"), ML = Symbol.for("react.forward_ref"), DL = Symbol.for("react.suspense"), wL = Symbol.for("react.memo"), xL = Symbol.for("react.lazy"), $A = Symbol.iterator;
function UL(e) {
    return e === null || typeof e != "object" ? null : (e = $A && e[$A] || e["@@iterator"], typeof e == "function" ? e : null);
}
var Dm = {
    isMounted: function() {
        return !1;
    },
    enqueueForceUpdate: function() {},
    enqueueReplaceState: function() {},
    enqueueSetState: function() {}
}, wm = Object.assign, xm = {};
function io(e, t, n) {
    this.props = e, this.context = t, this.refs = xm, this.updater = n || Dm;
}
io.prototype.isReactComponent = {};
io.prototype.setState = function(e, t) {
    if (typeof e != "object" && typeof e != "function" && e != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, e, t, "setState");
};
io.prototype.forceUpdate = function(e) {
    this.updater.enqueueForceUpdate(this, e, "forceUpdate");
};
function Um() {}
Um.prototype = io.prototype;
function xT(e, t, n) {
    this.props = e, this.context = t, this.refs = xm, this.updater = n || Dm;
}
var UT = xT.prototype = new Um();
UT.constructor = xT;
wm(UT, io.prototype);
UT.isPureReactComponent = !0;
var e0 = Array.isArray, Fm = Object.prototype.hasOwnProperty, FT = {
    current: null
}, Bm = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function Gm(e, t, n) {
    var r, s = {}, i = null, a = null;
    if (t != null) for(r in t.ref !== void 0 && (a = t.ref), t.key !== void 0 && (i = "" + t.key), t)Fm.call(t, r) && !Bm.hasOwnProperty(r) && (s[r] = t[r]);
    var o = arguments.length - 2;
    if (o === 1) s.children = n;
    else if (1 < o) {
        for(var l = Array(o), c = 0; c < o; c++)l[c] = arguments[c + 2];
        s.children = l;
    }
    if (e && e.defaultProps) for(r in o = e.defaultProps, o)s[r] === void 0 && (s[r] = o[r]);
    return {
        $$typeof: wl,
        type: e,
        key: i,
        ref: a,
        props: s,
        _owner: FT.current
    };
}
function FL(e, t) {
    return {
        $$typeof: wl,
        type: e.type,
        key: t,
        ref: e.ref,
        props: e.props,
        _owner: e._owner
    };
}
function BT(e) {
    return typeof e == "object" && e !== null && e.$$typeof === wl;
}
function BL(e) {
    var t = {
        "=": "=0",
        ":": "=2"
    };
    return "$" + e.replace(/[=:]/g, function(n) {
        return t[n];
    });
}
var t0 = /\/+/g;
function Pd(e, t) {
    return typeof e == "object" && e !== null && e.key != null ? BL("" + e.key) : t.toString(36);
}
function $c(e, t, n, r, s) {
    var i = typeof e;
    (i === "undefined" || i === "boolean") && (e = null);
    var a = !1;
    if (e === null) a = !0;
    else switch(i){
        case "string":
        case "number":
            a = !0;
            break;
        case "object":
            switch(e.$$typeof){
                case wl:
                case gL:
                    a = !0;
            }
    }
    if (a) return a = e, s = s(a), e = r === "" ? "." + Pd(a, 0) : r, e0(s) ? (n = "", e != null && (n = e.replace(t0, "$&/") + "/"), $c(s, t, n, "", function(c) {
        return c;
    })) : s != null && (BT(s) && (s = FL(s, n + (!s.key || a && a.key === s.key ? "" : ("" + s.key).replace(t0, "$&/") + "/") + e)), t.push(s)), 1;
    if (a = 0, r = r === "" ? "." : r + ":", e0(e)) for(var o = 0; o < e.length; o++){
        i = e[o];
        var l = r + Pd(i, o);
        a += $c(i, t, n, l, s);
    }
    else if (l = UL(e), typeof l == "function") for(e = l.call(e), o = 0; !(i = e.next()).done;)i = i.value, l = r + Pd(i, o++), a += $c(i, t, n, l, s);
    else if (i === "object") throw t = String(e), Error("Objects are not valid as a React child (found: " + (t === "[object Object]" ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
    return a;
}
function fc(e, t, n) {
    if (e == null) return e;
    var r = [], s = 0;
    return $c(e, r, "", "", function(i) {
        return t.call(n, i, s++);
    }), r;
}
function GL(e) {
    if (e._status === -1) {
        var t = e._result;
        t = t(), t.then(function(n) {
            (e._status === 0 || e._status === -1) && (e._status = 1, e._result = n);
        }, function(n) {
            (e._status === 0 || e._status === -1) && (e._status = 2, e._result = n);
        }), e._status === -1 && (e._status = 0, e._result = t);
    }
    if (e._status === 1) return e._result.default;
    throw e._result;
}
var Rn = {
    current: null
}, eu = {
    transition: null
}, kL = {
    ReactCurrentDispatcher: Rn,
    ReactCurrentBatchConfig: eu,
    ReactCurrentOwner: FT
};
function km() {
    throw Error("act(...) is not supported in production builds of React.");
}
De.Children = {
    map: fc,
    forEach: function(e, t, n) {
        fc(e, function() {
            t.apply(this, arguments);
        }, n);
    },
    count: function(e) {
        var t = 0;
        return fc(e, function() {
            t++;
        }), t;
    },
    toArray: function(e) {
        return fc(e, function(t) {
            return t;
        }) || [];
    },
    only: function(e) {
        if (!BT(e)) throw Error("React.Children.only expected to receive a single React element child.");
        return e;
    }
};
De.Component = io;
De.Fragment = LL;
De.Profiler = vL;
De.PureComponent = xT;
De.StrictMode = yL;
De.Suspense = DL;
De.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = kL;
De.act = km;
De.cloneElement = function(e, t, n) {
    if (e == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
    var r = wm({}, e.props), s = e.key, i = e.ref, a = e._owner;
    if (t != null) {
        if (t.ref !== void 0 && (i = t.ref, a = FT.current), t.key !== void 0 && (s = "" + t.key), e.type && e.type.defaultProps) var o = e.type.defaultProps;
        for(l in t)Fm.call(t, l) && !Bm.hasOwnProperty(l) && (r[l] = t[l] === void 0 && o !== void 0 ? o[l] : t[l]);
    }
    var l = arguments.length - 2;
    if (l === 1) r.children = n;
    else if (1 < l) {
        o = Array(l);
        for(var c = 0; c < l; c++)o[c] = arguments[c + 2];
        r.children = o;
    }
    return {
        $$typeof: wl,
        type: e.type,
        key: s,
        ref: i,
        props: r,
        _owner: a
    };
};
De.createContext = function(e) {
    return e = {
        $$typeof: PL,
        _currentValue: e,
        _currentValue2: e,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null
    }, e.Provider = {
        $$typeof: bL,
        _context: e
    }, e.Consumer = e;
};
De.createElement = Gm;
De.createFactory = function(e) {
    var t = Gm.bind(null, e);
    return t.type = e, t;
};
De.createRef = function() {
    return {
        current: null
    };
};
De.forwardRef = function(e) {
    return {
        $$typeof: ML,
        render: e
    };
};
De.isValidElement = BT;
De.lazy = function(e) {
    return {
        $$typeof: xL,
        _payload: {
            _status: -1,
            _result: e
        },
        _init: GL
    };
};
De.memo = function(e, t) {
    return {
        $$typeof: wL,
        type: e,
        compare: t === void 0 ? null : t
    };
};
De.startTransition = function(e) {
    var t = eu.transition;
    eu.transition = {};
    try {
        e();
    } finally{
        eu.transition = t;
    }
};
De.unstable_act = km;
De.useCallback = function(e, t) {
    return Rn.current.useCallback(e, t);
};
De.useContext = function(e) {
    return Rn.current.useContext(e);
};
De.useDebugValue = function() {};
De.useDeferredValue = function(e) {
    return Rn.current.useDeferredValue(e);
};
De.useEffect = function(e, t) {
    return Rn.current.useEffect(e, t);
};
De.useId = function() {
    return Rn.current.useId();
};
De.useImperativeHandle = function(e, t, n) {
    return Rn.current.useImperativeHandle(e, t, n);
};
De.useInsertionEffect = function(e, t) {
    return Rn.current.useInsertionEffect(e, t);
};
De.useLayoutEffect = function(e, t) {
    return Rn.current.useLayoutEffect(e, t);
};
De.useMemo = function(e, t) {
    return Rn.current.useMemo(e, t);
};
De.useReducer = function(e, t, n) {
    return Rn.current.useReducer(e, t, n);
};
De.useRef = function(e) {
    return Rn.current.useRef(e);
};
De.useState = function(e) {
    return Rn.current.useState(e);
};
De.useSyncExternalStore = function(e, t, n) {
    return Rn.current.useSyncExternalStore(e, t, n);
};
De.useTransition = function() {
    return Rn.current.useTransition();
};
De.version = "18.3.1";
Mm.exports = De;
var L = Mm.exports;
const Ou = /* @__PURE__ */ Ts(L), HL = /* @__PURE__ */ CL({
    __proto__: null,
    default: Ou
}, [
    L
]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var YL = L, VL = Symbol.for("react.element"), WL = Symbol.for("react.fragment"), jL = Object.prototype.hasOwnProperty, XL = YL.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, KL = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function Hm(e, t, n) {
    var r, s = {}, i = null, a = null;
    n !== void 0 && (i = "" + n), t.key !== void 0 && (i = "" + t.key), t.ref !== void 0 && (a = t.ref);
    for(r in t)jL.call(t, r) && !KL.hasOwnProperty(r) && (s[r] = t[r]);
    if (e && e.defaultProps) for(r in t = e.defaultProps, t)s[r] === void 0 && (s[r] = t[r]);
    return {
        $$typeof: VL,
        type: e,
        key: i,
        ref: a,
        props: s,
        _owner: XL.current
    };
}
NE.Fragment = WL;
NE.jsx = Hm;
NE.jsxs = Hm;
Pm.exports = NE;
var m = Pm.exports;
const zL = '@font-face{font-family:Raleway;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,d09GRgABAAAAADEkAA8AAAAAV2AAAQABAAAAAAAAAAAAAAAAAAAAAAAAAABHREVGAAABWAAAADgAAABSBDgEM0dQT1MAAAGQAAADmgAACQT3vCSYR1NVQgAABSwAAAB+AAAAtIRJkaBPUy8yAAAFrAAAAEsAAABgYoadIlNUQVQAAAX4AAAAPAAAAEjneMwnY21hcAAABjQAAAE+AAAB0I8lQ2ZnYXNwAAAHdAAAAAgAAAAIAAAAEGdseWYAAAd8AAAhGAAAOKZ/LVSRaGVhZAAAKJQAAAA2AAAANhH6HOBoaGVhAAAozAAAAB8AAAAkB38C+2htdHgAACjsAAACEAAAA6QhKCaNbG9jYQAAKvwAAAHHAAAB1B5rLRhtYXhwAAAsxAAAABsAAAAgAPUAqm5hbWUAACzgAAABNAAAAn4+FV8FcG9zdAAALhQAAAMPAAAIvMBiurN42iXBsRFAAADAwETLNO40FrCBHcxiBrXGkHL8IzDxGxjxO1eWylrZKnvlqJyVq3JXnvoCzHcIbHjanZMDkCVZEEVPVX23zTWDa9u2bdu7Ya5t27bHtm3bZs6NjB891dMY5InMfMatVwRANcXkVNqb4K5bHryXRqKTTz37Yva+6YkH72bvu294+F714WOzZIgopZZdafS2EFT2zL75fDKY+fggeSEJIEqenRSq3+n1ouSF4mz50eLC5OXJa52bk08TJt8lAand06dqjxryZutpMvtC/reNoA2z1R7X2RratubreraZ8lm23obYDGLm7TN83XjrEvnLtsA+t/9tYax9hfbdAdN5l9hS5Q1a2c3me1zQ2thmtWXyN22JvKdWiOmw+STqnektvrZOPMF+se42cYt1e9CK6ZaL7UvrZYuJWfOd8nmlfKN8oa0gZn4OWv2WL0mvn6y3xm+D2cfyv9rVcH0+r1V8T/f9UZqsaWPvBfg9dNpJyj/Ix8RvBTYoVp5iY/AMnsfnYytmHfQqhih/KX7xlgkeJ8a+69ttavKiLbPvpclydthsUVNphr+qjTbTa7/5LRduPkf8+9gonVzjrJ91tO74a8ZjbOXvYmVfR6ddpJthP8knND+1DWz3lL+10ja6zdFTW2lbuh2arGTbrHjLPWxDq+ttsOm2xqZv8/7+d3tpbax1Rvzfa/O8AUNtimIkD4m8Pt7jco8TPM7wOF2xiCM5mpM4m4u4mMu5h7/4m3/oxlD1BVorlEfyo20aJ9kELlL5Yvk9Kv+llf6W/yPvpvUG66sEnJjf+wAO5jAO5wjf4xhO0D5n5Xe6hEu12xVcw7XcrV0f4EEe4mGe4lle4EVe4mVe5TVe5y3e4T3e5wM+4Su+4Vu+43t+4hd+5Td+z5/3X/6nK93oQ1/6MZghhOzvOqQ5QFRxsGjgMFHH4aKaI0QdR4pijhbFHCMCThBZThIlnCUCzhbFfu40l4gkl4qQy0UxV4hqv0nI3SLkHlHBA6KaB3lYqz0lynhW1PKCqOdFUcNLop6XRTmvinJeEzneEoW8I2r5QJTyiUj4/TN8J1J8LyJ+EjWuRMRfUqKIrqKAbqKSPqKQvqKGfqKQwSLJEJEi5ADXKOPqVLsuZa5FLqZFwrUo5BRObVLkAlHiimRckcBVKHMVEtwsSlyLhGtRxP0icEXKXJGEa1HFczxP6FpU+DcPm1R4ndBViFyFKn8Dpa5F1rVI8pUodUVSrohrQYW/jDCmSAH/ilL+439CVyft6hTTW4SuUeQaVbhGEQNE6EpV4kptArh87PMAAHjaPcdBCkFRAEbh715MjKxAhobSI8kEkoEZFiDTF2BiDcrUlmBRj27RX+f8R0BdTVXU1BLz3SbXTuwpTabzpdbmcvxWvj5vZQLC3/3E9NEFEEeLWUM2nq0aBqJM2cnZy1vUVrF3cPTwpChIDD+nlfUM3dwFFZ1UV/cPB10b6QAAeNpjYGEqYpzAwMrAwNTFFMHAwOANoRnjGIwYzRlQABM7iIDx/Pz9XBkOMDAobGFe81+MgYGlieGVAgPjdIhKpmNASoGBGQD52gueAHjaDcexEUBAFAXAfd8FcleCxkSYEd6MNhSkODZbEbNCV1jVvR8jOMd2ZRFNN6HS8lAvJvnfQfgA0okFUHjabMrDYl1RFAbg7yT7ZFLbtm3e2rZtY9ZxbbupHde2kTfIMG8RzYLFX0hCMmpLFpX8EL1GW80FKaiiuYRUH6KksDJsDLvDsZAeCuJacZO4Q9yteU5BAWVyK8KGsCMcDCdDVlw9bhi3jruW5PJ9k1XwXq+CREGkgsproaxeX0ONtdTZmkiUElWO6oIe9ulpv14O6O2gtvbY4rOtvujjkL4O6+eI/o4a4JiBjhvkhMFOGuKU3/4Y6ozhzko4Z4TzRrpglIv++me0S8a4bKwrxrtmglQTTXLDZDdNcctUt01zx3R3zXDPdTPdN8sD/+Wa7aE5HpnrsXnSzJdugQwLZVoky2LZlsix1BPLPLXcMys8t9ILq7y02itrvLbWG+u8td47G7y30QebfLTZJ8OcNs5VhZMDhqsswzEAJgJfAQAAAAEAAf//AA942pVbB0Abx9K+3UMSVUhIQiCDQAUJUNepISGJIokOpjc3bMclIQmJK06vpOcVp+f13lLt9J7Y6T1x6ktPXnN6L5z+ub3jkHDaD5bkW+3OzuzOfFN2oWjKS1HYifdThZSS0lJUjdpkMFr8Sh9j8GokSOkz0UipLmWw08A2KQpU6LkSdj3aVLyMvTi/qLKysAhfrNVUzt+FnSXzv8Th+ZfyC4AgUKPwJUBVRuVTFGKQyWqQmRBNI38EWTtXsHdPdqFnL/wp3j8ffuUVpEGr2d+k0/wo+iJsoRBFwdjnUCF167e0v0Dto26lcPodiqIvg1mKqRKYxaAhv0p4+bnZlDS6Gr3ObkdD7N/Rz9k6dv78bvTcK3h/LB1jP47BvBVohP0r0KxPf4UvxA9RZopS+WKY8ZZqZU5sMsqxRq2Hx0AgqJXDsxPXO0ZOXL56rjqoTfVZm9a2GmvbpxpqhzpKw6Urjgl07Bp3o03NJ2yMjiaMrmAZM7w5EJke9FSEnXp/pyW++TSKzNZNZgt/z2xSqUwqK9WWatRSk9FiDZaWQrvPaoHf72ciVGNSFpWF3OXRCrXGUmYwlxQvawlGv48vVaGkqEhnrXXI5db8wnKfWqGgK6t4Xsdh5QOwwrCpNWRp+RcOsCb0DHssmmT/EItxK0pF2A+F/jbon0dRjNh7HD3FbkW97HXQkf06zN64QPlsnjJSmpQGeDHwjs9OspOpFPoDpxqom92D97P3oUZhBPUrGEEDbeg7nuK68O20mmgwZVAiE+IoIcQo8WNs2s6yqXbQL20bbmHj6O75O4CeDr0DAykMO/E1vg8/TKkoK0VJYHv9ZD/0sBFyjMhmxKCN3xy0o2vXmNs7uauta9eo2zuxi73OkpoKR6eSZkvbmnDjVLJG0rjxlETbKYdFYptOboXPMNoUPmLQwwwfHgwfPuT2Dh+eOauO8i+dldt1rckKH1ZvMBC0MtpAMBDw+0T1WMqFA+PBpL/SGG2LerTq8WQYIaPIDrAniW7I5MhL43VxraIyritUHJ5EuB4Y4xkknxx3lWALNwJ31VTdAneBoMFJm4ygk9bF5bFyemoAho5sm10J6427JPa2ccY92iJvKRs/NprYOeFjJnckkzOpnPlvJO1bpMG1p3Tml0ga1rbXmuJ1eqbX0bDu9O6uU6eC8eSOnu6dSdhLJbDQT3CDQiYl/PoNuH8+NY+b8FnzO/FZMQpx+5xTAH2gL2K0QYZWcQBD0yb4UKH1LesPaz3+LAS683Tsoouj7DNdCM/hu7/5hn2SvRNvmw9zYAOqcy5q5rRKATMeB9RyKWoZZjjlQSv//d9u9t0U+x7oyqnoRLaF/QLlo9u41TGkP0Mf4RLQlxBFBX2BAGe9fp/FZITFIU8ajbpUq5FKrRaL1SrlrNdSA1vot3B9NGpiyIbQumbLQHVvsr7frmPWMmtmCosKFDnlOoRMM2FvvwOtLCg0dtR0TOjDVs/wxZ42a2GhvaW3Su82mY6a+lBehAIII6RXWhweW0eOXJffXSQPeysZgwWMgeOSPhO4DFId1ABFaYEHv8ArbJqF55Y8kkYOZTQGAj08zlmsZH+DXF+ryHiNExMleNTT6wiubTIl9ViWm9fVaB2yl21c1bxCW70p3r2tFbERSXAM9l7ZqGgZZxIzJk33WJl/QqvAeQWosqm6fcIQwufm+IcDvhEfnW/rcLpStQV5qlqlP1qtdySCHldD52yXpDgnNMr46hU1jYa4r85b5qs1KEvUfm1+fqOn2q//oGHM6x1r4PbQmv4MS0DealFjiXAywvrCohPZkKNhdZu1ZXtPx8yyltI+t2+EASaMcVduq7x5NN/WvTbYuau9tUFT6wisaoysaSirK1PXRAz8LN1klgDMshSTv33OJUiODIuoXFTqt7u/kxNb+bLigrLQngVElsuRRvMdvCnycwoLOPgG/SQr4QAeKyhz1lpwailb3GLa4MTAJbKH1qSsrdu7era0ILZF4h/2MpMlEdi2j9EpsEEbhvz5tq61oY5dHZ2z7cW5ixuCrA0jHs8owYvPsJnMWEPWxWIleIGJjom4JhXhwti1vRXBz+05gSGvb1zFzcY0rE5ZW7Z2+/p9NHtqTmAkv+O4DqlcEhr1+uoUlrDR1rUOmGj3MWMh2HXYiy4QFuEXqVLAfJPSZyGKSVxIIECmxCgRC1u6GgoTiaqj4464tQSZxsatrTb2bvwie3M4WR3tZyieEnUhzlvwKl0JnDf/ubCSdpBLRZkO9Q20sL1+H7/dqC60OmmxpFaHQqtSFkty9WfMiM/H/xv2wRpOBUJTXTb4DAXgExWGVwdDUw3hNaHwapirNm3DejKXJXMuQBYGZOLXzu+kiQ+AmZHaPxozWlonfdGNldFEz/q6VqaENnrDFbakr8IzlG/vnvIHYZ64e8O8ETVvbzSEjL9Z5rFqzI3d1tAaYjPFABR6nMejKM3BJ82oOI8TZGRa/FLra5EjpyOvtdyxZiza0to4uoZbFkSz8ziPjf7vub/85bn/cVQs6Vn8LKCnhvO9BpmcNvnBZQaDBiWjMflxA/tKjqQ6PBS2NtaX50jRn0fj+KyLf37P0a5Y7fprz7pvfue+OQql/5R24tOBSvlCLKCWZoQ9AT8fGZwOkYEp5dfUaVWKSrm1Xr4YJVwfX+XLzYtIpfU9DL6KCxjS6YUYFEuBTyF+QAdhFslCbDIOUeH1EJPM74TeJNIhvWWktw7W5w5eMi6aUHHKAe8IPA1xTLQOqdn5gYNTyTXvDrDfIHX/N2uT675BR6Exbn7y+jP7M9TJ3sC9gKIj/Tn6FD9OOTLxg2iQyZ+hTDKrCMoy8i5FBR1bDYHykVD3eE3CnUjWhKpN8XqmV8tUbWyPTvr93niycXNePGSwu/ta6pvNIVPYbA0bnXXGYMw1GAqMlirXNsfG3ZxcK0HOKxYiNEaJGOLxkuim5iTbA8t5Od4wH8aT839Ip/m+9Ay2UGYSd78GUTeHMivT0/hteoYqoipFKozMFARKKg4BGCJakJFjQrizI8o0sj0velqNKIjqAr56+DA2C5PtfGo3Nx2NKxm9rt5aqWcqec1K4xOJl1+qWYdqVbZOhfndpNVkNyG+FHb3bPKcR56FGAyeCxd0Ax9D4g5ON4gOjuOyFLuVUzB8FtEQEpsQGsVkDJVm8dEk+6C0fk7eIBeAMAh0908OrVZexT7Zg/BzHexz6noLjuh0zbiMdaEn58+oM3Pjk0CvHsarOQmJ2/X7GY2aLB23pu+UhhPW7TOJ/klmqjKBvPklBRtn3np5sLtUgYYhgKUJ11+RyFdLLeN3QtAcqckqqpQJkWh5T88Gxru+6+ZrIu0GfXv8alyahPjmYGBtc2R9OOLoqK1vt7Nn433zEeDNDVHgbyBHqRMwPSgkJoDhfoPFSuCdaKoYLfc2Hj2ui5S1j9jC6zrVxZi9FvXmyFWJtTFbf0Ibrplb13/SqNMzcYLU2unT2yOV7qGA3RWuq/P2uXUhhykxGt14YkvytI1RTsNk8DZB1qYKsiQ/AwsDgKIRpTMpVYvyybYk77tvT+8GhlnfxSavDbcbKtubrsb1wcMOC+7k5cP1rJIXEQgT274VqBdRSmLdhkWrVhlUBmLZ9Elg1Jq+b9Yl1309j2SPzE+haTTB/pHdjdrZm8hrDimzdWkV0YsiiiKYKId9BeBQwSIxGs6waeRnn+9gny0NBuqqDUbFx6BcuzEOeRuN5vnbYCSC4WmOLyIzwSgYyRnoERxU7duXQo0eNB5j3/aQpAj0Nn02boMRldw+CZDCR6MwCsYTd0hij6PqbcUKg6JtcHzEOe5McfSca13H7Ny2oyCcI1l1z0adjv03l6A9Vl521nEnHU8wMD1LPwrUdUDdb/ILS2TKhEMVo6EvcL3HQV9/FiC+HZubK0EhHv2WoOIT+yiCh9sIHno5+7FYfzQikixJ80GDK/yDoOir9Zx7mkRX9UPIWFYiOY2s5izJBRREXiKuKCWOMuyRqdQRn/Sznx7smpvjxML7RYEEDDmc6CyxRKKzKshOgBD4QpNyPLnCXHGg8+1Pe1/Tm1fA2LtPOAHFiZPomZtjr+fWpESkkaH1GW6nZCA5Pj7N8YCWDbNHJXHCMTzsuGXR1+AEUKGByv1EA4GKIdNt0Yie/mQ5+5kw+pwsP4XPEdbgAx7VEHHimbn5xviRYnYOrjs7PwddzJHAyGoeQ8U9My1VTAKuOaB93RsD29bX25TFhuL2gbFRx4QzxZ4FBH9SXhbdOnDS8ZmaCRgMcwwBd/eSqgE3h8jfEC4bja9it/Jskb6Y8qU/z6kDDAtQKahe8BEFvAvhVVBGgimCtkKYLISqMr6xBr7UxvBCiJdT5z+uzb2yxrnCOfLzo6LOgWNaipo3NoxcsVFbpw722/svXNW2ZcAeOmqgxFjcvrlu/i++NU19J/e0zrR2zcRXOH3FcoXCt+6CicSu1QEUozuO613/sz6ppHLVcW1Tlwx7J3a2tZ+8Vo9pr+HLnhOGSgr7Th2e3BlJ7SIVo22kYmTl9NJJ+7+7RiXToBWJmQH7d1aI1H3rvOeeKW3deHzzt9eD3Mla6RyXicNK9wv1GRO/0EI2vjk+w+fjN3BLHUun+RyaeEYlRbQYxl5MdIjYEY8YghmNuV57rQ/J2A/7/v3vXvbD53vBlGzss2gV2sQ+DAB5KfsaQYck0LgcaJR9q3ckDC3xkDPxpT4SdCHDz+o5SiQdg7EWK09PywXZmkBQdLlGnd68iQkl6gxJs8vp5h2vRIK2b89xMxxpS7Vk7iyUX8A7YcHuY4LNKsnOaGACUdl/oW1IWrcf3QpMrqlKgHY/VqAUmWT/BgMFq7uEl1akwYl4KJ3x+MollP64by6DFqa06a/pBvwI5eErjCQHJYIGgot1JoOeFuuanIMnv4hz6pC7aUtUzuLCco0pR10+uTOZ2rXCh/D8Xr7AM9Yib9ZOHNuY3DFZrsmJGO3oycQxCQmmc9q3oFs1nmUKVU1xlbIYR3zNU8HMok9Trd7bB0WfFl9EUq5HeULVB1Nl6VnCcYhq5jQmCKwIHPl/DPsmjUpgHP1eaqxqnNBpcsJGe4nKIS8sAyE05VCH4qtUvBBeTghSpcqhpYmZpATnQIEKFFGmqBC4C/6wIKfSal6CdJqvTRILyCfxJcke6FlsoYwkcn4VRajbYZ8H03acgm0yZeYAfIFP8DZeLfgMHojQqao6dYmiosjsq6hrW+UbTSYn8nI/6k+npmOu/mdkuY1Sib0/FJkecAu+CEXZvaWbLljecWSUj6Gn8QPfnp1BtH5oHM0F6tmxNATnRDudpFZbSfIzzZLszM9keIiCrAytMKOWm5GiWZBcdBxAHbh8U/Q4wFimx5kAlrpFKsBOls8hKFHP243EBA7zUKAwoXvi67JwYtPcvk+WxtKEC3ol8f1ZVWTCUHYluQNYyq4mk2VayDjJrlfxu079hro96/yCbz9AXUXdsZBz0jug3SD0/xU57xBqsFjKefCFZzJ+RBj/CBlPtIy0G/l21E7aSaZJ2k1C/63UHXwGinNBRuACEUPK3kgfF3dxAb5Ghopa1zRWxKZTPccbA7pVkUCPbc2q5NPsrejil9HfzY09dcn1gaagweap7fCkxkMvx4JvUmLGeJqYMb5C3UhWgLQTjswCR88TTknsTP8M2uuF9mcgx6QzKvPVlONbavOlWjEhsYrpiFSWUR2fHSM1+uuxQpWaikA5vKQYI1qu4mvjJUU5hxbrh1z2AFcM99sc/lqLnyvY+2ssWVyuWuQS2kmWRKRyC+37iFQkMySr4BBWYZasAmkn/R1C/8sz+l8qtv+Tupq0E89F+juF/r+EfSTeAh3MOGUh3pBUM46NQwjPOWZBu74io12CdkjJ6JK0Cyt5a9aKu0+8u0hMw3C6cb6qXqtQVhX5vEdNTwP16/bt22RJPSnLjUql3cnFVCTevNJL6NrxScTPCtgmKJXVKgYAWqGgsVdlKy2prNB79BXGC99cjgrY95b/960+9tNf1xncPYBs0cIKxqTvrL+LfQKtQ+vg3c3+4oBvssbXYxfiZDKXksTJNEecBr5VXLChunQnS4KLnTs/64Vg4zPU5kADJLi4ysHeTKKNNqBRB1byoViPIa6GvB9Sx2U0wn9J9RTYVyUOb0xFfQ2BNbH2jVVMaa/P3mo2NlqSCXfSPNYTGikPVG/Pc4/HmtcqS0cDoUFXLGiscxrDVnPYFDI317f0ue2GUJzHaCepcxiyPYKfyQZsbtVeWwRWtBS6TamnRHTFnZkQ3gDAm5WlFhFMEU5R4FlBajrcig782Iy7ZE3yt7/dyxUUDutMJ6+NtFdXtsev4ZORnwkZd2L+88WMexDeuoF6CWUkOkvsmDvsklk50uD2gtYgeHiB/iCyOHtC1bpSc9zcXOP811tlmqS5vVSutDbX/hPvtzT31YUZe+XyyqES9iuUyB2rWKHR19jsnTZB721EslwiqZBnwnOIPAvRNDw3U3we2k3y0MT/ry73XSe0xh9VrvNVmZWFWee0ci39wyW8Mrm0MOusVl5MJOoWJJISCYVTKnguIRJ2wtspOG+h8mlSdqLgxzgvyvq43uTMgPQuJb0tsH7v4zxS+VRBQZioAlSFVSYrSWRllnuv6flFIpW6vPfafX3/SKUSV6HC+dfhZ5795CD8AI3y9FfgsJWULQtjAAvEJf3WSucb7RuWhVTtTLQjzPgbSs3qoN8eKfFpJ6PeLpu52sl4x6RBb7nJGnLZfMhVVltudZuMFU6fIWqriSvkKZcrYRYkBk+Xl13l7EygaDTBPoBz2SH0Dyhn/4GdTKeFvrcBTu4C+aXUqzs5je1MT4M93AbWsuxbapx+hkcDRi0lVDvbuRLnA79MdHodLqeN9nTyk7DME7u5aXBXk0dfa6n2NFFkdebRe3ztXbtg4IC/YO/ly+oNalqKBhJP4RydK0HHKlPHrf4p8PrIxPRPh0TZjoXRhYQvlYqTDar3ys7U40+0Nt9mvwPnsZehjTDmd+wtKMWuFDTgGxhTQMZoDH4YBH4eeK9PJNgDOO+11+Y/P3hQ0AY70QadqDvv4rzMymgn+l2CfRvncVyxPuijgj4PC30IXZPy0VvQTbegR6KgY+S0IW3B+dBDnakPwSAP3HJ8utJUUl6gKtA5Nbp/t995TeILtd37YkG+W5rr8zZjCRtF987/wdVIKsNheLsZaMGsBr9UmhXwgVxoW3WqdmQ00RA3pUoTLxYXj01e/tNUk6LoKzjXocnqTZKVKKV0/Gow3m8tmXYmto9P1vaEjzsWDh81jGMGnZ3AeTdNdrp7nQGDv0rPVMEq5M5/QVD8cyzFJUJcL8J4ENSdBCdZpdIc52hKFdSNu/xDAfrjjyTugQZX/zJ/xeFd8alWozmxOq8yVFvudvrHfW7XkL/Ws8zf4uhZ42Gmep0UTnMHL2/hF0F+PVnvTKxeKseG445L3H33mRMT1p7IuaeBHKVexylY6vzjH517MwWBRSF2DzstVEVVVsOixauYoMHyyA34yhsfGbiuMRW5/sa9Z7AxsHrB4pHpDipLd/ZQFK8X2AUU5UCPzqqEvv5Y8h/nKINMja7aUPQrUNgGtM7nDlRZ2GMplGZh8IWEE8oK0hlIQMJxgicAuK64IvGB83/Rq5wffMDpZ7odvQx9zVnoHeAgm2T6HN5x+f2CI0NqyO0McqOyqwmZYnWWqoqqBBA1VJvtoWG3Y/ymYqUzP3ftUGu/OT9P+Rig5H3KggLvhr7erTHeX8/RhTBfOaltCOtjysRJLaPBj7sILvYtIuVlHbOzZKkEqHxiL48E3QQnARa0S86UfxxqZrihFzLv/DS7mB9AUntFtbIo44xZocC6Zd+HrasSJQU5cuJ9yLrPEYRV8rVhbiGUovzo4fp9vYlE79W991/VPjuL/vs/nPfqq7zM5Oy2iGABsb6l7kXT1Zowl13e9Y/7e64rM4PFvbFhwxugZ+9u3vwu6MaXQOJl0H51lu4rRQqtnZ2J3bubruq9/7Xl+5ogJNm82cG+8yoQ+N//KKE22sHrpCprZiX9Ru9VfTBqf28CPdHwKj8EPSHImoIxxSJ6kohbRNDOaD+PoSyzd5b4v1YY4cZ5S+uUreh30JfDTq4nQU+iwXTrt2swr8CklC9uuhQfl6XB1UkToHEC/a6m15KhwZsnE8vNKvUL3CQ47zN1qXdD7+CuFrDzSPpzuhyrKC/VklUXtVhIiiUTry+I8bCobVwbTb4Xa6N0uWGlpzpcVt1kWHN+nzk+6Mq3tdZGpjvzVPnxZNOxXZ1HNq6cyFPluVLVnwWHnJZOJgS41ler1RUUFOZ3nDLArGyrCwQmQ02bYwgZZns6j2mOTyeHTzcjVKFBp7pHQ57JFnlhfHUoPlBL7mHMkXsYRk7zvve2h0wDeeymyLdesigMdTtmj8nt3p449FKFIWiSzHD4lZ4jfq1A9GtkJ4lv64wS7zazd5YiPW2Yhp65nEfnvZrmPwfart/TcuDZAxAKBNBD818c4HrmAs1Pifci+GGVAXjQjFYbDDI0Zzk3my/Nzb20Z//+7svI56XNs7MPy+UPIxpJHykufoT96n5iRWGg86WIQ37mWzwhULutPz/TGzbNzjb+MsMjghZmetRK4lH5AqlxaYGU+Nat1UaVxjxssycqyxhzeblJk3yxWCZBq1fa7RzR6gp62zYkzSXONp1euKcBHqGMIrYPe9eFX+RPlL714gZYM5b3L7m70Tk7+y3XNz7dC9pcAD7nONAGJxU8tNqZfbkpu9ipNfBlgwKl0pCfX6qqpBWqxAqme2sLYltzgkNuH9xgUjaPM77JpEpBu/XWa9DJcGmF8Qz7UZ/aVqZSVhZVFMtxvdXdYYP7MbkZF5ZsXR5LvUSzTMJfkwE+lSD5KcAnQzVysn9fiTP7tg5fsaYFblG/TutM8fwolcaCfG0Jx3hy0te9hWNcEhh283d47Fbbo8Cwf5hjeHarpFAj8OQQeS+iCe/Zd3sUxfhodDHhm99Bcj8GSzlNg2eSHZBoeadQs3qejxPTMfQQ6FA1PGSWlsRcivcPXm2QQWr/coel2V6kVyg1xfU2z5AvkkjEpJI/9CKdcvlMS+OkVyqL5HZEWjbHOM+BXuN95TQO8XmJNrOOuSRyJqF4VvRMgvCM+DkdJbGwdhHNM3M4/wKqDzYrTCploSbf7hQi5M+mpqS5kZyczo6XDvKUppf6BcLQAgXCCj+W44HzDMRu9+A8UrFcsNpsszVpUF17VcIc7rM2h5tMCU1r3+wvb5cr6gYiF57Z1qIs+nD+81lh9juBkkLMA8jki7lADze9mA+QVRAyAjFH5PZxG5/1rKbE1ufF1gPTSMwQub47+L47uL7CzS8shZUUn8nYvwvVqlMoJGoM175TaH+btJMckbTP8nOFEbS/nTaT9dHDLn97bZLhbFqOH+jZVRHUjTWGe6yb1gdfYvein7+kOGa7MTbycktjGSRhvZ7lY56D0ehBybZV3uFGAyXmevvFXO+V9WIr4WSXwOEZ1ILcdtJ+8mI7RYt3w+DWW+aNrYXLYRCOlXqF0qTFYuTsV7wgNiPcD8Nl5SObRnRaGuVodCObhnVqyaHXxLDP5g6GPDavyWFxh8Iui53K4mpPFrckByHtZ/LreRTXSjIvIvFpvMQdlNj6vNh64PDFvi+Jrf88iWsl3oH0PZ3vuwrxMRE6ZSHDXvCMXF1hLIrzeL8orOwkGXuGwOvfKG60DGzwEpy3tAYJv3y4L9YgV6vqtEpFVRHjmpiYQIGPLr982JK8Nzc3JJV2Rvk0YE80OuoEmnJAoH8DTeOSOo4LZ/hY2UIJMiqvlCvz1Xk1ToOlOU92Zc+DD3RfkZt7Uc9dAzZnfes9MmlEktNor+229RYUPYFyEXpALn+AXcOsc7u7bcSTw9tLPB6B2VoF+sC5lnfrwcAZ17dzTrzj+hNO3NvJufWOPe863+O8+HvOdzmn/i5HxwR2sAcrKZd4UzcoRjXCIa9YhxT+x/uF/zRMMF7nMqvGO8LYUr5iT0GNRx9ur3Do4o1MGEJDX2dJSLdZak64XM3yIoOz0hY1lNmqKrR6hbO2slYFGlplL7eayr1Bgq9RUpWozMDXLGDMxtkMeMxC2wyURLcS0E2n+RuOBCuWEawQbh/CcwWpPpbDG/6ROe1phx+e+Nvf5khuft5CToueDjz5ZODUpTltK8wbBktdtnBrV8kpqnjWz1cgxev2wazr9jKNHqPelo36RLR6YyQw0VpjrJJIGowNxQp7W72xML/BEEa4TFcZSNXpQowxRxFoy0944ZL5K4d5oo7uKV9wbY1UEq2K5edqGkuksrg+hrC+q7a+O2xU1zh1v66JmMi6zy31a8SYlvq1aH/WOpMMQvRq6X/A7n3KezVZxpaJtR6QtkjcMKHsM3jvwkZ9Qeo/705N8RWfLMsm+8BZ9sMQC0dvc76RTvMxONnPS8h+CnksPF9AnoW70vCsWbhfRz8rnPFxZwyLR3xWfDZ3pCf81Qci1zHFM74IQRriP0g1AIlROOcJ0DcgQwJkQUEuyzl4kHO0Uf7uAt0hzMbNxKdrBm4wDn+JjkwNx+Y/+C+u4+4wwItcGYnx8T4+n/fnKmGihbH370EX//LzRFuU3cHH/ehRliEYt/BXSCBrDpFduH0PzyoiexCqfV/jx6gY0UC/DzTNFGQC4kd2Xk/K4uDIpeJHxsFD/REbypTl63NPrajKz783979Sqdnd2mHrNeitK2Kbpso0lWtyT9GWKxX7cg+atWXJPvdyk96yih7u81gqyqo52tU5El28lvGrS7ya8v5Ob021rlpZXFAAH9X1wRCEEaWcMVJRPIsK8XPg7WRCpgyvaHgyjGdXwQ/I5cHT1B6wWRq+twaZVY5IO55WroSxNjyNDOQbGf+dFl7Laxqa6i0NTVyfo6AbhaDfNup96FcEvfhiqokvrZ6vMdB1DXV1DfVGfKmloj4SqdfVciMC+BI0iveTOWGDAjDNJS4Xj6Ld1DysuGppxTlIAP8isThiNlZa3QtlD53OqlKVMVxJI50WaUipl8hOCnLA8/PkWZgdnl8kO2vGXShOasRUdk34uow6cFbl10ZjNEbPEA3Lvil7z5LbsUvvw8rTUerfkDsUZ8nn55zk0KJdixZtixJbptLT1AUwSgKjuGKkLI9pvKB99+7GJziapWknygO9VGbSFIhKj8i4aJ15uhSH8ySB8oVULIvyhR27d8eeosi3c+K8nFPX9PdfALnnXv67WepKGCl+t3LllXNzMXLrx0v1UiPoPG5/g2B9I2ZzL4r9H4Jl/ToAAQAAAAQGqLLfXtpfDzz1AAsD6AAAAADT3F4jAAAAANsrdHb/p/8kBCkDmAAAAAYAAgAAAAAAAHjaY2BkYGBe81+MgYEl+P/yfytYNIEiqOAlAI04BoAAeNpFkwOMIEEQRX9Xz9m2bdu2bdsX30Vn27YR82zbtm3f7O/K9G6S10rp19RIT5SWjUjqsYfC57IbhZVe6CTNyGN0wk90ssN4/sD3d+QRsklvpArS028GUkou5LIbkUvyoYDSxEGbBmiC22gibXgfhIK2GFLIDeSXG+EWzRmgk8tjbyEzYxSTn+jmcXaa83GU9zR35pSBgExEPduG9zMoKROQwF6j/w/a3EIyyQAjYxjzahRzPO2GkElILSdhbUZ0CiryfhFtgzYoq1oZV3UcoM0R1HPxSSeH7YMMJCN+RnX2QRvV8CCqjbZap+8j9Wh/SKyusnHaVMuPCNaveiI0L3ui2nKzljlkHomPQpqTvdeej+XbQLTR78P4qiFuz2UWobH7BjYd8puzyCStefdU4n0f9wbEfZeKaGzuIY1kRwrmriyb+V6MuWz4xqbh3po2hZDGbAz/m29obLNHMTPRLjeamPvhL6kDK701Zx3blTZlUMXNgcZNT1IhoaRl7IBwJpSlSCJrkMrNh9b5EFqb1kVMiMpaJ/UofqaI12VOhM+8LtXSOoL1qx4P82pPqM2sRALzEcnNYyQ0e5FHc/rZzMVzL9TRt4rhLvWhDtXL3b5DJ2upbzRSyTakcf+Lm3uEgAJAqqMCgGqkFCkSUZ7kMVlIfRQxM/WeF+A5M5JjH2CqIL3blfNkKkoDQAy5A6RbeNolwQMQ3EAAAMAkH+v0ySV3qW3btm3btjGobbsd1LZt27btXUEQ0gklhapCQ2GosEUEYioxv1hDbCIOFLdIulRKqiMNlqZJT2NNY1Nij+TEcj15sDxa3it/VxIpRZUOSg9luDJa2aB8Vl2VqeXVdmo3tZ86TJ2izlF3qDc1Syun9dUWaCu0g9ot3dUL6CP1Jfoh/amhGymMWkYH46xpm0nNtGZ5s4u5wNxnPrGKWousVdYm66WN7SJ2I3u4vdRea++0j9pn7Zv2U/ujk8rJ5hRyyjkTnbnOSmejs9c56Vx1Xjhf3BRuPXeAu9t9734HMsgG2oAuoA8YAu6Cp+AtFKEB08F2cAgcDbfCK/Ad0hFESVE2VAf1RovQFazglDgjLosb4+l4F4lIHlKb9CYTySqyh3yJ14mPjS+Kb45f9yQvk5fLa+yt96Ef+Mn9Gn4ff66/2b/hf6caxTQBTUGz0AK0NO1Fh9KxdCa9Qh/Q1/RboAYoiIJMQb6gRTAn2BMqYbYwX1gs7BTuCe8zg3GWjKVj2VgV1paNZAvYCrbmf27zBDwtL8hr8eZ8JB/Lp/K5fBM/z1/xn1EUpYvyRKWialG133jGe1sAeNpjYGRgYHjJEMzAAsSsYB4CMDEwAwAokQGgAHjaRMyBBYVQAIXh/7zui3IFhTRAEoAATdEcTRMaKQFogDRBM4QOAR/4gMhKgkIG7GCLmt3+UXDZCSO3HejU238aTXZKq9kuGLS8FkRtdvhOlUQddkWu82mMHHQkAIIg+v7kEJxt23acte39+3tnLDOZma7qrrQ4IE+BJiWSxElQYZB5ZpnzDvIoE/W/J0hGq+7fFN8anyclE0YFe1T9E+Tly+JRkmQpoMoTlE2yS1wuSFJmWl1eNMak0XU51ZiHqPqo8TXfiMwxeXKYg2uCKqJaw3/rEU//Yz4qT5KTj5q3+lnFopGzzLPMBtfceI/Y+Kf9Uk7903bKMPgv7lnkFPTl0fuTs8887sBTYJ0ZT5mwXFJc0Z72fswvLxvXf8Mxl7wQ/d7fmdc84jD3OGVR7hU+3mJWeNpswdNBBQAAQNF7s23r2Wa2ze/+W6X/uE4TNENT1AKdQwMA/L6S5T8/wBJfNvBMkEfCRIgRJ02WvI2UqFJni092eGLPJg755oIrHmy2xVbbbLfDTrvstsde++x3wEGHHHbEUcccd8JJp5x2xlnnnHfBRZcMGDRk2IhRY8ZNmDRl2oxZc+YtWLRk2YpVa9ZddsVV11x3w0233HbHXffc98BDjzz2xFPPPPfCS6+89sZb77z34Y8geLCOKAAAAPbzOmZt27Zt27ZtLlCvcolwESJFiRYjVpx4CRIlSZYiVZp0GTJlyZYjV558BQoVKVaiVJlyFSpVqVajVp16DRo1adaiVZt2HTp16dajV59+AwYNGTZi1JhxEyZNmTZj1px5CxYtWbZi1Zp1GzZt2bZj1559Bw4dOXbiNAhz5tyFS1eu3bh1F/wF/8GXew8ePXn24tWbdx8hsTkmFaWWpbKX5mUC2KqL5MphAIqizUwrSYlhKLAr06YF/FbcYebVB6wbzujoCY2SkGGcVTbOWjVgmDVSoEaLDj0GjN2QyBkLVhxw7CqFGj1mZJxTmLpeoelGhQYdBkxYcOgmgQodz8GQAyYsH/8eHh0s1o/aea/JCh0GTMzkyAVZuQiUqNGix4gZa7cKVOgwYMKCrDsIVGjQYcCEBRk/ClRo0GHAhAX5wqRAhQnpF24cvvNml7Z221b+vUwOZHJKz7aX5b+37eQ+rxao0aJDjwFjN2TyjQUrDjh2jUKNHjMyzmmk3mu03ajRoseIGSuyfpKo+Q4t2WPEjPXj8aMvW6PHiJkZPbkiK5cbFRp0GDBhwaFbJWr0GDFjRdYbJGq06DFixoqMHyVqtOgxYsaKI1+wRI0Z6RdupL+6MfLl6kdfdiaTY3z0ZWcyX3YyaLvZILka7Fkk8ar8ui4qQVctwsdFOz6a2u72P2oyOqSn8p/n4+S6Zzv/ca+81BaH07u13d3Ndv7uaLG+1c4/XydaPs9VlFemwzbtrEyXKwIaAWdDJYXKUotKMpMTc5ISYUIsfqE+PgCbwUzwAA==) format("woff");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:Raleway;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0301,U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:Raleway;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,d09GRgABAAAAABVQAA8AAAAAJ6gAAQABAAAAAAAAAAAAAAAAAAAAAAAAAABHREVGAAABWAAAADcAAABMA1QDhkdQT1MAAAGQAAACdAAABQq4/bZMR1NVQgAABAQAAAAwAAAAMCNaJGhPUy8yAAAENAAAAE0AAABgYM68/1NUQVQAAASEAAAAPAAAAEjneMwnY21hcAAABMAAAAEMAAABjF1RQTlnYXNwAAAFzAAAAAgAAAAIAAAAEGdseWYAAAXUAAAKMgAAE5pHuSMZaGVhZAAAEAgAAAA2AAAANhENHT9oaGVhAAAQQAAAAB8AAAAkBpIA0GhtdHgAABBgAAAAggAAAgwbMRXabG9jYQAAEOQAAAEPAAABGlwrV9NtYXhwAAAR9AAAABsAAAAgAJgAn25hbWUAABIQAAABNAAAAn4+FV8FcG9zdAAAE0QAAAIKAAAFJz/g8lh42h3KsRFAQAAAsIBvAMYwIQAWB5c2IrEK0Iulot9oltgcEpdL8k8KdP+4RILRZLbZHQ+ydgbbAHjafJADzF1NGISf3evftm3/tW3bNj/UVlAbQW2HjRrUDWrbtrmdvKl1JzMvdvbMORcHvMdPvEKUMvxDDgoRKVSkVCXKNeyc1opyrepntKEckZaN09qQr3X9tJYUad2ydUtK6QY48hHnLdVacL+rI6ZIEuEvsum8EpjT1KoXIurSKKZugZKdKu6X+/Wd+7WQ6n+CIwd/SSsJjkbaEAIRMJ+7jx70k4pCHxF6ERcHCIMYwTgcCTrTha7y9tSJXMQf32iCNmIGaIs26Da6n5BWEmuI9cQmYisxDYfezVXwy6W1QHP5UBWp9dP9emm63yndYbrSr5TzD3/HTpPSIaZFfco8UlZK5TGdRBSIuAnCHM23bX7LLTGsd0uF5cJ6t1M4Kyx3a91hvLsqJ/4XP4M3eA37hdtWsP6GuMS662D1lnbP/nRLPIpq2GDux88uhKvhTJj2nFs3H/NcDJdV74QLNp/G0p5wXwo35Rtz3380XEFJ8hMOhj1h8fOeH86HGdZdRdR8SXroMccZKyj9bNhn3Q7TaWFDWK46Q1isuuc533vMus3P/980OzLDEWmENDLIJIELB/BiRMymZ+YQ0+TJEOXW1lGVD00xTeB5S8/TbN1tdTF1lUnYaUS7K+q+0u3dON4SPdryIR/zKZ/zHb/zP9nIQXEqy+n46CWeXHKVo4I569CUtvbunvfsOxK8JbzGh0KMj4UYnwqOzwXHd4LndyHF/0KKbMKr5CCHNJeQpLjwOuWEOBWEOJWFKFWFKHWECGnCK8rNkHo+sOykZTvLdpbtnsmOvDQ7btkJy/aW7S07Ztkxy/Y0FaK0Fe6NBdkdAJRg+e4AAQAAAA4ACgAMAAAAAAADREZMVAAUY3lybAAYbGF0bgAYAAgAAAAAAAAAAP//AAB42mNgYYpgnMDAysDA1MUUwcDA4A2hGeMYjBjNGZCAAgODP5BigvH9/P1cGQ4AxVczr/kvxsDA0sTwSoGBcTpIjomd6RhYCzMABCIL4QAAAHjaDcexEUBAFAXAfd8FcleCxkSYEd6MNhSkODZbEbNCV1jVvR8jOMd2ZRFNN6HS8lAvJvnfQfgA0okFUHjaVcpTWi1QGAbgd7X2sY1sHtvWc2zbtvJ9k9jd5iHUALrttmlk++cnpCBirSiM/0T4hwJZEuZjmSwnJHWEGFaF4vA+1Ie2GGIiLoq5Gb1ZjcPDzMmlhJWhKLwLydAaxRgXjuaS47k6H9webh/uGj5hVg2WD1Yw+JTuTsHs2ixNhiw58kDO5BIdttIF6e7a46sCz2zz3n+1ljtnhfMWOWmJ05Y6Y5mzFjsl4Yj5jlnguIVOmOeoDa7Z6LpNbljtorUuW+eK9a5a45I0d6S6Lc8T+Z7KdF+2h3I8kuuxLA8Ueq7YSyVeKfVakRe2eGurd7b7YKdPdvlsty92+Gi/H/b57oCfDvo1AvERNfYAAQAB//8AD3jahZYFWBvLFsfPzDYJklDiFAgl2WZTiECyMYLUQiiEOlyouz6re/nq9tzd3V2vu7vDfe7+rtvH5p3ZXSZpS3txfnts/md25oAAMQAaoXeBGazgBvA7RK9PSljjsjfmNBBrXBSI1eGSacSrzK6utJOnbcomsm1qnfKxCovHY7bQj7mdnvFbaMQ2/jmaGR+rqASgGA3oxzGqCSoAiEzEgNckEkEgiXYS6Ful3LoyT558/wfpXeOZ3/yGOMla5YuFguYlfJRKQADQ9wgxw/WT8GNwZwn/C+en4HaNF4ZK7ANwklRO4vdn7ncabi7hb3J+hsXj/N+cn4Wvl/C7OT8H+6+Z/yh8t8TvVu53Hisv8jHOL8DnJ13nRXg3z4Mqc67m4fbf4fw4zIDrgYIP+VewK1XgAbAnZKscc7mcDqNRFK3+uCThL9kpIk0mfZ3P7/54ftkntz1PCrMODn37W9/69vDBLtKXJLm1X9zw9i8Mk77awdN55bWk8tLCM0BgOQBNYmyswO/0Wr36N00qInlC2U1WKl/t6qJ3dRWgXXm+UNDsVe2sunZ74XrGC0PIP6pzph3o2n0Hrud+t3K/83CyhI9xfgE+W8L/wvlF/OR56F2cq3m4/Xc4Pw5iSZyPcj4CB1FTwjh8HtctAKCe1uU5tqe1+IyjfS0AGOFkEJDGAOBOjI5Ui15YyKIXngMgdSy6zkcKX1Y71lx4k95B7wc7BAAMvghNxLuoHGugTkcVJY4G/LsLWYSKPvz/QP7wcGts5eGe/OGh1tiKw8qPpNz6TOf67hlSz7pMx/puv6Fj64lsz4nN7V3bjs/D3xmyLfO2ZVF5cEcqs2OgNTa4A6vUsqq9adB78xm4XuVDyD/KuN4bSe/N43A997uV+52Hb5bwMc4vwB0l/C+cX4Qf8jy4as7VPNz+O5wfh76iSkIt+KGtVCV3LJVMJZMpuYqajCaH6HK7XNfWraG+0W6vKDeSDDFaKs12kggE30JIg9FYafY4bF5PlaWcNETi19ZV10/Sz7dYia61nPP1XmZ/GP6h2XMdpKIOk9iPsPMDCCxC/lXco9N0dXCf6hKwP5kihwf2Zqd3u+PDc7PLZVeusWe3oWPz8SzZonwqtWMgKg9sT7K/e05uwL2N8YZYPMwT0uttYvVqeYTvcH4c+ifyC26hDpony5+IFZtkxD5NUo/HKxWbItVMMUxeHzHzTtinEKLcy8rV6xJcqi4tuu5xuF5bB/I6zvk6LrM/DP+C6zn/Dufq+iaxH4EvMq7rwXioyIFANQA9gv0oA6ijMrGKVrL6b//oV/6dU/5D71JOkhFlrvIaqSA3sGqqUW20xihJrUp4GZBrUVh0nR+Gn8P1nH+H8+Pg5rzUfgTerr493sIr5AVqgwCkAVLxZBJvBXciLok+oymg/ud0Olxup9EYkKRAAG8LnyT5k8lEQmI2+MyFN4Y3vXGOtLRxYXfzklCtvEFet9NsqayeMq2WEHFnJrYkTFZXmn29/t4VDZlAdPBj0Z6A2Ryau3B6Q6sovnP981UWkiSUkAarFI4Ge6dU1Vb0W6oyMY/slXC1epWjWH27ep4eO8ypEOL01AGNDpXYBlCxR6/waeY+p/cW6RxOzxwsUpnTs6uK1MLpueC1sh7dUPQxcZ/z6SJt5PTCQJEGOb04uxjfplOTFp8r8zy3Pv4sAIWZhVfoZjoKIqQASEJOyE52t7NGsj4mEqyP7KTU+21NaIehU38zyfbd2VzObHZUOhun72hLrpzn73x795ytHkumd0ZzNlrrSeaaatOyj26PzJsXGf87a6BASKNdljtC/evjfUf6uqMPKn1fnNEuih39M5v72xsdYiurLYC1hakN6mEGgKFYBdtoJi/Ln0y5q6jgjVCf0UhC6XW5wLz9+QV75hJlriExGJNX2tqr5y5/kZyYkhjcMpCoCOY3pHsP9/Ydmj+1bEp6SI43V/s7vCTQdl00OlQoaBnVjvVpHesHlQ5hHaM6ZR0b1e+z0wDcy8S9zq8o0kZOL+wr0iCnFzcUM9h0alIzcGv6PLc+/maRjnI6spiplQeA92MnBTBpM4aAvcxns1laPv4q3b9pExDdpnxiCsmrzzBivjCEnEVcpk0h9YDUos4sjyMd0KeQmYU/4BTyIAAxo7XGMf9HJroVwm7ZQbxyBhG0tz+ZYOMja1ZTem23JOXWptNrcpLUvfYV+bp4XPsajGOf1ifT6/NB/J1O4m9izqxNpde3ZdalM2t1BUJqn4a1Pi2YUDFER3XK+vRMsU/cy8S9sE+cNnKKfeI0yCnvE1ujTk1qBm5Nn9e41ieuyBrwg3zVeQM/tXlD00iX6BKFfNMbbaXThsHosom6ZtuYZNtKFCsrnTMEWm2XrqGgqtU67a6DP0JxhWs4v3SFY5wfhk8DKa5c53yHFqPzHUogh7SOloMHIMXudnVHsL+0a0Pk10Yu29kxM5+ZmjWbzVVGh4dQ377s0oGnSUwZXT4szgmS+UqvehMQWu/IdWR3FwoYfRWLjjm36JU/CwbkWtbndY4VvjRRyy66GsKX1XLplCFetTT3pbMGFa5e6iXjhnLwyrpfoTtVrbbrnXgOQFsP8tWcl6wH+Rjnh+EjQDh/XuPaOovROR3pBa4Jo1smKBCYWmikFdgfBwBuyVQXTQmy3S4TJoYU2F5VazS7Gur+OP/mH2SVF0z1TQ3ldssXCKG0JjuXliud5PbxdXavnSDCHHo0zLFTn5r8AJyPcX4YzgPh/HmdY/1/A05HOR3pBBCgCYD201HwQRzSAPaJ20mc/AJjg4h6bxn1MaSLGrxO79zk+k68qW68MRsO6zfY9vbZm9vIJy1tff6WnpnhfKSuTfYpS6k4/msyr3PbrO7oHc3t7c3KvKqqiWss1jlnu30J3l7RReHWfMgxo+XxIACFTnqImOnT2nlsZ2Xhd2dmZYYeWoMfQCBK3w4/UU9ssMtuU7SnA9+Z1dbLngRS8ppw+3z6dutqINBMdxIvPjHikxQ6BUzNG2IbA4OD9MzgoHPWLNbHIN0H/0UbC9rgfpYdTIGE7HC91+kVmtqamtqaffQTUj1bSe1M5pGh+8lB9KjDf1AsVShRPaz0Y1tm07arodmHR5Wp2eQQPfUBf01tjam5zBmgIw6Hs0YwNHinOZ3uGmrw+GpY1CT9OBmid6mrSHidSSz84y0t7Mmf6TpygD4PdvxHnx0d6hSpzZME6myS2+ubVuu0WqqnWuz0J3XVNmmaI+Cuqa4xW2wVQCBG3oCH6AmYypQovrZVNEYueTdbyRtyyStYDswX77udhV+wytzYlVjXN9evZ7stSBfDm+qceAzGwAhHckuRNtNF8D+hGZCSUWqEw68vVm2Xwn+FOartr9XbcREsQk7oEjJLkAF59XNsx969HOkw0p8IFqRHI79X3/ICyHiXvkyXkkWCifGWPwDGviOM1hGkG4VGRg2MHv9nC1I/XUw2CUFGa37HIv9ryf8Bu4qK1QAAAAEAAAAEBqhf5QpfXw889QALA+gAAAAA09xeIwAAAADbK3R2/83/IAMWA/sAAAAGAAIAAAAAAAB42mNgZGBgXvNfjIGB6fP/s/98mMWAIqigCgCWlgZlAHjanccBBoNQHMDh3/4ANtsJRmPaitHDMAYwCGODAuoCXaRrdJ0QQAIIQEgEvAihUB4+fBKhJGNvrOAiMeEa+omi15U0OEZavpuknBYsLCMJN/Gx11DiM+FAqXP5Yxv58dnkzHEODSNAEu7AGw8PB5cXT2oUCnf8jkB3PLjCAEWgXeEAAHjaLcEDjBhAEADAPd/VVlgr6odlWEa1bdu227dt27Zt2zaD9wwAbIY9cBjOw214Dd9BByzABUIgAXKgAlpgAK1BO9A+dBJdRQ/RW/QT6SEr5IYCUSzKxDPwErwOa+Bd+AA+ji/jAByDM3AJbsA9ZAVZRzTIY/Ke/CYGxIZ4kBCSTcpJM+mniB6lF+ht+op+pZrUhNpTPxpJU2g+raZtbBt7wt6z/8yY2TFPFsoSWDarZZ1shHM+n+/lh/llfo+/5F+4JjfhTbxPgJgllopV4pA4J24KdxEs4kW2KBONokcul2vlFrlD7p1uLF1koIyTBbJTrVDr1X51Qz1R79Uvpa+slJsKVDEqXaWPAZIeTWcAeNpjYGRgYOhhsGRgYUgGYhAPAZgZmAAddwE4AHjaRMyBBYVQAIXh/7zui3IFhTRAEoAATdEcTRMaKQFogDRBM4QOAR/4gMhKgkIG7GCLmt3+UXDZCSO3HejU238aTXZKq9kuGLS8FkRtdvhOlUQddkWu82mMHHQkAIIg+v7kEJxt23acte39+3tnLDOZma7qrrQ4IE+BJiWSxElQYZB5ZpnzDvIoE/W/J0hGq+7fFN8anyclE0YFe1T9E+Tly+JRkmQpoMoTlE2yS1wuSFJmWl1eNMak0XU51ZiHqPqo8TXfiMwxeXKYg2uCKqJaw3/rEU//Yz4qT5KTj5q3+lnFopGzzLPMBtfceI/Y+Kf9Uk7903bKMPgv7lnkFPTl0fuTs8887sBTYJ0ZT5mwXFJc0Z72fswvLxvXf8Mxl7wQ/d7fmdc84jD3OGVR7hU+3mJWeNpswYOhAgAABcB3fdu2bSNzuEZooaaqBbpLIUmSQS+vGaWb5Dx9BWPGTZg0ZdqMWXPmLVi0lGvLVqxas27Dpq3c27ZjN6/27Dtw6MixE6fOnLtw6Srfrt24defeg0dPnvPvxas372n48OnLtx+//vwrKimrqJKOmrqGppa2zpAgeDBiAAACAPa5Llfbtm3t2XWaSEU2ftIyslGWk1dQVFJWUVVT19DUiqa2jq6evoGhkXF0TUzNzCNhYWllbWNrZ+/g6OTs4urm7uHp5e3j+2+KTlgahqEAjoPYyFC/S9K73G0OEIaCMEDudhvbcC5Q2onfXq3/YIDye03e0fJEO4z76/5uvpyUbe2fXYkSU8zJC2osscYWJabCbEffT7RhjC5RYoo5eTW2qLlvsRZP0+m84+uNxBpTzDGM02iTl6MfL9zS1IYqjZZziTmWyea/2jLThawWNVqxiT7V5eLtMPbX8FpiLfp4HY7/rlBhhgV5QYMVNtihwlBPf12hwgwL8hrs0HDfYSNO8R4UNphhgWGcQZf4aA80taHKoONcYYFVMkd7YKYLWR0adGKO91CIr3gPFS5dpGzljX693fnLYXnPZL1asrf+Y1j123laIu5SLFfLgOgmfzx6/94P/hqdqu5h56dhf/afv4f3FP88KoplFDdRnBGnIZ9YRnETxdnt82a9/gbIZUl4AAA=) format("woff");unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB}@font-face{font-family:Raleway;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0100-02AF,U+0304,U+0308,U+0329,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:Raleway;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,d09GRgABAAAAAFfoAA8AAAAAndgAAQABAAAAAAAAAAAAAAAAAAAAAAAAAABHREVGAAABWAAAAIcAAADiD1ANcUdQT1MAAAHgAAAa7AAAO9i1p1czR1NVQgAAHMwAAAGtAAADUHWOidhPUy8yAAAefAAAAE8AAABgYTAeFVNUQVQAAB7MAAAAPAAAAEjneMwnY21hcAAAHwgAAAHXAAACtJJMVt9nYXNwAAAg4AAAAAgAAAAIAAAAEGdseWYAACDoAAAuBQAAS05dy9nDaGVhZAAATvAAAAA2AAAANhGqHPBoaGVhAABPKAAAACAAAAAkBy8DNWhtdHgAAE9IAAACZQAABFQN9jDTbG9jYQAAUbAAAAIZAAACLDK8RUdtYXhwAABTzAAAABwAAAAgASIAwG5hbWUAAFPoAAABNAAAAn4+FV8FcG9zdAAAVRwAAALKAAAEoOAwgL142mJgZGBi4GOAgANANqBBOWYhKADgIH5/j9cTUkoWSnZlktgkmZTNIDsxSZn45OL61U03IoimQkuho9BV6DOwQ8Z2ojBlZucKC4UlK7tW2ChsFXYKew72yMmeFS5c7Y27fSg8FV4Kbz72q4JfoEg9pa1SURBqQBvoEZLKlr6efo2Uf8o3EswAeNpMysOiFAAYBeDvjGeybdu2bdu2zU1udVdtwpO07plyXf08EvQ0VkPJZtPNt1Jx5eqNO209ce/6RVsvHrt52VbFC6euX7b00rHrF6y+dOHSBRuVEEtVdBUHaUaHRV1N0VRzLbUTBERQUFAUp31V8CWDRYHS7f+/+O3/L28WY40Vk40Ua60Ve43l1y9FREHyViQ1IS9V8jLv/3RTPuSTqPrhV6SUcir/UpX2igq5TR6S5+QleU+aVMlBcpycJZfJTXJfMldMEnUddNJFL731MdAggw0x1HCTTDbFVLPNNd8Cy6202lqbbbHVNnvts98BBx12znkXXXLDLXc99sSklNJIV9I77zMwwzM2kzMz87M0q7Mx27MXcjgncz5XczsP85uKcgC2JAai6KTXyvBp/W0bhbVtb2Ft27Zt27Zt27bN5H5XV86c6dwxBuLKcd3sKlvKVrONbDvbK1KH2Ul2XvRuU2n2UKw/Z2/ZZ/aTKpJC4vopNxmCTiooKIagJ/lTKEVTIhWl0iJXnepSY2pKrakjdae+NJhGitR4mkqzaSEtp7W0mXYqTKnyr5Ykns0SOi/YiW4K3gCP0lGFsWD6g9nsgmPBUpQDGcmjgiIDVqXDgvXl3qgMvAdYG2wq+6wKvAq8Q1IG3gneEWfSW7gg+u3QL4d+TzoivCL6W+moJHwIMkPg3eHd4KHIlILH0yXBCMxGoNMT3lM65YSXAEtithw8AZ4NV3cc9AeD0I+Bx8ADwSB04nBcD5xzmySib8Hby1llLfKn0T8N94W7w/3gfsifkK60gn+Hf4GPxH7OIe+edG5KFsGpcDvYFcl/2OorkoyyCR5Ucgm6wQvLvnM+/hAV1Oqet/X6HoW1gbL4d1Pjmw1POaytrr/qS10xqxqTjYv5cht1tdXaVX2s2pYf5KG28ZrGo3liYf+Cf9XRvKjK9f28NL8c3Fv/qH/krQNm55tZQPHJzivqwUnFq/OncqiefKQaz0d6fVQ9bV95V96f19Wi1ZV8ulafL7Vy5vdVj/PGvKnCTMI5tiswNmPZtrvdtDpbnR12h922PaVCjpqexue0MuPzG3ndk9xRPKWcix3FbTd91nq0LZDo6GifXnivNTGlwgYXLh7Y0628W3m7Yj+YvhxnXfkd850dzcq+2x1nU8p131pv9+Ya18zDBd4XkkuDa9ZZvb+9vCzn3ZTK/9Z5V+7Dld+8a39t7+h30PzO1yeVQuFt5XVG1gy/rgQr/xktCy23lRgM72WG4hP0YLlP05cqMzMzMzMzc5cx7G1MX8eyjieb2YDm2JLG8kTwS3GCIiFCYUpU2aHSaV50tEl8Ux5QFUE15b7KTYmwVqJHpN50lyd0Z09z5IX36J7jhyUK5vJYzHDiBds5z2hixQhDZlWMXDF3JfJmjTTwzh93t9o0ooACRcpGiihku0PEGlVFfBnOsqWcyMmh1UsSyUqJLDT8ZppdirJTlRM9a50slQv06C+KL3zlPB+o4nGE60lOGeTj2FpQlPslsy40yguLtR47uSWVC0V3iKL46FQq9ZZYtREq7WUZH0+q61PCozPLX0l5iE+odfUl3p5WyNMOWJT6wCFuE0h2K8Zfhxg1q9IwL5tVOuXgsxliwkzypVbrkneIOcjNsdkg0ujKqpmlT4azjI/wSaQDipw3UlG14njyNo8SD+lyfPlirEdSKdt7L8xiV3VGlA82CU4rA+QI0z7Gkyzmm+eHC2znCdcFYzs5orsf2EKvSJ2Cm49JnLzmNKvZyVcOccupl1/7O3hcU/0BX+tsI+V9Y+vjzhs81ilejvPIYtrFFrFZkfbKYnrZb6TVRjqvzw+xWqV+8faQuZ9nN5fZzyYesJeDLbG7ULO8n9s6GcrjYrdIiUJtZSzh0U8u9SOrbC6r9C/CTb44RiFZ+qSbokapfcYx5YojSzxT/sHxq0IncSopChdzWKRFrCEQ1B1V23Md/wh/Z675bGATW0R/xQV6eG2ke1zkenbyHcWz8TPtXE4xxDv2cZgCdw2ClOpQXSKXPuOQ9tEHyplVjtNi85BjTh/VVUrxOqDac9Gz6ZjizdS+LaLMqPCPDOjctXX+o8F0yUv+AnPlZX7YadLJsHjlUP2Ek3dzirK8zYLtMsGh6gTj4bT2XWKKvKydlPTg2xqwKakwdzlh+CP8Rt7haYy7VX9Gf4N6drb1zWCs8dnJRf1myEmGvLpvhiGGGczk/NgIOc9pkQ5yKs206A6xxaytjXra3W+f7Htc1pqd5l2G6zDxWuQ7NiLNkNZSe652SnvKw2QpJgynyLc2PXqg/CuF1tYOXko6N2aYK+VzMrOpfJAuesvTBDeSvWlmzWt47kHlt/TUBoQv+XBI+3YvnTrD71KS7uyiks4DRumt/QfldZsRt2XHJ2ETiBjmku1CF2OC0H3sSrzAb5DdsOUphtjHznF9GUZnNwOcs5PKsdsqk32X+PLS/lt2/NCxhOg7Z3YBHNeRhHG8xVKYmZmNK3AYjWEfMzMZj8MMx1R0zGSZSTqzRUFnXQqDUTJJsSC896vx1pYpWFt/vfdmema+6enpGSf+Or38/TXfFkUm1+3vrXopiia2SnLP+Ht/Kv9AZNLfIVEcLL2Ft1v0cofI9SYyf4KSGG6fXq92LEqUb2WxQV1n+urytclXd5QUrLJ8Wxr1YqjBVyP6UWqcWTEuN1eLdXG3vpXkWqLG1zjrPUEclcU+fJfR93A91hsra9eVpZYUbt+6UHrIDqXlWnYWlCzI/TPaqe1yFyvX9yvaZGNchL5fiKz3PnuvIvmkWesWtKINq7FOeUXclHvdTDv58lXjrIl7+PS+CLNek2pfVbtW7Svbaj1TrRaVcaO8cJOebsYtPHWrPHubsrtyLxh1YVT57RkD3FIzfFCN2twjUYd6fa0zcr/RqsJaJI/O8JyJuVjA+1Y2HvG+ElX5kbqMtMVIq+hZT8+WuNeI93n+RBmr3IusNrF6mtWLrB5ntYHVVlb9rJ6JPXirNzJqa2gaTku99wVOnCb9Z7VsV+YmynKAdcjYddWozS2KOtxBa71d22DkRvTn9GmU1/W+Wc3GHWdCjX4LM9mTyjL9NkbGSNWozbVGHUSn1s9HAy83oj/XwTojSmrMYJwZTNDXTWq2edwMKblD/T2e5h97mdnrWvRosTbN7IaImIJ6ZQtyKyjpjiy97WbuvNdCZFktI9PewI+NaFbTgla0YbX1XqcHGV+LIiXFKEEpylCOClQio8dq1Oq1DntR0iFu94+xuDFpf5X2GaJli2h50fgPUfeffDyvdYfLUDNO7Q/V3oApac+sj3kUNKV9+ADrF6JHi170sdmHsr4oRglKUYZyVKASVfw0wPh6j2rU8lAd9rUmlWpeUNOlpltNZ9ThDvOp13LXHbQu1qjjFa2LtChGCUpRhnJUoBJVduIAc07jmlWtOdbhlojYT7YaEDVRzUvP8NJxMdb3++OAmEJTvXNqgZhYIhKWoSmOjayTq522LpHQFyfyaVWE/h/S/xNRjdrcg1GHFFF6baC4Ebuu61Yz6A/7MGXD/nyOWx7FfkXhi5JvepYW8s4H4uCUBeUoGpRYp36jvKR0utLh9lYhR6Us16w05ad86TiIwTg0itQXowSlKEM5KlCJbfOaYaSHoxq1dmMdxtE7HhMxCZPRQE0jVoiSLMoLKurRBKr5K9TIlHbIy+YynPJVah5L2VIeVZoRB3yRdnKWV/toP4zWzVGMEpSiDOWoQCWqtDiKTwfIEBlZpxo1KcYWRx2Gmc+2zPFEYT0W+G5i02+kivy+fYWmKGi/Nemep3Yf9sNF+fUsxsLpp32H2tbUNmvElflZHbr9rFLtZm2fi8+kXNcfCwoeWRiHywA9duCK+JGSH4v1n/BDPd9PlSNm8PZMzKFwrueCXL2WpdHMly1oRRseUbcST8tGq0X2GvtjLQ3rzHZ9rtMoRaK4GCUoRRnKUYFKVMmwR9E3QCunecqMNWKp1rMO49SNp2ii5yRMRoOd34gV1GVRmc7Wa3NvFPz3Fe/j1NyR4rMpnUmHvL1V3uIlFpX5GN8UN1rdrCjssQq9qIp9WGTY19hnYlKW2sK/K2WpTSyn8X5Xsupn1Zy36mW1lVU7qy5WLaxkiPyZ9BCr15LVhAiWopBvrDGrHqdMxghipKB8nO8J1vyHtMkmYcez/h/LvDYWXfFDNTdoNYWuenlhXvLXEn1uTpYyotoau2Y4T9ezXsCqiYqsvdAuyrrU75nfHetYPpeidAJ9t6bTe5MWnfnzc2r0bWe9hvUzeeu+vHUn6/Wst7D+L+v+ZP0G600UyCpm8Rl9jcvvgHoUYtb+Yp18uix5a7hxxplt8hgvyXhm+HrKY318zVppsjbvcVZugqe1yq9Cd173orRexXFgfCt+oK8b414n0f1+R8SP7Yoj42d+R8ef/Y6Jf/kdK0dPlbGnxwx5eHbMjZNjPqWnxWK/s2Op3zmxPFbK6O1+F8az8XxcFKtjfVwaXdEdI6I/Xo5RsdcuM3InfMtZ7VPwbzX4uHC7ejtf76tll5YNWj1ljM2sO+KGNM4GLVYYZ0Py9xIsQ1OKlwUhXgqtG7dvnY+uDq0f1dqYtC2hYRmafGed7n1W9/ht/58XJShFGcpRgUpUOfGOSnl/aQw0z0EYjCEYCnskqlETsd2N7NWke6q1bDBKI5pFbwta0YZ0h1He77nzmXtKjPX+/jjknZ+5dPwmhqe9OtvuuytugFilpYsn7qLn5zzRsV3cflQPq6LHavWiL3enfoqoLkYJSlGGclSgElXyw1FmOMDMh5ml25N1fSBuM9M79HqXiJhqtWbY8zMxFwtESLN924JWtOER5SvxNA849fP5uSvWea737I+gJt3Yve2Fg3ECTsRJOBmn4FSchtNxFi7D5biCkuEY4X0kRmE0xuAq5YX7Az6OT+CT+BQ+jc/gs/gcvsieb9yBilGCUpShHBWoRFXUiRSKMMCcB9otgzAYQzAUmVxbVKMm9hctc6MOw8Jo+Zw+HhPMeaIIn4TJ+La6BnHciBXI4oA41Xk+nLfGsn5/6EGEjLMDbrQ3b94+T9GW9gycwNGuvkevvehLvuTjgpfd19+Dp/vewtN9787T7A/cJR+Mz+/qibwzCZPxTvPDQVHEuhglKEUZylGBSlSl20wufzasf9t8dRjfr2W9NNx/+L2bxmftuUfsuVb+35J8f7vnHXTdmeujc76eptO5arv9d2O0W7Mu0d+t1x7z60WfeR8hG0dcjWtwLa5D8iPejw/gg/gQPowv4CtIXhEd8zwb0LidVx7FCjxWuHvuFWe/o/y3p3nshYNxAk7ESTgZp+BUnIbTcRYGOHMHeg7CYAzBUGTcnav5IeVKGbgOX02nZbs1XpnOlomekzAZd8hud4uFBm0ascIdJouj37N/fljwkTtllO3WT0279ZU9HUXWsRglKEUZylGBSlTl/i47/pFlRAbVSHNFHc611ufhfFyAC3ERLsYluIyPLscV4mC4GBvhfSRGYTTG4Cp111vhsWbwcd+fwCfxKXwan8Fn8Tl8ke2Xxeh4Yx9jxFa9znKPbM/7q0Iv+/EX3+TW5f9F3xs3yiw3aX1zrjP/X1vmxm3a3J6iebMc/zT/peySv39Hykntyrvsgm52hWgOecT8/mDkaUb+d1xnV10vx+TzFq0/NvqmGKduAnXfsee/i+9R8f3cOmoWUTOPmmXUNFIzhZqW/P7qoug1imZRtL2a56hZRc0Mal6lZnX0YpsaN1u++EtcjOG53/HsnyhrpCyfq9yyKOPRP1HWTtkTlK2iZAklWUraKclS8m9KWil5ioo1VCwv+GVWUvOvvJoWap6iZg41z1OzMnpBTZz2Dv6t3h8DKM7wajVqlNU6QeswLJdL2epKcxT51vq1/xNuF+GVW1cAgGW2h5nRPMxsjpnCnBgemJmxzNwuu+86zMycYdyW202ZG+f/FObFP0fv6UpPunAkXXmCHnot99HPAIMMGUvDjNjfqDjGOK4uwaTtp5hmhlnuMS7PO+MCo1+mYCWZZJFNDrnkkc82dhLOUYmHHXV4pJywxwIKKaKYEkopo1xfqaCSKnVZLdZQSx31NDjSRrGJZlpoJUKUGHE66FJ2kimmmWGWp3mZV/S4V3mN13lD3z3JefYHCXp9Ikkkk0IqaaSToV+62zXWr7iflhncAR3S5w5zRM846tpwjONG0AnrCyikiGJKKKWMEWc/qs3GGCd8JrKfB/S4B3mUx4zMJ3iSp31+P1PZ/2mfz2jHs8b5OfG8eMF3/zA+KoIEuSuRJJJJIZU00smYO+VM/uFMHgz26M+H/MJhjmiDo56dj3HcEX1h5pIXKqgkbD+xhlrqqCdsP7GJZlpoJUKUGHE66LLPT2u/e3z/gHz0II/y3izpK75/ldd4nTeM9pOcVsbcjhp59P1Z1Apn81xQQCFFFFNCKWVcpf7L5fMKKuX0KvVcbbmGWuqop0HWa7T+auWvMbKv5Tqu5wZu4mZu4VZlbhNvV+N3cCdN9tFMC61EiBIjTpsy7bbr8BudlruMx26fe2SgXpm2j34GGGRo7mIwzIg++OHr6ITjnGSKaWaY5cNz9td98Z2A55H5+sICVrLOd5liFtnkkEse+WxjJ596NeSLRka5u7gKKh1hlVhNDbXUUU/Yp6z/8HW/yffNtNBKhCgx4nQo36Ncr37SRz8DDGJ2Qg3++Z07ESNpjHE+rS9+RT/9lhznDiV8q/ETyy/pX2VG3ckgkSSSSSGVNNLJMNI2zP08OGSLwxyxh6Mc44QxXEAhRRRTQilllPuFCirl8bBfWq6hljrqaXx35rTJcjMttBIhSow4Hcq5ZoT3ByOMMsY43zBD9E3xAVfJB3mUp13BwuzpOF7lNV7nDc8UJzmtjPmq4IJ4SZ5UE7JQIkkkk0IqaaSToW7nOYKFLLKHxeISlrKM5axgFatZw1rWsZ4N6n2juInNbGEr29nBLnbLsHtk7E9/HjNfIU8ckTHDmT2OyxcNtlODRtpcMKSmhtXUiN8atTzGOBPOfFK5KaaZYZa7zRzd43noMZ623cvOqyFI8G8iSSSTQipppONdgJr41/tPYgstew4KFotLWMoylrOClcqsElezhrWsYz0b2cRmtrCVL3qi267MDnZa3iXudiZ7XEn3OrZ97OcABznkynFYLR2xPpzl4bgzbXAOXWGt/SecCRx2/CPiKGOMM6HMJFNMM8Ms9yj7snjW9uf5h320qLV7gkSSSCaFVNJIJ8PfI83XtgtYyQZ/i5EpZpFNDrnkkc82drL7Izkp+YOc5IpeQCFFFFNCKWWUy5oVVDrjKs/x1ZZrqKWOetRC0Gi9txRhTrpd/7qDO2myvpkWWokQJUacNmU6bNspdvm9XsfaRz8DDDKkHw6Hs4b/+kiOmlCDn1Kz8tSFd+/nf+e+9VdG9i+Cb7of/Zb89R3rvyv7f08m+ZEnzx/7/BPf/0x8+q3/yqfztfUCVpJJFtnkkEse+WxjJ/pNcIICCimimBJKKaPcr1dQabRV2abacg211FFPg7NrtP5a/eCDp7sV79Soo7uDO2lStpkWWokQJUacNmU67Kfz3b7ZbX899KqRPvoZYJBwTl/eGmWMcSYdxxTTzDDLV7RAOMfC3eibH9xZ2s+rvMbrvKHFTnJ+zoyrXP83tft3vA10NUkwahJJIpkUUkkjnXnadL42W8BCy4sc4WJxCUtZxnJWsFKZVeJq1rCWdaxng5G6UdzEZrawlUzbZJFNDrnkkc82tiuzg52Wd4m79ZM9/sJir3y5j/0c4CCH3J0cdtd7RA0ddT95jOPy5AktXEAhRRRTQillXOWaXO6upoJKqmSWarGGWuqop0EtNopXK38N13Id13MDN3Fz4P+riLdym9a7XbyDO2mybTMttBIhSow4bcq002G5U+wyLrrFHnXeSx/9DDDIkHvjYT0sHIfqd4xxJrTbpGOdYpoZZunX2s8GiSSRTAqppJFOxtyPgvlG8gJWsmHua0GmmEU2OeSSRz7b2Mnu8L7hqaCAQooopoRSyihX0xWENSzTVFuuoZY66mmwHzWsZi+/O+YWvn9ndbtsdAd30qRsMy20EiFKjDhtyoS1KHa5H+3WC3rUUq91ffQzwCDec707v/fHj14nbD/p+ymmmXFss3jrFXzV+q+p0a97svyGc/um1vi2sfVdv2M8BverkwdkuQd5lKd8ftr8w6c++em5b9r+pHhKPK38eS17QXznTZP3InLWiNZ7mys70KggCMMwfAfd/0WEAhv5LRhYA4IZthPw61iJRnsA9MggXcPDh/cr9Aq9Qq/QK/QKvUKv0Lunl/SSXtJ7oJf0kl7SS3pJL+klvaSX9D7pVXqVXqVX6VV6lV6lV+kFvaC30nuiF/SCXtALekFv0Fv/9Z27qdfoNXqNXtALekEv6AW9oBf0gl6jt9Jr9DZ67/Ru9Dq9Tq/T6/Q6vUHvm96N3knvpHfS+6A36A16g96gN2ZbOv60pefZlo7Zll7nolK0svPvpbhQ/KL4OBV3ijvFneJOcaN4obhRvFBcKL5QXCi+zS51WN+r9b3+tpefpu1BV64AjKLwuh7bnrlWbdsKatu2Hqo2o9q9z9OdHTVf8MfJXtHMOaedpL+LgzBpgmQZJsUYMxhkluirQFYxlTVacYlWPMVGznCRQ1yWE1zlLie5L5f8xO0yz+Uqr3jDNd7LTT4ywS3aWUwbAYJWIiRthInQSZSM7qx0kqOsuyJlqjR1tximkxFGdY9JJ+Oi7wwlzmSJMIUZhJklSeYwlwTzJOcv+XpYLiFWsJIOVkmANWzQvVFSbJIAmyXEFv+nuI0ddLNTQuySNLvZSzv7OEoHx6Sd4xLihAQ4Ke2ckhinJcQZyXBWS3V5qSxXuU6UG1LgJndJebU6D6XCIx6T93Z5bfeaBm+k4gXrWvALRb5KlW9S47tU+SE1fkqeX9Lkt7T4I03+SosJydPOCq/f4/W7vHuQKDHKxEnTRVYq/63fT1Xi1KRAHZdgiHaGpcsl2l2i6hIJl8i4RMglii6RdImaSiwlwDLpdo+me0Tdo9c9ut1j0D0i7pF1j0736HSPvHvk3COsHkfU46h0q8lxmu4RcY+6e6RdIuUGJTeIuUGDmzLILenktuS4I53clZzbjLjNAI+k5TYttxl1mwG3GXGbPrcZcpthtxlym2G3abnNmNuMu82Y24y7TesfOJU5vnjabZEDrFxRFEX3Gdu1jegHtW3b9qg2gtoM+8PaDIuocdKgtm1zet7uLf/k5Kx9sx6uIAB8aI/ysLdu27k31oyaPSWJNckR09L4iATOYIHWWSzRWvO7tmMLCpWXsV/rOE4iOGpUKovbPzk6nUnh4dgpI0ZJ1eSEcSPwPJmensLbZGZUEp8tCkgXGSBjZEl9cYqUx3UAwn5q8rHJhybvm7xr8rbJm3D848/DBcCGqxIDR1JWCoy7jKfWuMXANhWlZasWvStK31Y9lRM7tRhYURb0tsyG3j07VZTt4HrIABkj46SPtJNe0kW6SQ/pV9oRRAhhIJczK7DDAScCEOkMUTZERFkTTmVLJJSVc0+VdVHeepp7r6wNn7K4dn1wTrHeGwoxq9A36EAToSnQthkTNSu9DpsEdC4xKxF81z5pEnDQvdTebRJwmrXLn7XTuIHfxpXHufM4Tx7nzeN8eZxfnWh1J0+Th8kuXFt39FMKFmE5wFEhdnD93dEfTdEaHfn2Xovi4XggWZ5vb8JWc4/fkFPtEKe4MBs2dME8/n++ciDmwK6mO+YyB/4AJj9z/wAAAHjaY2BhYmGcwMDKwMDUxRTBwMDgDaEZ4xiMGM0ZkEADA0M6SB7G9/P3c2U4wMCgJMq85r8YAwNLE8MrBQbG6SA5JnamY0BKgYEZAPs8C7oAeNoNx7ERQEAUBcB93wVyV4LGRJgR3ow2FKQ4NlsRs0JXWNW9HyM4x3ZlEU03odLyUC8m+d9B+ADSiQVQeNptzDPAWFcABtBz34tt44Z1bDupbTu1MaX7VLdZgi22bdtOfsW2bX1YDxKkKCUVUEqupC86aSe3XCisruZ6uBiSUD+8mExO5iYbk81pSHOl+dMaMYn5Y8FYKlaIVWL1WDs2jC1ip/hjHFytevUS1UtfvAgKi+ppoe9V5YVk0nVFmqb5biolY7lY6arSIDa/UwmlLMNzcDFcjHCh24VmF5qev3ghcH57xpqMFRnLyZhMxp8Zf2QsyPgvo3tG04xG21ZvXbV1qQDa4S05EHqHvgCEngDhr6u/f9YbZ4oJtjnosKnmmW+4HGMsMtF0o02zxy67TXJIUEBBhRVVSmlllFVJZVVUFVX3sEc9po666mmsiaaaaWGOEeY6Y0YopqWOOumim6c941nPedXr3vCmt7zjE9195nNf+sr3fvCjn/xqllNm22eD8bbItFWW046Goo7pYYn9FjseijtprwEGhkIOOGJkKKy/3yw11BDDTJZHIpd8cssrv0JKKqa4Eioqp7wKiqimthpqelAtOzygkfoaaKi5R3yhrVZaa6+Ndjro7CmPe8KTXvGCF72kq7d94F3v+cj7dvrQd772jW/97FO/eMjHoWAo4HzIY6EFVlplxSWlIpKQAAABAAH//wAPeNrdfAVgG0e68MzKtgyyLZYsXq2kFdNKWrEsWWBKHLBjCjpYTJo2VHplOii9wjEztEeP214px4/K8O4dM/Ww14vX/ze7kqM4afszOdKu9hv6eL75ZjZIhuIIUWHqJFIgFTIg5NYytNOTVCU4Oq7rxKoEI8MqrZ6jwrQwrOzT4OfUwh58YNAs3Nvbb7Uq+ql7DTrr8pepsHr5vVR2+aXePugQKeByH/QqR70IYQ4zLC1nsEyGkznMjm8VHl2cwM/cfid1cjn77W9jHd4hfGBlRWolu4fyIIwQkmOEFegfzwGn0JPnhGP0mTb4XS04WkafPVd9tIKeaIN/erUfGXr2nP13oBPoHxG18iOEZO8A6gaRGqijdeI/FXyThEqVDD+AvyscxdPCp/Hdgk9Yftskfu7b1MniSlH4XRHoteAtwieB9/PQ/0HoR4nMyEN439XFQD9xvV6n7ZLr9fKExyMCUims4uCaJADqYGoxJXwOb4mPsalooVF38IzwG9zjyjLC0d8zKYctQf9tcnOEOpncHEou6NVLSVfBI/zOU8A/FV5z552unAvQRv6V16jbqa8jeNAkihQX1xvkYYpxDlA6rY0iw/GGAXgOU/7Qlqs37LjZwRvqU+zw0ojTO7or450e02f1Wy9JjV0+H8UHylftL8xWnRHeyM2cl8pduDlmyYZtyXFP6bzrpdEmxdGybzBaV5ccyDYQ6hmnh+X1eoAnWA/8e2Mk0m5G1W9MR4cKFq3OY6Rd6kFzhS+8EV4aRWd/v4n1hgYG2F7FUEKrVMqsdoIrJcrlvSCXXqRDiFNxkkC6GEzYz4iSmH/lkvsmN7/jAB4oHZ/91Kfmjhepkzs+sHTh++fwnpkbJpb/Zv2NpCcnXD4MPQ0gK9CdbOuLUbmbvemkHp2FVw7fNwFdvoJXSJ+f/CTpFY+ncL3Z8bgJehZeTQm/h86xiGUK+gaDc0vqJ36plMDgp4XDeFH4SLFItA7lhFdAm8X6ojYPNq2rF7T8bDhGn26D39WCo2WAn12fWNHjYBUSPgHApwd4torNPP534TK8Xvg8ICL8JSv8raQLf6Huob6BWIQ6Qb2SLX0AfqzqA5/ikwwwjEl24aONyxdisbnjjfNucKach+u5HVXGO74rXc4mou99Ibers3DgmurotXuyW2quSjE+fX4mf8HmCG3NHE0JHzpwURO3WyVeYRWjouHLwZW6tSYs1uv4I8QR4Unhi9RJ4QmcR1IL9D5oIRM1QDVfJ1Uk6tHPROoNEhdRUuQK+ftTGxyvPCfCdfD0fZGLBomLTbgNnj64Wh+4uPIrkYsDK3/Ad8K4GoRE/S9SSRheSwzRwzp1tVBi2KmoK8NbJ2OTjvlBPdM4v4GPCfdtuGFnQq9HTVqvk2glmGMOYwbLdfN1fPM64ds4NiW8ciP1JHjx9whfBTXZc9uLrVYZaNUptaJJ/XcCzceLzVKZVpwlEK2C7gj/MOZU1D8LK0FBqI9iHTY0qIpQwo8uPwxcNOEfLWdb/X5K0gqN2Ao6Z95Xz+J/r5ep2vI/whAPUlPLOWCAVFfkiUPyt0TjECXqyxOgL5ozNcZG6YAvWFSXIsAkd4KPTVw+F40vXt6YuHw2Gl+4XPi8p74rW9hVc3kaO7P5XTV3Z37/tdXGtXtzxQPXjMA9iw9kL9gc42bO57PnT0fjM+cDNtKoIjbOpr3EQXJnwzF6qg1+VwsO9vL0ueqDvfwMqJKtUkWjKCoRusDNyRkevJ1Hos+gN/Ac8Yd6iU49ADAUEyrdGJ4ksgECNBdUg9Z1fF9fUCK9oFRa16UVfYEmB5iODpzrH4iK9OOHhJMK+E14AiWdtu7ewOa+fk5iir27Nzit6E+cZo2vsxO/0C03AmPeL7DdXUMSp/wd5+BGB3pfS2Ydc0CdDcVF/5QkGrxq63pDsjVtdrbJjph+x5zg1U/tz49fMS+SUjwwqcf/IhzDm4XPCJ/Pt4kRxFosfjG5OdYSZ2yG+6I4yXZwMxcAgpJIiWhbXn0TaGI/MooeiuiP5IlPz63MPPaE16Ud3Nbij77vLzq9ZfY/qJOe8pQvu39YeA1Xw+OB4Hig2VtJjAFMCOHVvnTEoWtWu1PhCyOTGTu3tfB0vf5vgYKTrbDfoDKe4Q3+zP7hE9TJtwl/FZ7wBcZCwkOoTdNNKLlW08ncaGBYuLHEObKcIcWnUm2cW6v5IYraXEtanYVGIWbQzteyGDvbeddZ2NduBXEZtbtkUFpLJoXy/Bqm/IRzZ3NwvxSvtHNQrmFka5gYDAPVbCP62amP/ftPgI9s2fs9iY/cQrFX+BXuEpk54QfKiZdwQCxSALrj8BCWMc4unRZ0BLqXHB/EAjYZFxe7ZwlTUilRifCrg954xrFt1jdXnbw476luT/N7F1hGkyxPeGd2RHfWx/dx5cPjkY01G1VWmbWKRsEftSmVwYnh2GjUYAgxGS1jGSwWgkmnUuWvZSqLEY3LDBipgNaNYgSLMKOCf0ma2rhcX6aGqVuWj1O3FKHOFEjrI1BnSJSV5KhtVJvPxpdPX1a11wyJuUp1ntPXHY3Dnfm911TxPuGd/PnTMW76vBT53bhuCeYWqT/RlqJNj5NA/3gOOEbPtMHvasHB4zx7rvrgcX4hzi39QBP4dNSFkJniMANh6PKY8OKw8AJ44Tupg8tZKESYePmOPvgJPMAc+CCZBkNtmYyBmwbvqezZO3LlLRjmy6eK99xbEJ6ewNTN1KOnTgn/JjxCHVnOknAeenwLLpPeOmHUS6X5iIwqdYRnfvLjKYhau6f+8zsbcLfwG5gzvoGTwv3CB3FAeAZvxwdIWyW0vQLadkttQQ54209+Nin8si78Clpch68WKsKruBf/E3hsqbZId7o5Nwsi3XaAb5bmIB7T4HlIzG7H3xfcVFBg8MvL3+KpjUV++YEi0XJ65Y/4t5QasaQXXlI1A2geaKWcFZ90oJ0GXVcXC9rIgtWDgrpB95Og+5LmgqrS6d1lzybH+pp/Y9DELXE7Dyn6+5QdQyZgwKFsfGMIb+tTOMfcYwu2LBubuTfWYBWKYGW93RZlmIt3vTLQj1OYwtim8oRigbGOAVPvZP9ANm7laA+hVcLyRaA116T1UXQ2vAvjpdPQ51tQtLwbr0JfWoWunDgN/e1qzzL0lnP23BGGoIBAZTcBt3g0hjYhZABeJJs8g5De0+Sa9NgMfnW0GPDzBimoGaBYeCB12VUGuolXA8/yrdj6EL80zID5yrt7JvLsdNC4f3t5q8FxoDR5ZAQLuU5+LsEtqvLKyjxXPcToJueMyQWDkurpw9Zhx+gCnabe0pGcSSW2JGS9gbFwpO7t69F4VcmCwxaq8rFIZvzEROdgR3qWS/iV7jxdSvjixoSXVqm1SUNvbz7mSNp+k5mLx+cyRDsmVv5IlakXkVaKRTysjoSSqVQrHGGlOdkjoq+zyfB44YC1UGWWyvxs0eGuztf8owlLZHPaW0uqOpxcurcU3Uu9KDyWLIfX7eL4nROBvDM/4eV35Vw55oPmiFOLMGJh1E7gskPyNC0Oy8VxWionchSHMjsabOXourFD5op+KprYwgHpzlKke2SgPNsbmFzixy8fHcnovKHU9nxuZ8boM2rdORqJo0yKo6RglLXrr9cfs23VhunTK7B+fTIYfV1MAkPmwT5j+out1dfAANbpXgc3ZW+Hoo8s1Qj/vcAJHvhvRhGENE2cQAKiRZLQKUkMMkx1JttXl0XKW7iwVt5vrSoU2j6dw35+JrU44sZf6M+OufzVmMmaqvtMac6JZeNXjNdiuLh8nFigDGOHhuPywcldlg+APJj8pNc/mXNomSiZrQGXCODiBe1HuDlVtVYzHsI2OcuTGweRnEFOJrROYFtrogQuUhH/2PZU7UjVMzLPVS42dzO03naJ/oIOGb9pZyYwq9/YIUsWjMJwfCaR2pLgthyY5bCufN6kr3xwJDY74iknotsjNlvdXpZ1hEO0J2WLd8gyx47tjm+OJWe5+FQkPo0oUX9CIFkLcp2hQcSVyU+bo4wOU4AVDqZ31tmRoxPrLq1godKZnIlzi+ocmNjv8LVgTPumk72BiaX02OVj4ydGB7tPGw9mM1tisVnwFtKIxFuMNv3T9xA6BxyjG9rgz7fgaBngeBX+0ip8Bb0LYYSBEoQvoH4gxXKwUDxTPXU6sqzeMzrqrkXsWZ2u36+LcHfcgZ9KDQxvjakHY32K8boyJYREjaIpO/DGiVJnrkeToFVdbZmIFNEtYt98m25hS3Kh7GLKc6mR3c5C7Uht/mLGb9+f5WY42wGPPRN1dAymG55gLWKyJRvy4MROjt81GajGL1r+w+ju+HCKjkXd4+n9sVwGvJ7xA54c7S5MevwTOQdQOQEqj0HD9AjRjCoheRVVm8ehcLWY9UxkFNWq/WApVGLVmJmbZ0cCwqPgVP4+W3MUNnKi3wLu3Q49yZBcWuHJkpxuolqtUj3Lf6KO7tmDcLNOT2vNOyGWgQwI/CVRZhtFz4/IDLTyCvz+SRsUfxWgJLZATxM5SlC0/FWQYmv0VahgIXVJ/uBu6qVV6Mp/YsiuvWVlAt0LmKrI2lnexn2VKA8N4C2jc3p6kNUY/eZqsB6ufkmtCw/0GgMmyrX8nfCoVxYg9KxcDz0RelTn6qfPkTM4m32Eamt7aPK+B/DoA97L5KKbx5xcgx959GC1itmJZ/4D9x34EHBZjS3PCN+CFutXXsMqaAF0aYhHEq1K1KDk+qpFq3b1KzS8Ngzua/ndrLG7g+/uTUWkkWSbQANdq1IGIbf94HSSbjdlLttUzWZy2zTVdDa7XVMt0vtL5Q09rr3DwYJbhZnFLdMV4THMbJ3ZNAJa0HO0UBnPV6qO3GZuVaPUyLBWo3RFqqVRqax3fa6/WtRVt4QDeZeS9EVUinTmyThIT5JMKSzKdKsUD0yhpqcJQv8axJy9Vpe1eT8yMPald9Q8nvqOdHp73eOp7fgjtyWRkD4zCfAxu1LpXRMBuKdTcMeK7A4+vSuT3ZnO7mj6hqCIwfamj/k+Qmvha3xMUNTN7U0fA3m0VfhLBN7mY2SrtNAoiPg3X6FrmhMjQA0ikVBdpgcaI8oBfT4olzOEVD4TGRzQFUPd8AgUu/wckGoa0FyX2AI37XcCvfquHktG3u3eleKXJgI6eY8tJ5d7lniRBU+aMztz2YhZmyaMiJp0woPms2kGaWxAEgWyXwAFXpRGw+Ks7lldPDVvZ0ZjUji2KqFWMEaUBHtHj1SrR8e4uYrKcmxq7FC1U6iQ8Cu1qMyqqnOx+EJDr69uiSW3cNxMMkGmK+pLstTMvs2crLdx+cS6K0Z9Y9z62ZETm4ypuQTMGODsfGMxbozNp3dk8zvSmV257Hb+J+3RVoAqE21qRVur1iAtPdm25AFEWxSeKe+3VQv2A7nUQsWdO38h0Da3dyhTjd5qHNYo394bK4QmdyXGrhjPM/kJmNKzTq07bHq/O8c0R01SJ6UYDw/IyBTQ5nTlrfCuFVtQSeytbU3xs4ZazTpdyC4OO+uhjSlvOaZyxDImX5UzY5zcPRlKuYTvyt4l/MKbjW7YFUvvzDvTjgeNIZcW4goyE8G4NpFaz9qZCIbvInKBqUdGiCVywdrkbNHpGVlMFPZDiLluj2+EU8uc8awlUEtYYtO9ELUkeVCaUnTfshOXj+bptPMD5hirc+Un2fTODJL8AZ6iFGgA7i1PAMOk4gY8Vd2vqw6b5+O9g534W9RoSfgnqucqvtqBsbRm/yN+GLANIGRY9a6gN68TLBpEif1x+GKvJTgfL0y6a9HUmJub5/NbrbRlXcSRdVvSvtxc9OJefyDqc8fCdlqnGKQ5HzfCeJxhh13FOi12nUJJJyJjm0TcIWuAYU8BAkO+lXtIcu3aS7xoa90B1El2Kv/VtkOBiZhGzfB2J+8M5q3lxEI2OR2zRK3jm72je4sZamJdpMEWrZzTFRvyjvgFOSXLLcS9YxFmOCRXXgBqnLRSBIch8Pk16u9JDsDdDADFcIQTIxCRJzyudTujFitnGx2tHj9OuY2WcOeQTKnQh2h8JPXggynhvRaLpgNhVAcrNsOMZQWKyDQlhdit8LaLWV1w1quFvHciOwjxrGKgS2vFlPNIddP0czguvDg/x5QDeFQYE9eQmLJo6/nqYfARUu/ER1zU9JcvI3QWvAvjq05Dn29B0fLVeBX6kgiVfOVfi/GYBsyVAsxh/udknEbDyX70VOPzXxh5iuoRcvjJ5T8hTOZFmU2ajzEnI3kAqMmzHHGiBuqlke/kLrow953KwzvnCpWR/OxOEn5gmbAMXRR+/twnPvHcz5HUC/4p1UPuGoOBJ+kJhmXBu2pki+/o7r5/3cmT6+4n9yefpHq+OTj4TeE1YfkbAwPfwDLcRdqvOKheaK9FCBw3D+GciC8GxejysOcNmLoUepv5+6OPPFgVfiu3+Gw9mv73AxspY7VCMMGPL+/U0BoMIOCH1Bvh3ZEmT/8VoVX48wQuce8wljIR+GtUz9pMxDbhU/iDwkfwgjAbxh/nwsKcGLNZxBzUD5ALxdujXDLtpPizol3yT9NMDwMkmSDh71iSserUgzpn1JYF3ffpIok77qh+8IH+fp3O4jMpPgghcVdwQ7xb3mNQGtsCY/yUEKIulcs6dU6vunsg0cLnHYCPD2XW4hPlJTNbtXgdTRA6Gyk+1UJrSI/1tag7H+izK0tuf3IId1YfrX7wC4ODTdT6ZC3kuhXY5lLqe2KDukDFqQSteKqJ4SXdHU0M3a4eEceV12Qc4JhE1XPzTEesanW+S6pWnfkqDwmWqygDtp7xpMts0KpM3vzcvBmWt72KXoidIiltxMeCn7z44upH79D3Dw5o9FafWbGKdJ9RNTRXFcJuU48s3dHdyYfxy6Y47a14+1sM7tFEPC0KUHNV8wXAnuwWiqgXqXNyFbDSh4B5ueAZzCPrG/do/ixWIUz4Qo2JskOd5yJb5NMa/uCfhYFGf5PG0VHvhvzcgklkQA/t6lpLT0qTW+DaCSbyiOIFDHluxBAd1sDICRjkdDpNyqa1OzeSDGrLpX00VpsuZwPxkCVt09Zr9Q09vT0KuVqP8dCYmU4PKrRRYygTwgulSLSgtgTiOpjIx6q39/XiBMZYOzhkd4YMWsVAokfutlu9BKcg4HSPmLu3A05tMZEYUqyJUb+T3BQKb0ymNkTCGz8H0wXD0zCNwgcvxKejsekYfKLT8S+584yr4HbnXIyYReTFdeuMNAYm68i2ceSJM5MoVKh8eHT0kkrlktHRw+VaeFMqtSkSIdcwds/dun79rXNzt05N3TrXuLBQuLDRuDBfuABhFEYI30vlkFraYeFUEKokyfqUU+F7hc+8vdsTi2oNqbiTqheLRfxphcWorJictk5BBq2D0PoFqkY0gktAo6JMIhn8IFuUSeyA3wMyOa0LKpyVlLXI09Zc0JHwWnoCnQw/ESrMhhk+Z4wMe3QdeJ+zVi1ZBq1MyD4UtanN5p5Il91pDIz6fbmAvU8fDAUMJGvuWbkI/4QaJti7m9sm7eGDOIW3uA+YUC3B4NnQsCt7oDZ52BrRbxken12cHjKv2+Qp+zOz+qBqeEusuD3lyP1CHp+M5rfGC6lAIDlWrW7MjqZ9KQsX8jMJa2hDylsNE/kYVq6lEPCul2TFO5N0EnNkK17nplV4j/AFvDs8Nyf8LVb81efz+JtCqvj53+AdxEKZlQvwMrRztufIVtFlNODP5aeVCXdNXG4LWXZlIRETWhcNT5tKU3hWeDlmmgyWzyuOHLpnouCM5YPrudiE38fiO0orFnt2X6V+fg5wTJD8EtlDE3nVsthmaMWfqULyNWpMRcoHq6Gp7GBsLpde1AWthxrrj1Yql443Do+8xk1z8RkuPs1x0z8buWjYkWWXbhsvcN5CY/tDd269qVE5eCQ+Hec2x+EKH0K3E/jVTzVINp9MXJjBHxCuxT8X3rGe6i4tZ8lJopVXKTtYFY04NAL4tuk8374MBBJIDC1leFuHP/Aaq6PstUtGGheXAmWnPeVgh6e87FSZpeFnma3ZkyVHYCNnT5BbQvhSZNTpakSCDa+nEXiyuJXLbM+GxuJ9/YEsExyJGAzhkSCTC/T3J0e9Lt6jdY+EmRSrdVfxIQ9vsfKsJwVX4LdrZR9QkJP4rWklOKUstfxM/HjC5jYKXeVDI+H1+QEcm83zW4Hdl9SB3eVLJ+qXjvwlPhOPE44Du3GD8DvnAX4X4xK/t93YqFx8mcRpieui3wTZk50PaeUTlp2x5W2TnbHjvWX04nGPb92F1bGLxt2+yYuEb1PW9EY+Pc1bbNlNycw0b+6lKhdclR++5rxS9cKrs+W/OlDC+xPnzSbTi/sj5J5Z2C+ezIDLW6l/OadHeavwpZt7mHBUa05FrLgGHoWqKaxm9bDVbcfLB6F1BBAfhNbgZDnPqkch7Drbo0SxPjTs9WyqB+hqgptKKkNd7tJsdnwp5itP0MOTbgXG95R2jvM6HeMvhD3DrDOqDcq9QXtmK58ci7mU1nQ6bS0CwsCrP1E6GBcY1yltFlItWb2uN5FLqoitpX3D3X4qPpuOb4yk99Wdzl2HQhPBynZNRFObj1YvKDiKIVgL1A71+MdjHmfZyxR8wZIzNzwM+5rZQNiVsCTmMt5SoK8nMRHKbyFMQCa4aEB6onehz/Qux4QP4cMR8C4fx6aHC/gb4FwePoV3Iizmtilo9V/pWxSTJ+xh8xLxLeFJ4luGNxDfEjetA99SqBzsnSgS37IOfEvA78G3i75l70jtgv/bfAvZn+sFuk/7lveKvuX+Serm/198SxD47RH53e5bCB1v7lyCIrtzAyK79QHrofrU0XL58GT90gqwOyFyHHiJn6tcLPmWsUKcLTa2P3znthsa5YNHOOD0Zo7bzIn8pmAG/gv+ML4dfIsbIcOaHJ0U/xSpVjDwo+ho1GiKN2AzB+6xxsN0OeriXWpnOUJune5C3ekazTGeQoN2NXLM191jUXuEH4KbLcojTLQZ9+J7kIr4FIb4FGrVp/S+MC93BdRql02DQ8FgECdhGRJU6lVYuI9ohgsu2/Ffkz44ImuCFmFRy5Qlf0JBEOuypP32UoDj6Liz19bF1qNjY5ZATBsMDf4hUQur+gxuuz2oMfU55LS5ytkDZnXXgN+vDpI5HfixA0YJEm603EdbKLLGd8gl6TxcnOk2U3TaFatuGjEYSqOlgK8waFOEso5gzRcJhtOhsc6oz6J0GlgH4/U6aQdrH3JqLYOWuJ0J9sozHmeMOAqyh4GX8O2St+CSTJIXswc6lkue+sFv7ZnMd7+03y+cCu6/+xFiLYDtFqjtQUhUlLUBlOQsih3QCQPu4qFAzRccD8Y2aG3qYTZaoTmzPa30UYqB/l78nYcdqqjgyHjYPO2jTSZH3Gfzak26wVg67e8NXjcwKO65wYiX4rvAq/lXfYW83VPotOf0E/hS/1jYOzqIG2lXod+iHg+u37FtLDIR+JADImiedvIOR+oGT8Hlsk1utputTvfRoxsX3MWsKWgyB0ymoHkoaEKYeFO8CBR3wp1J0jIGa1/D5Z9zeHdQuATJRH3eD+VmFEDZM7wDfwZC8rMj7zXRPt4PrAqP+rJOWzgwwjCVQJD2JkNM0mJJOl0pkzXhfM4e1hvDdlvI5CkcdCatDt7OxhV9PrsjbDSGHHZ/X3+CNjpVasZgdKk17q9qzYODsClqUTKElzTgemGLl215s/YFAsF1bRL2y6FxtWUg587WB8a8oXF/cCI0vm37mDNFO1NOB+Flp9tpNds3T1hdcNzXU3Itbjh25AETsDFgNpOriVg+ruMPUy9Klq/5H7N8XBdNv5GXTH80K5q+LZoySR5AjBpxHb1GvYSUMNpp20+l4NdrX9sop1mVPmgL4UtDIZzsNqpCJgsW7id2jxt4G7RzQrs3s3s+YBteY/fBqC4YHPw1boDlKxVGt80eUJv67N2i5fst6q5Bn18TIJaPy3gHjBOEcf7nWj4uR31WJaMH02d9TgfdNH1rHJajPcT040QeRjyBl0AeouVrzmn5eAJsfzmw/64vE9sH+W2B+h6o/T/F9qkxR8btBeN3DhHjt/qI8UczxPivHxwkto8r+FIYUdRX/N9m+xHJ9t35AbN6LLR++1aw/eCHW7ZP0yn8TU+BYWwT0w4TMf5jGxbdpZw5aJK0dihoRsT6gUeLgMFp69f8mVg/9dmm9QNP9kN50/rx/zbrx/9AzD/laJp/aEgyf0WSNoD5O/VDLo3W9XWtRTR/6yAD3HQANy9ocVOzKjn+zaz/keAEWH/enanjwVFfaCwQnAyNbds+SqdomoePg+ZxxeO0mO3TE1a3q+hmi26w/6MPmIJD4EbBn8JHtMd70WuywJvZ4+Nn2+N9eBu0+x+0x/ve3B7vxDtgnP8F9njnf509vgsvyfxvaI/vOm2PK96VU/gw9XWimyzGBoyfh4uSEX4q/NqMp/GiTfi08GHQUefKKUoQ/RlHcqf0G/MQrxGNTOwaf8uc8tsK/niMjjp7LZ2earRRN/sj2kBw4FfLp06L7zg24kFG+Jnw6zcMfNZ4XeHjpxFeWVnF2APneYE49GmsFPP99+N3I1LOrJySXSaWf6BZfpNUTqnhjlGRUmAZ9TWyrwQpft7AcnLeIDfIWflsoNpXo3xUra8adPgDlLOod5nGxkwufVFfLjezoJRFOnuvwQw+D39hUpgk5+8BhlEZ/RFdifeRUj7J6cq5Px46RFptwQj34C+gwbPzbbgHThIZfUND5GrEC+J9yOgdGhLzgTAouoLqks5GiOcLSL/ZbBZ/eGlJ2Lq0hDDasPIAugstkf0NA89AuXyLylAZ2ji9Y8c0gpYE8VugnPRBTt5DDelLMJzMrMsuiX+IEnfL3099i9SUdnnkUGdrtVr9Af6pYPgBEEOhxRUB3j74BqkjnZvnQSXeB3XwjwUD/impBLXczZP+ZjHHyMiJ02d48ZvkxC8nF79yAFLXXRu56e54lnsIvpdcHbnu9lg2/hB8L/tp5KEI/toTqX+Bv9QT3Nfh709PPIGwyJcrRZqQRAfBX4zn/wZW2y7klc5HnrnOXw0niC4T0t6pcVs1sYCFLTJMKToY0ZQ3Bdx1ntazUZPBb8rkvh4shVUKE8O5ghmrOWy1+bI2Q7QR8/KsbaDfwUe/fsEFYuQUwF/Cr5FxJQlDIqH95FvreDkxLMIuXISBtVEYuOR0FaODYbU4cJo2eGImI+wIZ3E0WAqpxZEDWas5Yjlj5AF7a+Qa1Yv+k/rmaf0g3KjB+Tyq9zH4Qxhq9KBrSA1STsqonscfh5Z10JpbRM3qbWqWpDv1bIJoj6hffaIKYZAiooYlrceYwdSw4F2Hn2+qPZHGymP4YYRIOTk9X8ZXQQrmDewhufJd9G/NvQSV5CtJDkJK/rPEtcCPFAcC6lMq+/jt3YNazYCqW925nfqU8BeFa6DfrRB+k+lX4SEtTSU0pm48oOnLIIzi0PO3mj0nm1sGek4HUxWMwxDfJc29qvj2TrVcNaDWKuXb+V6lspf6VKZPI/y226RJULRW+LGqP4OVCnf/gEuBOxFGcyvPo3+BnoHPBoIsfOeO8bxXpsgs78sgMjbU+GSzBgxEBoun08e9GeqdmVO/JzWCKy+hX1DfF+c4wMNAtER82Sy4KZvQhlhjNcf5Swxe2Pfo0pBtbu+B6Pq/WzSXrrkW2jqg7XeabYmGsdIJezJNf8c57I/nqkZvUJfMbsQLpWuvKZkX/2599MDeOdvQ0qOiJF6RVXFUkgRISCZ7pVSS4PjVNjj+29Pwve1w1xvVp5APVbCAyfltMjvxOrlBx/LSzffqo4+++vKfH330z1j7+dwtN+U+45ZuxE+UUIXSttq55UmeTRrk0o3Srjb89WdyN92S+7xbuhFOkvFosR3StA3TGgFh0jNOkxqr/eJ0W1+IAr95P+5G+8jYq56Ta3Ogm8nlwIF9+8QvmVmGwZZOiTHu0+LO6dMnCA0E+heANmlv76ehMlaGZsmF6rlg374LyBdhscX1YgukIa4xyV+pMo4MUS+ev3//+c3y65rlbR1JfSBMMAePv2+tx5fwBIwCK7dA1upGZBf31OBchpiNgnrSfh2rKlKiW9LJtACBTCrWcjMlZ+bAqHt8r6VsGA2Y81H5iHJ02v1V/3iELfh1xw92RCcXo9Vj67suu4wqp3U+LyXswHrvkNaftV6ML4/N5eX43R2eXINgkERX4R9SLHKKe2vNoNwgBUVkqm0ml1ieTIRkEl6TCHu3PkPTGUPdOapSq9VjtnF9lqazhoat4VKr6nSOTjudaXG3K0Pj72i0Wk2DHtVn7LaMYdRaU+l16pq1ES/YM4YG/TzZ/yq6PHmGKSJxTf4OakQWQSk0jMYRwsAWg140QxZYo+ea2bouOQjGw0pJWwOwyckQL07Og2tUcAVUSX2oSIxYj+mwm/bWbM4BX8yqN2Jq4mAOjnj6Y2EXw817yYsfHr0B4/G9iXI2nPZvDEciUefmSXfQH7TKInsoea/LnFaZtV2dWPgDbr4H0teHdy3Juvukt0HknRTul94FMao7hMPCKWyzF4JJlWIB4w6bq+CPDvYijGjYUf0lxH55oj8csDjJ8FyKb3u3VaSPltNandYAN72h/bVa8XwwrZ6TjavzXf36M19uVck78Sa18I8yHNUIv5B1ate8cGuUQ/o3YBySdwVcruLpN1wTRkOgu8egD/QrUm1v4Fa0WmLPiZVX8FchqigBxhxh+ppjOoTDBrAUKUEuFrWdYWzF3skEyyS29/RobbFN8dQum9e43udI2q3avt7PvUeuCXs0LrUlHDRq/WbVUMZsS6TsxqxJHU4Ze47gy1RKuuqJrA+nY35fzJGslBwaXcrioEsVf0dnD/wl+vsVil55PNwoOZw2hMksQ90CU6BR1CJG3LEGpSE71ixcpMMbD04fpO+8s3777fZDW56f/MnP1uGLoylz9KGHotZEFM+RN0Wg+cqrENXOgMxkJF434G6K8y9/00Z92rk8TfiDvgyrsy4Sv+HVMTgdvuDK0pVXlvBfpW++GT6Ek1Xch5/DI9J8T+uq+G7cl06TkmF0Ib4Nf4n04ZYT22N5YpP4tuDlJwInjgePnQgcvy9w4kTwOPw4ETxBbGUEjeNn8c9asWMrAmWh51/ncrkfQ++3Ly4K/7iw8MVMBuy+ih7Dh8UZXy7NEG4Rh7Dw7zj8WCx2aSxGMOHhTdIXKaXomzuTbneyE78obMPDwpfxh3792sTjT4ydIloMtZ6Qamncus5OnZvGH4Iqw1BVe2rsiccnXoMRR1EBv4XSwYiD0oiqNv6M4pHrStddVypkMngy89a3woeMX4FZ7GE8h8zQQswyNZ0PJx2Ul9a2FYXJa7MlOPOQvT/QZwrAWjYyZLD0v9Lp8FisVqOJomxu+GGxYtLnGLqaQvhCMRcA49NJCuWFG/GFv3qQREKbVoKUF7w6DbSceXiKk84XJJNNy9Mwm6qFIts6QCXXW1XF9X573NHbUaV6Th+hmhoYyGNMObQVJufUe4aE74KrF/dpPkT9q7i3HwFrqp19imDtAh6/SXmnuMR72Ff1iR+vt+ozw7osNGQJms0hfL4E8pOrH6BQJn6EdatrPfw5T4X1VjzSlbVGzeQTgY9VsHkqXm/Z4ynDlfUSYNQillpkpxd9FIqsXCzrpxbRDDrQeqdRPPzokWaSlrdobaY1j2GKMfialzhXvYYUkmugNHlG6gV/YPz6vdlOpT3lpZl+mXk+2ZhKzwSDI0pdKsaOWtWuTeF02dELh2vtPkNPbOF4vXZ8ayI2f7zuH3f3e2f8E9fvyRQO3HijxdLTPxJlSqwlajfGqUV+71tnVNlKzmPyG61wsJPLDqm6oqO+IT1rtLgKo65rreEh/3DdPHbV9mR88aqxxpXbkzqVQ6tN771t48ytS8nln/fTHrUX65Q+l8Vv6Aetj4DE74E1TwBlyGxGw2uYq0mmFN/mSvXNFzUBDIpOfrFQt0U2n5JBQTOPIc1oVG4Ty2VHigcKnM9is2pN+sjGOKTJOK+NPjnYq84aB3U3/PuzJgPjja/zpcLsJ+1DjDcbohM2pUG9xT9kjW3JpjbSeh095EiagnU/U/KHGja94V9MtnRpsuJjbrv6e2qNddgXLNiHdHiTTj2UhJS1JWxWuc16JGYnHqRC4nudRrL21oirgtbprTDFi/FLV5cbwnHnPTe+Us+P5zYcKeX4raml/Xj9+Dh+5pJrUssOzAtfwzzOnj9R3OCT4Uvx7j3C25CoVx/H/yLOO5vAFxEeSau19h1ONky1Z+xsFJlCW1yS9vbcWpvM0DIbopP4AwaDJw9btoWYdzDkHvPTBa8nZ03Pxwf7dLbMQtQNfFKk+vxxI52HlyRge8qpEl62x3O8tl/pL1qNYWXfwOMDSU9oJKhXmehBP0Ob4gzrHsAyd4MzhwYGi15uXUBpdqqH9KZeU8yZCWKlJxuwxK90+zXyzu4+VucJaOTyPjfhZHTlzzJl8031ybPPv7NrzIQn5a//f2/g903dtJvnd980NXXzHp7fc/NU/dgCF58/3qgfn4+BLawPT5dZS3pLtrLfUOkPRbXePKuxRjLmoUSwt9Kb2CBPLd2wft0Nu1KpXTesW3/DUsod2XJ0tHZsLhabO1KvHZmPbaMLM0n/5qovk9LZ7H02ruDwDwcNGqdBY0x5EOpoo8mDUqh0LqrOfA9Z1nJy5H1lmCb4ZgpPh9+/QaJnw9RNhJ6bprbeMxubP9ZoHJsHhI5vesSbZ0xh+8Hs+UeSj3gDMc9NZxHg2nT3ztpREf8a0BGnWH+FcWS8XQ98/OPPpr3+5CNE44r449Rt1FdhfiSBT3Oq6iTLRTkjvrFnwMEd0R2/wuaR6LR3OlqZoe7/zW+ilPC9Fx544AVsI2+wx6kwep56GmZkm2gTUmYWNI8nZ/xFa5bCU9DGeMzJRKOMMwbRS79a098pl3d2qXo01HVMJMK4orHygEqj6O/vUvb0KMEfiPmqlavRnTK5uJ6HSWpL7jrZraeOEexnoeRuKFnN/pDv3fl8HuuE8/B9+LfkijAK4Aj+DSWtzzScBg7UBk5mn8x/9BMAvw/qzAqfOCs3Ia/ljCQ5ASstUoJrUOJBfyG5O7g+icj4BeoEVlDPnZnvgGPtWerEdvhDGHhzAh0ibxNJ5aDWJ3btAniMuhB9sQnnDPJYIw/vJGxTrSlheW57KDdKXajaBiV+6hCmW+swjmQI/Uvx3ezMDHXjzIwOFr6EUuoI+jXUIWs/mFo4UQ7gYPVv09EyX8bny/id1P0eiz+X85vEnB5DTaBnqN+C9AxrpNfasiA6CVFwPM56uHmt1aLT2G3Ue92RiNsdDm8xGXQWs95gIqNnqaP4uLjDgHArcGHWhjRYb/M7Qe/lfrmWsVpYt9FklPu7dSx1tVarM8o6bfSQTmcwUp1Wp5H0mqLuw7PUyVYMmQIm3BeJkJIfUjvxMeoVpIEHtrUlIGdbEwdGZrXHQMOOjU7Vrxzs11BfNCvVniEtazAqjYp+NVmdOKlptOuM1e92lbYEq9/hen1YzKPMokMrfydqnyjBT4AAxb3wSbQMI2vWnOqHXwSLe1Zf8HQ5rWy09QKnycRqNEaOvKP5+rIGjVvFCoNmwXOrJtBEnlujw3OP+LyqGxiT51XN7IJa6PX1DWq2uNuFO0nLlj7As0xsGQSZnv+mMu1uybRb47IQmZoNIF/9uWX6XwBWnkHZAAAAAAEAAAAEBqg8ez9yXw889QALA+gAAAAA09xeIwAAAADbK3R2/yj/IARYA6wAAAAGAAIAAAAAAAB42mNgZGBgXvNfjIGBpfG/xr8OlgigCApgFAUAhlgFa3jafdEDrGVZEIXhv+q0bT5dPPu1bdu2GY3CsW3b9gRjt23btm+vtH2SL1V773VQOT6cAv+AUrcS/Bnb4q8xwL8i45yZ6ucT9hGq1+ois5TZwACOXYJUlgRbTxm/X5l2DAimSCER30vGzRS6V3WqMoNkt/onVYeR5CMp7wfpdp2PKV2oCqX8Lgr745Q753YSPUToZoIPVCfQyZNJPWcqaT5Q7+qk/hrWkTifqPN2dGLFlWL7VYtcWJdlfexx7d3vFehk5egavKznt7ugF6k3U6iE6gRlBskE0myY7t+oeVNVu1Hde9L2OpWpGGRT1o5R1hMus12auy1xvoa4IJ84O6a+nep35NmfZPlo6tkX5Hhx9VVI8TBVPURE767tVQl7Dwq8I1H/Qvl3yPA25Hp78rwBNTyLtHO54nqHcuqzbAYplkjYHiYqEbuHanYHifaC5hhFDXtK5y8SOpcrp9wDyj10Re75yzn1SddmeC2WFqQSDuLkOe21oKnXJ45faWHD6MsvtGA93W266ikGc5JB/gnJ585XEbbFeneUNvwrs2nrg6lpMVqcOw+oIwXm9JcCK615SpEUPEgLb6jzj1CVJqRLMxtOujSzfnpfY5pbPZrzj/wm+gZvBcQumMaly/PJ9OrU8UmkBCFCdpDa/gHx3jl2zN5WX5PWNp3myrSyn9Sfop6EbCHtLUZLb0sHn0xPn0FaoP/hr8tAzXaC3KA5eYH4UppaCQrYSl920E/PzEQz22O0AZpIgeRfkCGZEpGGUlc2S/hCLsIa5V7TWtVqErGOZFgHmpxbP6H8Me29RBbAWcn0wEoAAAB42lXBU4DjQAAA0OmkcdPGzibbZM62bdu2bdu2bdu2bdu2777vPQBASlAEVAB1QAvQBQwAY8AMsAf8DmUKjQitDd0OfYYhyEEDIpgDdoSj4DS4CK6Du+Ax+BwLYxKWDiuCVcBGY9Oxxdh6bHfYC6cKdw7PCh/FVbwgPgqfgx/BL+B38Bf4F4Ih0hNliSZEB2I4cYt4Rnwk/pA0qZAeOY28SBFUNWoO9ZFORWejC9Hl6Fp0f/os/YkhGJFxmGRMRiYPU5xpw4xmljAHmG+swyZj67At2C7sAHYM+4h9GykbGRE5wgHO4epw87ij3JcojHJRPRpEs0SrR7tH50VXRbdGz8TUWLPY0dgnPh3fg1/F3+F/C9mFXsI04Ywoi0gcIp6SSCmJ1EBaKR2RfskF5IryJvmHkl4pqwxQDijXVVGtoDZQt6lftbRaSa2vtle7qvN6eb2+vlX/akhGUWOoMdfYaEZM20xlljCrm43NAeYkc5G53Txp3rGilmFVtiZYC6211mHrsnXfem2bdlG7mt3cHmovsTfYe+wT9hX7gxN1XCedU9yp5LR2ejujndn/vZOQKmF2whe3vNvVHeLOdJe5B9wb7msPeJKX2qvqNfFmJBKJE+MwniG+1Bf8lv5of7d/wr/jv/f/BExgBUmDTEH+oGLQKpgQ7A5OBK+CX4hCKVBWlBcVRWVRVVQXtUKdUC+0FC39Bx4FmewAAAB42mNgZGBgFGXIZGBlCGVgAfKQATMDIwAUpgDkeNpEzIEFhVAAheH/vO6LcgWFNEASgABN0RxNExopAWiANEEzhA4BH/iAyEqCQgbsYIua3f5RcNkJI7cd6NTbfxpNdkqr2S4YtLwWRG12+E6VRB12Ra7zaYwcdCQAgiD6/uQQnG3bdpy17f37e2csM5mZruqutDggT4EmJZLESVBhkHlmmfMO8igT9b8nSEar7t8U3xqfJyUTRgV7VP0T5OXL4lGSZCmgyhOUTbJLXC5IUmZaXV40xqTRdTnVmIeo+qjxNd+IzDF5cpiDa4IqolrDf+sRT/9jPipPkpOPmrf6WcWikbPMs8wG19x4j9j4p/1STv3Tdsow+C/uWeQU9OXR+5OzzzzuwFNgnRlPmbBcUlzRnvZ+zC8vG9d/wzGXvBD93t+Z1zziMPc4ZVHuFT7eYlZ42mTBQ3AdAABF0fti+8e28WOztm3b9tR2N7Vt2/bUXLext8l+cg4mANC0ByO0JAMQykuZ8JzhnGUE59hCGOGMJIL/RDKKF7ziNVFEE0Msb3jLO94TRzwJJJLEaIx84CNj+MRWznOBZCpIIZU00sngM18Yy1cyySKbHMrIpYRxTGAi45nMJA7QitZMoQ2ltGUq05nBNNrRng505Bszmc0cmTKLTjKjM13oSjfm0p15LGAh8znIIi7Sg0p60overKUPfVnMUpaxhH70ZwADKecWg2QuC1nygIfsZR+uuGHAHQ888cIbH3xlJWvZyFZ2speDHOUkZ7nIVW4yyF0e8pSXvOUjX/nJXwEKVJCCFaJQhSlcEYpUFHeop4FG7MnnMavxw5HTmHEYC5wJ5hDm2OCPC0WKZjBDyaMAW+y4zCWcFMNJTnGP+zzlCle5xnWeKBZTxSleCUpkBXexVBIr2SUjDlRRzQ0CCSKA7QzjiJKxIgRr1rCK9axjA8sZwj8KlaJUpSldGcpUlrKVo1zlKV8FKlSRilXCRv7ynU0U85M//FAzE2TQkzAQROFEtbBGr/4MUhawcmyRkzfCndB2ChvbHbNsi/HXyzwmkUP7vpl5eS/ZdZKXgQYybtJy1W43n6Peu9TOsvtm1zxevp3Dvx39UuBJ2yTsSSSeZRrHYyCZRw33AeoG3E/uR+6nS7gXIHc4RjF4hwCDvNpzN5ZEgGQKPCEVaJALQjJ8kg3fNR2IfKBBAwgdvu8COgTQIaAdgugAoQOEDgHtAKIDiA4Q3istlqpWdSZq02z++k3BcV2RjxSoxjOv8u3Vln9cbanVOdV5qVrcrTYP6z4wZjtdaPwi6ZzvIyUnqtjX2M7Sd9XMHMJ+uFy60uyrPoL0ZlXfVHMTXVvfOuYvR+avfcnDzXZqn2uOJbV8/l/aDGqLlWrx8De/UB8fAD1DLGAAAA==) format("woff");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}', Ym = "/contextlines";
var Vm = {
    exports: {}
}, Kn = {}, Wm = {
    exports: {}
}, jm = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function(e) {
    function t(x, X) {
        var J = x.length;
        x.push(X);
        e: for(; 0 < J;){
            var le = J - 1 >>> 1, pe = x[le];
            if (0 < s(pe, X)) x[le] = X, x[J] = pe, J = le;
            else break e;
        }
    }
    function n(x) {
        return x.length === 0 ? null : x[0];
    }
    function r(x) {
        if (x.length === 0) return null;
        var X = x[0], J = x.pop();
        if (J !== X) {
            x[0] = J;
            e: for(var le = 0, pe = x.length, ve = pe >>> 1; le < ve;){
                var be = 2 * (le + 1) - 1, Xe = x[be], et = be + 1, Be = x[et];
                if (0 > s(Xe, J)) et < pe && 0 > s(Be, Xe) ? (x[le] = Be, x[et] = J, le = et) : (x[le] = Xe, x[be] = J, le = be);
                else if (et < pe && 0 > s(Be, J)) x[le] = Be, x[et] = J, le = et;
                else break e;
            }
        }
        return X;
    }
    function s(x, X) {
        var J = x.sortIndex - X.sortIndex;
        return J !== 0 ? J : x.id - X.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
        var i = performance;
        e.unstable_now = function() {
            return i.now();
        };
    } else {
        var a = Date, o = a.now();
        e.unstable_now = function() {
            return a.now() - o;
        };
    }
    var l = [], c = [], u = 1, E = null, p = 3, A = !1, R = !1, C = !1, O = typeof setTimeout == "function" ? setTimeout : null, d = typeof clearTimeout == "function" ? clearTimeout : null, f = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function _(x) {
        for(var X = n(c); X !== null;){
            if (X.callback === null) r(c);
            else if (X.startTime <= x) r(c), X.sortIndex = X.expirationTime, t(l, X);
            else break;
            X = n(c);
        }
    }
    function h(x) {
        if (C = !1, _(x), !R) if (n(l) !== null) R = !0, H(I);
        else {
            var X = n(c);
            X !== null && F(h, X.startTime - x);
        }
    }
    function I(x, X) {
        R = !1, C && (C = !1, d(g), g = -1), A = !0;
        var J = p;
        try {
            for(_(X), E = n(l); E !== null && (!(E.expirationTime > X) || x && !P());){
                var le = E.callback;
                if (typeof le == "function") {
                    E.callback = null, p = E.priorityLevel;
                    var pe = le(E.expirationTime <= X);
                    X = e.unstable_now(), typeof pe == "function" ? E.callback = pe : E === n(l) && r(l), _(X);
                } else r(l);
                E = n(l);
            }
            if (E !== null) var ve = !0;
            else {
                var be = n(c);
                be !== null && F(h, be.startTime - X), ve = !1;
            }
            return ve;
        } finally{
            E = null, p = J, A = !1;
        }
    }
    var T = !1, N = null, g = -1, b = 5, S = -1;
    function P() {
        return !(e.unstable_now() - S < b);
    }
    function w() {
        if (N !== null) {
            var x = e.unstable_now();
            S = x;
            var X = !0;
            try {
                X = N(!0, x);
            } finally{
                X ? G() : (T = !1, N = null);
            }
        } else T = !1;
    }
    var G;
    if (typeof f == "function") G = function() {
        f(w);
    };
    else if (typeof MessageChannel < "u") {
        var k = new MessageChannel(), Y = k.port2;
        k.port1.onmessage = w, G = function() {
            Y.postMessage(null);
        };
    } else G = function() {
        O(w, 0);
    };
    function H(x) {
        N = x, T || (T = !0, G());
    }
    function F(x, X) {
        g = O(function() {
            x(e.unstable_now());
        }, X);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(x) {
        x.callback = null;
    }, e.unstable_continueExecution = function() {
        R || A || (R = !0, H(I));
    }, e.unstable_forceFrameRate = function(x) {
        0 > x || 125 < x ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : b = 0 < x ? Math.floor(1e3 / x) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
        return p;
    }, e.unstable_getFirstCallbackNode = function() {
        return n(l);
    }, e.unstable_next = function(x) {
        switch(p){
            case 1:
            case 2:
            case 3:
                var X = 3;
                break;
            default:
                X = p;
        }
        var J = p;
        p = X;
        try {
            return x();
        } finally{
            p = J;
        }
    }, e.unstable_pauseExecution = function() {}, e.unstable_requestPaint = function() {}, e.unstable_runWithPriority = function(x, X) {
        switch(x){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                x = 3;
        }
        var J = p;
        p = x;
        try {
            return X();
        } finally{
            p = J;
        }
    }, e.unstable_scheduleCallback = function(x, X, J) {
        var le = e.unstable_now();
        switch(typeof J == "object" && J !== null ? (J = J.delay, J = typeof J == "number" && 0 < J ? le + J : le) : J = le, x){
            case 1:
                var pe = -1;
                break;
            case 2:
                pe = 250;
                break;
            case 5:
                pe = 1073741823;
                break;
            case 4:
                pe = 1e4;
                break;
            default:
                pe = 5e3;
        }
        return pe = J + pe, x = {
            id: u++,
            callback: X,
            priorityLevel: x,
            startTime: J,
            expirationTime: pe,
            sortIndex: -1
        }, J > le ? (x.sortIndex = J, t(c, x), n(l) === null && x === n(c) && (C ? (d(g), g = -1) : C = !0, F(h, J - le))) : (x.sortIndex = pe, t(l, x), R || A || (R = !0, H(I))), x;
    }, e.unstable_shouldYield = P, e.unstable_wrapCallback = function(x) {
        var X = p;
        return function() {
            var J = p;
            p = X;
            try {
                return x.apply(this, arguments);
            } finally{
                p = J;
            }
        };
    };
})(jm);
Wm.exports = jm;
var JL = Wm.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var qL = L, Xn = JL;
function ee(e) {
    for(var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)t += "&args[]=" + encodeURIComponent(arguments[n]);
    return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var Xm = /* @__PURE__ */ new Set(), sl = {};
function Ki(e, t) {
    Ba(e, t), Ba(e + "Capture", t);
}
function Ba(e, t) {
    for(sl[e] = t, e = 0; e < t.length; e++)Xm.add(t[e]);
}
var is = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), Zf = Object.prototype.hasOwnProperty, ZL = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, n0 = {}, r0 = {};
function QL(e) {
    return Zf.call(r0, e) ? !0 : Zf.call(n0, e) ? !1 : ZL.test(e) ? r0[e] = !0 : (n0[e] = !0, !1);
}
function $L(e, t, n, r) {
    if (n !== null && n.type === 0) return !1;
    switch(typeof t){
        case "function":
        case "symbol":
            return !0;
        case "boolean":
            return r ? !1 : n !== null ? !n.acceptsBooleans : (e = e.toLowerCase().slice(0, 5), e !== "data-" && e !== "aria-");
        default:
            return !1;
    }
}
function e2(e, t, n, r) {
    if (t === null || typeof t > "u" || $L(e, t, n, r)) return !0;
    if (r) return !1;
    if (n !== null) switch(n.type){
        case 3:
            return !t;
        case 4:
            return t === !1;
        case 5:
            return isNaN(t);
        case 6:
            return isNaN(t) || 1 > t;
    }
    return !1;
}
function mn(e, t, n, r, s, i, a) {
    this.acceptsBooleans = t === 2 || t === 3 || t === 4, this.attributeName = r, this.attributeNamespace = s, this.mustUseProperty = n, this.propertyName = e, this.type = t, this.sanitizeURL = i, this.removeEmptyString = a;
}
var Qt = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e) {
    Qt[e] = new mn(e, 0, !1, e, null, !1, !1);
});
[
    [
        "acceptCharset",
        "accept-charset"
    ],
    [
        "className",
        "class"
    ],
    [
        "htmlFor",
        "for"
    ],
    [
        "httpEquiv",
        "http-equiv"
    ]
].forEach(function(e) {
    var t = e[0];
    Qt[t] = new mn(t, 1, !1, e[1], null, !1, !1);
});
[
    "contentEditable",
    "draggable",
    "spellCheck",
    "value"
].forEach(function(e) {
    Qt[e] = new mn(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
[
    "autoReverse",
    "externalResourcesRequired",
    "focusable",
    "preserveAlpha"
].forEach(function(e) {
    Qt[e] = new mn(e, 2, !1, e, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e) {
    Qt[e] = new mn(e, 3, !1, e.toLowerCase(), null, !1, !1);
});
[
    "checked",
    "multiple",
    "muted",
    "selected"
].forEach(function(e) {
    Qt[e] = new mn(e, 3, !0, e, null, !1, !1);
});
[
    "capture",
    "download"
].forEach(function(e) {
    Qt[e] = new mn(e, 4, !1, e, null, !1, !1);
});
[
    "cols",
    "rows",
    "size",
    "span"
].forEach(function(e) {
    Qt[e] = new mn(e, 6, !1, e, null, !1, !1);
});
[
    "rowSpan",
    "start"
].forEach(function(e) {
    Qt[e] = new mn(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var GT = /[\-:]([a-z])/g;
function kT(e) {
    return e[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e) {
    var t = e.replace(GT, kT);
    Qt[t] = new mn(t, 1, !1, e, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e) {
    var t = e.replace(GT, kT);
    Qt[t] = new mn(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
});
[
    "xml:base",
    "xml:lang",
    "xml:space"
].forEach(function(e) {
    var t = e.replace(GT, kT);
    Qt[t] = new mn(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
[
    "tabIndex",
    "crossOrigin"
].forEach(function(e) {
    Qt[e] = new mn(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
Qt.xlinkHref = new mn("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
[
    "src",
    "href",
    "action",
    "formAction"
].forEach(function(e) {
    Qt[e] = new mn(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function HT(e, t, n, r) {
    var s = Qt.hasOwnProperty(t) ? Qt[t] : null;
    (s !== null ? s.type !== 0 : r || !(2 < t.length) || t[0] !== "o" && t[0] !== "O" || t[1] !== "n" && t[1] !== "N") && (e2(t, n, s, r) && (n = null), r || s === null ? QL(t) && (n === null ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : s.mustUseProperty ? e[s.propertyName] = n === null ? s.type === 3 ? !1 : "" : n : (t = s.attributeName, r = s.attributeNamespace, n === null ? e.removeAttribute(t) : (s = s.type, n = s === 3 || s === 4 && n === !0 ? "" : "" + n, r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
}
var hs = qL.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, pc = Symbol.for("react.element"), Ea = Symbol.for("react.portal"), da = Symbol.for("react.fragment"), YT = Symbol.for("react.strict_mode"), Qf = Symbol.for("react.profiler"), Km = Symbol.for("react.provider"), zm = Symbol.for("react.context"), VT = Symbol.for("react.forward_ref"), $f = Symbol.for("react.suspense"), ep = Symbol.for("react.suspense_list"), WT = Symbol.for("react.memo"), gs = Symbol.for("react.lazy"), Jm = Symbol.for("react.offscreen"), s0 = Symbol.iterator;
function Io(e) {
    return e === null || typeof e != "object" ? null : (e = s0 && e[s0] || e["@@iterator"], typeof e == "function" ? e : null);
}
var ct = Object.assign, Md;
function Bo(e) {
    if (Md === void 0) try {
        throw Error();
    } catch (n) {
        var t = n.stack.trim().match(/\n( *(at )?)/);
        Md = t && t[1] || "";
    }
    return `
` + Md + e;
}
var Dd = !1;
function wd(e, t) {
    if (!e || Dd) return "";
    Dd = !0;
    var n = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
        if (t) if (t = function() {
            throw Error();
        }, Object.defineProperty(t.prototype, "props", {
            set: function() {
                throw Error();
            }
        }), typeof Reflect == "object" && Reflect.construct) {
            try {
                Reflect.construct(t, []);
            } catch (c) {
                var r = c;
            }
            Reflect.construct(e, [], t);
        } else {
            try {
                t.call();
            } catch (c) {
                r = c;
            }
            e.call(t.prototype);
        }
        else {
            try {
                throw Error();
            } catch (c) {
                r = c;
            }
            e();
        }
    } catch (c) {
        if (c && r && typeof c.stack == "string") {
            for(var s = c.stack.split(`
`), i = r.stack.split(`
`), a = s.length - 1, o = i.length - 1; 1 <= a && 0 <= o && s[a] !== i[o];)o--;
            for(; 1 <= a && 0 <= o; a--, o--)if (s[a] !== i[o]) {
                if (a !== 1 || o !== 1) do if (a--, o--, 0 > o || s[a] !== i[o]) {
                    var l = `
` + s[a].replace(" at new ", " at ");
                    return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)), l;
                }
                while (1 <= a && 0 <= o)
                break;
            }
        }
    } finally{
        Dd = !1, Error.prepareStackTrace = n;
    }
    return (e = e ? e.displayName || e.name : "") ? Bo(e) : "";
}
function t2(e) {
    switch(e.tag){
        case 5:
            return Bo(e.type);
        case 16:
            return Bo("Lazy");
        case 13:
            return Bo("Suspense");
        case 19:
            return Bo("SuspenseList");
        case 0:
        case 2:
        case 15:
            return e = wd(e.type, !1), e;
        case 11:
            return e = wd(e.type.render, !1), e;
        case 1:
            return e = wd(e.type, !0), e;
        default:
            return "";
    }
}
function tp(e) {
    if (e == null) return null;
    if (typeof e == "function") return e.displayName || e.name || null;
    if (typeof e == "string") return e;
    switch(e){
        case da:
            return "Fragment";
        case Ea:
            return "Portal";
        case Qf:
            return "Profiler";
        case YT:
            return "StrictMode";
        case $f:
            return "Suspense";
        case ep:
            return "SuspenseList";
    }
    if (typeof e == "object") switch(e.$$typeof){
        case zm:
            return (e.displayName || "Context") + ".Consumer";
        case Km:
            return (e._context.displayName || "Context") + ".Provider";
        case VT:
            var t = e.render;
            return e = e.displayName, e || (e = t.displayName || t.name || "", e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef"), e;
        case WT:
            return t = e.displayName || null, t !== null ? t : tp(e.type) || "Memo";
        case gs:
            t = e._payload, e = e._init;
            try {
                return tp(e(t));
            } catch  {}
    }
    return null;
}
function n2(e) {
    var t = e.type;
    switch(e.tag){
        case 24:
            return "Cache";
        case 9:
            return (t.displayName || "Context") + ".Consumer";
        case 10:
            return (t._context.displayName || "Context") + ".Provider";
        case 18:
            return "DehydratedFragment";
        case 11:
            return e = t.render, e = e.displayName || e.name || "", t.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef");
        case 7:
            return "Fragment";
        case 5:
            return t;
        case 4:
            return "Portal";
        case 3:
            return "Root";
        case 6:
            return "Text";
        case 16:
            return tp(t);
        case 8:
            return t === YT ? "StrictMode" : "Mode";
        case 22:
            return "Offscreen";
        case 12:
            return "Profiler";
        case 21:
            return "Scope";
        case 13:
            return "Suspense";
        case 19:
            return "SuspenseList";
        case 25:
            return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
            if (typeof t == "function") return t.displayName || t.name || null;
            if (typeof t == "string") return t;
    }
    return null;
}
function ei(e) {
    switch(typeof e){
        case "boolean":
        case "number":
        case "string":
        case "undefined":
            return e;
        case "object":
            return e;
        default:
            return "";
    }
}
function qm(e) {
    var t = e.type;
    return (e = e.nodeName) && e.toLowerCase() === "input" && (t === "checkbox" || t === "radio");
}
function r2(e) {
    var t = qm(e) ? "checked" : "value", n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t), r = "" + e[t];
    if (!e.hasOwnProperty(t) && typeof n < "u" && typeof n.get == "function" && typeof n.set == "function") {
        var s = n.get, i = n.set;
        return Object.defineProperty(e, t, {
            configurable: !0,
            get: function() {
                return s.call(this);
            },
            set: function(a) {
                r = "" + a, i.call(this, a);
            }
        }), Object.defineProperty(e, t, {
            enumerable: n.enumerable
        }), {
            getValue: function() {
                return r;
            },
            setValue: function(a) {
                r = "" + a;
            },
            stopTracking: function() {
                e._valueTracker = null, delete e[t];
            }
        };
    }
}
function Tc(e) {
    e._valueTracker || (e._valueTracker = r2(e));
}
function Zm(e) {
    if (!e) return !1;
    var t = e._valueTracker;
    if (!t) return !0;
    var n = t.getValue(), r = "";
    return e && (r = qm(e) ? e.checked ? "true" : "false" : e.value), e = r, e !== n ? (t.setValue(e), !0) : !1;
}
function Cu(e) {
    if (e = e || (typeof document < "u" ? document : void 0), typeof e > "u") return null;
    try {
        return e.activeElement || e.body;
    } catch  {
        return e.body;
    }
}
function np(e, t) {
    var n = t.checked;
    return ct({}, t, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: n ?? e._wrapperState.initialChecked
    });
}
function i0(e, t) {
    var n = t.defaultValue == null ? "" : t.defaultValue, r = t.checked != null ? t.checked : t.defaultChecked;
    n = ei(t.value != null ? t.value : n), e._wrapperState = {
        initialChecked: r,
        initialValue: n,
        controlled: t.type === "checkbox" || t.type === "radio" ? t.checked != null : t.value != null
    };
}
function Qm(e, t) {
    t = t.checked, t != null && HT(e, "checked", t, !1);
}
function rp(e, t) {
    Qm(e, t);
    var n = ei(t.value), r = t.type;
    if (n != null) r === "number" ? (n === 0 && e.value === "" || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
    else if (r === "submit" || r === "reset") {
        e.removeAttribute("value");
        return;
    }
    t.hasOwnProperty("value") ? sp(e, t.type, n) : t.hasOwnProperty("defaultValue") && sp(e, t.type, ei(t.defaultValue)), t.checked == null && t.defaultChecked != null && (e.defaultChecked = !!t.defaultChecked);
}
function a0(e, t, n) {
    if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
        var r = t.type;
        if (!(r !== "submit" && r !== "reset" || t.value !== void 0 && t.value !== null)) return;
        t = "" + e._wrapperState.initialValue, n || t === e.value || (e.value = t), e.defaultValue = t;
    }
    n = e.name, n !== "" && (e.name = ""), e.defaultChecked = !!e._wrapperState.initialChecked, n !== "" && (e.name = n);
}
function sp(e, t, n) {
    (t !== "number" || Cu(e.ownerDocument) !== e) && (n == null ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
}
var Go = Array.isArray;
function La(e, t, n, r) {
    if (e = e.options, t) {
        t = {};
        for(var s = 0; s < n.length; s++)t["$" + n[s]] = !0;
        for(n = 0; n < e.length; n++)s = t.hasOwnProperty("$" + e[n].value), e[n].selected !== s && (e[n].selected = s), s && r && (e[n].defaultSelected = !0);
    } else {
        for(n = "" + ei(n), t = null, s = 0; s < e.length; s++){
            if (e[s].value === n) {
                e[s].selected = !0, r && (e[s].defaultSelected = !0);
                return;
            }
            t !== null || e[s].disabled || (t = e[s]);
        }
        t !== null && (t.selected = !0);
    }
}
function ip(e, t) {
    if (t.dangerouslySetInnerHTML != null) throw Error(ee(91));
    return ct({}, t, {
        value: void 0,
        defaultValue: void 0,
        children: "" + e._wrapperState.initialValue
    });
}
function o0(e, t) {
    var n = t.value;
    if (n == null) {
        if (n = t.children, t = t.defaultValue, n != null) {
            if (t != null) throw Error(ee(92));
            if (Go(n)) {
                if (1 < n.length) throw Error(ee(93));
                n = n[0];
            }
            t = n;
        }
        t == null && (t = ""), n = t;
    }
    e._wrapperState = {
        initialValue: ei(n)
    };
}
function $m(e, t) {
    var n = ei(t.value), r = ei(t.defaultValue);
    n != null && (n = "" + n, n !== e.value && (e.value = n), t.defaultValue == null && e.defaultValue !== n && (e.defaultValue = n)), r != null && (e.defaultValue = "" + r);
}
function l0(e) {
    var t = e.textContent;
    t === e._wrapperState.initialValue && t !== "" && t !== null && (e.value = t);
}
function e_(e) {
    switch(e){
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml";
    }
}
function ap(e, t) {
    return e == null || e === "http://www.w3.org/1999/xhtml" ? e_(t) : e === "http://www.w3.org/2000/svg" && t === "foreignObject" ? "http://www.w3.org/1999/xhtml" : e;
}
var hc, t_ = function(e) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(t, n, r, s) {
        MSApp.execUnsafeLocalFunction(function() {
            return e(t, n, r, s);
        });
    } : e;
}(function(e, t) {
    if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in e) e.innerHTML = t;
    else {
        for(hc = hc || document.createElement("div"), hc.innerHTML = "<svg>" + t.valueOf().toString() + "</svg>", t = hc.firstChild; e.firstChild;)e.removeChild(e.firstChild);
        for(; t.firstChild;)e.appendChild(t.firstChild);
    }
});
function il(e, t) {
    if (t) {
        var n = e.firstChild;
        if (n && n === e.lastChild && n.nodeType === 3) {
            n.nodeValue = t;
            return;
        }
    }
    e.textContent = t;
}
var Yo = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
}, s2 = [
    "Webkit",
    "ms",
    "Moz",
    "O"
];
Object.keys(Yo).forEach(function(e) {
    s2.forEach(function(t) {
        t = t + e.charAt(0).toUpperCase() + e.substring(1), Yo[t] = Yo[e];
    });
});
function n_(e, t, n) {
    return t == null || typeof t == "boolean" || t === "" ? "" : n || typeof t != "number" || t === 0 || Yo.hasOwnProperty(e) && Yo[e] ? ("" + t).trim() : t + "px";
}
function r_(e, t) {
    e = e.style;
    for(var n in t)if (t.hasOwnProperty(n)) {
        var r = n.indexOf("--") === 0, s = n_(n, t[n], r);
        n === "float" && (n = "cssFloat"), r ? e.setProperty(n, s) : e[n] = s;
    }
}
var i2 = ct({
    menuitem: !0
}, {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
});
function op(e, t) {
    if (t) {
        if (i2[e] && (t.children != null || t.dangerouslySetInnerHTML != null)) throw Error(ee(137, e));
        if (t.dangerouslySetInnerHTML != null) {
            if (t.children != null) throw Error(ee(60));
            if (typeof t.dangerouslySetInnerHTML != "object" || !("__html" in t.dangerouslySetInnerHTML)) throw Error(ee(61));
        }
        if (t.style != null && typeof t.style != "object") throw Error(ee(62));
    }
}
function lp(e, t) {
    if (e.indexOf("-") === -1) return typeof t.is == "string";
    switch(e){
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0;
    }
}
var cp = null;
function jT(e) {
    return e = e.target || e.srcElement || window, e.correspondingUseElement && (e = e.correspondingUseElement), e.nodeType === 3 ? e.parentNode : e;
}
var up = null, ya = null, va = null;
function c0(e) {
    if (e = Fl(e)) {
        if (typeof up != "function") throw Error(ee(280));
        var t = e.stateNode;
        t && (t = LE(t), up(e.stateNode, e.type, t));
    }
}
function s_(e) {
    ya ? va ? va.push(e) : va = [
        e
    ] : ya = e;
}
function i_() {
    if (ya) {
        var e = ya, t = va;
        if (va = ya = null, c0(e), t) for(e = 0; e < t.length; e++)c0(t[e]);
    }
}
function a_(e, t) {
    return e(t);
}
function o_() {}
var xd = !1;
function l_(e, t, n) {
    if (xd) return e(t, n);
    xd = !0;
    try {
        return a_(e, t, n);
    } finally{
        xd = !1, (ya !== null || va !== null) && (o_(), i_());
    }
}
function al(e, t) {
    var n = e.stateNode;
    if (n === null) return null;
    var r = LE(n);
    if (r === null) return null;
    n = r[t];
    e: switch(t){
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (r = !r.disabled) || (e = e.type, r = !(e === "button" || e === "input" || e === "select" || e === "textarea")), e = !r;
            break e;
        default:
            e = !1;
    }
    if (e) return null;
    if (n && typeof n != "function") throw Error(ee(231, t, typeof n));
    return n;
}
var Ep = !1;
if (is) try {
    var Oo = {};
    Object.defineProperty(Oo, "passive", {
        get: function() {
            Ep = !0;
        }
    }), window.addEventListener("test", Oo, Oo), window.removeEventListener("test", Oo, Oo);
} catch  {
    Ep = !1;
}
function a2(e, t, n, r, s, i, a, o, l) {
    var c = Array.prototype.slice.call(arguments, 3);
    try {
        t.apply(n, c);
    } catch (u) {
        this.onError(u);
    }
}
var Vo = !1, gu = null, Lu = !1, dp = null, o2 = {
    onError: function(e) {
        Vo = !0, gu = e;
    }
};
function l2(e, t, n, r, s, i, a, o, l) {
    Vo = !1, gu = null, a2.apply(o2, arguments);
}
function c2(e, t, n, r, s, i, a, o, l) {
    if (l2.apply(this, arguments), Vo) {
        if (Vo) {
            var c = gu;
            Vo = !1, gu = null;
        } else throw Error(ee(198));
        Lu || (Lu = !0, dp = c);
    }
}
function zi(e) {
    var t = e, n = e;
    if (e.alternate) for(; t.return;)t = t.return;
    else {
        e = t;
        do t = e, t.flags & 4098 && (n = t.return), e = t.return;
        while (e)
    }
    return t.tag === 3 ? n : null;
}
function c_(e) {
    if (e.tag === 13) {
        var t = e.memoizedState;
        if (t === null && (e = e.alternate, e !== null && (t = e.memoizedState)), t !== null) return t.dehydrated;
    }
    return null;
}
function u0(e) {
    if (zi(e) !== e) throw Error(ee(188));
}
function u2(e) {
    var t = e.alternate;
    if (!t) {
        if (t = zi(e), t === null) throw Error(ee(188));
        return t !== e ? null : e;
    }
    for(var n = e, r = t;;){
        var s = n.return;
        if (s === null) break;
        var i = s.alternate;
        if (i === null) {
            if (r = s.return, r !== null) {
                n = r;
                continue;
            }
            break;
        }
        if (s.child === i.child) {
            for(i = s.child; i;){
                if (i === n) return u0(s), e;
                if (i === r) return u0(s), t;
                i = i.sibling;
            }
            throw Error(ee(188));
        }
        if (n.return !== r.return) n = s, r = i;
        else {
            for(var a = !1, o = s.child; o;){
                if (o === n) {
                    a = !0, n = s, r = i;
                    break;
                }
                if (o === r) {
                    a = !0, r = s, n = i;
                    break;
                }
                o = o.sibling;
            }
            if (!a) {
                for(o = i.child; o;){
                    if (o === n) {
                        a = !0, n = i, r = s;
                        break;
                    }
                    if (o === r) {
                        a = !0, r = i, n = s;
                        break;
                    }
                    o = o.sibling;
                }
                if (!a) throw Error(ee(189));
            }
        }
        if (n.alternate !== r) throw Error(ee(190));
    }
    if (n.tag !== 3) throw Error(ee(188));
    return n.stateNode.current === n ? e : t;
}
function u_(e) {
    return e = u2(e), e !== null ? E_(e) : null;
}
function E_(e) {
    if (e.tag === 5 || e.tag === 6) return e;
    for(e = e.child; e !== null;){
        var t = E_(e);
        if (t !== null) return t;
        e = e.sibling;
    }
    return null;
}
var d_ = Xn.unstable_scheduleCallback, E0 = Xn.unstable_cancelCallback, E2 = Xn.unstable_shouldYield, d2 = Xn.unstable_requestPaint, St = Xn.unstable_now, f2 = Xn.unstable_getCurrentPriorityLevel, XT = Xn.unstable_ImmediatePriority, f_ = Xn.unstable_UserBlockingPriority, yu = Xn.unstable_NormalPriority, p2 = Xn.unstable_LowPriority, p_ = Xn.unstable_IdlePriority, IE = null, Gr = null;
function T2(e) {
    if (Gr && typeof Gr.onCommitFiberRoot == "function") try {
        Gr.onCommitFiberRoot(IE, e, void 0, (e.current.flags & 128) === 128);
    } catch  {}
}
var Rr = Math.clz32 ? Math.clz32 : S2, h2 = Math.log, A2 = Math.LN2;
function S2(e) {
    return e >>>= 0, e === 0 ? 32 : 31 - (h2(e) / A2 | 0) | 0;
}
var Ac = 64, Sc = 4194304;
function ko(e) {
    switch(e & -e){
        case 1:
            return 1;
        case 2:
            return 2;
        case 4:
            return 4;
        case 8:
            return 8;
        case 16:
            return 16;
        case 32:
            return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return e & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return e & 130023424;
        case 134217728:
            return 134217728;
        case 268435456:
            return 268435456;
        case 536870912:
            return 536870912;
        case 1073741824:
            return 1073741824;
        default:
            return e;
    }
}
function vu(e, t) {
    var n = e.pendingLanes;
    if (n === 0) return 0;
    var r = 0, s = e.suspendedLanes, i = e.pingedLanes, a = n & 268435455;
    if (a !== 0) {
        var o = a & ~s;
        o !== 0 ? r = ko(o) : (i &= a, i !== 0 && (r = ko(i)));
    } else a = n & ~s, a !== 0 ? r = ko(a) : i !== 0 && (r = ko(i));
    if (r === 0) return 0;
    if (t !== 0 && t !== r && !(t & s) && (s = r & -r, i = t & -t, s >= i || s === 16 && (i & 4194240) !== 0)) return t;
    if (r & 4 && (r |= n & 16), t = e.entangledLanes, t !== 0) for(e = e.entanglements, t &= r; 0 < t;)n = 31 - Rr(t), s = 1 << n, r |= e[n], t &= ~s;
    return r;
}
function R2(e, t) {
    switch(e){
        case 1:
        case 2:
        case 4:
            return t + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
            return t + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
            return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
            return -1;
        default:
            return -1;
    }
}
function m2(e, t) {
    for(var n = e.suspendedLanes, r = e.pingedLanes, s = e.expirationTimes, i = e.pendingLanes; 0 < i;){
        var a = 31 - Rr(i), o = 1 << a, l = s[a];
        l === -1 ? (!(o & n) || o & r) && (s[a] = R2(o, t)) : l <= t && (e.expiredLanes |= o), i &= ~o;
    }
}
function fp(e) {
    return e = e.pendingLanes & -1073741825, e !== 0 ? e : e & 1073741824 ? 1073741824 : 0;
}
function T_() {
    var e = Ac;
    return Ac <<= 1, !(Ac & 4194240) && (Ac = 64), e;
}
function Ud(e) {
    for(var t = [], n = 0; 31 > n; n++)t.push(e);
    return t;
}
function xl(e, t, n) {
    e.pendingLanes |= t, t !== 536870912 && (e.suspendedLanes = 0, e.pingedLanes = 0), e = e.eventTimes, t = 31 - Rr(t), e[t] = n;
}
function _2(e, t) {
    var n = e.pendingLanes & ~t;
    e.pendingLanes = t, e.suspendedLanes = 0, e.pingedLanes = 0, e.expiredLanes &= t, e.mutableReadLanes &= t, e.entangledLanes &= t, t = e.entanglements;
    var r = e.eventTimes;
    for(e = e.expirationTimes; 0 < n;){
        var s = 31 - Rr(n), i = 1 << s;
        t[s] = 0, r[s] = -1, e[s] = -1, n &= ~i;
    }
}
function KT(e, t) {
    var n = e.entangledLanes |= t;
    for(e = e.entanglements; n;){
        var r = 31 - Rr(n), s = 1 << r;
        s & t | e[r] & t && (e[r] |= t), n &= ~s;
    }
}
var je = 0;
function h_(e) {
    return e &= -e, 1 < e ? 4 < e ? e & 268435455 ? 16 : 536870912 : 4 : 1;
}
var A_, zT, S_, R_, m_, pp = !1, Rc = [], Gs = null, ks = null, Hs = null, ol = /* @__PURE__ */ new Map(), ll = /* @__PURE__ */ new Map(), Ds = [], N2 = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function d0(e, t) {
    switch(e){
        case "focusin":
        case "focusout":
            Gs = null;
            break;
        case "dragenter":
        case "dragleave":
            ks = null;
            break;
        case "mouseover":
        case "mouseout":
            Hs = null;
            break;
        case "pointerover":
        case "pointerout":
            ol.delete(t.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            ll.delete(t.pointerId);
    }
}
function Co(e, t, n, r, s, i) {
    return e === null || e.nativeEvent !== i ? (e = {
        blockedOn: t,
        domEventName: n,
        eventSystemFlags: r,
        nativeEvent: i,
        targetContainers: [
            s
        ]
    }, t !== null && (t = Fl(t), t !== null && zT(t)), e) : (e.eventSystemFlags |= r, t = e.targetContainers, s !== null && t.indexOf(s) === -1 && t.push(s), e);
}
function I2(e, t, n, r, s) {
    switch(t){
        case "focusin":
            return Gs = Co(Gs, e, t, n, r, s), !0;
        case "dragenter":
            return ks = Co(ks, e, t, n, r, s), !0;
        case "mouseover":
            return Hs = Co(Hs, e, t, n, r, s), !0;
        case "pointerover":
            var i = s.pointerId;
            return ol.set(i, Co(ol.get(i) || null, e, t, n, r, s)), !0;
        case "gotpointercapture":
            return i = s.pointerId, ll.set(i, Co(ll.get(i) || null, e, t, n, r, s)), !0;
    }
    return !1;
}
function __(e) {
    var t = Oi(e.target);
    if (t !== null) {
        var n = zi(t);
        if (n !== null) {
            if (t = n.tag, t === 13) {
                if (t = c_(n), t !== null) {
                    e.blockedOn = t, m_(e.priority, function() {
                        S_(n);
                    });
                    return;
                }
            } else if (t === 3 && n.stateNode.current.memoizedState.isDehydrated) {
                e.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
                return;
            }
        }
    }
    e.blockedOn = null;
}
function tu(e) {
    if (e.blockedOn !== null) return !1;
    for(var t = e.targetContainers; 0 < t.length;){
        var n = Tp(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
        if (n === null) {
            n = e.nativeEvent;
            var r = new n.constructor(n.type, n);
            cp = r, n.target.dispatchEvent(r), cp = null;
        } else return t = Fl(n), t !== null && zT(t), e.blockedOn = n, !1;
        t.shift();
    }
    return !0;
}
function f0(e, t, n) {
    tu(e) && n.delete(t);
}
function O2() {
    pp = !1, Gs !== null && tu(Gs) && (Gs = null), ks !== null && tu(ks) && (ks = null), Hs !== null && tu(Hs) && (Hs = null), ol.forEach(f0), ll.forEach(f0);
}
function go(e, t) {
    e.blockedOn === t && (e.blockedOn = null, pp || (pp = !0, Xn.unstable_scheduleCallback(Xn.unstable_NormalPriority, O2)));
}
function cl(e) {
    function t(s) {
        return go(s, e);
    }
    if (0 < Rc.length) {
        go(Rc[0], e);
        for(var n = 1; n < Rc.length; n++){
            var r = Rc[n];
            r.blockedOn === e && (r.blockedOn = null);
        }
    }
    for(Gs !== null && go(Gs, e), ks !== null && go(ks, e), Hs !== null && go(Hs, e), ol.forEach(t), ll.forEach(t), n = 0; n < Ds.length; n++)r = Ds[n], r.blockedOn === e && (r.blockedOn = null);
    for(; 0 < Ds.length && (n = Ds[0], n.blockedOn === null);)__(n), n.blockedOn === null && Ds.shift();
}
var ba = hs.ReactCurrentBatchConfig, bu = !0;
function C2(e, t, n, r) {
    var s = je, i = ba.transition;
    ba.transition = null;
    try {
        je = 1, JT(e, t, n, r);
    } finally{
        je = s, ba.transition = i;
    }
}
function g2(e, t, n, r) {
    var s = je, i = ba.transition;
    ba.transition = null;
    try {
        je = 4, JT(e, t, n, r);
    } finally{
        je = s, ba.transition = i;
    }
}
function JT(e, t, n, r) {
    if (bu) {
        var s = Tp(e, t, n, r);
        if (s === null) Xd(e, t, r, Pu, n), d0(e, r);
        else if (I2(s, e, t, n, r)) r.stopPropagation();
        else if (d0(e, r), t & 4 && -1 < N2.indexOf(e)) {
            for(; s !== null;){
                var i = Fl(s);
                if (i !== null && A_(i), i = Tp(e, t, n, r), i === null && Xd(e, t, r, Pu, n), i === s) break;
                s = i;
            }
            s !== null && r.stopPropagation();
        } else Xd(e, t, r, null, n);
    }
}
var Pu = null;
function Tp(e, t, n, r) {
    if (Pu = null, e = jT(r), e = Oi(e), e !== null) if (t = zi(e), t === null) e = null;
    else if (n = t.tag, n === 13) {
        if (e = c_(t), e !== null) return e;
        e = null;
    } else if (n === 3) {
        if (t.stateNode.current.memoizedState.isDehydrated) return t.tag === 3 ? t.stateNode.containerInfo : null;
        e = null;
    } else t !== e && (e = null);
    return Pu = e, null;
}
function N_(e) {
    switch(e){
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
            return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
            return 4;
        case "message":
            switch(f2()){
                case XT:
                    return 1;
                case f_:
                    return 4;
                case yu:
                case p2:
                    return 16;
                case p_:
                    return 536870912;
                default:
                    return 16;
            }
        default:
            return 16;
    }
}
var xs = null, qT = null, nu = null;
function I_() {
    if (nu) return nu;
    var e, t = qT, n = t.length, r, s = "value" in xs ? xs.value : xs.textContent, i = s.length;
    for(e = 0; e < n && t[e] === s[e]; e++);
    var a = n - e;
    for(r = 1; r <= a && t[n - r] === s[i - r]; r++);
    return nu = s.slice(e, 1 < r ? 1 - r : void 0);
}
function ru(e) {
    var t = e.keyCode;
    return "charCode" in e ? (e = e.charCode, e === 0 && t === 13 && (e = 13)) : e = t, e === 10 && (e = 13), 32 <= e || e === 13 ? e : 0;
}
function mc() {
    return !0;
}
function p0() {
    return !1;
}
function zn(e) {
    function t(n, r, s, i, a) {
        this._reactName = n, this._targetInst = s, this.type = r, this.nativeEvent = i, this.target = a, this.currentTarget = null;
        for(var o in e)e.hasOwnProperty(o) && (n = e[o], this[o] = n ? n(i) : i[o]);
        return this.isDefaultPrevented = (i.defaultPrevented != null ? i.defaultPrevented : i.returnValue === !1) ? mc : p0, this.isPropagationStopped = p0, this;
    }
    return ct(t.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var n = this.nativeEvent;
            n && (n.preventDefault ? n.preventDefault() : typeof n.returnValue != "unknown" && (n.returnValue = !1), this.isDefaultPrevented = mc);
        },
        stopPropagation: function() {
            var n = this.nativeEvent;
            n && (n.stopPropagation ? n.stopPropagation() : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0), this.isPropagationStopped = mc);
        },
        persist: function() {},
        isPersistent: mc
    }), t;
}
var ao = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function(e) {
        return e.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
}, ZT = zn(ao), Ul = ct({}, ao, {
    view: 0,
    detail: 0
}), L2 = zn(Ul), Fd, Bd, Lo, OE = ct({}, Ul, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: QT,
    button: 0,
    buttons: 0,
    relatedTarget: function(e) {
        return e.relatedTarget === void 0 ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget;
    },
    movementX: function(e) {
        return "movementX" in e ? e.movementX : (e !== Lo && (Lo && e.type === "mousemove" ? (Fd = e.screenX - Lo.screenX, Bd = e.screenY - Lo.screenY) : Bd = Fd = 0, Lo = e), Fd);
    },
    movementY: function(e) {
        return "movementY" in e ? e.movementY : Bd;
    }
}), T0 = zn(OE), y2 = ct({}, OE, {
    dataTransfer: 0
}), v2 = zn(y2), b2 = ct({}, Ul, {
    relatedTarget: 0
}), Gd = zn(b2), P2 = ct({}, ao, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), M2 = zn(P2), D2 = ct({}, ao, {
    clipboardData: function(e) {
        return "clipboardData" in e ? e.clipboardData : window.clipboardData;
    }
}), w2 = zn(D2), x2 = ct({}, ao, {
    data: 0
}), h0 = zn(x2), U2 = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
}, F2 = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
}, B2 = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
};
function G2(e) {
    var t = this.nativeEvent;
    return t.getModifierState ? t.getModifierState(e) : (e = B2[e]) ? !!t[e] : !1;
}
function QT() {
    return G2;
}
var k2 = ct({}, Ul, {
    key: function(e) {
        if (e.key) {
            var t = U2[e.key] || e.key;
            if (t !== "Unidentified") return t;
        }
        return e.type === "keypress" ? (e = ru(e), e === 13 ? "Enter" : String.fromCharCode(e)) : e.type === "keydown" || e.type === "keyup" ? F2[e.keyCode] || "Unidentified" : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: QT,
    charCode: function(e) {
        return e.type === "keypress" ? ru(e) : 0;
    },
    keyCode: function(e) {
        return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
    },
    which: function(e) {
        return e.type === "keypress" ? ru(e) : e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
    }
}), H2 = zn(k2), Y2 = ct({}, OE, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
}), A0 = zn(Y2), V2 = ct({}, Ul, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: QT
}), W2 = zn(V2), j2 = ct({}, ao, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), X2 = zn(j2), K2 = ct({}, OE, {
    deltaX: function(e) {
        return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0;
    },
    deltaY: function(e) {
        return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
}), z2 = zn(K2), J2 = [
    9,
    13,
    27,
    32
], $T = is && "CompositionEvent" in window, Wo = null;
is && "documentMode" in document && (Wo = document.documentMode);
var q2 = is && "TextEvent" in window && !Wo, O_ = is && (!$T || Wo && 8 < Wo && 11 >= Wo), S0 = " ", R0 = !1;
function C_(e, t) {
    switch(e){
        case "keyup":
            return J2.indexOf(t.keyCode) !== -1;
        case "keydown":
            return t.keyCode !== 229;
        case "keypress":
        case "mousedown":
        case "focusout":
            return !0;
        default:
            return !1;
    }
}
function g_(e) {
    return e = e.detail, typeof e == "object" && "data" in e ? e.data : null;
}
var fa = !1;
function Z2(e, t) {
    switch(e){
        case "compositionend":
            return g_(t);
        case "keypress":
            return t.which !== 32 ? null : (R0 = !0, S0);
        case "textInput":
            return e = t.data, e === S0 && R0 ? null : e;
        default:
            return null;
    }
}
function Q2(e, t) {
    if (fa) return e === "compositionend" || !$T && C_(e, t) ? (e = I_(), nu = qT = xs = null, fa = !1, e) : null;
    switch(e){
        case "paste":
            return null;
        case "keypress":
            if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                if (t.char && 1 < t.char.length) return t.char;
                if (t.which) return String.fromCharCode(t.which);
            }
            return null;
        case "compositionend":
            return O_ && t.locale !== "ko" ? null : t.data;
        default:
            return null;
    }
}
var $2 = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0
};
function m0(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase();
    return t === "input" ? !!$2[e.type] : t === "textarea";
}
function L_(e, t, n, r) {
    s_(r), t = Mu(t, "onChange"), 0 < t.length && (n = new ZT("onChange", "change", null, n, r), e.push({
        event: n,
        listeners: t
    }));
}
var jo = null, ul = null;
function ey(e) {
    B_(e, 0);
}
function CE(e) {
    var t = ha(e);
    if (Zm(t)) return e;
}
function ty(e, t) {
    if (e === "change") return t;
}
var y_ = !1;
if (is) {
    var kd;
    if (is) {
        var Hd = "oninput" in document;
        if (!Hd) {
            var _0 = document.createElement("div");
            _0.setAttribute("oninput", "return;"), Hd = typeof _0.oninput == "function";
        }
        kd = Hd;
    } else kd = !1;
    y_ = kd && (!document.documentMode || 9 < document.documentMode);
}
function N0() {
    jo && (jo.detachEvent("onpropertychange", v_), ul = jo = null);
}
function v_(e) {
    if (e.propertyName === "value" && CE(ul)) {
        var t = [];
        L_(t, ul, e, jT(e)), l_(ey, t);
    }
}
function ny(e, t, n) {
    e === "focusin" ? (N0(), jo = t, ul = n, jo.attachEvent("onpropertychange", v_)) : e === "focusout" && N0();
}
function ry(e) {
    if (e === "selectionchange" || e === "keyup" || e === "keydown") return CE(ul);
}
function sy(e, t) {
    if (e === "click") return CE(t);
}
function iy(e, t) {
    if (e === "input" || e === "change") return CE(t);
}
function ay(e, t) {
    return e === t && (e !== 0 || 1 / e === 1 / t) || e !== e && t !== t;
}
var Nr = typeof Object.is == "function" ? Object.is : ay;
function El(e, t) {
    if (Nr(e, t)) return !0;
    if (typeof e != "object" || e === null || typeof t != "object" || t === null) return !1;
    var n = Object.keys(e), r = Object.keys(t);
    if (n.length !== r.length) return !1;
    for(r = 0; r < n.length; r++){
        var s = n[r];
        if (!Zf.call(t, s) || !Nr(e[s], t[s])) return !1;
    }
    return !0;
}
function I0(e) {
    for(; e && e.firstChild;)e = e.firstChild;
    return e;
}
function O0(e, t) {
    var n = I0(e);
    e = 0;
    for(var r; n;){
        if (n.nodeType === 3) {
            if (r = e + n.textContent.length, e <= t && r >= t) return {
                node: n,
                offset: t - e
            };
            e = r;
        }
        e: {
            for(; n;){
                if (n.nextSibling) {
                    n = n.nextSibling;
                    break e;
                }
                n = n.parentNode;
            }
            n = void 0;
        }
        n = I0(n);
    }
}
function b_(e, t) {
    return e && t ? e === t ? !0 : e && e.nodeType === 3 ? !1 : t && t.nodeType === 3 ? b_(e, t.parentNode) : "contains" in e ? e.contains(t) : e.compareDocumentPosition ? !!(e.compareDocumentPosition(t) & 16) : !1 : !1;
}
function P_() {
    for(var e = window, t = Cu(); t instanceof e.HTMLIFrameElement;){
        try {
            var n = typeof t.contentWindow.location.href == "string";
        } catch  {
            n = !1;
        }
        if (n) e = t.contentWindow;
        else break;
        t = Cu(e.document);
    }
    return t;
}
function eh(e) {
    var t = e && e.nodeName && e.nodeName.toLowerCase();
    return t && (t === "input" && (e.type === "text" || e.type === "search" || e.type === "tel" || e.type === "url" || e.type === "password") || t === "textarea" || e.contentEditable === "true");
}
function oy(e) {
    var t = P_(), n = e.focusedElem, r = e.selectionRange;
    if (t !== n && n && n.ownerDocument && b_(n.ownerDocument.documentElement, n)) {
        if (r !== null && eh(n)) {
            if (t = r.start, e = r.end, e === void 0 && (e = t), "selectionStart" in n) n.selectionStart = t, n.selectionEnd = Math.min(e, n.value.length);
            else if (e = (t = n.ownerDocument || document) && t.defaultView || window, e.getSelection) {
                e = e.getSelection();
                var s = n.textContent.length, i = Math.min(r.start, s);
                r = r.end === void 0 ? i : Math.min(r.end, s), !e.extend && i > r && (s = r, r = i, i = s), s = O0(n, i);
                var a = O0(n, r);
                s && a && (e.rangeCount !== 1 || e.anchorNode !== s.node || e.anchorOffset !== s.offset || e.focusNode !== a.node || e.focusOffset !== a.offset) && (t = t.createRange(), t.setStart(s.node, s.offset), e.removeAllRanges(), i > r ? (e.addRange(t), e.extend(a.node, a.offset)) : (t.setEnd(a.node, a.offset), e.addRange(t)));
            }
        }
        for(t = [], e = n; e = e.parentNode;)e.nodeType === 1 && t.push({
            element: e,
            left: e.scrollLeft,
            top: e.scrollTop
        });
        for(typeof n.focus == "function" && n.focus(), n = 0; n < t.length; n++)e = t[n], e.element.scrollLeft = e.left, e.element.scrollTop = e.top;
    }
}
var ly = is && "documentMode" in document && 11 >= document.documentMode, pa = null, hp = null, Xo = null, Ap = !1;
function C0(e, t, n) {
    var r = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
    Ap || pa == null || pa !== Cu(r) || (r = pa, "selectionStart" in r && eh(r) ? r = {
        start: r.selectionStart,
        end: r.selectionEnd
    } : (r = (r.ownerDocument && r.ownerDocument.defaultView || window).getSelection(), r = {
        anchorNode: r.anchorNode,
        anchorOffset: r.anchorOffset,
        focusNode: r.focusNode,
        focusOffset: r.focusOffset
    }), Xo && El(Xo, r) || (Xo = r, r = Mu(hp, "onSelect"), 0 < r.length && (t = new ZT("onSelect", "select", null, t, n), e.push({
        event: t,
        listeners: r
    }), t.target = pa)));
}
function _c(e, t) {
    var n = {};
    return n[e.toLowerCase()] = t.toLowerCase(), n["Webkit" + e] = "webkit" + t, n["Moz" + e] = "moz" + t, n;
}
var Ta = {
    animationend: _c("Animation", "AnimationEnd"),
    animationiteration: _c("Animation", "AnimationIteration"),
    animationstart: _c("Animation", "AnimationStart"),
    transitionend: _c("Transition", "TransitionEnd")
}, Yd = {}, M_ = {};
is && (M_ = document.createElement("div").style, "AnimationEvent" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), "TransitionEvent" in window || delete Ta.transitionend.transition);
function gE(e) {
    if (Yd[e]) return Yd[e];
    if (!Ta[e]) return e;
    var t = Ta[e], n;
    for(n in t)if (t.hasOwnProperty(n) && n in M_) return Yd[e] = t[n];
    return e;
}
var D_ = gE("animationend"), w_ = gE("animationiteration"), x_ = gE("animationstart"), U_ = gE("transitionend"), F_ = /* @__PURE__ */ new Map(), g0 = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ci(e, t) {
    F_.set(e, t), Ki(t, [
        e
    ]);
}
for(var Vd = 0; Vd < g0.length; Vd++){
    var Wd = g0[Vd], cy = Wd.toLowerCase(), uy = Wd[0].toUpperCase() + Wd.slice(1);
    ci(cy, "on" + uy);
}
ci(D_, "onAnimationEnd");
ci(w_, "onAnimationIteration");
ci(x_, "onAnimationStart");
ci("dblclick", "onDoubleClick");
ci("focusin", "onFocus");
ci("focusout", "onBlur");
ci(U_, "onTransitionEnd");
Ba("onMouseEnter", [
    "mouseout",
    "mouseover"
]);
Ba("onMouseLeave", [
    "mouseout",
    "mouseover"
]);
Ba("onPointerEnter", [
    "pointerout",
    "pointerover"
]);
Ba("onPointerLeave", [
    "pointerout",
    "pointerover"
]);
Ki("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
Ki("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
Ki("onBeforeInput", [
    "compositionend",
    "keypress",
    "textInput",
    "paste"
]);
Ki("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
Ki("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
Ki("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Ho = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Ey = new Set("cancel close invalid load scroll toggle".split(" ").concat(Ho));
function L0(e, t, n) {
    var r = e.type || "unknown-event";
    e.currentTarget = n, c2(r, t, void 0, e), e.currentTarget = null;
}
function B_(e, t) {
    t = (t & 4) !== 0;
    for(var n = 0; n < e.length; n++){
        var r = e[n], s = r.event;
        r = r.listeners;
        e: {
            var i = void 0;
            if (t) for(var a = r.length - 1; 0 <= a; a--){
                var o = r[a], l = o.instance, c = o.currentTarget;
                if (o = o.listener, l !== i && s.isPropagationStopped()) break e;
                L0(s, o, c), i = l;
            }
            else for(a = 0; a < r.length; a++){
                if (o = r[a], l = o.instance, c = o.currentTarget, o = o.listener, l !== i && s.isPropagationStopped()) break e;
                L0(s, o, c), i = l;
            }
        }
    }
    if (Lu) throw e = dp, Lu = !1, dp = null, e;
}
function nt(e, t) {
    var n = t[Np];
    n === void 0 && (n = t[Np] = /* @__PURE__ */ new Set());
    var r = e + "__bubble";
    n.has(r) || (G_(t, e, 2, !1), n.add(r));
}
function jd(e, t, n) {
    var r = 0;
    t && (r |= 4), G_(n, e, r, t);
}
var Nc = "_reactListening" + Math.random().toString(36).slice(2);
function dl(e) {
    if (!e[Nc]) {
        e[Nc] = !0, Xm.forEach(function(n) {
            n !== "selectionchange" && (Ey.has(n) || jd(n, !1, e), jd(n, !0, e));
        });
        var t = e.nodeType === 9 ? e : e.ownerDocument;
        t === null || t[Nc] || (t[Nc] = !0, jd("selectionchange", !1, t));
    }
}
function G_(e, t, n, r) {
    switch(N_(t)){
        case 1:
            var s = C2;
            break;
        case 4:
            s = g2;
            break;
        default:
            s = JT;
    }
    n = s.bind(null, t, n, e), s = void 0, !Ep || t !== "touchstart" && t !== "touchmove" && t !== "wheel" || (s = !0), r ? s !== void 0 ? e.addEventListener(t, n, {
        capture: !0,
        passive: s
    }) : e.addEventListener(t, n, !0) : s !== void 0 ? e.addEventListener(t, n, {
        passive: s
    }) : e.addEventListener(t, n, !1);
}
function Xd(e, t, n, r, s) {
    var i = r;
    if (!(t & 1) && !(t & 2) && r !== null) e: for(;;){
        if (r === null) return;
        var a = r.tag;
        if (a === 3 || a === 4) {
            var o = r.stateNode.containerInfo;
            if (o === s || o.nodeType === 8 && o.parentNode === s) break;
            if (a === 4) for(a = r.return; a !== null;){
                var l = a.tag;
                if ((l === 3 || l === 4) && (l = a.stateNode.containerInfo, l === s || l.nodeType === 8 && l.parentNode === s)) return;
                a = a.return;
            }
            for(; o !== null;){
                if (a = Oi(o), a === null) return;
                if (l = a.tag, l === 5 || l === 6) {
                    r = i = a;
                    continue e;
                }
                o = o.parentNode;
            }
        }
        r = r.return;
    }
    l_(function() {
        var c = i, u = jT(n), E = [];
        e: {
            var p = F_.get(e);
            if (p !== void 0) {
                var A = ZT, R = e;
                switch(e){
                    case "keypress":
                        if (ru(n) === 0) break e;
                    case "keydown":
                    case "keyup":
                        A = H2;
                        break;
                    case "focusin":
                        R = "focus", A = Gd;
                        break;
                    case "focusout":
                        R = "blur", A = Gd;
                        break;
                    case "beforeblur":
                    case "afterblur":
                        A = Gd;
                        break;
                    case "click":
                        if (n.button === 2) break e;
                    case "auxclick":
                    case "dblclick":
                    case "mousedown":
                    case "mousemove":
                    case "mouseup":
                    case "mouseout":
                    case "mouseover":
                    case "contextmenu":
                        A = T0;
                        break;
                    case "drag":
                    case "dragend":
                    case "dragenter":
                    case "dragexit":
                    case "dragleave":
                    case "dragover":
                    case "dragstart":
                    case "drop":
                        A = v2;
                        break;
                    case "touchcancel":
                    case "touchend":
                    case "touchmove":
                    case "touchstart":
                        A = W2;
                        break;
                    case D_:
                    case w_:
                    case x_:
                        A = M2;
                        break;
                    case U_:
                        A = X2;
                        break;
                    case "scroll":
                        A = L2;
                        break;
                    case "wheel":
                        A = z2;
                        break;
                    case "copy":
                    case "cut":
                    case "paste":
                        A = w2;
                        break;
                    case "gotpointercapture":
                    case "lostpointercapture":
                    case "pointercancel":
                    case "pointerdown":
                    case "pointermove":
                    case "pointerout":
                    case "pointerover":
                    case "pointerup":
                        A = A0;
                }
                var C = (t & 4) !== 0, O = !C && e === "scroll", d = C ? p !== null ? p + "Capture" : null : p;
                C = [];
                for(var f = c, _; f !== null;){
                    _ = f;
                    var h = _.stateNode;
                    if (_.tag === 5 && h !== null && (_ = h, d !== null && (h = al(f, d), h != null && C.push(fl(f, h, _)))), O) break;
                    f = f.return;
                }
                0 < C.length && (p = new A(p, R, null, n, u), E.push({
                    event: p,
                    listeners: C
                }));
            }
        }
        if (!(t & 7)) {
            e: {
                if (p = e === "mouseover" || e === "pointerover", A = e === "mouseout" || e === "pointerout", p && n !== cp && (R = n.relatedTarget || n.fromElement) && (Oi(R) || R[as])) break e;
                if ((A || p) && (p = u.window === u ? u : (p = u.ownerDocument) ? p.defaultView || p.parentWindow : window, A ? (R = n.relatedTarget || n.toElement, A = c, R = R ? Oi(R) : null, R !== null && (O = zi(R), R !== O || R.tag !== 5 && R.tag !== 6) && (R = null)) : (A = null, R = c), A !== R)) {
                    if (C = T0, h = "onMouseLeave", d = "onMouseEnter", f = "mouse", (e === "pointerout" || e === "pointerover") && (C = A0, h = "onPointerLeave", d = "onPointerEnter", f = "pointer"), O = A == null ? p : ha(A), _ = R == null ? p : ha(R), p = new C(h, f + "leave", A, n, u), p.target = O, p.relatedTarget = _, h = null, Oi(u) === c && (C = new C(d, f + "enter", R, n, u), C.target = _, C.relatedTarget = O, h = C), O = h, A && R) t: {
                        for(C = A, d = R, f = 0, _ = C; _; _ = aa(_))f++;
                        for(_ = 0, h = d; h; h = aa(h))_++;
                        for(; 0 < f - _;)C = aa(C), f--;
                        for(; 0 < _ - f;)d = aa(d), _--;
                        for(; f--;){
                            if (C === d || d !== null && C === d.alternate) break t;
                            C = aa(C), d = aa(d);
                        }
                        C = null;
                    }
                    else C = null;
                    A !== null && y0(E, p, A, C, !1), R !== null && O !== null && y0(E, O, R, C, !0);
                }
            }
            e: {
                if (p = c ? ha(c) : window, A = p.nodeName && p.nodeName.toLowerCase(), A === "select" || A === "input" && p.type === "file") var I = ty;
                else if (m0(p)) if (y_) I = iy;
                else {
                    I = ry;
                    var T = ny;
                }
                else (A = p.nodeName) && A.toLowerCase() === "input" && (p.type === "checkbox" || p.type === "radio") && (I = sy);
                if (I && (I = I(e, c))) {
                    L_(E, I, n, u);
                    break e;
                }
                T && T(e, p, c), e === "focusout" && (T = p._wrapperState) && T.controlled && p.type === "number" && sp(p, "number", p.value);
            }
            switch(T = c ? ha(c) : window, e){
                case "focusin":
                    (m0(T) || T.contentEditable === "true") && (pa = T, hp = c, Xo = null);
                    break;
                case "focusout":
                    Xo = hp = pa = null;
                    break;
                case "mousedown":
                    Ap = !0;
                    break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                    Ap = !1, C0(E, n, u);
                    break;
                case "selectionchange":
                    if (ly) break;
                case "keydown":
                case "keyup":
                    C0(E, n, u);
            }
            var N;
            if ($T) e: {
                switch(e){
                    case "compositionstart":
                        var g = "onCompositionStart";
                        break e;
                    case "compositionend":
                        g = "onCompositionEnd";
                        break e;
                    case "compositionupdate":
                        g = "onCompositionUpdate";
                        break e;
                }
                g = void 0;
            }
            else fa ? C_(e, n) && (g = "onCompositionEnd") : e === "keydown" && n.keyCode === 229 && (g = "onCompositionStart");
            g && (O_ && n.locale !== "ko" && (fa || g !== "onCompositionStart" ? g === "onCompositionEnd" && fa && (N = I_()) : (xs = u, qT = "value" in xs ? xs.value : xs.textContent, fa = !0)), T = Mu(c, g), 0 < T.length && (g = new h0(g, e, null, n, u), E.push({
                event: g,
                listeners: T
            }), N ? g.data = N : (N = g_(n), N !== null && (g.data = N)))), (N = q2 ? Z2(e, n) : Q2(e, n)) && (c = Mu(c, "onBeforeInput"), 0 < c.length && (u = new h0("onBeforeInput", "beforeinput", null, n, u), E.push({
                event: u,
                listeners: c
            }), u.data = N));
        }
        B_(E, t);
    });
}
function fl(e, t, n) {
    return {
        instance: e,
        listener: t,
        currentTarget: n
    };
}
function Mu(e, t) {
    for(var n = t + "Capture", r = []; e !== null;){
        var s = e, i = s.stateNode;
        s.tag === 5 && i !== null && (s = i, i = al(e, n), i != null && r.unshift(fl(e, i, s)), i = al(e, t), i != null && r.push(fl(e, i, s))), e = e.return;
    }
    return r;
}
function aa(e) {
    if (e === null) return null;
    do e = e.return;
    while (e && e.tag !== 5)
    return e || null;
}
function y0(e, t, n, r, s) {
    for(var i = t._reactName, a = []; n !== null && n !== r;){
        var o = n, l = o.alternate, c = o.stateNode;
        if (l !== null && l === r) break;
        o.tag === 5 && c !== null && (o = c, s ? (l = al(n, i), l != null && a.unshift(fl(n, l, o))) : s || (l = al(n, i), l != null && a.push(fl(n, l, o)))), n = n.return;
    }
    a.length !== 0 && e.push({
        event: t,
        listeners: a
    });
}
var dy = /\r\n?/g, fy = /\u0000|\uFFFD/g;
function v0(e) {
    return (typeof e == "string" ? e : "" + e).replace(dy, `
`).replace(fy, "");
}
function Ic(e, t, n) {
    if (t = v0(t), v0(e) !== t && n) throw Error(ee(425));
}
function Du() {}
var Sp = null, Rp = null;
function mp(e, t) {
    return e === "textarea" || e === "noscript" || typeof t.children == "string" || typeof t.children == "number" || typeof t.dangerouslySetInnerHTML == "object" && t.dangerouslySetInnerHTML !== null && t.dangerouslySetInnerHTML.__html != null;
}
var _p = typeof setTimeout == "function" ? setTimeout : void 0, py = typeof clearTimeout == "function" ? clearTimeout : void 0, b0 = typeof Promise == "function" ? Promise : void 0, Ty = typeof queueMicrotask == "function" ? queueMicrotask : typeof b0 < "u" ? function(e) {
    return b0.resolve(null).then(e).catch(hy);
} : _p;
function hy(e) {
    setTimeout(function() {
        throw e;
    });
}
function Kd(e, t) {
    var n = t, r = 0;
    do {
        var s = n.nextSibling;
        if (e.removeChild(n), s && s.nodeType === 8) if (n = s.data, n === "/$") {
            if (r === 0) {
                e.removeChild(s), cl(t);
                return;
            }
            r--;
        } else n !== "$" && n !== "$?" && n !== "$!" || r++;
        n = s;
    }while (n)
    cl(t);
}
function Ys(e) {
    for(; e != null; e = e.nextSibling){
        var t = e.nodeType;
        if (t === 1 || t === 3) break;
        if (t === 8) {
            if (t = e.data, t === "$" || t === "$!" || t === "$?") break;
            if (t === "/$") return null;
        }
    }
    return e;
}
function P0(e) {
    e = e.previousSibling;
    for(var t = 0; e;){
        if (e.nodeType === 8) {
            var n = e.data;
            if (n === "$" || n === "$!" || n === "$?") {
                if (t === 0) return e;
                t--;
            } else n === "/$" && t++;
        }
        e = e.previousSibling;
    }
    return null;
}
var oo = Math.random().toString(36).slice(2), Dr = "__reactFiber$" + oo, pl = "__reactProps$" + oo, as = "__reactContainer$" + oo, Np = "__reactEvents$" + oo, Ay = "__reactListeners$" + oo, Sy = "__reactHandles$" + oo;
function Oi(e) {
    var t = e[Dr];
    if (t) return t;
    for(var n = e.parentNode; n;){
        if (t = n[as] || n[Dr]) {
            if (n = t.alternate, t.child !== null || n !== null && n.child !== null) for(e = P0(e); e !== null;){
                if (n = e[Dr]) return n;
                e = P0(e);
            }
            return t;
        }
        e = n, n = e.parentNode;
    }
    return null;
}
function Fl(e) {
    return e = e[Dr] || e[as], !e || e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3 ? null : e;
}
function ha(e) {
    if (e.tag === 5 || e.tag === 6) return e.stateNode;
    throw Error(ee(33));
}
function LE(e) {
    return e[pl] || null;
}
var Ip = [], Aa = -1;
function ui(e) {
    return {
        current: e
    };
}
function rt(e) {
    0 > Aa || (e.current = Ip[Aa], Ip[Aa] = null, Aa--);
}
function $e(e, t) {
    Aa++, Ip[Aa] = e.current, e.current = t;
}
var ti = {}, un = ui(ti), bn = ui(!1), Fi = ti;
function Ga(e, t) {
    var n = e.type.contextTypes;
    if (!n) return ti;
    var r = e.stateNode;
    if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
    var s = {}, i;
    for(i in n)s[i] = t[i];
    return r && (e = e.stateNode, e.__reactInternalMemoizedUnmaskedChildContext = t, e.__reactInternalMemoizedMaskedChildContext = s), s;
}
function Pn(e) {
    return e = e.childContextTypes, e != null;
}
function wu() {
    rt(bn), rt(un);
}
function M0(e, t, n) {
    if (un.current !== ti) throw Error(ee(168));
    $e(un, t), $e(bn, n);
}
function k_(e, t, n) {
    var r = e.stateNode;
    if (t = t.childContextTypes, typeof r.getChildContext != "function") return n;
    r = r.getChildContext();
    for(var s in r)if (!(s in t)) throw Error(ee(108, n2(e) || "Unknown", s));
    return ct({}, n, r);
}
function xu(e) {
    return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || ti, Fi = un.current, $e(un, e), $e(bn, bn.current), !0;
}
function D0(e, t, n) {
    var r = e.stateNode;
    if (!r) throw Error(ee(169));
    n ? (e = k_(e, t, Fi), r.__reactInternalMemoizedMergedChildContext = e, rt(bn), rt(un), $e(un, e)) : rt(bn), $e(bn, n);
}
var Qr = null, yE = !1, zd = !1;
function H_(e) {
    Qr === null ? Qr = [
        e
    ] : Qr.push(e);
}
function Ry(e) {
    yE = !0, H_(e);
}
function Ei() {
    if (!zd && Qr !== null) {
        zd = !0;
        var e = 0, t = je;
        try {
            var n = Qr;
            for(je = 1; e < n.length; e++){
                var r = n[e];
                do r = r(!0);
                while (r !== null)
            }
            Qr = null, yE = !1;
        } catch (s) {
            throw Qr !== null && (Qr = Qr.slice(e + 1)), d_(XT, Ei), s;
        } finally{
            je = t, zd = !1;
        }
    }
    return null;
}
var Sa = [], Ra = 0, Uu = null, Fu = 0, tr = [], nr = 0, Bi = null, $r = 1, es = "";
function _i(e, t) {
    Sa[Ra++] = Fu, Sa[Ra++] = Uu, Uu = e, Fu = t;
}
function Y_(e, t, n) {
    tr[nr++] = $r, tr[nr++] = es, tr[nr++] = Bi, Bi = e;
    var r = $r;
    e = es;
    var s = 32 - Rr(r) - 1;
    r &= ~(1 << s), n += 1;
    var i = 32 - Rr(t) + s;
    if (30 < i) {
        var a = s - s % 5;
        i = (r & (1 << a) - 1).toString(32), r >>= a, s -= a, $r = 1 << 32 - Rr(t) + s | n << s | r, es = i + e;
    } else $r = 1 << i | n << s | r, es = e;
}
function th(e) {
    e.return !== null && (_i(e, 1), Y_(e, 1, 0));
}
function nh(e) {
    for(; e === Uu;)Uu = Sa[--Ra], Sa[Ra] = null, Fu = Sa[--Ra], Sa[Ra] = null;
    for(; e === Bi;)Bi = tr[--nr], tr[nr] = null, es = tr[--nr], tr[nr] = null, $r = tr[--nr], tr[nr] = null;
}
var Wn = null, Vn = null, it = !1, hr = null;
function V_(e, t) {
    var n = sr(5, null, null, 0);
    n.elementType = "DELETED", n.stateNode = t, n.return = e, t = e.deletions, t === null ? (e.deletions = [
        n
    ], e.flags |= 16) : t.push(n);
}
function w0(e, t) {
    switch(e.tag){
        case 5:
            var n = e.type;
            return t = t.nodeType !== 1 || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t, t !== null ? (e.stateNode = t, Wn = e, Vn = Ys(t.firstChild), !0) : !1;
        case 6:
            return t = e.pendingProps === "" || t.nodeType !== 3 ? null : t, t !== null ? (e.stateNode = t, Wn = e, Vn = null, !0) : !1;
        case 13:
            return t = t.nodeType !== 8 ? null : t, t !== null ? (n = Bi !== null ? {
                id: $r,
                overflow: es
            } : null, e.memoizedState = {
                dehydrated: t,
                treeContext: n,
                retryLane: 1073741824
            }, n = sr(18, null, null, 0), n.stateNode = t, n.return = e, e.child = n, Wn = e, Vn = null, !0) : !1;
        default:
            return !1;
    }
}
function Op(e) {
    return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function Cp(e) {
    if (it) {
        var t = Vn;
        if (t) {
            var n = t;
            if (!w0(e, t)) {
                if (Op(e)) throw Error(ee(418));
                t = Ys(n.nextSibling);
                var r = Wn;
                t && w0(e, t) ? V_(r, n) : (e.flags = e.flags & -4097 | 2, it = !1, Wn = e);
            }
        } else {
            if (Op(e)) throw Error(ee(418));
            e.flags = e.flags & -4097 | 2, it = !1, Wn = e;
        }
    }
}
function x0(e) {
    for(e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13;)e = e.return;
    Wn = e;
}
function Oc(e) {
    if (e !== Wn) return !1;
    if (!it) return x0(e), it = !0, !1;
    var t;
    if ((t = e.tag !== 3) && !(t = e.tag !== 5) && (t = e.type, t = t !== "head" && t !== "body" && !mp(e.type, e.memoizedProps)), t && (t = Vn)) {
        if (Op(e)) throw W_(), Error(ee(418));
        for(; t;)V_(e, t), t = Ys(t.nextSibling);
    }
    if (x0(e), e.tag === 13) {
        if (e = e.memoizedState, e = e !== null ? e.dehydrated : null, !e) throw Error(ee(317));
        e: {
            for(e = e.nextSibling, t = 0; e;){
                if (e.nodeType === 8) {
                    var n = e.data;
                    if (n === "/$") {
                        if (t === 0) {
                            Vn = Ys(e.nextSibling);
                            break e;
                        }
                        t--;
                    } else n !== "$" && n !== "$!" && n !== "$?" || t++;
                }
                e = e.nextSibling;
            }
            Vn = null;
        }
    } else Vn = Wn ? Ys(e.stateNode.nextSibling) : null;
    return !0;
}
function W_() {
    for(var e = Vn; e;)e = Ys(e.nextSibling);
}
function ka() {
    Vn = Wn = null, it = !1;
}
function rh(e) {
    hr === null ? hr = [
        e
    ] : hr.push(e);
}
var my = hs.ReactCurrentBatchConfig;
function yo(e, t, n) {
    if (e = n.ref, e !== null && typeof e != "function" && typeof e != "object") {
        if (n._owner) {
            if (n = n._owner, n) {
                if (n.tag !== 1) throw Error(ee(309));
                var r = n.stateNode;
            }
            if (!r) throw Error(ee(147, e));
            var s = r, i = "" + e;
            return t !== null && t.ref !== null && typeof t.ref == "function" && t.ref._stringRef === i ? t.ref : (t = function(a) {
                var o = s.refs;
                a === null ? delete o[i] : o[i] = a;
            }, t._stringRef = i, t);
        }
        if (typeof e != "string") throw Error(ee(284));
        if (!n._owner) throw Error(ee(290, e));
    }
    return e;
}
function Cc(e, t) {
    throw e = Object.prototype.toString.call(t), Error(ee(31, e === "[object Object]" ? "object with keys {" + Object.keys(t).join(", ") + "}" : e));
}
function U0(e) {
    var t = e._init;
    return t(e._payload);
}
function j_(e) {
    function t(d, f) {
        if (e) {
            var _ = d.deletions;
            _ === null ? (d.deletions = [
                f
            ], d.flags |= 16) : _.push(f);
        }
    }
    function n(d, f) {
        if (!e) return null;
        for(; f !== null;)t(d, f), f = f.sibling;
        return null;
    }
    function r(d, f) {
        for(d = /* @__PURE__ */ new Map(); f !== null;)f.key !== null ? d.set(f.key, f) : d.set(f.index, f), f = f.sibling;
        return d;
    }
    function s(d, f) {
        return d = Xs(d, f), d.index = 0, d.sibling = null, d;
    }
    function i(d, f, _) {
        return d.index = _, e ? (_ = d.alternate, _ !== null ? (_ = _.index, _ < f ? (d.flags |= 2, f) : _) : (d.flags |= 2, f)) : (d.flags |= 1048576, f);
    }
    function a(d) {
        return e && d.alternate === null && (d.flags |= 2), d;
    }
    function o(d, f, _, h) {
        return f === null || f.tag !== 6 ? (f = tf(_, d.mode, h), f.return = d, f) : (f = s(f, _), f.return = d, f);
    }
    function l(d, f, _, h) {
        var I = _.type;
        return I === da ? u(d, f, _.props.children, h, _.key) : f !== null && (f.elementType === I || typeof I == "object" && I !== null && I.$$typeof === gs && U0(I) === f.type) ? (h = s(f, _.props), h.ref = yo(d, f, _), h.return = d, h) : (h = uu(_.type, _.key, _.props, null, d.mode, h), h.ref = yo(d, f, _), h.return = d, h);
    }
    function c(d, f, _, h) {
        return f === null || f.tag !== 4 || f.stateNode.containerInfo !== _.containerInfo || f.stateNode.implementation !== _.implementation ? (f = nf(_, d.mode, h), f.return = d, f) : (f = s(f, _.children || []), f.return = d, f);
    }
    function u(d, f, _, h, I) {
        return f === null || f.tag !== 7 ? (f = Mi(_, d.mode, h, I), f.return = d, f) : (f = s(f, _), f.return = d, f);
    }
    function E(d, f, _) {
        if (typeof f == "string" && f !== "" || typeof f == "number") return f = tf("" + f, d.mode, _), f.return = d, f;
        if (typeof f == "object" && f !== null) {
            switch(f.$$typeof){
                case pc:
                    return _ = uu(f.type, f.key, f.props, null, d.mode, _), _.ref = yo(d, null, f), _.return = d, _;
                case Ea:
                    return f = nf(f, d.mode, _), f.return = d, f;
                case gs:
                    var h = f._init;
                    return E(d, h(f._payload), _);
            }
            if (Go(f) || Io(f)) return f = Mi(f, d.mode, _, null), f.return = d, f;
            Cc(d, f);
        }
        return null;
    }
    function p(d, f, _, h) {
        var I = f !== null ? f.key : null;
        if (typeof _ == "string" && _ !== "" || typeof _ == "number") return I !== null ? null : o(d, f, "" + _, h);
        if (typeof _ == "object" && _ !== null) {
            switch(_.$$typeof){
                case pc:
                    return _.key === I ? l(d, f, _, h) : null;
                case Ea:
                    return _.key === I ? c(d, f, _, h) : null;
                case gs:
                    return I = _._init, p(d, f, I(_._payload), h);
            }
            if (Go(_) || Io(_)) return I !== null ? null : u(d, f, _, h, null);
            Cc(d, _);
        }
        return null;
    }
    function A(d, f, _, h, I) {
        if (typeof h == "string" && h !== "" || typeof h == "number") return d = d.get(_) || null, o(f, d, "" + h, I);
        if (typeof h == "object" && h !== null) {
            switch(h.$$typeof){
                case pc:
                    return d = d.get(h.key === null ? _ : h.key) || null, l(f, d, h, I);
                case Ea:
                    return d = d.get(h.key === null ? _ : h.key) || null, c(f, d, h, I);
                case gs:
                    var T = h._init;
                    return A(d, f, _, T(h._payload), I);
            }
            if (Go(h) || Io(h)) return d = d.get(_) || null, u(f, d, h, I, null);
            Cc(f, h);
        }
        return null;
    }
    function R(d, f, _, h) {
        for(var I = null, T = null, N = f, g = f = 0, b = null; N !== null && g < _.length; g++){
            N.index > g ? (b = N, N = null) : b = N.sibling;
            var S = p(d, N, _[g], h);
            if (S === null) {
                N === null && (N = b);
                break;
            }
            e && N && S.alternate === null && t(d, N), f = i(S, f, g), T === null ? I = S : T.sibling = S, T = S, N = b;
        }
        if (g === _.length) return n(d, N), it && _i(d, g), I;
        if (N === null) {
            for(; g < _.length; g++)N = E(d, _[g], h), N !== null && (f = i(N, f, g), T === null ? I = N : T.sibling = N, T = N);
            return it && _i(d, g), I;
        }
        for(N = r(d, N); g < _.length; g++)b = A(N, d, g, _[g], h), b !== null && (e && b.alternate !== null && N.delete(b.key === null ? g : b.key), f = i(b, f, g), T === null ? I = b : T.sibling = b, T = b);
        return e && N.forEach(function(P) {
            return t(d, P);
        }), it && _i(d, g), I;
    }
    function C(d, f, _, h) {
        var I = Io(_);
        if (typeof I != "function") throw Error(ee(150));
        if (_ = I.call(_), _ == null) throw Error(ee(151));
        for(var T = I = null, N = f, g = f = 0, b = null, S = _.next(); N !== null && !S.done; g++, S = _.next()){
            N.index > g ? (b = N, N = null) : b = N.sibling;
            var P = p(d, N, S.value, h);
            if (P === null) {
                N === null && (N = b);
                break;
            }
            e && N && P.alternate === null && t(d, N), f = i(P, f, g), T === null ? I = P : T.sibling = P, T = P, N = b;
        }
        if (S.done) return n(d, N), it && _i(d, g), I;
        if (N === null) {
            for(; !S.done; g++, S = _.next())S = E(d, S.value, h), S !== null && (f = i(S, f, g), T === null ? I = S : T.sibling = S, T = S);
            return it && _i(d, g), I;
        }
        for(N = r(d, N); !S.done; g++, S = _.next())S = A(N, d, g, S.value, h), S !== null && (e && S.alternate !== null && N.delete(S.key === null ? g : S.key), f = i(S, f, g), T === null ? I = S : T.sibling = S, T = S);
        return e && N.forEach(function(w) {
            return t(d, w);
        }), it && _i(d, g), I;
    }
    function O(d, f, _, h) {
        if (typeof _ == "object" && _ !== null && _.type === da && _.key === null && (_ = _.props.children), typeof _ == "object" && _ !== null) {
            switch(_.$$typeof){
                case pc:
                    e: {
                        for(var I = _.key, T = f; T !== null;){
                            if (T.key === I) {
                                if (I = _.type, I === da) {
                                    if (T.tag === 7) {
                                        n(d, T.sibling), f = s(T, _.props.children), f.return = d, d = f;
                                        break e;
                                    }
                                } else if (T.elementType === I || typeof I == "object" && I !== null && I.$$typeof === gs && U0(I) === T.type) {
                                    n(d, T.sibling), f = s(T, _.props), f.ref = yo(d, T, _), f.return = d, d = f;
                                    break e;
                                }
                                n(d, T);
                                break;
                            } else t(d, T);
                            T = T.sibling;
                        }
                        _.type === da ? (f = Mi(_.props.children, d.mode, h, _.key), f.return = d, d = f) : (h = uu(_.type, _.key, _.props, null, d.mode, h), h.ref = yo(d, f, _), h.return = d, d = h);
                    }
                    return a(d);
                case Ea:
                    e: {
                        for(T = _.key; f !== null;){
                            if (f.key === T) if (f.tag === 4 && f.stateNode.containerInfo === _.containerInfo && f.stateNode.implementation === _.implementation) {
                                n(d, f.sibling), f = s(f, _.children || []), f.return = d, d = f;
                                break e;
                            } else {
                                n(d, f);
                                break;
                            }
                            else t(d, f);
                            f = f.sibling;
                        }
                        f = nf(_, d.mode, h), f.return = d, d = f;
                    }
                    return a(d);
                case gs:
                    return T = _._init, O(d, f, T(_._payload), h);
            }
            if (Go(_)) return R(d, f, _, h);
            if (Io(_)) return C(d, f, _, h);
            Cc(d, _);
        }
        return typeof _ == "string" && _ !== "" || typeof _ == "number" ? (_ = "" + _, f !== null && f.tag === 6 ? (n(d, f.sibling), f = s(f, _), f.return = d, d = f) : (n(d, f), f = tf(_, d.mode, h), f.return = d, d = f), a(d)) : n(d, f);
    }
    return O;
}
var Ha = j_(!0), X_ = j_(!1), Bu = ui(null), Gu = null, ma = null, sh = null;
function ih() {
    sh = ma = Gu = null;
}
function ah(e) {
    var t = Bu.current;
    rt(Bu), e._currentValue = t;
}
function gp(e, t, n) {
    for(; e !== null;){
        var r = e.alternate;
        if ((e.childLanes & t) !== t ? (e.childLanes |= t, r !== null && (r.childLanes |= t)) : r !== null && (r.childLanes & t) !== t && (r.childLanes |= t), e === n) break;
        e = e.return;
    }
}
function Pa(e, t) {
    Gu = e, sh = ma = null, e = e.dependencies, e !== null && e.firstContext !== null && (e.lanes & t && (yn = !0), e.firstContext = null);
}
function or(e) {
    var t = e._currentValue;
    if (sh !== e) if (e = {
        context: e,
        memoizedValue: t,
        next: null
    }, ma === null) {
        if (Gu === null) throw Error(ee(308));
        ma = e, Gu.dependencies = {
            lanes: 0,
            firstContext: e
        };
    } else ma = ma.next = e;
    return t;
}
var Ci = null;
function oh(e) {
    Ci === null ? Ci = [
        e
    ] : Ci.push(e);
}
function K_(e, t, n, r) {
    var s = t.interleaved;
    return s === null ? (n.next = n, oh(t)) : (n.next = s.next, s.next = n), t.interleaved = n, os(e, r);
}
function os(e, t) {
    e.lanes |= t;
    var n = e.alternate;
    for(n !== null && (n.lanes |= t), n = e, e = e.return; e !== null;)e.childLanes |= t, n = e.alternate, n !== null && (n.childLanes |= t), n = e, e = e.return;
    return n.tag === 3 ? n.stateNode : null;
}
var Ls = !1;
function lh(e) {
    e.updateQueue = {
        baseState: e.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
            pending: null,
            interleaved: null,
            lanes: 0
        },
        effects: null
    };
}
function z_(e, t) {
    e = e.updateQueue, t.updateQueue === e && (t.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects
    });
}
function ns(e, t) {
    return {
        eventTime: e,
        lane: t,
        tag: 0,
        payload: null,
        callback: null,
        next: null
    };
}
function Vs(e, t, n) {
    var r = e.updateQueue;
    if (r === null) return null;
    if (r = r.shared, Fe & 2) {
        var s = r.pending;
        return s === null ? t.next = t : (t.next = s.next, s.next = t), r.pending = t, os(e, n);
    }
    return s = r.interleaved, s === null ? (t.next = t, oh(r)) : (t.next = s.next, s.next = t), r.interleaved = t, os(e, n);
}
function su(e, t, n) {
    if (t = t.updateQueue, t !== null && (t = t.shared, (n & 4194240) !== 0)) {
        var r = t.lanes;
        r &= e.pendingLanes, n |= r, t.lanes = n, KT(e, n);
    }
}
function F0(e, t) {
    var n = e.updateQueue, r = e.alternate;
    if (r !== null && (r = r.updateQueue, n === r)) {
        var s = null, i = null;
        if (n = n.firstBaseUpdate, n !== null) {
            do {
                var a = {
                    eventTime: n.eventTime,
                    lane: n.lane,
                    tag: n.tag,
                    payload: n.payload,
                    callback: n.callback,
                    next: null
                };
                i === null ? s = i = a : i = i.next = a, n = n.next;
            }while (n !== null)
            i === null ? s = i = t : i = i.next = t;
        } else s = i = t;
        n = {
            baseState: r.baseState,
            firstBaseUpdate: s,
            lastBaseUpdate: i,
            shared: r.shared,
            effects: r.effects
        }, e.updateQueue = n;
        return;
    }
    e = n.lastBaseUpdate, e === null ? n.firstBaseUpdate = t : e.next = t, n.lastBaseUpdate = t;
}
function ku(e, t, n, r) {
    var s = e.updateQueue;
    Ls = !1;
    var i = s.firstBaseUpdate, a = s.lastBaseUpdate, o = s.shared.pending;
    if (o !== null) {
        s.shared.pending = null;
        var l = o, c = l.next;
        l.next = null, a === null ? i = c : a.next = c, a = l;
        var u = e.alternate;
        u !== null && (u = u.updateQueue, o = u.lastBaseUpdate, o !== a && (o === null ? u.firstBaseUpdate = c : o.next = c, u.lastBaseUpdate = l));
    }
    if (i !== null) {
        var E = s.baseState;
        a = 0, u = c = l = null, o = i;
        do {
            var p = o.lane, A = o.eventTime;
            if ((r & p) === p) {
                u !== null && (u = u.next = {
                    eventTime: A,
                    lane: 0,
                    tag: o.tag,
                    payload: o.payload,
                    callback: o.callback,
                    next: null
                });
                e: {
                    var R = e, C = o;
                    switch(p = t, A = n, C.tag){
                        case 1:
                            if (R = C.payload, typeof R == "function") {
                                E = R.call(A, E, p);
                                break e;
                            }
                            E = R;
                            break e;
                        case 3:
                            R.flags = R.flags & -65537 | 128;
                        case 0:
                            if (R = C.payload, p = typeof R == "function" ? R.call(A, E, p) : R, p == null) break e;
                            E = ct({}, E, p);
                            break e;
                        case 2:
                            Ls = !0;
                    }
                }
                o.callback !== null && o.lane !== 0 && (e.flags |= 64, p = s.effects, p === null ? s.effects = [
                    o
                ] : p.push(o));
            } else A = {
                eventTime: A,
                lane: p,
                tag: o.tag,
                payload: o.payload,
                callback: o.callback,
                next: null
            }, u === null ? (c = u = A, l = E) : u = u.next = A, a |= p;
            if (o = o.next, o === null) {
                if (o = s.shared.pending, o === null) break;
                p = o, o = p.next, p.next = null, s.lastBaseUpdate = p, s.shared.pending = null;
            }
        }while (!0)
        if (u === null && (l = E), s.baseState = l, s.firstBaseUpdate = c, s.lastBaseUpdate = u, t = s.shared.interleaved, t !== null) {
            s = t;
            do a |= s.lane, s = s.next;
            while (s !== t)
        } else i === null && (s.shared.lanes = 0);
        ki |= a, e.lanes = a, e.memoizedState = E;
    }
}
function B0(e, t, n) {
    if (e = t.effects, t.effects = null, e !== null) for(t = 0; t < e.length; t++){
        var r = e[t], s = r.callback;
        if (s !== null) {
            if (r.callback = null, r = n, typeof s != "function") throw Error(ee(191, s));
            s.call(r);
        }
    }
}
var Bl = {}, kr = ui(Bl), Tl = ui(Bl), hl = ui(Bl);
function gi(e) {
    if (e === Bl) throw Error(ee(174));
    return e;
}
function ch(e, t) {
    switch($e(hl, t), $e(Tl, e), $e(kr, Bl), e = t.nodeType, e){
        case 9:
        case 11:
            t = (t = t.documentElement) ? t.namespaceURI : ap(null, "");
            break;
        default:
            e = e === 8 ? t.parentNode : t, t = e.namespaceURI || null, e = e.tagName, t = ap(t, e);
    }
    rt(kr), $e(kr, t);
}
function Ya() {
    rt(kr), rt(Tl), rt(hl);
}
function J_(e) {
    gi(hl.current);
    var t = gi(kr.current), n = ap(t, e.type);
    t !== n && ($e(Tl, e), $e(kr, n));
}
function uh(e) {
    Tl.current === e && (rt(kr), rt(Tl));
}
var ot = ui(0);
function Hu(e) {
    for(var t = e; t !== null;){
        if (t.tag === 13) {
            var n = t.memoizedState;
            if (n !== null && (n = n.dehydrated, n === null || n.data === "$?" || n.data === "$!")) return t;
        } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
            if (t.flags & 128) return t;
        } else if (t.child !== null) {
            t.child.return = t, t = t.child;
            continue;
        }
        if (t === e) break;
        for(; t.sibling === null;){
            if (t.return === null || t.return === e) return null;
            t = t.return;
        }
        t.sibling.return = t.return, t = t.sibling;
    }
    return null;
}
var Jd = [];
function Eh() {
    for(var e = 0; e < Jd.length; e++)Jd[e]._workInProgressVersionPrimary = null;
    Jd.length = 0;
}
var iu = hs.ReactCurrentDispatcher, qd = hs.ReactCurrentBatchConfig, Gi = 0, lt = null, Lt = null, Bt = null, Yu = !1, Ko = !1, Al = 0, _y = 0;
function sn() {
    throw Error(ee(321));
}
function dh(e, t) {
    if (t === null) return !1;
    for(var n = 0; n < t.length && n < e.length; n++)if (!Nr(e[n], t[n])) return !1;
    return !0;
}
function fh(e, t, n, r, s, i) {
    if (Gi = i, lt = t, t.memoizedState = null, t.updateQueue = null, t.lanes = 0, iu.current = e === null || e.memoizedState === null ? Cy : gy, e = n(r, s), Ko) {
        i = 0;
        do {
            if (Ko = !1, Al = 0, 25 <= i) throw Error(ee(301));
            i += 1, Bt = Lt = null, t.updateQueue = null, iu.current = Ly, e = n(r, s);
        }while (Ko)
    }
    if (iu.current = Vu, t = Lt !== null && Lt.next !== null, Gi = 0, Bt = Lt = lt = null, Yu = !1, t) throw Error(ee(300));
    return e;
}
function ph() {
    var e = Al !== 0;
    return Al = 0, e;
}
function Pr() {
    var e = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
    };
    return Bt === null ? lt.memoizedState = Bt = e : Bt = Bt.next = e, Bt;
}
function lr() {
    if (Lt === null) {
        var e = lt.alternate;
        e = e !== null ? e.memoizedState : null;
    } else e = Lt.next;
    var t = Bt === null ? lt.memoizedState : Bt.next;
    if (t !== null) Bt = t, Lt = e;
    else {
        if (e === null) throw Error(ee(310));
        Lt = e, e = {
            memoizedState: Lt.memoizedState,
            baseState: Lt.baseState,
            baseQueue: Lt.baseQueue,
            queue: Lt.queue,
            next: null
        }, Bt === null ? lt.memoizedState = Bt = e : Bt = Bt.next = e;
    }
    return Bt;
}
function Sl(e, t) {
    return typeof t == "function" ? t(e) : t;
}
function Zd(e) {
    var t = lr(), n = t.queue;
    if (n === null) throw Error(ee(311));
    n.lastRenderedReducer = e;
    var r = Lt, s = r.baseQueue, i = n.pending;
    if (i !== null) {
        if (s !== null) {
            var a = s.next;
            s.next = i.next, i.next = a;
        }
        r.baseQueue = s = i, n.pending = null;
    }
    if (s !== null) {
        i = s.next, r = r.baseState;
        var o = a = null, l = null, c = i;
        do {
            var u = c.lane;
            if ((Gi & u) === u) l !== null && (l = l.next = {
                lane: 0,
                action: c.action,
                hasEagerState: c.hasEagerState,
                eagerState: c.eagerState,
                next: null
            }), r = c.hasEagerState ? c.eagerState : e(r, c.action);
            else {
                var E = {
                    lane: u,
                    action: c.action,
                    hasEagerState: c.hasEagerState,
                    eagerState: c.eagerState,
                    next: null
                };
                l === null ? (o = l = E, a = r) : l = l.next = E, lt.lanes |= u, ki |= u;
            }
            c = c.next;
        }while (c !== null && c !== i)
        l === null ? a = r : l.next = o, Nr(r, t.memoizedState) || (yn = !0), t.memoizedState = r, t.baseState = a, t.baseQueue = l, n.lastRenderedState = r;
    }
    if (e = n.interleaved, e !== null) {
        s = e;
        do i = s.lane, lt.lanes |= i, ki |= i, s = s.next;
        while (s !== e)
    } else s === null && (n.lanes = 0);
    return [
        t.memoizedState,
        n.dispatch
    ];
}
function Qd(e) {
    var t = lr(), n = t.queue;
    if (n === null) throw Error(ee(311));
    n.lastRenderedReducer = e;
    var r = n.dispatch, s = n.pending, i = t.memoizedState;
    if (s !== null) {
        n.pending = null;
        var a = s = s.next;
        do i = e(i, a.action), a = a.next;
        while (a !== s)
        Nr(i, t.memoizedState) || (yn = !0), t.memoizedState = i, t.baseQueue === null && (t.baseState = i), n.lastRenderedState = i;
    }
    return [
        i,
        r
    ];
}
function q_() {}
function Z_(e, t) {
    var n = lt, r = lr(), s = t(), i = !Nr(r.memoizedState, s);
    if (i && (r.memoizedState = s, yn = !0), r = r.queue, Th(eN.bind(null, n, r, e), [
        e
    ]), r.getSnapshot !== t || i || Bt !== null && Bt.memoizedState.tag & 1) {
        if (n.flags |= 2048, Rl(9, $_.bind(null, n, r, s, t), void 0, null), Gt === null) throw Error(ee(349));
        Gi & 30 || Q_(n, t, s);
    }
    return s;
}
function Q_(e, t, n) {
    e.flags |= 16384, e = {
        getSnapshot: t,
        value: n
    }, t = lt.updateQueue, t === null ? (t = {
        lastEffect: null,
        stores: null
    }, lt.updateQueue = t, t.stores = [
        e
    ]) : (n = t.stores, n === null ? t.stores = [
        e
    ] : n.push(e));
}
function $_(e, t, n, r) {
    t.value = n, t.getSnapshot = r, tN(t) && nN(e);
}
function eN(e, t, n) {
    return n(function() {
        tN(t) && nN(e);
    });
}
function tN(e) {
    var t = e.getSnapshot;
    e = e.value;
    try {
        var n = t();
        return !Nr(e, n);
    } catch  {
        return !0;
    }
}
function nN(e) {
    var t = os(e, 1);
    t !== null && mr(t, e, 1, -1);
}
function G0(e) {
    var t = Pr();
    return typeof e == "function" && (e = e()), t.memoizedState = t.baseState = e, e = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: Sl,
        lastRenderedState: e
    }, t.queue = e, e = e.dispatch = Oy.bind(null, lt, e), [
        t.memoizedState,
        e
    ];
}
function Rl(e, t, n, r) {
    return e = {
        tag: e,
        create: t,
        destroy: n,
        deps: r,
        next: null
    }, t = lt.updateQueue, t === null ? (t = {
        lastEffect: null,
        stores: null
    }, lt.updateQueue = t, t.lastEffect = e.next = e) : (n = t.lastEffect, n === null ? t.lastEffect = e.next = e : (r = n.next, n.next = e, e.next = r, t.lastEffect = e)), e;
}
function rN() {
    return lr().memoizedState;
}
function au(e, t, n, r) {
    var s = Pr();
    lt.flags |= e, s.memoizedState = Rl(1 | t, n, void 0, r === void 0 ? null : r);
}
function vE(e, t, n, r) {
    var s = lr();
    r = r === void 0 ? null : r;
    var i = void 0;
    if (Lt !== null) {
        var a = Lt.memoizedState;
        if (i = a.destroy, r !== null && dh(r, a.deps)) {
            s.memoizedState = Rl(t, n, i, r);
            return;
        }
    }
    lt.flags |= e, s.memoizedState = Rl(1 | t, n, i, r);
}
function k0(e, t) {
    return au(8390656, 8, e, t);
}
function Th(e, t) {
    return vE(2048, 8, e, t);
}
function sN(e, t) {
    return vE(4, 2, e, t);
}
function iN(e, t) {
    return vE(4, 4, e, t);
}
function aN(e, t) {
    if (typeof t == "function") return e = e(), t(e), function() {
        t(null);
    };
    if (t != null) return e = e(), t.current = e, function() {
        t.current = null;
    };
}
function oN(e, t, n) {
    return n = n != null ? n.concat([
        e
    ]) : null, vE(4, 4, aN.bind(null, t, e), n);
}
function hh() {}
function lN(e, t) {
    var n = lr();
    t = t === void 0 ? null : t;
    var r = n.memoizedState;
    return r !== null && t !== null && dh(t, r[1]) ? r[0] : (n.memoizedState = [
        e,
        t
    ], e);
}
function cN(e, t) {
    var n = lr();
    t = t === void 0 ? null : t;
    var r = n.memoizedState;
    return r !== null && t !== null && dh(t, r[1]) ? r[0] : (e = e(), n.memoizedState = [
        e,
        t
    ], e);
}
function uN(e, t, n) {
    return Gi & 21 ? (Nr(n, t) || (n = T_(), lt.lanes |= n, ki |= n, e.baseState = !0), t) : (e.baseState && (e.baseState = !1, yn = !0), e.memoizedState = n);
}
function Ny(e, t) {
    var n = je;
    je = n !== 0 && 4 > n ? n : 4, e(!0);
    var r = qd.transition;
    qd.transition = {};
    try {
        e(!1), t();
    } finally{
        je = n, qd.transition = r;
    }
}
function EN() {
    return lr().memoizedState;
}
function Iy(e, t, n) {
    var r = js(e);
    if (n = {
        lane: r,
        action: n,
        hasEagerState: !1,
        eagerState: null,
        next: null
    }, dN(e)) fN(t, n);
    else if (n = K_(e, t, n, r), n !== null) {
        var s = An();
        mr(n, e, r, s), pN(n, t, r);
    }
}
function Oy(e, t, n) {
    var r = js(e), s = {
        lane: r,
        action: n,
        hasEagerState: !1,
        eagerState: null,
        next: null
    };
    if (dN(e)) fN(t, s);
    else {
        var i = e.alternate;
        if (e.lanes === 0 && (i === null || i.lanes === 0) && (i = t.lastRenderedReducer, i !== null)) try {
            var a = t.lastRenderedState, o = i(a, n);
            if (s.hasEagerState = !0, s.eagerState = o, Nr(o, a)) {
                var l = t.interleaved;
                l === null ? (s.next = s, oh(t)) : (s.next = l.next, l.next = s), t.interleaved = s;
                return;
            }
        } catch  {} finally{}
        n = K_(e, t, s, r), n !== null && (s = An(), mr(n, e, r, s), pN(n, t, r));
    }
}
function dN(e) {
    var t = e.alternate;
    return e === lt || t !== null && t === lt;
}
function fN(e, t) {
    Ko = Yu = !0;
    var n = e.pending;
    n === null ? t.next = t : (t.next = n.next, n.next = t), e.pending = t;
}
function pN(e, t, n) {
    if (n & 4194240) {
        var r = t.lanes;
        r &= e.pendingLanes, n |= r, t.lanes = n, KT(e, n);
    }
}
var Vu = {
    readContext: or,
    useCallback: sn,
    useContext: sn,
    useEffect: sn,
    useImperativeHandle: sn,
    useInsertionEffect: sn,
    useLayoutEffect: sn,
    useMemo: sn,
    useReducer: sn,
    useRef: sn,
    useState: sn,
    useDebugValue: sn,
    useDeferredValue: sn,
    useTransition: sn,
    useMutableSource: sn,
    useSyncExternalStore: sn,
    useId: sn,
    unstable_isNewReconciler: !1
}, Cy = {
    readContext: or,
    useCallback: function(e, t) {
        return Pr().memoizedState = [
            e,
            t === void 0 ? null : t
        ], e;
    },
    useContext: or,
    useEffect: k0,
    useImperativeHandle: function(e, t, n) {
        return n = n != null ? n.concat([
            e
        ]) : null, au(4194308, 4, aN.bind(null, t, e), n);
    },
    useLayoutEffect: function(e, t) {
        return au(4194308, 4, e, t);
    },
    useInsertionEffect: function(e, t) {
        return au(4, 2, e, t);
    },
    useMemo: function(e, t) {
        var n = Pr();
        return t = t === void 0 ? null : t, e = e(), n.memoizedState = [
            e,
            t
        ], e;
    },
    useReducer: function(e, t, n) {
        var r = Pr();
        return t = n !== void 0 ? n(t) : t, r.memoizedState = r.baseState = t, e = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: e,
            lastRenderedState: t
        }, r.queue = e, e = e.dispatch = Iy.bind(null, lt, e), [
            r.memoizedState,
            e
        ];
    },
    useRef: function(e) {
        var t = Pr();
        return e = {
            current: e
        }, t.memoizedState = e;
    },
    useState: G0,
    useDebugValue: hh,
    useDeferredValue: function(e) {
        return Pr().memoizedState = e;
    },
    useTransition: function() {
        var e = G0(!1), t = e[0];
        return e = Ny.bind(null, e[1]), Pr().memoizedState = e, [
            t,
            e
        ];
    },
    useMutableSource: function() {},
    useSyncExternalStore: function(e, t, n) {
        var r = lt, s = Pr();
        if (it) {
            if (n === void 0) throw Error(ee(407));
            n = n();
        } else {
            if (n = t(), Gt === null) throw Error(ee(349));
            Gi & 30 || Q_(r, t, n);
        }
        s.memoizedState = n;
        var i = {
            value: n,
            getSnapshot: t
        };
        return s.queue = i, k0(eN.bind(null, r, i, e), [
            e
        ]), r.flags |= 2048, Rl(9, $_.bind(null, r, i, n, t), void 0, null), n;
    },
    useId: function() {
        var e = Pr(), t = Gt.identifierPrefix;
        if (it) {
            var n = es, r = $r;
            n = (r & ~(1 << 32 - Rr(r) - 1)).toString(32) + n, t = ":" + t + "R" + n, n = Al++, 0 < n && (t += "H" + n.toString(32)), t += ":";
        } else n = _y++, t = ":" + t + "r" + n.toString(32) + ":";
        return e.memoizedState = t;
    },
    unstable_isNewReconciler: !1
}, gy = {
    readContext: or,
    useCallback: lN,
    useContext: or,
    useEffect: Th,
    useImperativeHandle: oN,
    useInsertionEffect: sN,
    useLayoutEffect: iN,
    useMemo: cN,
    useReducer: Zd,
    useRef: rN,
    useState: function() {
        return Zd(Sl);
    },
    useDebugValue: hh,
    useDeferredValue: function(e) {
        var t = lr();
        return uN(t, Lt.memoizedState, e);
    },
    useTransition: function() {
        var e = Zd(Sl)[0], t = lr().memoizedState;
        return [
            e,
            t
        ];
    },
    useMutableSource: q_,
    useSyncExternalStore: Z_,
    useId: EN,
    unstable_isNewReconciler: !1
}, Ly = {
    readContext: or,
    useCallback: lN,
    useContext: or,
    useEffect: Th,
    useImperativeHandle: oN,
    useInsertionEffect: sN,
    useLayoutEffect: iN,
    useMemo: cN,
    useReducer: Qd,
    useRef: rN,
    useState: function() {
        return Qd(Sl);
    },
    useDebugValue: hh,
    useDeferredValue: function(e) {
        var t = lr();
        return Lt === null ? t.memoizedState = e : uN(t, Lt.memoizedState, e);
    },
    useTransition: function() {
        var e = Qd(Sl)[0], t = lr().memoizedState;
        return [
            e,
            t
        ];
    },
    useMutableSource: q_,
    useSyncExternalStore: Z_,
    useId: EN,
    unstable_isNewReconciler: !1
};
function fr(e, t) {
    if (e && e.defaultProps) {
        t = ct({}, t), e = e.defaultProps;
        for(var n in e)t[n] === void 0 && (t[n] = e[n]);
        return t;
    }
    return t;
}
function Lp(e, t, n, r) {
    t = e.memoizedState, n = n(r, t), n = n == null ? t : ct({}, t, n), e.memoizedState = n, e.lanes === 0 && (e.updateQueue.baseState = n);
}
var bE = {
    isMounted: function(e) {
        return (e = e._reactInternals) ? zi(e) === e : !1;
    },
    enqueueSetState: function(e, t, n) {
        e = e._reactInternals;
        var r = An(), s = js(e), i = ns(r, s);
        i.payload = t, n != null && (i.callback = n), t = Vs(e, i, s), t !== null && (mr(t, e, s, r), su(t, e, s));
    },
    enqueueReplaceState: function(e, t, n) {
        e = e._reactInternals;
        var r = An(), s = js(e), i = ns(r, s);
        i.tag = 1, i.payload = t, n != null && (i.callback = n), t = Vs(e, i, s), t !== null && (mr(t, e, s, r), su(t, e, s));
    },
    enqueueForceUpdate: function(e, t) {
        e = e._reactInternals;
        var n = An(), r = js(e), s = ns(n, r);
        s.tag = 2, t != null && (s.callback = t), t = Vs(e, s, r), t !== null && (mr(t, e, r, n), su(t, e, r));
    }
};
function H0(e, t, n, r, s, i, a) {
    return e = e.stateNode, typeof e.shouldComponentUpdate == "function" ? e.shouldComponentUpdate(r, i, a) : t.prototype && t.prototype.isPureReactComponent ? !El(n, r) || !El(s, i) : !0;
}
function TN(e, t, n) {
    var r = !1, s = ti, i = t.contextType;
    return typeof i == "object" && i !== null ? i = or(i) : (s = Pn(t) ? Fi : un.current, r = t.contextTypes, i = (r = r != null) ? Ga(e, s) : ti), t = new t(n, i), e.memoizedState = t.state !== null && t.state !== void 0 ? t.state : null, t.updater = bE, e.stateNode = t, t._reactInternals = e, r && (e = e.stateNode, e.__reactInternalMemoizedUnmaskedChildContext = s, e.__reactInternalMemoizedMaskedChildContext = i), t;
}
function Y0(e, t, n, r) {
    e = t.state, typeof t.componentWillReceiveProps == "function" && t.componentWillReceiveProps(n, r), typeof t.UNSAFE_componentWillReceiveProps == "function" && t.UNSAFE_componentWillReceiveProps(n, r), t.state !== e && bE.enqueueReplaceState(t, t.state, null);
}
function yp(e, t, n, r) {
    var s = e.stateNode;
    s.props = n, s.state = e.memoizedState, s.refs = {}, lh(e);
    var i = t.contextType;
    typeof i == "object" && i !== null ? s.context = or(i) : (i = Pn(t) ? Fi : un.current, s.context = Ga(e, i)), s.state = e.memoizedState, i = t.getDerivedStateFromProps, typeof i == "function" && (Lp(e, t, i, n), s.state = e.memoizedState), typeof t.getDerivedStateFromProps == "function" || typeof s.getSnapshotBeforeUpdate == "function" || typeof s.UNSAFE_componentWillMount != "function" && typeof s.componentWillMount != "function" || (t = s.state, typeof s.componentWillMount == "function" && s.componentWillMount(), typeof s.UNSAFE_componentWillMount == "function" && s.UNSAFE_componentWillMount(), t !== s.state && bE.enqueueReplaceState(s, s.state, null), ku(e, n, s, r), s.state = e.memoizedState), typeof s.componentDidMount == "function" && (e.flags |= 4194308);
}
function Va(e, t) {
    try {
        var n = "", r = t;
        do n += t2(r), r = r.return;
        while (r)
        var s = n;
    } catch (i) {
        s = `
Error generating stack: ` + i.message + `
` + i.stack;
    }
    return {
        value: e,
        source: t,
        stack: s,
        digest: null
    };
}
function $d(e, t, n) {
    return {
        value: e,
        source: null,
        stack: n ?? null,
        digest: t ?? null
    };
}
function vp(e, t) {
    try {
        console.error(t.value);
    } catch (n) {
        setTimeout(function() {
            throw n;
        });
    }
}
var yy = typeof WeakMap == "function" ? WeakMap : Map;
function hN(e, t, n) {
    n = ns(-1, n), n.tag = 3, n.payload = {
        element: null
    };
    var r = t.value;
    return n.callback = function() {
        ju || (ju = !0, Gp = r), vp(e, t);
    }, n;
}
function AN(e, t, n) {
    n = ns(-1, n), n.tag = 3;
    var r = e.type.getDerivedStateFromError;
    if (typeof r == "function") {
        var s = t.value;
        n.payload = function() {
            return r(s);
        }, n.callback = function() {
            vp(e, t);
        };
    }
    var i = e.stateNode;
    return i !== null && typeof i.componentDidCatch == "function" && (n.callback = function() {
        vp(e, t), typeof r != "function" && (Ws === null ? Ws = /* @__PURE__ */ new Set([
            this
        ]) : Ws.add(this));
        var a = t.stack;
        this.componentDidCatch(t.value, {
            componentStack: a !== null ? a : ""
        });
    }), n;
}
function V0(e, t, n) {
    var r = e.pingCache;
    if (r === null) {
        r = e.pingCache = new yy();
        var s = /* @__PURE__ */ new Set();
        r.set(t, s);
    } else s = r.get(t), s === void 0 && (s = /* @__PURE__ */ new Set(), r.set(t, s));
    s.has(n) || (s.add(n), e = Yy.bind(null, e, t, n), t.then(e, e));
}
function W0(e) {
    do {
        var t;
        if ((t = e.tag === 13) && (t = e.memoizedState, t = t !== null ? t.dehydrated !== null : !0), t) return e;
        e = e.return;
    }while (e !== null)
    return null;
}
function j0(e, t, n, r, s) {
    return e.mode & 1 ? (e.flags |= 65536, e.lanes = s, e) : (e === t ? e.flags |= 65536 : (e.flags |= 128, n.flags |= 131072, n.flags &= -52805, n.tag === 1 && (n.alternate === null ? n.tag = 17 : (t = ns(-1, 1), t.tag = 2, Vs(n, t, 1))), n.lanes |= 1), e);
}
var vy = hs.ReactCurrentOwner, yn = !1;
function pn(e, t, n, r) {
    t.child = e === null ? X_(t, null, n, r) : Ha(t, e.child, n, r);
}
function X0(e, t, n, r, s) {
    n = n.render;
    var i = t.ref;
    return Pa(t, s), r = fh(e, t, n, r, i, s), n = ph(), e !== null && !yn ? (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~s, ls(e, t, s)) : (it && n && th(t), t.flags |= 1, pn(e, t, r, s), t.child);
}
function K0(e, t, n, r, s) {
    if (e === null) {
        var i = n.type;
        return typeof i == "function" && !Oh(i) && i.defaultProps === void 0 && n.compare === null && n.defaultProps === void 0 ? (t.tag = 15, t.type = i, SN(e, t, i, r, s)) : (e = uu(n.type, null, r, t, t.mode, s), e.ref = t.ref, e.return = t, t.child = e);
    }
    if (i = e.child, !(e.lanes & s)) {
        var a = i.memoizedProps;
        if (n = n.compare, n = n !== null ? n : El, n(a, r) && e.ref === t.ref) return ls(e, t, s);
    }
    return t.flags |= 1, e = Xs(i, r), e.ref = t.ref, e.return = t, t.child = e;
}
function SN(e, t, n, r, s) {
    if (e !== null) {
        var i = e.memoizedProps;
        if (El(i, r) && e.ref === t.ref) if (yn = !1, t.pendingProps = r = i, (e.lanes & s) !== 0) e.flags & 131072 && (yn = !0);
        else return t.lanes = e.lanes, ls(e, t, s);
    }
    return bp(e, t, n, r, s);
}
function RN(e, t, n) {
    var r = t.pendingProps, s = r.children, i = e !== null ? e.memoizedState : null;
    if (r.mode === "hidden") if (!(t.mode & 1)) t.memoizedState = {
        baseLanes: 0,
        cachePool: null,
        transitions: null
    }, $e(Na, Hn), Hn |= n;
    else {
        if (!(n & 1073741824)) return e = i !== null ? i.baseLanes | n : n, t.lanes = t.childLanes = 1073741824, t.memoizedState = {
            baseLanes: e,
            cachePool: null,
            transitions: null
        }, t.updateQueue = null, $e(Na, Hn), Hn |= e, null;
        t.memoizedState = {
            baseLanes: 0,
            cachePool: null,
            transitions: null
        }, r = i !== null ? i.baseLanes : n, $e(Na, Hn), Hn |= r;
    }
    else i !== null ? (r = i.baseLanes | n, t.memoizedState = null) : r = n, $e(Na, Hn), Hn |= r;
    return pn(e, t, s, n), t.child;
}
function mN(e, t) {
    var n = t.ref;
    (e === null && n !== null || e !== null && e.ref !== n) && (t.flags |= 512, t.flags |= 2097152);
}
function bp(e, t, n, r, s) {
    var i = Pn(n) ? Fi : un.current;
    return i = Ga(t, i), Pa(t, s), n = fh(e, t, n, r, i, s), r = ph(), e !== null && !yn ? (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~s, ls(e, t, s)) : (it && r && th(t), t.flags |= 1, pn(e, t, n, s), t.child);
}
function z0(e, t, n, r, s) {
    if (Pn(n)) {
        var i = !0;
        xu(t);
    } else i = !1;
    if (Pa(t, s), t.stateNode === null) ou(e, t), TN(t, n, r), yp(t, n, r, s), r = !0;
    else if (e === null) {
        var a = t.stateNode, o = t.memoizedProps;
        a.props = o;
        var l = a.context, c = n.contextType;
        typeof c == "object" && c !== null ? c = or(c) : (c = Pn(n) ? Fi : un.current, c = Ga(t, c));
        var u = n.getDerivedStateFromProps, E = typeof u == "function" || typeof a.getSnapshotBeforeUpdate == "function";
        E || typeof a.UNSAFE_componentWillReceiveProps != "function" && typeof a.componentWillReceiveProps != "function" || (o !== r || l !== c) && Y0(t, a, r, c), Ls = !1;
        var p = t.memoizedState;
        a.state = p, ku(t, r, a, s), l = t.memoizedState, o !== r || p !== l || bn.current || Ls ? (typeof u == "function" && (Lp(t, n, u, r), l = t.memoizedState), (o = Ls || H0(t, n, o, r, p, l, c)) ? (E || typeof a.UNSAFE_componentWillMount != "function" && typeof a.componentWillMount != "function" || (typeof a.componentWillMount == "function" && a.componentWillMount(), typeof a.UNSAFE_componentWillMount == "function" && a.UNSAFE_componentWillMount()), typeof a.componentDidMount == "function" && (t.flags |= 4194308)) : (typeof a.componentDidMount == "function" && (t.flags |= 4194308), t.memoizedProps = r, t.memoizedState = l), a.props = r, a.state = l, a.context = c, r = o) : (typeof a.componentDidMount == "function" && (t.flags |= 4194308), r = !1);
    } else {
        a = t.stateNode, z_(e, t), o = t.memoizedProps, c = t.type === t.elementType ? o : fr(t.type, o), a.props = c, E = t.pendingProps, p = a.context, l = n.contextType, typeof l == "object" && l !== null ? l = or(l) : (l = Pn(n) ? Fi : un.current, l = Ga(t, l));
        var A = n.getDerivedStateFromProps;
        (u = typeof A == "function" || typeof a.getSnapshotBeforeUpdate == "function") || typeof a.UNSAFE_componentWillReceiveProps != "function" && typeof a.componentWillReceiveProps != "function" || (o !== E || p !== l) && Y0(t, a, r, l), Ls = !1, p = t.memoizedState, a.state = p, ku(t, r, a, s);
        var R = t.memoizedState;
        o !== E || p !== R || bn.current || Ls ? (typeof A == "function" && (Lp(t, n, A, r), R = t.memoizedState), (c = Ls || H0(t, n, c, r, p, R, l) || !1) ? (u || typeof a.UNSAFE_componentWillUpdate != "function" && typeof a.componentWillUpdate != "function" || (typeof a.componentWillUpdate == "function" && a.componentWillUpdate(r, R, l), typeof a.UNSAFE_componentWillUpdate == "function" && a.UNSAFE_componentWillUpdate(r, R, l)), typeof a.componentDidUpdate == "function" && (t.flags |= 4), typeof a.getSnapshotBeforeUpdate == "function" && (t.flags |= 1024)) : (typeof a.componentDidUpdate != "function" || o === e.memoizedProps && p === e.memoizedState || (t.flags |= 4), typeof a.getSnapshotBeforeUpdate != "function" || o === e.memoizedProps && p === e.memoizedState || (t.flags |= 1024), t.memoizedProps = r, t.memoizedState = R), a.props = r, a.state = R, a.context = l, r = c) : (typeof a.componentDidUpdate != "function" || o === e.memoizedProps && p === e.memoizedState || (t.flags |= 4), typeof a.getSnapshotBeforeUpdate != "function" || o === e.memoizedProps && p === e.memoizedState || (t.flags |= 1024), r = !1);
    }
    return Pp(e, t, n, r, i, s);
}
function Pp(e, t, n, r, s, i) {
    mN(e, t);
    var a = (t.flags & 128) !== 0;
    if (!r && !a) return s && D0(t, n, !1), ls(e, t, i);
    r = t.stateNode, vy.current = t;
    var o = a && typeof n.getDerivedStateFromError != "function" ? null : r.render();
    return t.flags |= 1, e !== null && a ? (t.child = Ha(t, e.child, null, i), t.child = Ha(t, null, o, i)) : pn(e, t, o, i), t.memoizedState = r.state, s && D0(t, n, !0), t.child;
}
function _N(e) {
    var t = e.stateNode;
    t.pendingContext ? M0(e, t.pendingContext, t.pendingContext !== t.context) : t.context && M0(e, t.context, !1), ch(e, t.containerInfo);
}
function J0(e, t, n, r, s) {
    return ka(), rh(s), t.flags |= 256, pn(e, t, n, r), t.child;
}
var Mp = {
    dehydrated: null,
    treeContext: null,
    retryLane: 0
};
function Dp(e) {
    return {
        baseLanes: e,
        cachePool: null,
        transitions: null
    };
}
function NN(e, t, n) {
    var r = t.pendingProps, s = ot.current, i = !1, a = (t.flags & 128) !== 0, o;
    if ((o = a) || (o = e !== null && e.memoizedState === null ? !1 : (s & 2) !== 0), o ? (i = !0, t.flags &= -129) : (e === null || e.memoizedState !== null) && (s |= 1), $e(ot, s & 1), e === null) return Cp(t), e = t.memoizedState, e !== null && (e = e.dehydrated, e !== null) ? (t.mode & 1 ? e.data === "$!" ? t.lanes = 8 : t.lanes = 1073741824 : t.lanes = 1, null) : (a = r.children, e = r.fallback, i ? (r = t.mode, i = t.child, a = {
        mode: "hidden",
        children: a
    }, !(r & 1) && i !== null ? (i.childLanes = 0, i.pendingProps = a) : i = DE(a, r, 0, null), e = Mi(e, r, n, null), i.return = t, e.return = t, i.sibling = e, t.child = i, t.child.memoizedState = Dp(n), t.memoizedState = Mp, e) : Ah(t, a));
    if (s = e.memoizedState, s !== null && (o = s.dehydrated, o !== null)) return by(e, t, a, r, o, s, n);
    if (i) {
        i = r.fallback, a = t.mode, s = e.child, o = s.sibling;
        var l = {
            mode: "hidden",
            children: r.children
        };
        return !(a & 1) && t.child !== s ? (r = t.child, r.childLanes = 0, r.pendingProps = l, t.deletions = null) : (r = Xs(s, l), r.subtreeFlags = s.subtreeFlags & 14680064), o !== null ? i = Xs(o, i) : (i = Mi(i, a, n, null), i.flags |= 2), i.return = t, r.return = t, r.sibling = i, t.child = r, r = i, i = t.child, a = e.child.memoizedState, a = a === null ? Dp(n) : {
            baseLanes: a.baseLanes | n,
            cachePool: null,
            transitions: a.transitions
        }, i.memoizedState = a, i.childLanes = e.childLanes & ~n, t.memoizedState = Mp, r;
    }
    return i = e.child, e = i.sibling, r = Xs(i, {
        mode: "visible",
        children: r.children
    }), !(t.mode & 1) && (r.lanes = n), r.return = t, r.sibling = null, e !== null && (n = t.deletions, n === null ? (t.deletions = [
        e
    ], t.flags |= 16) : n.push(e)), t.child = r, t.memoizedState = null, r;
}
function Ah(e, t) {
    return t = DE({
        mode: "visible",
        children: t
    }, e.mode, 0, null), t.return = e, e.child = t;
}
function gc(e, t, n, r) {
    return r !== null && rh(r), Ha(t, e.child, null, n), e = Ah(t, t.pendingProps.children), e.flags |= 2, t.memoizedState = null, e;
}
function by(e, t, n, r, s, i, a) {
    if (n) return t.flags & 256 ? (t.flags &= -257, r = $d(Error(ee(422))), gc(e, t, a, r)) : t.memoizedState !== null ? (t.child = e.child, t.flags |= 128, null) : (i = r.fallback, s = t.mode, r = DE({
        mode: "visible",
        children: r.children
    }, s, 0, null), i = Mi(i, s, a, null), i.flags |= 2, r.return = t, i.return = t, r.sibling = i, t.child = r, t.mode & 1 && Ha(t, e.child, null, a), t.child.memoizedState = Dp(a), t.memoizedState = Mp, i);
    if (!(t.mode & 1)) return gc(e, t, a, null);
    if (s.data === "$!") {
        if (r = s.nextSibling && s.nextSibling.dataset, r) var o = r.dgst;
        return r = o, i = Error(ee(419)), r = $d(i, r, void 0), gc(e, t, a, r);
    }
    if (o = (a & e.childLanes) !== 0, yn || o) {
        if (r = Gt, r !== null) {
            switch(a & -a){
                case 4:
                    s = 2;
                    break;
                case 16:
                    s = 8;
                    break;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    s = 32;
                    break;
                case 536870912:
                    s = 268435456;
                    break;
                default:
                    s = 0;
            }
            s = s & (r.suspendedLanes | a) ? 0 : s, s !== 0 && s !== i.retryLane && (i.retryLane = s, os(e, s), mr(r, e, s, -1));
        }
        return Ih(), r = $d(Error(ee(421))), gc(e, t, a, r);
    }
    return s.data === "$?" ? (t.flags |= 128, t.child = e.child, t = Vy.bind(null, e), s._reactRetry = t, null) : (e = i.treeContext, Vn = Ys(s.nextSibling), Wn = t, it = !0, hr = null, e !== null && (tr[nr++] = $r, tr[nr++] = es, tr[nr++] = Bi, $r = e.id, es = e.overflow, Bi = t), t = Ah(t, r.children), t.flags |= 4096, t);
}
function q0(e, t, n) {
    e.lanes |= t;
    var r = e.alternate;
    r !== null && (r.lanes |= t), gp(e.return, t, n);
}
function ef(e, t, n, r, s) {
    var i = e.memoizedState;
    i === null ? e.memoizedState = {
        isBackwards: t,
        rendering: null,
        renderingStartTime: 0,
        last: r,
        tail: n,
        tailMode: s
    } : (i.isBackwards = t, i.rendering = null, i.renderingStartTime = 0, i.last = r, i.tail = n, i.tailMode = s);
}
function IN(e, t, n) {
    var r = t.pendingProps, s = r.revealOrder, i = r.tail;
    if (pn(e, t, r.children, n), r = ot.current, r & 2) r = r & 1 | 2, t.flags |= 128;
    else {
        if (e !== null && e.flags & 128) e: for(e = t.child; e !== null;){
            if (e.tag === 13) e.memoizedState !== null && q0(e, n, t);
            else if (e.tag === 19) q0(e, n, t);
            else if (e.child !== null) {
                e.child.return = e, e = e.child;
                continue;
            }
            if (e === t) break e;
            for(; e.sibling === null;){
                if (e.return === null || e.return === t) break e;
                e = e.return;
            }
            e.sibling.return = e.return, e = e.sibling;
        }
        r &= 1;
    }
    if ($e(ot, r), !(t.mode & 1)) t.memoizedState = null;
    else switch(s){
        case "forwards":
            for(n = t.child, s = null; n !== null;)e = n.alternate, e !== null && Hu(e) === null && (s = n), n = n.sibling;
            n = s, n === null ? (s = t.child, t.child = null) : (s = n.sibling, n.sibling = null), ef(t, !1, s, n, i);
            break;
        case "backwards":
            for(n = null, s = t.child, t.child = null; s !== null;){
                if (e = s.alternate, e !== null && Hu(e) === null) {
                    t.child = s;
                    break;
                }
                e = s.sibling, s.sibling = n, n = s, s = e;
            }
            ef(t, !0, n, null, i);
            break;
        case "together":
            ef(t, !1, null, null, void 0);
            break;
        default:
            t.memoizedState = null;
    }
    return t.child;
}
function ou(e, t) {
    !(t.mode & 1) && e !== null && (e.alternate = null, t.alternate = null, t.flags |= 2);
}
function ls(e, t, n) {
    if (e !== null && (t.dependencies = e.dependencies), ki |= t.lanes, !(n & t.childLanes)) return null;
    if (e !== null && t.child !== e.child) throw Error(ee(153));
    if (t.child !== null) {
        for(e = t.child, n = Xs(e, e.pendingProps), t.child = n, n.return = t; e.sibling !== null;)e = e.sibling, n = n.sibling = Xs(e, e.pendingProps), n.return = t;
        n.sibling = null;
    }
    return t.child;
}
function Py(e, t, n) {
    switch(t.tag){
        case 3:
            _N(t), ka();
            break;
        case 5:
            J_(t);
            break;
        case 1:
            Pn(t.type) && xu(t);
            break;
        case 4:
            ch(t, t.stateNode.containerInfo);
            break;
        case 10:
            var r = t.type._context, s = t.memoizedProps.value;
            $e(Bu, r._currentValue), r._currentValue = s;
            break;
        case 13:
            if (r = t.memoizedState, r !== null) return r.dehydrated !== null ? ($e(ot, ot.current & 1), t.flags |= 128, null) : n & t.child.childLanes ? NN(e, t, n) : ($e(ot, ot.current & 1), e = ls(e, t, n), e !== null ? e.sibling : null);
            $e(ot, ot.current & 1);
            break;
        case 19:
            if (r = (n & t.childLanes) !== 0, e.flags & 128) {
                if (r) return IN(e, t, n);
                t.flags |= 128;
            }
            if (s = t.memoizedState, s !== null && (s.rendering = null, s.tail = null, s.lastEffect = null), $e(ot, ot.current), r) break;
            return null;
        case 22:
        case 23:
            return t.lanes = 0, RN(e, t, n);
    }
    return ls(e, t, n);
}
var ON, wp, CN, gN;
ON = function(e, t) {
    for(var n = t.child; n !== null;){
        if (n.tag === 5 || n.tag === 6) e.appendChild(n.stateNode);
        else if (n.tag !== 4 && n.child !== null) {
            n.child.return = n, n = n.child;
            continue;
        }
        if (n === t) break;
        for(; n.sibling === null;){
            if (n.return === null || n.return === t) return;
            n = n.return;
        }
        n.sibling.return = n.return, n = n.sibling;
    }
};
wp = function() {};
CN = function(e, t, n, r) {
    var s = e.memoizedProps;
    if (s !== r) {
        e = t.stateNode, gi(kr.current);
        var i = null;
        switch(n){
            case "input":
                s = np(e, s), r = np(e, r), i = [];
                break;
            case "select":
                s = ct({}, s, {
                    value: void 0
                }), r = ct({}, r, {
                    value: void 0
                }), i = [];
                break;
            case "textarea":
                s = ip(e, s), r = ip(e, r), i = [];
                break;
            default:
                typeof s.onClick != "function" && typeof r.onClick == "function" && (e.onclick = Du);
        }
        op(n, r);
        var a;
        n = null;
        for(c in s)if (!r.hasOwnProperty(c) && s.hasOwnProperty(c) && s[c] != null) if (c === "style") {
            var o = s[c];
            for(a in o)o.hasOwnProperty(a) && (n || (n = {}), n[a] = "");
        } else c !== "dangerouslySetInnerHTML" && c !== "children" && c !== "suppressContentEditableWarning" && c !== "suppressHydrationWarning" && c !== "autoFocus" && (sl.hasOwnProperty(c) ? i || (i = []) : (i = i || []).push(c, null));
        for(c in r){
            var l = r[c];
            if (o = s != null ? s[c] : void 0, r.hasOwnProperty(c) && l !== o && (l != null || o != null)) if (c === "style") if (o) {
                for(a in o)!o.hasOwnProperty(a) || l && l.hasOwnProperty(a) || (n || (n = {}), n[a] = "");
                for(a in l)l.hasOwnProperty(a) && o[a] !== l[a] && (n || (n = {}), n[a] = l[a]);
            } else n || (i || (i = []), i.push(c, n)), n = l;
            else c === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0, o = o ? o.__html : void 0, l != null && o !== l && (i = i || []).push(c, l)) : c === "children" ? typeof l != "string" && typeof l != "number" || (i = i || []).push(c, "" + l) : c !== "suppressContentEditableWarning" && c !== "suppressHydrationWarning" && (sl.hasOwnProperty(c) ? (l != null && c === "onScroll" && nt("scroll", e), i || o === l || (i = [])) : (i = i || []).push(c, l));
        }
        n && (i = i || []).push("style", n);
        var c = i;
        (t.updateQueue = c) && (t.flags |= 4);
    }
};
gN = function(e, t, n, r) {
    n !== r && (t.flags |= 4);
};
function vo(e, t) {
    if (!it) switch(e.tailMode){
        case "hidden":
            t = e.tail;
            for(var n = null; t !== null;)t.alternate !== null && (n = t), t = t.sibling;
            n === null ? e.tail = null : n.sibling = null;
            break;
        case "collapsed":
            n = e.tail;
            for(var r = null; n !== null;)n.alternate !== null && (r = n), n = n.sibling;
            r === null ? t || e.tail === null ? e.tail = null : e.tail.sibling = null : r.sibling = null;
    }
}
function an(e) {
    var t = e.alternate !== null && e.alternate.child === e.child, n = 0, r = 0;
    if (t) for(var s = e.child; s !== null;)n |= s.lanes | s.childLanes, r |= s.subtreeFlags & 14680064, r |= s.flags & 14680064, s.return = e, s = s.sibling;
    else for(s = e.child; s !== null;)n |= s.lanes | s.childLanes, r |= s.subtreeFlags, r |= s.flags, s.return = e, s = s.sibling;
    return e.subtreeFlags |= r, e.childLanes = n, t;
}
function My(e, t, n) {
    var r = t.pendingProps;
    switch(nh(t), t.tag){
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return an(t), null;
        case 1:
            return Pn(t.type) && wu(), an(t), null;
        case 3:
            return r = t.stateNode, Ya(), rt(bn), rt(un), Eh(), r.pendingContext && (r.context = r.pendingContext, r.pendingContext = null), (e === null || e.child === null) && (Oc(t) ? t.flags |= 4 : e === null || e.memoizedState.isDehydrated && !(t.flags & 256) || (t.flags |= 1024, hr !== null && (Yp(hr), hr = null))), wp(e, t), an(t), null;
        case 5:
            uh(t);
            var s = gi(hl.current);
            if (n = t.type, e !== null && t.stateNode != null) CN(e, t, n, r, s), e.ref !== t.ref && (t.flags |= 512, t.flags |= 2097152);
            else {
                if (!r) {
                    if (t.stateNode === null) throw Error(ee(166));
                    return an(t), null;
                }
                if (e = gi(kr.current), Oc(t)) {
                    r = t.stateNode, n = t.type;
                    var i = t.memoizedProps;
                    switch(r[Dr] = t, r[pl] = i, e = (t.mode & 1) !== 0, n){
                        case "dialog":
                            nt("cancel", r), nt("close", r);
                            break;
                        case "iframe":
                        case "object":
                        case "embed":
                            nt("load", r);
                            break;
                        case "video":
                        case "audio":
                            for(s = 0; s < Ho.length; s++)nt(Ho[s], r);
                            break;
                        case "source":
                            nt("error", r);
                            break;
                        case "img":
                        case "image":
                        case "link":
                            nt("error", r), nt("load", r);
                            break;
                        case "details":
                            nt("toggle", r);
                            break;
                        case "input":
                            i0(r, i), nt("invalid", r);
                            break;
                        case "select":
                            r._wrapperState = {
                                wasMultiple: !!i.multiple
                            }, nt("invalid", r);
                            break;
                        case "textarea":
                            o0(r, i), nt("invalid", r);
                    }
                    op(n, i), s = null;
                    for(var a in i)if (i.hasOwnProperty(a)) {
                        var o = i[a];
                        a === "children" ? typeof o == "string" ? r.textContent !== o && (i.suppressHydrationWarning !== !0 && Ic(r.textContent, o, e), s = [
                            "children",
                            o
                        ]) : typeof o == "number" && r.textContent !== "" + o && (i.suppressHydrationWarning !== !0 && Ic(r.textContent, o, e), s = [
                            "children",
                            "" + o
                        ]) : sl.hasOwnProperty(a) && o != null && a === "onScroll" && nt("scroll", r);
                    }
                    switch(n){
                        case "input":
                            Tc(r), a0(r, i, !0);
                            break;
                        case "textarea":
                            Tc(r), l0(r);
                            break;
                        case "select":
                        case "option":
                            break;
                        default:
                            typeof i.onClick == "function" && (r.onclick = Du);
                    }
                    r = s, t.updateQueue = r, r !== null && (t.flags |= 4);
                } else {
                    a = s.nodeType === 9 ? s : s.ownerDocument, e === "http://www.w3.org/1999/xhtml" && (e = e_(n)), e === "http://www.w3.org/1999/xhtml" ? n === "script" ? (e = a.createElement("div"), e.innerHTML = "<script><\/script>", e = e.removeChild(e.firstChild)) : typeof r.is == "string" ? e = a.createElement(n, {
                        is: r.is
                    }) : (e = a.createElement(n), n === "select" && (a = e, r.multiple ? a.multiple = !0 : r.size && (a.size = r.size))) : e = a.createElementNS(e, n), e[Dr] = t, e[pl] = r, ON(e, t, !1, !1), t.stateNode = e;
                    e: {
                        switch(a = lp(n, r), n){
                            case "dialog":
                                nt("cancel", e), nt("close", e), s = r;
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                nt("load", e), s = r;
                                break;
                            case "video":
                            case "audio":
                                for(s = 0; s < Ho.length; s++)nt(Ho[s], e);
                                s = r;
                                break;
                            case "source":
                                nt("error", e), s = r;
                                break;
                            case "img":
                            case "image":
                            case "link":
                                nt("error", e), nt("load", e), s = r;
                                break;
                            case "details":
                                nt("toggle", e), s = r;
                                break;
                            case "input":
                                i0(e, r), s = np(e, r), nt("invalid", e);
                                break;
                            case "option":
                                s = r;
                                break;
                            case "select":
                                e._wrapperState = {
                                    wasMultiple: !!r.multiple
                                }, s = ct({}, r, {
                                    value: void 0
                                }), nt("invalid", e);
                                break;
                            case "textarea":
                                o0(e, r), s = ip(e, r), nt("invalid", e);
                                break;
                            default:
                                s = r;
                        }
                        op(n, s), o = s;
                        for(i in o)if (o.hasOwnProperty(i)) {
                            var l = o[i];
                            i === "style" ? r_(e, l) : i === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0, l != null && t_(e, l)) : i === "children" ? typeof l == "string" ? (n !== "textarea" || l !== "") && il(e, l) : typeof l == "number" && il(e, "" + l) : i !== "suppressContentEditableWarning" && i !== "suppressHydrationWarning" && i !== "autoFocus" && (sl.hasOwnProperty(i) ? l != null && i === "onScroll" && nt("scroll", e) : l != null && HT(e, i, l, a));
                        }
                        switch(n){
                            case "input":
                                Tc(e), a0(e, r, !1);
                                break;
                            case "textarea":
                                Tc(e), l0(e);
                                break;
                            case "option":
                                r.value != null && e.setAttribute("value", "" + ei(r.value));
                                break;
                            case "select":
                                e.multiple = !!r.multiple, i = r.value, i != null ? La(e, !!r.multiple, i, !1) : r.defaultValue != null && La(e, !!r.multiple, r.defaultValue, !0);
                                break;
                            default:
                                typeof s.onClick == "function" && (e.onclick = Du);
                        }
                        switch(n){
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                r = !!r.autoFocus;
                                break e;
                            case "img":
                                r = !0;
                                break e;
                            default:
                                r = !1;
                        }
                    }
                    r && (t.flags |= 4);
                }
                t.ref !== null && (t.flags |= 512, t.flags |= 2097152);
            }
            return an(t), null;
        case 6:
            if (e && t.stateNode != null) gN(e, t, e.memoizedProps, r);
            else {
                if (typeof r != "string" && t.stateNode === null) throw Error(ee(166));
                if (n = gi(hl.current), gi(kr.current), Oc(t)) {
                    if (r = t.stateNode, n = t.memoizedProps, r[Dr] = t, (i = r.nodeValue !== n) && (e = Wn, e !== null)) switch(e.tag){
                        case 3:
                            Ic(r.nodeValue, n, (e.mode & 1) !== 0);
                            break;
                        case 5:
                            e.memoizedProps.suppressHydrationWarning !== !0 && Ic(r.nodeValue, n, (e.mode & 1) !== 0);
                    }
                    i && (t.flags |= 4);
                } else r = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(r), r[Dr] = t, t.stateNode = r;
            }
            return an(t), null;
        case 13:
            if (rt(ot), r = t.memoizedState, e === null || e.memoizedState !== null && e.memoizedState.dehydrated !== null) {
                if (it && Vn !== null && t.mode & 1 && !(t.flags & 128)) W_(), ka(), t.flags |= 98560, i = !1;
                else if (i = Oc(t), r !== null && r.dehydrated !== null) {
                    if (e === null) {
                        if (!i) throw Error(ee(318));
                        if (i = t.memoizedState, i = i !== null ? i.dehydrated : null, !i) throw Error(ee(317));
                        i[Dr] = t;
                    } else ka(), !(t.flags & 128) && (t.memoizedState = null), t.flags |= 4;
                    an(t), i = !1;
                } else hr !== null && (Yp(hr), hr = null), i = !0;
                if (!i) return t.flags & 65536 ? t : null;
            }
            return t.flags & 128 ? (t.lanes = n, t) : (r = r !== null, r !== (e !== null && e.memoizedState !== null) && r && (t.child.flags |= 8192, t.mode & 1 && (e === null || ot.current & 1 ? bt === 0 && (bt = 3) : Ih())), t.updateQueue !== null && (t.flags |= 4), an(t), null);
        case 4:
            return Ya(), wp(e, t), e === null && dl(t.stateNode.containerInfo), an(t), null;
        case 10:
            return ah(t.type._context), an(t), null;
        case 17:
            return Pn(t.type) && wu(), an(t), null;
        case 19:
            if (rt(ot), i = t.memoizedState, i === null) return an(t), null;
            if (r = (t.flags & 128) !== 0, a = i.rendering, a === null) if (r) vo(i, !1);
            else {
                if (bt !== 0 || e !== null && e.flags & 128) for(e = t.child; e !== null;){
                    if (a = Hu(e), a !== null) {
                        for(t.flags |= 128, vo(i, !1), r = a.updateQueue, r !== null && (t.updateQueue = r, t.flags |= 4), t.subtreeFlags = 0, r = n, n = t.child; n !== null;)i = n, e = r, i.flags &= 14680066, a = i.alternate, a === null ? (i.childLanes = 0, i.lanes = e, i.child = null, i.subtreeFlags = 0, i.memoizedProps = null, i.memoizedState = null, i.updateQueue = null, i.dependencies = null, i.stateNode = null) : (i.childLanes = a.childLanes, i.lanes = a.lanes, i.child = a.child, i.subtreeFlags = 0, i.deletions = null, i.memoizedProps = a.memoizedProps, i.memoizedState = a.memoizedState, i.updateQueue = a.updateQueue, i.type = a.type, e = a.dependencies, i.dependencies = e === null ? null : {
                            lanes: e.lanes,
                            firstContext: e.firstContext
                        }), n = n.sibling;
                        return $e(ot, ot.current & 1 | 2), t.child;
                    }
                    e = e.sibling;
                }
                i.tail !== null && St() > Wa && (t.flags |= 128, r = !0, vo(i, !1), t.lanes = 4194304);
            }
            else {
                if (!r) if (e = Hu(a), e !== null) {
                    if (t.flags |= 128, r = !0, n = e.updateQueue, n !== null && (t.updateQueue = n, t.flags |= 4), vo(i, !0), i.tail === null && i.tailMode === "hidden" && !a.alternate && !it) return an(t), null;
                } else 2 * St() - i.renderingStartTime > Wa && n !== 1073741824 && (t.flags |= 128, r = !0, vo(i, !1), t.lanes = 4194304);
                i.isBackwards ? (a.sibling = t.child, t.child = a) : (n = i.last, n !== null ? n.sibling = a : t.child = a, i.last = a);
            }
            return i.tail !== null ? (t = i.tail, i.rendering = t, i.tail = t.sibling, i.renderingStartTime = St(), t.sibling = null, n = ot.current, $e(ot, r ? n & 1 | 2 : n & 1), t) : (an(t), null);
        case 22:
        case 23:
            return Nh(), r = t.memoizedState !== null, e !== null && e.memoizedState !== null !== r && (t.flags |= 8192), r && t.mode & 1 ? Hn & 1073741824 && (an(t), t.subtreeFlags & 6 && (t.flags |= 8192)) : an(t), null;
        case 24:
            return null;
        case 25:
            return null;
    }
    throw Error(ee(156, t.tag));
}
function Dy(e, t) {
    switch(nh(t), t.tag){
        case 1:
            return Pn(t.type) && wu(), e = t.flags, e & 65536 ? (t.flags = e & -65537 | 128, t) : null;
        case 3:
            return Ya(), rt(bn), rt(un), Eh(), e = t.flags, e & 65536 && !(e & 128) ? (t.flags = e & -65537 | 128, t) : null;
        case 5:
            return uh(t), null;
        case 13:
            if (rt(ot), e = t.memoizedState, e !== null && e.dehydrated !== null) {
                if (t.alternate === null) throw Error(ee(340));
                ka();
            }
            return e = t.flags, e & 65536 ? (t.flags = e & -65537 | 128, t) : null;
        case 19:
            return rt(ot), null;
        case 4:
            return Ya(), null;
        case 10:
            return ah(t.type._context), null;
        case 22:
        case 23:
            return Nh(), null;
        case 24:
            return null;
        default:
            return null;
    }
}
var Lc = !1, cn = !1, wy = typeof WeakSet == "function" ? WeakSet : Set, oe = null;
function _a(e, t) {
    var n = e.ref;
    if (n !== null) if (typeof n == "function") try {
        n(null);
    } catch (r) {
        ft(e, t, r);
    }
    else n.current = null;
}
function xp(e, t, n) {
    try {
        n();
    } catch (r) {
        ft(e, t, r);
    }
}
var Z0 = !1;
function xy(e, t) {
    if (Sp = bu, e = P_(), eh(e)) {
        if ("selectionStart" in e) var n = {
            start: e.selectionStart,
            end: e.selectionEnd
        };
        else {
            n = (n = e.ownerDocument) && n.defaultView || window;
            var r = n.getSelection && n.getSelection();
            if (r && r.rangeCount !== 0) {
                n = r.anchorNode;
                var s = r.anchorOffset, i = r.focusNode;
                r = r.focusOffset;
                var a = 0, o = -1, l = -1, c = 0, u = 0, E = e, p = null;
                e: for(;;){
                    for(var A; E !== n || s !== 0 && E.nodeType !== 3 || (o = a + s), E !== i || r !== 0 && E.nodeType !== 3 || (l = a + r), E.nodeType === 3 && (a += E.nodeValue.length), (A = E.firstChild) !== null;)p = E, E = A;
                    for(;;){
                        if (E === e) break e;
                        if (p === n && ++c === s && (o = a), p === i && ++u === r && (l = a), (A = E.nextSibling) !== null) break;
                        E = p, p = E.parentNode;
                    }
                    E = A;
                }
                n = o === -1 || l === -1 ? null : {
                    start: o,
                    end: l
                };
            } else n = null;
        }
        n = n || {
            start: 0,
            end: 0
        };
    } else n = null;
    for(Rp = {
        focusedElem: e,
        selectionRange: n
    }, bu = !1, oe = t; oe !== null;)if (t = oe, e = t.child, (t.subtreeFlags & 1028) !== 0 && e !== null) e.return = t, oe = e;
    else for(; oe !== null;){
        t = oe;
        try {
            var R = t.alternate;
            if (t.flags & 1024) switch(t.tag){
                case 0:
                case 11:
                case 15:
                    break;
                case 1:
                    if (R !== null) {
                        var C = R.memoizedProps, O = R.memoizedState, d = t.stateNode, f = d.getSnapshotBeforeUpdate(t.elementType === t.type ? C : fr(t.type, C), O);
                        d.__reactInternalSnapshotBeforeUpdate = f;
                    }
                    break;
                case 3:
                    var _ = t.stateNode.containerInfo;
                    _.nodeType === 1 ? _.textContent = "" : _.nodeType === 9 && _.documentElement && _.removeChild(_.documentElement);
                    break;
                case 5:
                case 6:
                case 4:
                case 17:
                    break;
                default:
                    throw Error(ee(163));
            }
        } catch (h) {
            ft(t, t.return, h);
        }
        if (e = t.sibling, e !== null) {
            e.return = t.return, oe = e;
            break;
        }
        oe = t.return;
    }
    return R = Z0, Z0 = !1, R;
}
function zo(e, t, n) {
    var r = t.updateQueue;
    if (r = r !== null ? r.lastEffect : null, r !== null) {
        var s = r = r.next;
        do {
            if ((s.tag & e) === e) {
                var i = s.destroy;
                s.destroy = void 0, i !== void 0 && xp(t, n, i);
            }
            s = s.next;
        }while (s !== r)
    }
}
function PE(e, t) {
    if (t = t.updateQueue, t = t !== null ? t.lastEffect : null, t !== null) {
        var n = t = t.next;
        do {
            if ((n.tag & e) === e) {
                var r = n.create;
                n.destroy = r();
            }
            n = n.next;
        }while (n !== t)
    }
}
function Up(e) {
    var t = e.ref;
    if (t !== null) {
        var n = e.stateNode;
        switch(e.tag){
            case 5:
                e = n;
                break;
            default:
                e = n;
        }
        typeof t == "function" ? t(e) : t.current = e;
    }
}
function LN(e) {
    var t = e.alternate;
    t !== null && (e.alternate = null, LN(t)), e.child = null, e.deletions = null, e.sibling = null, e.tag === 5 && (t = e.stateNode, t !== null && (delete t[Dr], delete t[pl], delete t[Np], delete t[Ay], delete t[Sy])), e.stateNode = null, e.return = null, e.dependencies = null, e.memoizedProps = null, e.memoizedState = null, e.pendingProps = null, e.stateNode = null, e.updateQueue = null;
}
function yN(e) {
    return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function Q0(e) {
    e: for(;;){
        for(; e.sibling === null;){
            if (e.return === null || yN(e.return)) return null;
            e = e.return;
        }
        for(e.sibling.return = e.return, e = e.sibling; e.tag !== 5 && e.tag !== 6 && e.tag !== 18;){
            if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
            e.child.return = e, e = e.child;
        }
        if (!(e.flags & 2)) return e.stateNode;
    }
}
function Fp(e, t, n) {
    var r = e.tag;
    if (r === 5 || r === 6) e = e.stateNode, t ? n.nodeType === 8 ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (n.nodeType === 8 ? (t = n.parentNode, t.insertBefore(e, n)) : (t = n, t.appendChild(e)), n = n._reactRootContainer, n != null || t.onclick !== null || (t.onclick = Du));
    else if (r !== 4 && (e = e.child, e !== null)) for(Fp(e, t, n), e = e.sibling; e !== null;)Fp(e, t, n), e = e.sibling;
}
function Bp(e, t, n) {
    var r = e.tag;
    if (r === 5 || r === 6) e = e.stateNode, t ? n.insertBefore(e, t) : n.appendChild(e);
    else if (r !== 4 && (e = e.child, e !== null)) for(Bp(e, t, n), e = e.sibling; e !== null;)Bp(e, t, n), e = e.sibling;
}
var zt = null, pr = !1;
function Os(e, t, n) {
    for(n = n.child; n !== null;)vN(e, t, n), n = n.sibling;
}
function vN(e, t, n) {
    if (Gr && typeof Gr.onCommitFiberUnmount == "function") try {
        Gr.onCommitFiberUnmount(IE, n);
    } catch  {}
    switch(n.tag){
        case 5:
            cn || _a(n, t);
        case 6:
            var r = zt, s = pr;
            zt = null, Os(e, t, n), zt = r, pr = s, zt !== null && (pr ? (e = zt, n = n.stateNode, e.nodeType === 8 ? e.parentNode.removeChild(n) : e.removeChild(n)) : zt.removeChild(n.stateNode));
            break;
        case 18:
            zt !== null && (pr ? (e = zt, n = n.stateNode, e.nodeType === 8 ? Kd(e.parentNode, n) : e.nodeType === 1 && Kd(e, n), cl(e)) : Kd(zt, n.stateNode));
            break;
        case 4:
            r = zt, s = pr, zt = n.stateNode.containerInfo, pr = !0, Os(e, t, n), zt = r, pr = s;
            break;
        case 0:
        case 11:
        case 14:
        case 15:
            if (!cn && (r = n.updateQueue, r !== null && (r = r.lastEffect, r !== null))) {
                s = r = r.next;
                do {
                    var i = s, a = i.destroy;
                    i = i.tag, a !== void 0 && (i & 2 || i & 4) && xp(n, t, a), s = s.next;
                }while (s !== r)
            }
            Os(e, t, n);
            break;
        case 1:
            if (!cn && (_a(n, t), r = n.stateNode, typeof r.componentWillUnmount == "function")) try {
                r.props = n.memoizedProps, r.state = n.memoizedState, r.componentWillUnmount();
            } catch (o) {
                ft(n, t, o);
            }
            Os(e, t, n);
            break;
        case 21:
            Os(e, t, n);
            break;
        case 22:
            n.mode & 1 ? (cn = (r = cn) || n.memoizedState !== null, Os(e, t, n), cn = r) : Os(e, t, n);
            break;
        default:
            Os(e, t, n);
    }
}
function $0(e) {
    var t = e.updateQueue;
    if (t !== null) {
        e.updateQueue = null;
        var n = e.stateNode;
        n === null && (n = e.stateNode = new wy()), t.forEach(function(r) {
            var s = Wy.bind(null, e, r);
            n.has(r) || (n.add(r), r.then(s, s));
        });
    }
}
function Er(e, t) {
    var n = t.deletions;
    if (n !== null) for(var r = 0; r < n.length; r++){
        var s = n[r];
        try {
            var i = e, a = t, o = a;
            e: for(; o !== null;){
                switch(o.tag){
                    case 5:
                        zt = o.stateNode, pr = !1;
                        break e;
                    case 3:
                        zt = o.stateNode.containerInfo, pr = !0;
                        break e;
                    case 4:
                        zt = o.stateNode.containerInfo, pr = !0;
                        break e;
                }
                o = o.return;
            }
            if (zt === null) throw Error(ee(160));
            vN(i, a, s), zt = null, pr = !1;
            var l = s.alternate;
            l !== null && (l.return = null), s.return = null;
        } catch (c) {
            ft(s, t, c);
        }
    }
    if (t.subtreeFlags & 12854) for(t = t.child; t !== null;)bN(t, e), t = t.sibling;
}
function bN(e, t) {
    var n = e.alternate, r = e.flags;
    switch(e.tag){
        case 0:
        case 11:
        case 14:
        case 15:
            if (Er(t, e), vr(e), r & 4) {
                try {
                    zo(3, e, e.return), PE(3, e);
                } catch (C) {
                    ft(e, e.return, C);
                }
                try {
                    zo(5, e, e.return);
                } catch (C) {
                    ft(e, e.return, C);
                }
            }
            break;
        case 1:
            Er(t, e), vr(e), r & 512 && n !== null && _a(n, n.return);
            break;
        case 5:
            if (Er(t, e), vr(e), r & 512 && n !== null && _a(n, n.return), e.flags & 32) {
                var s = e.stateNode;
                try {
                    il(s, "");
                } catch (C) {
                    ft(e, e.return, C);
                }
            }
            if (r & 4 && (s = e.stateNode, s != null)) {
                var i = e.memoizedProps, a = n !== null ? n.memoizedProps : i, o = e.type, l = e.updateQueue;
                if (e.updateQueue = null, l !== null) try {
                    o === "input" && i.type === "radio" && i.name != null && Qm(s, i), lp(o, a);
                    var c = lp(o, i);
                    for(a = 0; a < l.length; a += 2){
                        var u = l[a], E = l[a + 1];
                        u === "style" ? r_(s, E) : u === "dangerouslySetInnerHTML" ? t_(s, E) : u === "children" ? il(s, E) : HT(s, u, E, c);
                    }
                    switch(o){
                        case "input":
                            rp(s, i);
                            break;
                        case "textarea":
                            $m(s, i);
                            break;
                        case "select":
                            var p = s._wrapperState.wasMultiple;
                            s._wrapperState.wasMultiple = !!i.multiple;
                            var A = i.value;
                            A != null ? La(s, !!i.multiple, A, !1) : p !== !!i.multiple && (i.defaultValue != null ? La(s, !!i.multiple, i.defaultValue, !0) : La(s, !!i.multiple, i.multiple ? [] : "", !1));
                    }
                    s[pl] = i;
                } catch (C) {
                    ft(e, e.return, C);
                }
            }
            break;
        case 6:
            if (Er(t, e), vr(e), r & 4) {
                if (e.stateNode === null) throw Error(ee(162));
                s = e.stateNode, i = e.memoizedProps;
                try {
                    s.nodeValue = i;
                } catch (C) {
                    ft(e, e.return, C);
                }
            }
            break;
        case 3:
            if (Er(t, e), vr(e), r & 4 && n !== null && n.memoizedState.isDehydrated) try {
                cl(t.containerInfo);
            } catch (C) {
                ft(e, e.return, C);
            }
            break;
        case 4:
            Er(t, e), vr(e);
            break;
        case 13:
            Er(t, e), vr(e), s = e.child, s.flags & 8192 && (i = s.memoizedState !== null, s.stateNode.isHidden = i, !i || s.alternate !== null && s.alternate.memoizedState !== null || (mh = St())), r & 4 && $0(e);
            break;
        case 22:
            if (u = n !== null && n.memoizedState !== null, e.mode & 1 ? (cn = (c = cn) || u, Er(t, e), cn = c) : Er(t, e), vr(e), r & 8192) {
                if (c = e.memoizedState !== null, (e.stateNode.isHidden = c) && !u && e.mode & 1) for(oe = e, u = e.child; u !== null;){
                    for(E = oe = u; oe !== null;){
                        switch(p = oe, A = p.child, p.tag){
                            case 0:
                            case 11:
                            case 14:
                            case 15:
                                zo(4, p, p.return);
                                break;
                            case 1:
                                _a(p, p.return);
                                var R = p.stateNode;
                                if (typeof R.componentWillUnmount == "function") {
                                    r = p, n = p.return;
                                    try {
                                        t = r, R.props = t.memoizedProps, R.state = t.memoizedState, R.componentWillUnmount();
                                    } catch (C) {
                                        ft(r, n, C);
                                    }
                                }
                                break;
                            case 5:
                                _a(p, p.return);
                                break;
                            case 22:
                                if (p.memoizedState !== null) {
                                    tS(E);
                                    continue;
                                }
                        }
                        A !== null ? (A.return = p, oe = A) : tS(E);
                    }
                    u = u.sibling;
                }
                e: for(u = null, E = e;;){
                    if (E.tag === 5) {
                        if (u === null) {
                            u = E;
                            try {
                                s = E.stateNode, c ? (i = s.style, typeof i.setProperty == "function" ? i.setProperty("display", "none", "important") : i.display = "none") : (o = E.stateNode, l = E.memoizedProps.style, a = l != null && l.hasOwnProperty("display") ? l.display : null, o.style.display = n_("display", a));
                            } catch (C) {
                                ft(e, e.return, C);
                            }
                        }
                    } else if (E.tag === 6) {
                        if (u === null) try {
                            E.stateNode.nodeValue = c ? "" : E.memoizedProps;
                        } catch (C) {
                            ft(e, e.return, C);
                        }
                    } else if ((E.tag !== 22 && E.tag !== 23 || E.memoizedState === null || E === e) && E.child !== null) {
                        E.child.return = E, E = E.child;
                        continue;
                    }
                    if (E === e) break e;
                    for(; E.sibling === null;){
                        if (E.return === null || E.return === e) break e;
                        u === E && (u = null), E = E.return;
                    }
                    u === E && (u = null), E.sibling.return = E.return, E = E.sibling;
                }
            }
            break;
        case 19:
            Er(t, e), vr(e), r & 4 && $0(e);
            break;
        case 21:
            break;
        default:
            Er(t, e), vr(e);
    }
}
function vr(e) {
    var t = e.flags;
    if (t & 2) {
        try {
            e: {
                for(var n = e.return; n !== null;){
                    if (yN(n)) {
                        var r = n;
                        break e;
                    }
                    n = n.return;
                }
                throw Error(ee(160));
            }
            switch(r.tag){
                case 5:
                    var s = r.stateNode;
                    r.flags & 32 && (il(s, ""), r.flags &= -33);
                    var i = Q0(e);
                    Bp(e, i, s);
                    break;
                case 3:
                case 4:
                    var a = r.stateNode.containerInfo, o = Q0(e);
                    Fp(e, o, a);
                    break;
                default:
                    throw Error(ee(161));
            }
        } catch (l) {
            ft(e, e.return, l);
        }
        e.flags &= -3;
    }
    t & 4096 && (e.flags &= -4097);
}
function Uy(e, t, n) {
    oe = e, PN(e);
}
function PN(e, t, n) {
    for(var r = (e.mode & 1) !== 0; oe !== null;){
        var s = oe, i = s.child;
        if (s.tag === 22 && r) {
            var a = s.memoizedState !== null || Lc;
            if (!a) {
                var o = s.alternate, l = o !== null && o.memoizedState !== null || cn;
                o = Lc;
                var c = cn;
                if (Lc = a, (cn = l) && !c) for(oe = s; oe !== null;)a = oe, l = a.child, a.tag === 22 && a.memoizedState !== null ? nS(s) : l !== null ? (l.return = a, oe = l) : nS(s);
                for(; i !== null;)oe = i, PN(i), i = i.sibling;
                oe = s, Lc = o, cn = c;
            }
            eS(e);
        } else s.subtreeFlags & 8772 && i !== null ? (i.return = s, oe = i) : eS(e);
    }
}
function eS(e) {
    for(; oe !== null;){
        var t = oe;
        if (t.flags & 8772) {
            var n = t.alternate;
            try {
                if (t.flags & 8772) switch(t.tag){
                    case 0:
                    case 11:
                    case 15:
                        cn || PE(5, t);
                        break;
                    case 1:
                        var r = t.stateNode;
                        if (t.flags & 4 && !cn) if (n === null) r.componentDidMount();
                        else {
                            var s = t.elementType === t.type ? n.memoizedProps : fr(t.type, n.memoizedProps);
                            r.componentDidUpdate(s, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate);
                        }
                        var i = t.updateQueue;
                        i !== null && B0(t, i, r);
                        break;
                    case 3:
                        var a = t.updateQueue;
                        if (a !== null) {
                            if (n = null, t.child !== null) switch(t.child.tag){
                                case 5:
                                    n = t.child.stateNode;
                                    break;
                                case 1:
                                    n = t.child.stateNode;
                            }
                            B0(t, a, n);
                        }
                        break;
                    case 5:
                        var o = t.stateNode;
                        if (n === null && t.flags & 4) {
                            n = o;
                            var l = t.memoizedProps;
                            switch(t.type){
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    l.autoFocus && n.focus();
                                    break;
                                case "img":
                                    l.src && (n.src = l.src);
                            }
                        }
                        break;
                    case 6:
                        break;
                    case 4:
                        break;
                    case 12:
                        break;
                    case 13:
                        if (t.memoizedState === null) {
                            var c = t.alternate;
                            if (c !== null) {
                                var u = c.memoizedState;
                                if (u !== null) {
                                    var E = u.dehydrated;
                                    E !== null && cl(E);
                                }
                            }
                        }
                        break;
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                        break;
                    default:
                        throw Error(ee(163));
                }
                cn || t.flags & 512 && Up(t);
            } catch (p) {
                ft(t, t.return, p);
            }
        }
        if (t === e) {
            oe = null;
            break;
        }
        if (n = t.sibling, n !== null) {
            n.return = t.return, oe = n;
            break;
        }
        oe = t.return;
    }
}
function tS(e) {
    for(; oe !== null;){
        var t = oe;
        if (t === e) {
            oe = null;
            break;
        }
        var n = t.sibling;
        if (n !== null) {
            n.return = t.return, oe = n;
            break;
        }
        oe = t.return;
    }
}
function nS(e) {
    for(; oe !== null;){
        var t = oe;
        try {
            switch(t.tag){
                case 0:
                case 11:
                case 15:
                    var n = t.return;
                    try {
                        PE(4, t);
                    } catch (l) {
                        ft(t, n, l);
                    }
                    break;
                case 1:
                    var r = t.stateNode;
                    if (typeof r.componentDidMount == "function") {
                        var s = t.return;
                        try {
                            r.componentDidMount();
                        } catch (l) {
                            ft(t, s, l);
                        }
                    }
                    var i = t.return;
                    try {
                        Up(t);
                    } catch (l) {
                        ft(t, i, l);
                    }
                    break;
                case 5:
                    var a = t.return;
                    try {
                        Up(t);
                    } catch (l) {
                        ft(t, a, l);
                    }
            }
        } catch (l) {
            ft(t, t.return, l);
        }
        if (t === e) {
            oe = null;
            break;
        }
        var o = t.sibling;
        if (o !== null) {
            o.return = t.return, oe = o;
            break;
        }
        oe = t.return;
    }
}
var Fy = Math.ceil, Wu = hs.ReactCurrentDispatcher, Sh = hs.ReactCurrentOwner, ir = hs.ReactCurrentBatchConfig, Fe = 0, Gt = null, Ot = null, Zt = 0, Hn = 0, Na = ui(0), bt = 0, ml = null, ki = 0, ME = 0, Rh = 0, Jo = null, Ln = null, mh = 0, Wa = 1 / 0, Jr = null, ju = !1, Gp = null, Ws = null, yc = !1, Us = null, Xu = 0, qo = 0, kp = null, lu = -1, cu = 0;
function An() {
    return Fe & 6 ? St() : lu !== -1 ? lu : lu = St();
}
function js(e) {
    return e.mode & 1 ? Fe & 2 && Zt !== 0 ? Zt & -Zt : my.transition !== null ? (cu === 0 && (cu = T_()), cu) : (e = je, e !== 0 || (e = window.event, e = e === void 0 ? 16 : N_(e.type)), e) : 1;
}
function mr(e, t, n, r) {
    if (50 < qo) throw qo = 0, kp = null, Error(ee(185));
    xl(e, n, r), (!(Fe & 2) || e !== Gt) && (e === Gt && (!(Fe & 2) && (ME |= n), bt === 4 && ws(e, Zt)), Mn(e, r), n === 1 && Fe === 0 && !(t.mode & 1) && (Wa = St() + 500, yE && Ei()));
}
function Mn(e, t) {
    var n = e.callbackNode;
    m2(e, t);
    var r = vu(e, e === Gt ? Zt : 0);
    if (r === 0) n !== null && E0(n), e.callbackNode = null, e.callbackPriority = 0;
    else if (t = r & -r, e.callbackPriority !== t) {
        if (n != null && E0(n), t === 1) e.tag === 0 ? Ry(rS.bind(null, e)) : H_(rS.bind(null, e)), Ty(function() {
            !(Fe & 6) && Ei();
        }), n = null;
        else {
            switch(h_(r)){
                case 1:
                    n = XT;
                    break;
                case 4:
                    n = f_;
                    break;
                case 16:
                    n = yu;
                    break;
                case 536870912:
                    n = p_;
                    break;
                default:
                    n = yu;
            }
            n = GN(n, MN.bind(null, e));
        }
        e.callbackPriority = t, e.callbackNode = n;
    }
}
function MN(e, t) {
    if (lu = -1, cu = 0, Fe & 6) throw Error(ee(327));
    var n = e.callbackNode;
    if (Ma() && e.callbackNode !== n) return null;
    var r = vu(e, e === Gt ? Zt : 0);
    if (r === 0) return null;
    if (r & 30 || r & e.expiredLanes || t) t = Ku(e, r);
    else {
        t = r;
        var s = Fe;
        Fe |= 2;
        var i = wN();
        (Gt !== e || Zt !== t) && (Jr = null, Wa = St() + 500, Pi(e, t));
        do try {
            ky();
            break;
        } catch (o) {
            DN(e, o);
        }
        while (!0)
        ih(), Wu.current = i, Fe = s, Ot !== null ? t = 0 : (Gt = null, Zt = 0, t = bt);
    }
    if (t !== 0) {
        if (t === 2 && (s = fp(e), s !== 0 && (r = s, t = Hp(e, s))), t === 1) throw n = ml, Pi(e, 0), ws(e, r), Mn(e, St()), n;
        if (t === 6) ws(e, r);
        else {
            if (s = e.current.alternate, !(r & 30) && !By(s) && (t = Ku(e, r), t === 2 && (i = fp(e), i !== 0 && (r = i, t = Hp(e, i))), t === 1)) throw n = ml, Pi(e, 0), ws(e, r), Mn(e, St()), n;
            switch(e.finishedWork = s, e.finishedLanes = r, t){
                case 0:
                case 1:
                    throw Error(ee(345));
                case 2:
                    Ni(e, Ln, Jr);
                    break;
                case 3:
                    if (ws(e, r), (r & 130023424) === r && (t = mh + 500 - St(), 10 < t)) {
                        if (vu(e, 0) !== 0) break;
                        if (s = e.suspendedLanes, (s & r) !== r) {
                            An(), e.pingedLanes |= e.suspendedLanes & s;
                            break;
                        }
                        e.timeoutHandle = _p(Ni.bind(null, e, Ln, Jr), t);
                        break;
                    }
                    Ni(e, Ln, Jr);
                    break;
                case 4:
                    if (ws(e, r), (r & 4194240) === r) break;
                    for(t = e.eventTimes, s = -1; 0 < r;){
                        var a = 31 - Rr(r);
                        i = 1 << a, a = t[a], a > s && (s = a), r &= ~i;
                    }
                    if (r = s, r = St() - r, r = (120 > r ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * Fy(r / 1960)) - r, 10 < r) {
                        e.timeoutHandle = _p(Ni.bind(null, e, Ln, Jr), r);
                        break;
                    }
                    Ni(e, Ln, Jr);
                    break;
                case 5:
                    Ni(e, Ln, Jr);
                    break;
                default:
                    throw Error(ee(329));
            }
        }
    }
    return Mn(e, St()), e.callbackNode === n ? MN.bind(null, e) : null;
}
function Hp(e, t) {
    var n = Jo;
    return e.current.memoizedState.isDehydrated && (Pi(e, t).flags |= 256), e = Ku(e, t), e !== 2 && (t = Ln, Ln = n, t !== null && Yp(t)), e;
}
function Yp(e) {
    Ln === null ? Ln = e : Ln.push.apply(Ln, e);
}
function By(e) {
    for(var t = e;;){
        if (t.flags & 16384) {
            var n = t.updateQueue;
            if (n !== null && (n = n.stores, n !== null)) for(var r = 0; r < n.length; r++){
                var s = n[r], i = s.getSnapshot;
                s = s.value;
                try {
                    if (!Nr(i(), s)) return !1;
                } catch  {
                    return !1;
                }
            }
        }
        if (n = t.child, t.subtreeFlags & 16384 && n !== null) n.return = t, t = n;
        else {
            if (t === e) break;
            for(; t.sibling === null;){
                if (t.return === null || t.return === e) return !0;
                t = t.return;
            }
            t.sibling.return = t.return, t = t.sibling;
        }
    }
    return !0;
}
function ws(e, t) {
    for(t &= ~Rh, t &= ~ME, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t;){
        var n = 31 - Rr(t), r = 1 << n;
        e[n] = -1, t &= ~r;
    }
}
function rS(e) {
    if (Fe & 6) throw Error(ee(327));
    Ma();
    var t = vu(e, 0);
    if (!(t & 1)) return Mn(e, St()), null;
    var n = Ku(e, t);
    if (e.tag !== 0 && n === 2) {
        var r = fp(e);
        r !== 0 && (t = r, n = Hp(e, r));
    }
    if (n === 1) throw n = ml, Pi(e, 0), ws(e, t), Mn(e, St()), n;
    if (n === 6) throw Error(ee(345));
    return e.finishedWork = e.current.alternate, e.finishedLanes = t, Ni(e, Ln, Jr), Mn(e, St()), null;
}
function _h(e, t) {
    var n = Fe;
    Fe |= 1;
    try {
        return e(t);
    } finally{
        Fe = n, Fe === 0 && (Wa = St() + 500, yE && Ei());
    }
}
function Hi(e) {
    Us !== null && Us.tag === 0 && !(Fe & 6) && Ma();
    var t = Fe;
    Fe |= 1;
    var n = ir.transition, r = je;
    try {
        if (ir.transition = null, je = 1, e) return e();
    } finally{
        je = r, ir.transition = n, Fe = t, !(Fe & 6) && Ei();
    }
}
function Nh() {
    Hn = Na.current, rt(Na);
}
function Pi(e, t) {
    e.finishedWork = null, e.finishedLanes = 0;
    var n = e.timeoutHandle;
    if (n !== -1 && (e.timeoutHandle = -1, py(n)), Ot !== null) for(n = Ot.return; n !== null;){
        var r = n;
        switch(nh(r), r.tag){
            case 1:
                r = r.type.childContextTypes, r != null && wu();
                break;
            case 3:
                Ya(), rt(bn), rt(un), Eh();
                break;
            case 5:
                uh(r);
                break;
            case 4:
                Ya();
                break;
            case 13:
                rt(ot);
                break;
            case 19:
                rt(ot);
                break;
            case 10:
                ah(r.type._context);
                break;
            case 22:
            case 23:
                Nh();
        }
        n = n.return;
    }
    if (Gt = e, Ot = e = Xs(e.current, null), Zt = Hn = t, bt = 0, ml = null, Rh = ME = ki = 0, Ln = Jo = null, Ci !== null) {
        for(t = 0; t < Ci.length; t++)if (n = Ci[t], r = n.interleaved, r !== null) {
            n.interleaved = null;
            var s = r.next, i = n.pending;
            if (i !== null) {
                var a = i.next;
                i.next = s, r.next = a;
            }
            n.pending = r;
        }
        Ci = null;
    }
    return e;
}
function DN(e, t) {
    do {
        var n = Ot;
        try {
            if (ih(), iu.current = Vu, Yu) {
                for(var r = lt.memoizedState; r !== null;){
                    var s = r.queue;
                    s !== null && (s.pending = null), r = r.next;
                }
                Yu = !1;
            }
            if (Gi = 0, Bt = Lt = lt = null, Ko = !1, Al = 0, Sh.current = null, n === null || n.return === null) {
                bt = 1, ml = t, Ot = null;
                break;
            }
            e: {
                var i = e, a = n.return, o = n, l = t;
                if (t = Zt, o.flags |= 32768, l !== null && typeof l == "object" && typeof l.then == "function") {
                    var c = l, u = o, E = u.tag;
                    if (!(u.mode & 1) && (E === 0 || E === 11 || E === 15)) {
                        var p = u.alternate;
                        p ? (u.updateQueue = p.updateQueue, u.memoizedState = p.memoizedState, u.lanes = p.lanes) : (u.updateQueue = null, u.memoizedState = null);
                    }
                    var A = W0(a);
                    if (A !== null) {
                        A.flags &= -257, j0(A, a, o, i, t), A.mode & 1 && V0(i, c, t), t = A, l = c;
                        var R = t.updateQueue;
                        if (R === null) {
                            var C = /* @__PURE__ */ new Set();
                            C.add(l), t.updateQueue = C;
                        } else R.add(l);
                        break e;
                    } else {
                        if (!(t & 1)) {
                            V0(i, c, t), Ih();
                            break e;
                        }
                        l = Error(ee(426));
                    }
                } else if (it && o.mode & 1) {
                    var O = W0(a);
                    if (O !== null) {
                        !(O.flags & 65536) && (O.flags |= 256), j0(O, a, o, i, t), rh(Va(l, o));
                        break e;
                    }
                }
                i = l = Va(l, o), bt !== 4 && (bt = 2), Jo === null ? Jo = [
                    i
                ] : Jo.push(i), i = a;
                do {
                    switch(i.tag){
                        case 3:
                            i.flags |= 65536, t &= -t, i.lanes |= t;
                            var d = hN(i, l, t);
                            F0(i, d);
                            break e;
                        case 1:
                            o = l;
                            var f = i.type, _ = i.stateNode;
                            if (!(i.flags & 128) && (typeof f.getDerivedStateFromError == "function" || _ !== null && typeof _.componentDidCatch == "function" && (Ws === null || !Ws.has(_)))) {
                                i.flags |= 65536, t &= -t, i.lanes |= t;
                                var h = AN(i, o, t);
                                F0(i, h);
                                break e;
                            }
                    }
                    i = i.return;
                }while (i !== null)
            }
            UN(n);
        } catch (I) {
            t = I, Ot === n && n !== null && (Ot = n = n.return);
            continue;
        }
        break;
    }while (!0)
}
function wN() {
    var e = Wu.current;
    return Wu.current = Vu, e === null ? Vu : e;
}
function Ih() {
    (bt === 0 || bt === 3 || bt === 2) && (bt = 4), Gt === null || !(ki & 268435455) && !(ME & 268435455) || ws(Gt, Zt);
}
function Ku(e, t) {
    var n = Fe;
    Fe |= 2;
    var r = wN();
    (Gt !== e || Zt !== t) && (Jr = null, Pi(e, t));
    do try {
        Gy();
        break;
    } catch (s) {
        DN(e, s);
    }
    while (!0)
    if (ih(), Fe = n, Wu.current = r, Ot !== null) throw Error(ee(261));
    return Gt = null, Zt = 0, bt;
}
function Gy() {
    for(; Ot !== null;)xN(Ot);
}
function ky() {
    for(; Ot !== null && !E2();)xN(Ot);
}
function xN(e) {
    var t = BN(e.alternate, e, Hn);
    e.memoizedProps = e.pendingProps, t === null ? UN(e) : Ot = t, Sh.current = null;
}
function UN(e) {
    var t = e;
    do {
        var n = t.alternate;
        if (e = t.return, t.flags & 32768) {
            if (n = Dy(n, t), n !== null) {
                n.flags &= 32767, Ot = n;
                return;
            }
            if (e !== null) e.flags |= 32768, e.subtreeFlags = 0, e.deletions = null;
            else {
                bt = 6, Ot = null;
                return;
            }
        } else if (n = My(n, t, Hn), n !== null) {
            Ot = n;
            return;
        }
        if (t = t.sibling, t !== null) {
            Ot = t;
            return;
        }
        Ot = t = e;
    }while (t !== null)
    bt === 0 && (bt = 5);
}
function Ni(e, t, n) {
    var r = je, s = ir.transition;
    try {
        ir.transition = null, je = 1, Hy(e, t, n, r);
    } finally{
        ir.transition = s, je = r;
    }
    return null;
}
function Hy(e, t, n, r) {
    do Ma();
    while (Us !== null)
    if (Fe & 6) throw Error(ee(327));
    n = e.finishedWork;
    var s = e.finishedLanes;
    if (n === null) return null;
    if (e.finishedWork = null, e.finishedLanes = 0, n === e.current) throw Error(ee(177));
    e.callbackNode = null, e.callbackPriority = 0;
    var i = n.lanes | n.childLanes;
    if (_2(e, i), e === Gt && (Ot = Gt = null, Zt = 0), !(n.subtreeFlags & 2064) && !(n.flags & 2064) || yc || (yc = !0, GN(yu, function() {
        return Ma(), null;
    })), i = (n.flags & 15990) !== 0, n.subtreeFlags & 15990 || i) {
        i = ir.transition, ir.transition = null;
        var a = je;
        je = 1;
        var o = Fe;
        Fe |= 4, Sh.current = null, xy(e, n), bN(n, e), oy(Rp), bu = !!Sp, Rp = Sp = null, e.current = n, Uy(n), d2(), Fe = o, je = a, ir.transition = i;
    } else e.current = n;
    if (yc && (yc = !1, Us = e, Xu = s), i = e.pendingLanes, i === 0 && (Ws = null), T2(n.stateNode), Mn(e, St()), t !== null) for(r = e.onRecoverableError, n = 0; n < t.length; n++)s = t[n], r(s.value, {
        componentStack: s.stack,
        digest: s.digest
    });
    if (ju) throw ju = !1, e = Gp, Gp = null, e;
    return Xu & 1 && e.tag !== 0 && Ma(), i = e.pendingLanes, i & 1 ? e === kp ? qo++ : (qo = 0, kp = e) : qo = 0, Ei(), null;
}
function Ma() {
    if (Us !== null) {
        var e = h_(Xu), t = ir.transition, n = je;
        try {
            if (ir.transition = null, je = 16 > e ? 16 : e, Us === null) var r = !1;
            else {
                if (e = Us, Us = null, Xu = 0, Fe & 6) throw Error(ee(331));
                var s = Fe;
                for(Fe |= 4, oe = e.current; oe !== null;){
                    var i = oe, a = i.child;
                    if (oe.flags & 16) {
                        var o = i.deletions;
                        if (o !== null) {
                            for(var l = 0; l < o.length; l++){
                                var c = o[l];
                                for(oe = c; oe !== null;){
                                    var u = oe;
                                    switch(u.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            zo(8, u, i);
                                    }
                                    var E = u.child;
                                    if (E !== null) E.return = u, oe = E;
                                    else for(; oe !== null;){
                                        u = oe;
                                        var p = u.sibling, A = u.return;
                                        if (LN(u), u === c) {
                                            oe = null;
                                            break;
                                        }
                                        if (p !== null) {
                                            p.return = A, oe = p;
                                            break;
                                        }
                                        oe = A;
                                    }
                                }
                            }
                            var R = i.alternate;
                            if (R !== null) {
                                var C = R.child;
                                if (C !== null) {
                                    R.child = null;
                                    do {
                                        var O = C.sibling;
                                        C.sibling = null, C = O;
                                    }while (C !== null)
                                }
                            }
                            oe = i;
                        }
                    }
                    if (i.subtreeFlags & 2064 && a !== null) a.return = i, oe = a;
                    else e: for(; oe !== null;){
                        if (i = oe, i.flags & 2048) switch(i.tag){
                            case 0:
                            case 11:
                            case 15:
                                zo(9, i, i.return);
                        }
                        var d = i.sibling;
                        if (d !== null) {
                            d.return = i.return, oe = d;
                            break e;
                        }
                        oe = i.return;
                    }
                }
                var f = e.current;
                for(oe = f; oe !== null;){
                    a = oe;
                    var _ = a.child;
                    if (a.subtreeFlags & 2064 && _ !== null) _.return = a, oe = _;
                    else e: for(a = f; oe !== null;){
                        if (o = oe, o.flags & 2048) try {
                            switch(o.tag){
                                case 0:
                                case 11:
                                case 15:
                                    PE(9, o);
                            }
                        } catch (I) {
                            ft(o, o.return, I);
                        }
                        if (o === a) {
                            oe = null;
                            break e;
                        }
                        var h = o.sibling;
                        if (h !== null) {
                            h.return = o.return, oe = h;
                            break e;
                        }
                        oe = o.return;
                    }
                }
                if (Fe = s, Ei(), Gr && typeof Gr.onPostCommitFiberRoot == "function") try {
                    Gr.onPostCommitFiberRoot(IE, e);
                } catch  {}
                r = !0;
            }
            return r;
        } finally{
            je = n, ir.transition = t;
        }
    }
    return !1;
}
function sS(e, t, n) {
    t = Va(n, t), t = hN(e, t, 1), e = Vs(e, t, 1), t = An(), e !== null && (xl(e, 1, t), Mn(e, t));
}
function ft(e, t, n) {
    if (e.tag === 3) sS(e, e, n);
    else for(; t !== null;){
        if (t.tag === 3) {
            sS(t, e, n);
            break;
        } else if (t.tag === 1) {
            var r = t.stateNode;
            if (typeof t.type.getDerivedStateFromError == "function" || typeof r.componentDidCatch == "function" && (Ws === null || !Ws.has(r))) {
                e = Va(n, e), e = AN(t, e, 1), t = Vs(t, e, 1), e = An(), t !== null && (xl(t, 1, e), Mn(t, e));
                break;
            }
        }
        t = t.return;
    }
}
function Yy(e, t, n) {
    var r = e.pingCache;
    r !== null && r.delete(t), t = An(), e.pingedLanes |= e.suspendedLanes & n, Gt === e && (Zt & n) === n && (bt === 4 || bt === 3 && (Zt & 130023424) === Zt && 500 > St() - mh ? Pi(e, 0) : Rh |= n), Mn(e, t);
}
function FN(e, t) {
    t === 0 && (e.mode & 1 ? (t = Sc, Sc <<= 1, !(Sc & 130023424) && (Sc = 4194304)) : t = 1);
    var n = An();
    e = os(e, t), e !== null && (xl(e, t, n), Mn(e, n));
}
function Vy(e) {
    var t = e.memoizedState, n = 0;
    t !== null && (n = t.retryLane), FN(e, n);
}
function Wy(e, t) {
    var n = 0;
    switch(e.tag){
        case 13:
            var r = e.stateNode, s = e.memoizedState;
            s !== null && (n = s.retryLane);
            break;
        case 19:
            r = e.stateNode;
            break;
        default:
            throw Error(ee(314));
    }
    r !== null && r.delete(t), FN(e, n);
}
var BN;
BN = function(e, t, n) {
    if (e !== null) if (e.memoizedProps !== t.pendingProps || bn.current) yn = !0;
    else {
        if (!(e.lanes & n) && !(t.flags & 128)) return yn = !1, Py(e, t, n);
        yn = !!(e.flags & 131072);
    }
    else yn = !1, it && t.flags & 1048576 && Y_(t, Fu, t.index);
    switch(t.lanes = 0, t.tag){
        case 2:
            var r = t.type;
            ou(e, t), e = t.pendingProps;
            var s = Ga(t, un.current);
            Pa(t, n), s = fh(null, t, r, e, s, n);
            var i = ph();
            return t.flags |= 1, typeof s == "object" && s !== null && typeof s.render == "function" && s.$$typeof === void 0 ? (t.tag = 1, t.memoizedState = null, t.updateQueue = null, Pn(r) ? (i = !0, xu(t)) : i = !1, t.memoizedState = s.state !== null && s.state !== void 0 ? s.state : null, lh(t), s.updater = bE, t.stateNode = s, s._reactInternals = t, yp(t, r, e, n), t = Pp(null, t, r, !0, i, n)) : (t.tag = 0, it && i && th(t), pn(null, t, s, n), t = t.child), t;
        case 16:
            r = t.elementType;
            e: {
                switch(ou(e, t), e = t.pendingProps, s = r._init, r = s(r._payload), t.type = r, s = t.tag = Xy(r), e = fr(r, e), s){
                    case 0:
                        t = bp(null, t, r, e, n);
                        break e;
                    case 1:
                        t = z0(null, t, r, e, n);
                        break e;
                    case 11:
                        t = X0(null, t, r, e, n);
                        break e;
                    case 14:
                        t = K0(null, t, r, fr(r.type, e), n);
                        break e;
                }
                throw Error(ee(306, r, ""));
            }
            return t;
        case 0:
            return r = t.type, s = t.pendingProps, s = t.elementType === r ? s : fr(r, s), bp(e, t, r, s, n);
        case 1:
            return r = t.type, s = t.pendingProps, s = t.elementType === r ? s : fr(r, s), z0(e, t, r, s, n);
        case 3:
            e: {
                if (_N(t), e === null) throw Error(ee(387));
                r = t.pendingProps, i = t.memoizedState, s = i.element, z_(e, t), ku(t, r, null, n);
                var a = t.memoizedState;
                if (r = a.element, i.isDehydrated) if (i = {
                    element: r,
                    isDehydrated: !1,
                    cache: a.cache,
                    pendingSuspenseBoundaries: a.pendingSuspenseBoundaries,
                    transitions: a.transitions
                }, t.updateQueue.baseState = i, t.memoizedState = i, t.flags & 256) {
                    s = Va(Error(ee(423)), t), t = J0(e, t, r, n, s);
                    break e;
                } else if (r !== s) {
                    s = Va(Error(ee(424)), t), t = J0(e, t, r, n, s);
                    break e;
                } else for(Vn = Ys(t.stateNode.containerInfo.firstChild), Wn = t, it = !0, hr = null, n = X_(t, null, r, n), t.child = n; n;)n.flags = n.flags & -3 | 4096, n = n.sibling;
                else {
                    if (ka(), r === s) {
                        t = ls(e, t, n);
                        break e;
                    }
                    pn(e, t, r, n);
                }
                t = t.child;
            }
            return t;
        case 5:
            return J_(t), e === null && Cp(t), r = t.type, s = t.pendingProps, i = e !== null ? e.memoizedProps : null, a = s.children, mp(r, s) ? a = null : i !== null && mp(r, i) && (t.flags |= 32), mN(e, t), pn(e, t, a, n), t.child;
        case 6:
            return e === null && Cp(t), null;
        case 13:
            return NN(e, t, n);
        case 4:
            return ch(t, t.stateNode.containerInfo), r = t.pendingProps, e === null ? t.child = Ha(t, null, r, n) : pn(e, t, r, n), t.child;
        case 11:
            return r = t.type, s = t.pendingProps, s = t.elementType === r ? s : fr(r, s), X0(e, t, r, s, n);
        case 7:
            return pn(e, t, t.pendingProps, n), t.child;
        case 8:
            return pn(e, t, t.pendingProps.children, n), t.child;
        case 12:
            return pn(e, t, t.pendingProps.children, n), t.child;
        case 10:
            e: {
                if (r = t.type._context, s = t.pendingProps, i = t.memoizedProps, a = s.value, $e(Bu, r._currentValue), r._currentValue = a, i !== null) if (Nr(i.value, a)) {
                    if (i.children === s.children && !bn.current) {
                        t = ls(e, t, n);
                        break e;
                    }
                } else for(i = t.child, i !== null && (i.return = t); i !== null;){
                    var o = i.dependencies;
                    if (o !== null) {
                        a = i.child;
                        for(var l = o.firstContext; l !== null;){
                            if (l.context === r) {
                                if (i.tag === 1) {
                                    l = ns(-1, n & -n), l.tag = 2;
                                    var c = i.updateQueue;
                                    if (c !== null) {
                                        c = c.shared;
                                        var u = c.pending;
                                        u === null ? l.next = l : (l.next = u.next, u.next = l), c.pending = l;
                                    }
                                }
                                i.lanes |= n, l = i.alternate, l !== null && (l.lanes |= n), gp(i.return, n, t), o.lanes |= n;
                                break;
                            }
                            l = l.next;
                        }
                    } else if (i.tag === 10) a = i.type === t.type ? null : i.child;
                    else if (i.tag === 18) {
                        if (a = i.return, a === null) throw Error(ee(341));
                        a.lanes |= n, o = a.alternate, o !== null && (o.lanes |= n), gp(a, n, t), a = i.sibling;
                    } else a = i.child;
                    if (a !== null) a.return = i;
                    else for(a = i; a !== null;){
                        if (a === t) {
                            a = null;
                            break;
                        }
                        if (i = a.sibling, i !== null) {
                            i.return = a.return, a = i;
                            break;
                        }
                        a = a.return;
                    }
                    i = a;
                }
                pn(e, t, s.children, n), t = t.child;
            }
            return t;
        case 9:
            return s = t.type, r = t.pendingProps.children, Pa(t, n), s = or(s), r = r(s), t.flags |= 1, pn(e, t, r, n), t.child;
        case 14:
            return r = t.type, s = fr(r, t.pendingProps), s = fr(r.type, s), K0(e, t, r, s, n);
        case 15:
            return SN(e, t, t.type, t.pendingProps, n);
        case 17:
            return r = t.type, s = t.pendingProps, s = t.elementType === r ? s : fr(r, s), ou(e, t), t.tag = 1, Pn(r) ? (e = !0, xu(t)) : e = !1, Pa(t, n), TN(t, r, s), yp(t, r, s, n), Pp(null, t, r, !0, e, n);
        case 19:
            return IN(e, t, n);
        case 22:
            return RN(e, t, n);
    }
    throw Error(ee(156, t.tag));
};
function GN(e, t) {
    return d_(e, t);
}
function jy(e, t, n, r) {
    this.tag = e, this.key = n, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = t, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = r, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
}
function sr(e, t, n, r) {
    return new jy(e, t, n, r);
}
function Oh(e) {
    return e = e.prototype, !(!e || !e.isReactComponent);
}
function Xy(e) {
    if (typeof e == "function") return Oh(e) ? 1 : 0;
    if (e != null) {
        if (e = e.$$typeof, e === VT) return 11;
        if (e === WT) return 14;
    }
    return 2;
}
function Xs(e, t) {
    var n = e.alternate;
    return n === null ? (n = sr(e.tag, t, e.key, e.mode), n.elementType = e.elementType, n.type = e.type, n.stateNode = e.stateNode, n.alternate = e, e.alternate = n) : (n.pendingProps = t, n.type = e.type, n.flags = 0, n.subtreeFlags = 0, n.deletions = null), n.flags = e.flags & 14680064, n.childLanes = e.childLanes, n.lanes = e.lanes, n.child = e.child, n.memoizedProps = e.memoizedProps, n.memoizedState = e.memoizedState, n.updateQueue = e.updateQueue, t = e.dependencies, n.dependencies = t === null ? null : {
        lanes: t.lanes,
        firstContext: t.firstContext
    }, n.sibling = e.sibling, n.index = e.index, n.ref = e.ref, n;
}
function uu(e, t, n, r, s, i) {
    var a = 2;
    if (r = e, typeof e == "function") Oh(e) && (a = 1);
    else if (typeof e == "string") a = 5;
    else e: switch(e){
        case da:
            return Mi(n.children, s, i, t);
        case YT:
            a = 8, s |= 8;
            break;
        case Qf:
            return e = sr(12, n, t, s | 2), e.elementType = Qf, e.lanes = i, e;
        case $f:
            return e = sr(13, n, t, s), e.elementType = $f, e.lanes = i, e;
        case ep:
            return e = sr(19, n, t, s), e.elementType = ep, e.lanes = i, e;
        case Jm:
            return DE(n, s, i, t);
        default:
            if (typeof e == "object" && e !== null) switch(e.$$typeof){
                case Km:
                    a = 10;
                    break e;
                case zm:
                    a = 9;
                    break e;
                case VT:
                    a = 11;
                    break e;
                case WT:
                    a = 14;
                    break e;
                case gs:
                    a = 16, r = null;
                    break e;
            }
            throw Error(ee(130, e == null ? e : typeof e, ""));
    }
    return t = sr(a, n, t, s), t.elementType = e, t.type = r, t.lanes = i, t;
}
function Mi(e, t, n, r) {
    return e = sr(7, e, r, t), e.lanes = n, e;
}
function DE(e, t, n, r) {
    return e = sr(22, e, r, t), e.elementType = Jm, e.lanes = n, e.stateNode = {
        isHidden: !1
    }, e;
}
function tf(e, t, n) {
    return e = sr(6, e, null, t), e.lanes = n, e;
}
function nf(e, t, n) {
    return t = sr(4, e.children !== null ? e.children : [], e.key, t), t.lanes = n, t.stateNode = {
        containerInfo: e.containerInfo,
        pendingChildren: null,
        implementation: e.implementation
    }, t;
}
function Ky(e, t, n, r, s) {
    this.tag = t, this.containerInfo = e, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = Ud(0), this.expirationTimes = Ud(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = Ud(0), this.identifierPrefix = r, this.onRecoverableError = s, this.mutableSourceEagerHydrationData = null;
}
function Ch(e, t, n, r, s, i, a, o, l) {
    return e = new Ky(e, t, n, o, l), t === 1 ? (t = 1, i === !0 && (t |= 8)) : t = 0, i = sr(3, null, null, t), e.current = i, i.stateNode = e, i.memoizedState = {
        element: r,
        isDehydrated: n,
        cache: null,
        transitions: null,
        pendingSuspenseBoundaries: null
    }, lh(i), e;
}
function zy(e, t, n) {
    var r = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return {
        $$typeof: Ea,
        key: r == null ? null : "" + r,
        children: e,
        containerInfo: t,
        implementation: n
    };
}
function kN(e) {
    if (!e) return ti;
    e = e._reactInternals;
    e: {
        if (zi(e) !== e || e.tag !== 1) throw Error(ee(170));
        var t = e;
        do {
            switch(t.tag){
                case 3:
                    t = t.stateNode.context;
                    break e;
                case 1:
                    if (Pn(t.type)) {
                        t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                        break e;
                    }
            }
            t = t.return;
        }while (t !== null)
        throw Error(ee(171));
    }
    if (e.tag === 1) {
        var n = e.type;
        if (Pn(n)) return k_(e, n, t);
    }
    return t;
}
function HN(e, t, n, r, s, i, a, o, l) {
    return e = Ch(n, r, !0, e, s, i, a, o, l), e.context = kN(null), n = e.current, r = An(), s = js(n), i = ns(r, s), i.callback = t ?? null, Vs(n, i, s), e.current.lanes = s, xl(e, s, r), Mn(e, r), e;
}
function wE(e, t, n, r) {
    var s = t.current, i = An(), a = js(s);
    return n = kN(n), t.context === null ? t.context = n : t.pendingContext = n, t = ns(i, a), t.payload = {
        element: e
    }, r = r === void 0 ? null : r, r !== null && (t.callback = r), e = Vs(s, t, a), e !== null && (mr(e, s, a, i), su(e, s, a)), a;
}
function zu(e) {
    if (e = e.current, !e.child) return null;
    switch(e.child.tag){
        case 5:
            return e.child.stateNode;
        default:
            return e.child.stateNode;
    }
}
function iS(e, t) {
    if (e = e.memoizedState, e !== null && e.dehydrated !== null) {
        var n = e.retryLane;
        e.retryLane = n !== 0 && n < t ? n : t;
    }
}
function gh(e, t) {
    iS(e, t), (e = e.alternate) && iS(e, t);
}
function Jy() {
    return null;
}
var YN = typeof reportError == "function" ? reportError : function(e) {
    console.error(e);
};
function Lh(e) {
    this._internalRoot = e;
}
xE.prototype.render = Lh.prototype.render = function(e) {
    var t = this._internalRoot;
    if (t === null) throw Error(ee(409));
    wE(e, t, null, null);
};
xE.prototype.unmount = Lh.prototype.unmount = function() {
    var e = this._internalRoot;
    if (e !== null) {
        this._internalRoot = null;
        var t = e.containerInfo;
        Hi(function() {
            wE(null, e, null, null);
        }), t[as] = null;
    }
};
function xE(e) {
    this._internalRoot = e;
}
xE.prototype.unstable_scheduleHydration = function(e) {
    if (e) {
        var t = R_();
        e = {
            blockedOn: null,
            target: e,
            priority: t
        };
        for(var n = 0; n < Ds.length && t !== 0 && t < Ds[n].priority; n++);
        Ds.splice(n, 0, e), n === 0 && __(e);
    }
};
function yh(e) {
    return !(!e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11);
}
function UE(e) {
    return !(!e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11 && (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable "));
}
function aS() {}
function qy(e, t, n, r, s) {
    if (s) {
        if (typeof r == "function") {
            var i = r;
            r = function() {
                var c = zu(a);
                i.call(c);
            };
        }
        var a = HN(t, r, e, 0, null, !1, !1, "", aS);
        return e._reactRootContainer = a, e[as] = a.current, dl(e.nodeType === 8 ? e.parentNode : e), Hi(), a;
    }
    for(; s = e.lastChild;)e.removeChild(s);
    if (typeof r == "function") {
        var o = r;
        r = function() {
            var c = zu(l);
            o.call(c);
        };
    }
    var l = Ch(e, 0, !1, null, null, !1, !1, "", aS);
    return e._reactRootContainer = l, e[as] = l.current, dl(e.nodeType === 8 ? e.parentNode : e), Hi(function() {
        wE(t, l, n, r);
    }), l;
}
function FE(e, t, n, r, s) {
    var i = n._reactRootContainer;
    if (i) {
        var a = i;
        if (typeof s == "function") {
            var o = s;
            s = function() {
                var l = zu(a);
                o.call(l);
            };
        }
        wE(t, a, e, s);
    } else a = qy(n, t, e, s, r);
    return zu(a);
}
A_ = function(e) {
    switch(e.tag){
        case 3:
            var t = e.stateNode;
            if (t.current.memoizedState.isDehydrated) {
                var n = ko(t.pendingLanes);
                n !== 0 && (KT(t, n | 1), Mn(t, St()), !(Fe & 6) && (Wa = St() + 500, Ei()));
            }
            break;
        case 13:
            Hi(function() {
                var r = os(e, 1);
                if (r !== null) {
                    var s = An();
                    mr(r, e, 1, s);
                }
            }), gh(e, 1);
    }
};
zT = function(e) {
    if (e.tag === 13) {
        var t = os(e, 134217728);
        if (t !== null) {
            var n = An();
            mr(t, e, 134217728, n);
        }
        gh(e, 134217728);
    }
};
S_ = function(e) {
    if (e.tag === 13) {
        var t = js(e), n = os(e, t);
        if (n !== null) {
            var r = An();
            mr(n, e, t, r);
        }
        gh(e, t);
    }
};
R_ = function() {
    return je;
};
m_ = function(e, t) {
    var n = je;
    try {
        return je = e, t();
    } finally{
        je = n;
    }
};
up = function(e, t, n) {
    switch(t){
        case "input":
            if (rp(e, n), t = n.name, n.type === "radio" && t != null) {
                for(n = e; n.parentNode;)n = n.parentNode;
                for(n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'), t = 0; t < n.length; t++){
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                        var s = LE(r);
                        if (!s) throw Error(ee(90));
                        Zm(r), rp(r, s);
                    }
                }
            }
            break;
        case "textarea":
            $m(e, n);
            break;
        case "select":
            t = n.value, t != null && La(e, !!n.multiple, t, !1);
    }
};
a_ = _h;
o_ = Hi;
var Zy = {
    usingClientEntryPoint: !1,
    Events: [
        Fl,
        ha,
        LE,
        s_,
        i_,
        _h
    ]
}, bo = {
    findFiberByHostInstance: Oi,
    bundleType: 0,
    version: "18.3.1",
    rendererPackageName: "react-dom"
}, Qy = {
    bundleType: bo.bundleType,
    version: bo.version,
    rendererPackageName: bo.rendererPackageName,
    rendererConfig: bo.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: hs.ReactCurrentDispatcher,
    findHostInstanceByFiber: function(e) {
        return e = u_(e), e === null ? null : e.stateNode;
    },
    findFiberByHostInstance: bo.findFiberByHostInstance || Jy,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.3.1-next-f1338f8080-20240426"
};
if (typeof {} < "u") {
    var vc = {
        isDisabled: !0
    };
    if (!vc.isDisabled && vc.supportsFiber) try {
        IE = vc.inject(Qy), Gr = vc;
    } catch  {}
}
Kn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Zy;
Kn.createPortal = function(e, t) {
    var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!yh(t)) throw Error(ee(200));
    return zy(e, t, null, n);
};
Kn.createRoot = function(e, t) {
    if (!yh(e)) throw Error(ee(299));
    var n = !1, r = "", s = YN;
    return t != null && (t.unstable_strictMode === !0 && (n = !0), t.identifierPrefix !== void 0 && (r = t.identifierPrefix), t.onRecoverableError !== void 0 && (s = t.onRecoverableError)), t = Ch(e, 1, !1, null, null, n, !1, r, s), e[as] = t.current, dl(e.nodeType === 8 ? e.parentNode : e), new Lh(t);
};
Kn.findDOMNode = function(e) {
    if (e == null) return null;
    if (e.nodeType === 1) return e;
    var t = e._reactInternals;
    if (t === void 0) throw typeof e.render == "function" ? Error(ee(188)) : (e = Object.keys(e).join(","), Error(ee(268, e)));
    return e = u_(t), e = e === null ? null : e.stateNode, e;
};
Kn.flushSync = function(e) {
    return Hi(e);
};
Kn.hydrate = function(e, t, n) {
    if (!UE(t)) throw Error(ee(200));
    return FE(null, e, t, !0, n);
};
Kn.hydrateRoot = function(e, t, n) {
    if (!yh(e)) throw Error(ee(405));
    var r = n != null && n.hydratedSources || null, s = !1, i = "", a = YN;
    if (n != null && (n.unstable_strictMode === !0 && (s = !0), n.identifierPrefix !== void 0 && (i = n.identifierPrefix), n.onRecoverableError !== void 0 && (a = n.onRecoverableError)), t = HN(t, null, e, 1, n ?? null, s, !1, i, a), e[as] = t.current, dl(e), r) for(e = 0; e < r.length; e++)n = r[e], s = n._getVersion, s = s(n._source), t.mutableSourceEagerHydrationData == null ? t.mutableSourceEagerHydrationData = [
        n,
        s
    ] : t.mutableSourceEagerHydrationData.push(n, s);
    return new xE(t);
};
Kn.render = function(e, t, n) {
    if (!UE(t)) throw Error(ee(200));
    return FE(null, e, t, !1, n);
};
Kn.unmountComponentAtNode = function(e) {
    if (!UE(e)) throw Error(ee(40));
    return e._reactRootContainer ? (Hi(function() {
        FE(null, null, e, !1, function() {
            e._reactRootContainer = null, e[as] = null;
        });
    }), !0) : !1;
};
Kn.unstable_batchedUpdates = _h;
Kn.unstable_renderSubtreeIntoContainer = function(e, t, n, r) {
    if (!UE(n)) throw Error(ee(200));
    if (e == null || e._reactInternals === void 0) throw Error(ee(38));
    return FE(e, t, n, !1, r);
};
Kn.version = "18.3.1-next-f1338f8080-20240426";
function VN() {
    if (!(typeof {} > "u" || typeof ({}).checkDCE != "function")) try {
        ({
            isDisabled: !0
        }).checkDCE(VN);
    } catch (e) {
        console.error(e);
    }
}
VN(), Vm.exports = Kn;
var $y = Vm.exports;
/**
 * @remix-run/router v1.19.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Ju() {
    return Ju = ("TURBOPACK compile-time truthy", 1) ? Object.assign.bind() : ("TURBOPACK unreachable", undefined), Ju.apply(this, arguments);
}
var Fs;
(function(e) {
    e.Pop = "POP", e.Push = "PUSH", e.Replace = "REPLACE";
})(Fs || (Fs = {}));
function ev(e) {
    e === void 0 && (e = {});
    let { initialEntries: t = [
        "/"
    ], initialIndex: n, v5Compat: r = !1 } = e, s;
    s = t.map((A, R)=>u(A, typeof A == "string" ? null : A.state, R === 0 ? "default" : void 0));
    let i = l(n ?? s.length - 1), a = Fs.Pop, o = null;
    function l(A) {
        return Math.min(Math.max(A, 0), s.length - 1);
    }
    function c() {
        return s[i];
    }
    function u(A, R, C) {
        R === void 0 && (R = null);
        let O = nv(s ? c().pathname : "/", A, R, C);
        return vh(O.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(A)), O;
    }
    function E(A) {
        return typeof A == "string" ? A : Vp(A);
    }
    return {
        get index () {
            return i;
        },
        get action () {
            return a;
        },
        get location () {
            return c();
        },
        createHref: E,
        createURL (A) {
            return new URL(E(A), "http://localhost");
        },
        encodeLocation (A) {
            let R = typeof A == "string" ? Ji(A) : A;
            return {
                pathname: R.pathname || "",
                search: R.search || "",
                hash: R.hash || ""
            };
        },
        push (A, R) {
            a = Fs.Push;
            let C = u(A, R);
            i += 1, s.splice(i, s.length, C), r && o && o({
                action: a,
                location: C,
                delta: 1
            });
        },
        replace (A, R) {
            a = Fs.Replace;
            let C = u(A, R);
            s[i] = C, r && o && o({
                action: a,
                location: C,
                delta: 0
            });
        },
        go (A) {
            a = Fs.Pop;
            let R = l(i + A), C = s[R];
            i = R, o && o({
                action: a,
                location: C,
                delta: A
            });
        },
        listen (A) {
            return o = A, ()=>{
                o = null;
            };
        }
    };
}
function pt(e, t) {
    if (e === !1 || e === null || typeof e > "u") throw new Error(t);
}
function vh(e, t) {
    if (!e) {
        typeof console < "u" && console.warn(t);
        try {
            throw new Error(t);
        } catch  {}
    }
}
function tv() {
    return Math.random().toString(36).substr(2, 8);
}
function nv(e, t, n, r) {
    return n === void 0 && (n = null), Ju({
        pathname: typeof e == "string" ? e : e.pathname,
        search: "",
        hash: ""
    }, typeof t == "string" ? Ji(t) : t, {
        state: n,
        // TODO: This could be cleaned up.  push/replace should probably just take
        // full Locations now and avoid the need to run through this flow at all
        // But that's a pretty big refactor to the current test suite so going to
        // keep as is for the time being and just let any incoming keys take precedence
        key: t && t.key || r || tv()
    });
}
function Vp(e) {
    let { pathname: t = "/", search: n = "", hash: r = "" } = e;
    return n && n !== "?" && (t += n.charAt(0) === "?" ? n : "?" + n), r && r !== "#" && (t += r.charAt(0) === "#" ? r : "#" + r), t;
}
function Ji(e) {
    let t = {};
    if (e) {
        let n = e.indexOf("#");
        n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
        let r = e.indexOf("?");
        r >= 0 && (t.search = e.substr(r), e = e.substr(0, r)), e && (t.pathname = e);
    }
    return t;
}
var oS;
(function(e) {
    e.data = "data", e.deferred = "deferred", e.redirect = "redirect", e.error = "error";
})(oS || (oS = {}));
function WN(e, t, n) {
    return n === void 0 && (n = "/"), rv(e, t, n);
}
function rv(e, t, n, r) {
    let s = typeof t == "string" ? Ji(t) : t, i = ja(s.pathname || "/", n);
    if (i == null) return null;
    let a = jN(e);
    sv(a);
    let o = null;
    for(let l = 0; o == null && l < a.length; ++l){
        let c = Tv(i);
        o = fv(a[l], c);
    }
    return o;
}
function jN(e, t, n, r) {
    t === void 0 && (t = []), n === void 0 && (n = []), r === void 0 && (r = "");
    let s = (i, a, o)=>{
        let l = {
            relativePath: o === void 0 ? i.path || "" : o,
            caseSensitive: i.caseSensitive === !0,
            childrenIndex: a,
            route: i
        };
        l.relativePath.startsWith("/") && (pt(l.relativePath.startsWith(r), 'Absolute route path "' + l.relativePath + '" nested under path ' + ('"' + r + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), l.relativePath = l.relativePath.slice(r.length));
        let c = Ks([
            r,
            l.relativePath
        ]), u = n.concat(l);
        i.children && i.children.length > 0 && (pt(// Our types know better, but runtime JS may not!
        // @ts-expect-error
        i.index !== !0, "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + c + '".')), jN(i.children, t, u, c)), !(i.path == null && !i.index) && t.push({
            path: c,
            score: Ev(c, i.index),
            routesMeta: u
        });
    };
    return e.forEach((i, a)=>{
        var o;
        if (i.path === "" || !((o = i.path) != null && o.includes("?"))) s(i, a);
        else for (let l of XN(i.path))s(i, a, l);
    }), t;
}
function XN(e) {
    let t = e.split("/");
    if (t.length === 0) return [];
    let [n, ...r] = t, s = n.endsWith("?"), i = n.replace(/\?$/, "");
    if (r.length === 0) return s ? [
        i,
        ""
    ] : [
        i
    ];
    let a = XN(r.join("/")), o = [];
    return o.push(...a.map((l)=>l === "" ? i : [
            i,
            l
        ].join("/"))), s && o.push(...a), o.map((l)=>e.startsWith("/") && l === "" ? "/" : l);
}
function sv(e) {
    e.sort((t, n)=>t.score !== n.score ? n.score - t.score : dv(t.routesMeta.map((r)=>r.childrenIndex), n.routesMeta.map((r)=>r.childrenIndex)));
}
const iv = /^:[\w-]+$/, av = 3, ov = 2, lv = 1, cv = 10, uv = -2, lS = (e)=>e === "*";
function Ev(e, t) {
    let n = e.split("/"), r = n.length;
    return n.some(lS) && (r += uv), t && (r += ov), n.filter((s)=>!lS(s)).reduce((s, i)=>s + (iv.test(i) ? av : i === "" ? lv : cv), r);
}
function dv(e, t) {
    return e.length === t.length && e.slice(0, -1).every((r, s)=>r === t[s]) ? // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    e[e.length - 1] - t[t.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0;
}
function fv(e, t, n) {
    let { routesMeta: r } = e, s = {}, i = "/", a = [];
    for(let o = 0; o < r.length; ++o){
        let l = r[o], c = o === r.length - 1, u = i === "/" ? t : t.slice(i.length) || "/", E = Wp({
            path: l.relativePath,
            caseSensitive: l.caseSensitive,
            end: c
        }, u), p = l.route;
        if (!E) return null;
        Object.assign(s, E.params), a.push({
            // TODO: Can this as be avoided?
            params: s,
            pathname: Ks([
                i,
                E.pathname
            ]),
            pathnameBase: Rv(Ks([
                i,
                E.pathnameBase
            ])),
            route: p
        }), E.pathnameBase !== "/" && (i = Ks([
            i,
            E.pathnameBase
        ]));
    }
    return a;
}
function Wp(e, t) {
    typeof e == "string" && (e = {
        path: e,
        caseSensitive: !1,
        end: !0
    });
    let [n, r] = pv(e.path, e.caseSensitive, e.end), s = t.match(n);
    if (!s) return null;
    let i = s[0], a = i.replace(/(.)\/+$/, "$1"), o = s.slice(1);
    return {
        params: r.reduce((c, u, E)=>{
            let { paramName: p, isOptional: A } = u;
            if (p === "*") {
                let C = o[E] || "";
                a = i.slice(0, i.length - C.length).replace(/(.)\/+$/, "$1");
            }
            const R = o[E];
            return A && !R ? c[p] = void 0 : c[p] = (R || "").replace(/%2F/g, "/"), c;
        }, {}),
        pathname: i,
        pathnameBase: a,
        pattern: e
    };
}
function pv(e, t, n) {
    t === void 0 && (t = !1), n === void 0 && (n = !0), vh(e === "*" || !e.endsWith("*") || e.endsWith("/*"), 'Route path "' + e + '" will be treated as if it were ' + ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'));
    let r = [], s = "^" + e.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (a, o, l)=>(r.push({
            paramName: o,
            isOptional: l != null
        }), l ? "/?([^\\/]+)?" : "/([^\\/]+)"));
    return e.endsWith("*") ? (r.push({
        paramName: "*"
    }), s += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? s += "\\/*$" : e !== "" && e !== "/" && (s += "(?:(?=\\/|$))"), [
        new RegExp(s, t ? void 0 : "i"),
        r
    ];
}
function Tv(e) {
    try {
        return e.split("/").map((t)=>decodeURIComponent(t).replace(/\//g, "%2F")).join("/");
    } catch (t) {
        return vh(!1, 'The URL path "' + e + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + t + ").")), e;
    }
}
function ja(e, t) {
    if (t === "/") return e;
    if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
    let n = t.endsWith("/") ? t.length - 1 : t.length, r = e.charAt(n);
    return r && r !== "/" ? null : e.slice(n) || "/";
}
function hv(e, t) {
    t === void 0 && (t = "/");
    let { pathname: n, search: r = "", hash: s = "" } = typeof e == "string" ? Ji(e) : e;
    return {
        pathname: n ? n.startsWith("/") ? n : Av(n, t) : t,
        search: mv(r),
        hash: _v(s)
    };
}
function Av(e, t) {
    let n = t.replace(/\/+$/, "").split("/");
    return e.split("/").forEach((s)=>{
        s === ".." ? n.length > 1 && n.pop() : s !== "." && n.push(s);
    }), n.length > 1 ? n.join("/") : "/";
}
function rf(e, t, n, r) {
    return "Cannot include a '" + e + "' character in a manually specified " + ("`to." + t + "` field [" + JSON.stringify(r) + "].  Please separate it out to the ") + ("`to." + n + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function Sv(e) {
    return e.filter((t, n)=>n === 0 || t.route.path && t.route.path.length > 0);
}
function bh(e, t) {
    let n = Sv(e);
    return t ? n.map((r, s)=>s === n.length - 1 ? r.pathname : r.pathnameBase) : n.map((r)=>r.pathnameBase);
}
function Ph(e, t, n, r) {
    r === void 0 && (r = !1);
    let s;
    typeof e == "string" ? s = Ji(e) : (s = Ju({}, e), pt(!s.pathname || !s.pathname.includes("?"), rf("?", "pathname", "search", s)), pt(!s.pathname || !s.pathname.includes("#"), rf("#", "pathname", "hash", s)), pt(!s.search || !s.search.includes("#"), rf("#", "search", "hash", s)));
    let i = e === "" || s.pathname === "", a = i ? "/" : s.pathname, o;
    if (a == null) o = n;
    else {
        let E = t.length - 1;
        if (!r && a.startsWith("..")) {
            let p = a.split("/");
            for(; p[0] === "..";)p.shift(), E -= 1;
            s.pathname = p.join("/");
        }
        o = E >= 0 ? t[E] : "/";
    }
    let l = hv(s, o), c = a && a !== "/" && a.endsWith("/"), u = (i || a === ".") && n.endsWith("/");
    return !l.pathname.endsWith("/") && (c || u) && (l.pathname += "/"), l;
}
const Ks = (e)=>e.join("/").replace(/\/\/+/g, "/"), Rv = (e)=>e.replace(/\/+$/, "").replace(/^\/*/, "/"), mv = (e)=>!e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e, _v = (e)=>!e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e;
function Nv(e) {
    return e != null && typeof e.status == "number" && typeof e.statusText == "string" && typeof e.internal == "boolean" && "data" in e;
}
const KN = [
    "post",
    "put",
    "patch",
    "delete"
];
new Set(KN);
const Iv = [
    "get",
    ...KN
];
new Set(Iv);
/**
 * React Router v6.26.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function _l() {
    return _l = ("TURBOPACK compile-time truthy", 1) ? Object.assign.bind() : ("TURBOPACK unreachable", undefined), _l.apply(this, arguments);
}
const BE = /* @__PURE__ */ L.createContext(null), zN = /* @__PURE__ */ L.createContext(null), As = /* @__PURE__ */ L.createContext(null), Gl = /* @__PURE__ */ L.createContext(null), Yr = /* @__PURE__ */ L.createContext({
    outlet: null,
    matches: [],
    isDataRoute: !1
}), JN = /* @__PURE__ */ L.createContext(null);
function Ov(e, t) {
    let { relative: n } = t === void 0 ? {} : t;
    lo() || pt(!1);
    let { basename: r, navigator: s } = L.useContext(As), { hash: i, pathname: a, search: o } = GE(e, {
        relative: n
    }), l = a;
    return r !== "/" && (l = a === "/" ? r : Ks([
        r,
        a
    ])), s.createHref({
        pathname: l,
        search: o,
        hash: i
    });
}
function lo() {
    return L.useContext(Gl) != null;
}
function Ss() {
    return lo() || pt(!1), L.useContext(Gl).location;
}
function Cv() {
    return L.useContext(Gl).navigationType;
}
function qN(e) {
    L.useContext(As).static || L.useLayoutEffect(e);
}
function co() {
    let { isDataRoute: e } = L.useContext(Yr);
    return e ? kv() : gv();
}
function gv() {
    lo() || pt(!1);
    let e = L.useContext(BE), { basename: t, future: n, navigator: r } = L.useContext(As), { matches: s } = L.useContext(Yr), { pathname: i } = Ss(), a = JSON.stringify(bh(s, n.v7_relativeSplatPath)), o = L.useRef(!1);
    return qN(()=>{
        o.current = !0;
    }), L.useCallback({
        "gv.useCallback": function(c, u) {
            if (u === void 0 && (u = {}), !o.current) return;
            if (typeof c == "number") {
                r.go(c);
                return;
            }
            let E = Ph(c, JSON.parse(a), i, u.relative === "path");
            e == null && t !== "/" && (E.pathname = E.pathname === "/" ? t : Ks([
                t,
                E.pathname
            ])), (u.replace ? r.replace : r.push)(E, u.state, u);
        }
    }["gv.useCallback"], [
        t,
        r,
        a,
        i,
        e
    ]);
}
const Lv = /* @__PURE__ */ L.createContext(null);
function yv(e) {
    let t = L.useContext(Yr).outlet;
    return t && /* @__PURE__ */ L.createElement(Lv.Provider, {
        value: e
    }, t);
}
function qi() {
    let { matches: e } = L.useContext(Yr), t = e[e.length - 1];
    return t ? t.params : {};
}
function GE(e, t) {
    let { relative: n } = t === void 0 ? {} : t, { future: r } = L.useContext(As), { matches: s } = L.useContext(Yr), { pathname: i } = Ss(), a = JSON.stringify(bh(s, r.v7_relativeSplatPath));
    return L.useMemo({
        "GE.useMemo": ()=>Ph(e, JSON.parse(a), i, n === "path")
    }["GE.useMemo"], [
        e,
        a,
        i,
        n
    ]);
}
function vv(e, t) {
    return bv(e, t);
}
function bv(e, t, n, r) {
    lo() || pt(!1);
    let { navigator: s } = L.useContext(As), { matches: i } = L.useContext(Yr), a = i[i.length - 1], o = a ? a.params : {}, l = a ? a.pathnameBase : "/", c = Ss(), u;
    if (t) {
        var E;
        let O = typeof t == "string" ? Ji(t) : t;
        l === "/" || (E = O.pathname) != null && E.startsWith(l) || pt(!1), u = O;
    } else u = c;
    let p = u.pathname || "/", A = p;
    if (l !== "/") {
        let O = l.replace(/^\//, "").split("/");
        A = "/" + p.replace(/^\//, "").split("/").slice(O.length).join("/");
    }
    let R = WN(e, {
        pathname: A
    }), C = xv(R && R.map((O)=>Object.assign({}, O, {
            params: Object.assign({}, o, O.params),
            pathname: Ks([
                l,
                // Re-encode pathnames that were decoded inside matchRoutes
                s.encodeLocation ? s.encodeLocation(O.pathname).pathname : O.pathname
            ]),
            pathnameBase: O.pathnameBase === "/" ? l : Ks([
                l,
                // Re-encode pathnames that were decoded inside matchRoutes
                s.encodeLocation ? s.encodeLocation(O.pathnameBase).pathname : O.pathnameBase
            ])
        })), i, n, r);
    return t && C ? /* @__PURE__ */ L.createElement(Gl.Provider, {
        value: {
            location: _l({
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default"
            }, u),
            navigationType: Fs.Pop
        }
    }, C) : C;
}
function Pv() {
    let e = Gv(), t = Nv(e) ? e.status + " " + e.statusText : e instanceof Error ? e.message : JSON.stringify(e), n = e instanceof Error ? e.stack : null, s = {
        padding: "0.5rem",
        backgroundColor: "rgba(200,200,200, 0.5)"
    };
    return /* @__PURE__ */ L.createElement(L.Fragment, null, /* @__PURE__ */ L.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ L.createElement("h3", {
        style: {
            fontStyle: "italic"
        }
    }, t), n ? /* @__PURE__ */ L.createElement("pre", {
        style: s
    }, n) : null, null);
}
const Mv = /* @__PURE__ */ L.createElement(Pv, null);
class Dv extends L.Component {
    constructor(t){
        super(t), this.state = {
            location: t.location,
            revalidation: t.revalidation,
            error: t.error
        };
    }
    static getDerivedStateFromError(t) {
        return {
            error: t
        };
    }
    static getDerivedStateFromProps(t, n) {
        return n.location !== t.location || n.revalidation !== "idle" && t.revalidation === "idle" ? {
            error: t.error,
            location: t.location,
            revalidation: t.revalidation
        } : {
            error: t.error !== void 0 ? t.error : n.error,
            location: n.location,
            revalidation: t.revalidation || n.revalidation
        };
    }
    componentDidCatch(t, n) {
        console.error("React Router caught the following error during render", t, n);
    }
    render() {
        return this.state.error !== void 0 ? /* @__PURE__ */ L.createElement(Yr.Provider, {
            value: this.props.routeContext
        }, /* @__PURE__ */ L.createElement(JN.Provider, {
            value: this.state.error,
            children: this.props.component
        })) : this.props.children;
    }
}
function wv(e) {
    let { routeContext: t, match: n, children: r } = e, s = L.useContext(BE);
    return s && s.static && s.staticContext && (n.route.errorElement || n.route.ErrorBoundary) && (s.staticContext._deepestRenderedBoundaryId = n.route.id), /* @__PURE__ */ L.createElement(Yr.Provider, {
        value: t
    }, r);
}
function xv(e, t, n, r) {
    var s;
    if (t === void 0 && (t = []), n === void 0 && (n = null), r === void 0 && (r = null), e == null) {
        var i;
        if (!n) return null;
        if (n.errors) e = n.matches;
        else if ((i = r) != null && i.v7_partialHydration && t.length === 0 && !n.initialized && n.matches.length > 0) e = n.matches;
        else return null;
    }
    let a = e, o = (s = n) == null ? void 0 : s.errors;
    if (o != null) {
        let u = a.findIndex((E)=>E.route.id && (o == null ? void 0 : o[E.route.id]) !== void 0);
        u >= 0 || pt(!1), a = a.slice(0, Math.min(a.length, u + 1));
    }
    let l = !1, c = -1;
    if (n && r && r.v7_partialHydration) for(let u = 0; u < a.length; u++){
        let E = a[u];
        if ((E.route.HydrateFallback || E.route.hydrateFallbackElement) && (c = u), E.route.id) {
            let { loaderData: p, errors: A } = n, R = E.route.loader && p[E.route.id] === void 0 && (!A || A[E.route.id] === void 0);
            if (E.route.lazy || R) {
                l = !0, c >= 0 ? a = a.slice(0, c + 1) : a = [
                    a[0]
                ];
                break;
            }
        }
    }
    return a.reduceRight((u, E, p)=>{
        let A, R = !1, C = null, O = null;
        n && (A = o && E.route.id ? o[E.route.id] : void 0, C = E.route.errorElement || Mv, l && (c < 0 && p === 0 ? (R = !0, O = null) : c === p && (R = !0, O = E.route.hydrateFallbackElement || null)));
        let d = t.concat(a.slice(0, p + 1)), f = ()=>{
            let _;
            return A ? _ = C : R ? _ = O : E.route.Component ? _ = /* @__PURE__ */ L.createElement(E.route.Component, null) : E.route.element ? _ = E.route.element : _ = u, /* @__PURE__ */ L.createElement(wv, {
                match: E,
                routeContext: {
                    outlet: u,
                    matches: d,
                    isDataRoute: n != null
                },
                children: _
            });
        };
        return n && (E.route.ErrorBoundary || E.route.errorElement || p === 0) ? /* @__PURE__ */ L.createElement(Dv, {
            location: n.location,
            revalidation: n.revalidation,
            component: C,
            error: A,
            children: f(),
            routeContext: {
                outlet: null,
                matches: d,
                isDataRoute: !0
            }
        }) : f();
    }, null);
}
function Uv(e) {
    let t = L.useContext(BE);
    return t || pt(!1), t;
}
function Fv(e) {
    let t = L.useContext(zN);
    return t || pt(!1), t;
}
function Bv(e) {
    let t = L.useContext(Yr);
    return t || pt(!1), t;
}
function ZN(e) {
    let t = Bv(), n = t.matches[t.matches.length - 1];
    return n.route.id || pt(!1), n.route.id;
}
function Gv() {
    var e;
    let t = L.useContext(JN), n = Fv(), r = ZN();
    return t !== void 0 ? t : (e = n.errors) == null ? void 0 : e[r];
}
function kv() {
    let { router: e } = Uv(), t = ZN(), n = L.useRef(!1);
    return qN(()=>{
        n.current = !0;
    }), L.useCallback({
        "kv.useCallback": function(s, i) {
            i === void 0 && (i = {}), n.current && (typeof s == "number" ? e.navigate(s) : e.navigate(s, _l({
                fromRouteId: t
            }, i)));
        }
    }["kv.useCallback"], [
        e,
        t
    ]);
}
const Hv = "startTransition", cS = HL[Hv];
function Yv(e) {
    let { basename: t, children: n, initialEntries: r, initialIndex: s, future: i } = e, a = L.useRef();
    a.current == null && (a.current = ev({
        initialEntries: r,
        initialIndex: s,
        v5Compat: !0
    }));
    let o = a.current, [l, c] = L.useState({
        action: o.action,
        location: o.location
    }), { v7_startTransition: u } = i || {}, E = L.useCallback({
        "Yv.useCallback[E]": (p)=>{
            u && cS ? cS({
                "Yv.useCallback[E]": ()=>c(p)
            }["Yv.useCallback[E]"]) : c(p);
        }
    }["Yv.useCallback[E]"], [
        c,
        u
    ]);
    return L.useLayoutEffect({
        "Yv.useLayoutEffect": ()=>o.listen(E)
    }["Yv.useLayoutEffect"], [
        o,
        E
    ]), /* @__PURE__ */ L.createElement(Vv, {
        basename: t,
        children: n,
        location: l.location,
        navigationType: l.action,
        navigator: o,
        future: i
    });
}
function QN(e) {
    let { to: t, replace: n, state: r, relative: s } = e;
    lo() || pt(!1);
    let { future: i } = L.useContext(As), { matches: a } = L.useContext(Yr), { pathname: o } = Ss(), l = co(), c = Ph(t, bh(a, i.v7_relativeSplatPath), o, s === "path"), u = JSON.stringify(c);
    return L.useEffect({
        "QN.useEffect": ()=>l(JSON.parse(u), {
                replace: n,
                state: r,
                relative: s
            })
    }["QN.useEffect"], [
        l,
        u,
        s,
        n,
        r
    ]), null;
}
function $N(e) {
    return yv(e.context);
}
function ze(e) {
    pt(!1);
}
function Vv(e) {
    let { basename: t = "/", children: n = null, location: r, navigationType: s = Fs.Pop, navigator: i, static: a = !1, future: o } = e;
    lo() && pt(!1);
    let l = t.replace(/^\/*/, "/"), c = L.useMemo({
        "Vv.useMemo[c]": ()=>({
                basename: l,
                navigator: i,
                static: a,
                future: _l({
                    v7_relativeSplatPath: !1
                }, o)
            })
    }["Vv.useMemo[c]"], [
        l,
        o,
        i,
        a
    ]);
    typeof r == "string" && (r = Ji(r));
    let { pathname: u = "/", search: E = "", hash: p = "", state: A = null, key: R = "default" } = r, C = L.useMemo({
        "Vv.useMemo[C]": ()=>{
            let O = ja(u, l);
            return O == null ? null : {
                location: {
                    pathname: O,
                    search: E,
                    hash: p,
                    state: A,
                    key: R
                },
                navigationType: s
            };
        }
    }["Vv.useMemo[C]"], [
        l,
        u,
        E,
        p,
        A,
        R,
        s
    ]);
    return C == null ? null : /* @__PURE__ */ L.createElement(As.Provider, {
        value: c
    }, /* @__PURE__ */ L.createElement(Gl.Provider, {
        children: n,
        value: C
    }));
}
function Rs(e) {
    let { children: t, location: n } = e;
    return vv(qu(t), n);
}
new Promise(()=>{});
function qu(e, t) {
    t === void 0 && (t = []);
    let n = [];
    return L.Children.forEach(e, (r, s)=>{
        if (!/* @__PURE__ */ L.isValidElement(r)) return;
        let i = [
            ...t,
            s
        ];
        if (r.type === L.Fragment) {
            n.push.apply(n, qu(r.props.children, i));
            return;
        }
        r.type !== ze && pt(!1), !r.props.index || !r.props.children || pt(!1);
        let a = {
            id: r.props.id || i.join("-"),
            caseSensitive: r.props.caseSensitive,
            element: r.props.element,
            Component: r.props.Component,
            index: r.props.index,
            path: r.props.path,
            loader: r.props.loader,
            action: r.props.action,
            errorElement: r.props.errorElement,
            ErrorBoundary: r.props.ErrorBoundary,
            hasErrorBoundary: r.props.ErrorBoundary != null || r.props.errorElement != null,
            shouldRevalidate: r.props.shouldRevalidate,
            handle: r.props.handle,
            lazy: r.props.lazy
        };
        r.props.children && (a.children = qu(r.props.children, i)), n.push(a);
    }), n;
}
/**
 * React Router DOM v6.26.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Zu() {
    return Zu = ("TURBOPACK compile-time truthy", 1) ? Object.assign.bind() : ("TURBOPACK unreachable", undefined), Zu.apply(this, arguments);
}
function eI(e, t) {
    if (e == null) return {};
    var n = {}, r = Object.keys(e), s, i;
    for(i = 0; i < r.length; i++)s = r[i], !(t.indexOf(s) >= 0) && (n[s] = e[s]);
    return n;
}
function Wv(e) {
    return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function jv(e, t) {
    return e.button === 0 && // Ignore everything but left clicks
    (!t || t === "_self") && // Let browser handle "target=_blank" etc.
    !Wv(e);
}
const Xv = [
    "onClick",
    "relative",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to",
    "preventScrollReset",
    "unstable_viewTransition"
], Kv = [
    "aria-current",
    "caseSensitive",
    "className",
    "end",
    "style",
    "to",
    "unstable_viewTransition",
    "children"
], zv = "6";
try {
    window.__reactRouterVersion = zv;
} catch  {}
const Jv = /* @__PURE__ */ L.createContext({
    isTransitioning: !1
}), qv = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", Zv = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Dn = /* @__PURE__ */ L.forwardRef(function(t, n) {
    let { onClick: r, relative: s, reloadDocument: i, replace: a, state: o, target: l, to: c, preventScrollReset: u, unstable_viewTransition: E } = t, p = eI(t, Xv), { basename: A } = L.useContext(As), R, C = !1;
    if (typeof c == "string" && Zv.test(c) && (R = c, qv)) try {
        let _ = new URL(window.location.href), h = c.startsWith("//") ? new URL(_.protocol + c) : new URL(c), I = ja(h.pathname, A);
        h.origin === _.origin && I != null ? c = I + h.search + h.hash : C = !0;
    } catch  {}
    let O = Ov(c, {
        relative: s
    }), d = e5(c, {
        replace: a,
        state: o,
        target: l,
        preventScrollReset: u,
        relative: s,
        unstable_viewTransition: E
    });
    function f(_) {
        r && r(_), _.defaultPrevented || d(_);
    }
    return(// eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ L.createElement("a", Zu({}, p, {
        href: R || O,
        onClick: C || i ? r : f,
        ref: n,
        target: l
    })));
}), Qv = /* @__PURE__ */ L.forwardRef(function(t, n) {
    let { "aria-current": r = "page", caseSensitive: s = !1, className: i = "", end: a = !1, style: o, to: l, unstable_viewTransition: c, children: u } = t, E = eI(t, Kv), p = GE(l, {
        relative: E.relative
    }), A = Ss(), R = L.useContext(zN), { navigator: C, basename: O } = L.useContext(As), d = R != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    t5(p) && c === !0, f = C.encodeLocation ? C.encodeLocation(p).pathname : p.pathname, _ = A.pathname, h = R && R.navigation && R.navigation.location ? R.navigation.location.pathname : null;
    s || (_ = _.toLowerCase(), h = h ? h.toLowerCase() : null, f = f.toLowerCase()), h && O && (h = ja(h, O) || h);
    const I = f !== "/" && f.endsWith("/") ? f.length - 1 : f.length;
    let T = _ === f || !a && _.startsWith(f) && _.charAt(I) === "/", N = h != null && (h === f || !a && h.startsWith(f) && h.charAt(f.length) === "/"), g = {
        isActive: T,
        isPending: N,
        isTransitioning: d
    }, b = T ? r : void 0, S;
    typeof i == "function" ? S = i(g) : S = [
        i,
        T ? "active" : null,
        N ? "pending" : null,
        d ? "transitioning" : null
    ].filter(Boolean).join(" ");
    let P = typeof o == "function" ? o(g) : o;
    return /* @__PURE__ */ L.createElement(Dn, Zu({}, E, {
        "aria-current": b,
        className: S,
        ref: n,
        style: P,
        to: l,
        unstable_viewTransition: c
    }), typeof u == "function" ? u(g) : u);
});
var uS;
(function(e) {
    e.UseScrollRestoration = "useScrollRestoration", e.UseSubmit = "useSubmit", e.UseSubmitFetcher = "useSubmitFetcher", e.UseFetcher = "useFetcher", e.useViewTransitionState = "useViewTransitionState";
})(uS || (uS = {}));
var ES;
(function(e) {
    e.UseFetcher = "useFetcher", e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration";
})(ES || (ES = {}));
function $v(e) {
    let t = L.useContext(BE);
    return t || pt(!1), t;
}
function e5(e, t) {
    let { target: n, replace: r, state: s, preventScrollReset: i, relative: a, unstable_viewTransition: o } = t === void 0 ? {} : t, l = co(), c = Ss(), u = GE(e, {
        relative: a
    });
    return L.useCallback({
        "e5.useCallback": (E)=>{
            if (jv(E, n)) {
                E.preventDefault();
                let p = r !== void 0 ? r : Vp(c) === Vp(u);
                l(e, {
                    replace: p,
                    state: s,
                    preventScrollReset: i,
                    relative: a,
                    unstable_viewTransition: o
                });
            }
        }
    }["e5.useCallback"], [
        c,
        l,
        u,
        r,
        s,
        n,
        e,
        i,
        a,
        o
    ]);
}
function t5(e, t) {
    t === void 0 && (t = {});
    let n = L.useContext(Jv);
    n == null && pt(!1);
    let { basename: r } = $v(), s = GE(e, {
        relative: t.relative
    });
    if (!n.isTransitioning) return !1;
    let i = ja(n.currentLocation.pathname, r) || n.currentLocation.pathname, a = ja(n.nextLocation.pathname, r) || n.nextLocation.pathname;
    return Wp(s.pathname, a) != null || Wp(s.pathname, i) != null;
}
var tI = {}, nI = {}, Mh = {
    exports: {}
}, Ne = String, rI = function() {
    return {
        isColorSupported: !1,
        reset: Ne,
        bold: Ne,
        dim: Ne,
        italic: Ne,
        underline: Ne,
        inverse: Ne,
        hidden: Ne,
        strikethrough: Ne,
        black: Ne,
        red: Ne,
        green: Ne,
        yellow: Ne,
        blue: Ne,
        magenta: Ne,
        cyan: Ne,
        white: Ne,
        gray: Ne,
        bgBlack: Ne,
        bgRed: Ne,
        bgGreen: Ne,
        bgYellow: Ne,
        bgBlue: Ne,
        bgMagenta: Ne,
        bgCyan: Ne,
        bgWhite: Ne,
        blackBright: Ne,
        redBright: Ne,
        greenBright: Ne,
        yellowBright: Ne,
        blueBright: Ne,
        magentaBright: Ne,
        cyanBright: Ne,
        whiteBright: Ne,
        bgBlackBright: Ne,
        bgRedBright: Ne,
        bgGreenBright: Ne,
        bgYellowBright: Ne,
        bgBlueBright: Ne,
        bgMagentaBright: Ne,
        bgCyanBright: Ne,
        bgWhiteBright: Ne
    };
};
Mh.exports = rI();
Mh.exports.createColors = rI;
var n5 = Mh.exports;
(function(e) {
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    function t(l, c) {
        for(var u in c)Object.defineProperty(l, u, {
            enumerable: !0,
            get: c[u]
        });
    }
    t(e, {
        dim: function() {
            return a;
        },
        default: function() {
            return o;
        }
    });
    const n = /* @__PURE__ */ r(n5);
    function r(l) {
        return l && l.__esModule ? l : {
            default: l
        };
    }
    let s = /* @__PURE__ */ new Set();
    function i(l, c, u) {
        typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] < "u" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env.JEST_WORKER_ID || u && s.has(u) || (u && s.add(u), console.warn(""), c.forEach((E)=>console.warn(l, "-", E)));
    }
    function a(l) {
        return n.default.dim(l);
    }
    const o = {
        info (l, c) {
            i(n.default.bold(n.default.cyan("info")), ...Array.isArray(l) ? [
                l
            ] : [
                c,
                l
            ]);
        },
        warn (l, c) {
            i(n.default.bold(n.default.yellow("warn")), ...Array.isArray(l) ? [
                l
            ] : [
                c,
                l
            ]);
        },
        risk (l, c) {
            i(n.default.bold(n.default.magenta("risk")), ...Array.isArray(l) ? [
                l
            ] : [
                c,
                l
            ]);
        }
    };
})(nI);
(function(e) {
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function() {
            return s;
        }
    });
    const t = /* @__PURE__ */ n(nI);
    function n(i) {
        return i && i.__esModule ? i : {
            default: i
        };
    }
    function r({ version: i, from: a, to: o }) {
        t.default.warn(`${a}-color-renamed`, [
            `As of Tailwind CSS ${i}, \`${a}\` has been renamed to \`${o}\`.`,
            "Update your configuration file to silence this warning."
        ]);
    }
    const s = {
        inherit: "inherit",
        current: "currentColor",
        transparent: "transparent",
        black: "#000",
        white: "#fff",
        slate: {
            50: "#f8fafc",
            100: "#f1f5f9",
            200: "#e2e8f0",
            300: "#cbd5e1",
            400: "#94a3b8",
            500: "#64748b",
            600: "#475569",
            700: "#334155",
            800: "#1e293b",
            900: "#0f172a",
            950: "#020617"
        },
        gray: {
            50: "#f9fafb",
            100: "#f3f4f6",
            200: "#e5e7eb",
            300: "#d1d5db",
            400: "#9ca3af",
            500: "#6b7280",
            600: "#4b5563",
            700: "#374151",
            800: "#1f2937",
            900: "#111827",
            950: "#030712"
        },
        zinc: {
            50: "#fafafa",
            100: "#f4f4f5",
            200: "#e4e4e7",
            300: "#d4d4d8",
            400: "#a1a1aa",
            500: "#71717a",
            600: "#52525b",
            700: "#3f3f46",
            800: "#27272a",
            900: "#18181b",
            950: "#09090b"
        },
        neutral: {
            50: "#fafafa",
            100: "#f5f5f5",
            200: "#e5e5e5",
            300: "#d4d4d4",
            400: "#a3a3a3",
            500: "#737373",
            600: "#525252",
            700: "#404040",
            800: "#262626",
            900: "#171717",
            950: "#0a0a0a"
        },
        stone: {
            50: "#fafaf9",
            100: "#f5f5f4",
            200: "#e7e5e4",
            300: "#d6d3d1",
            400: "#a8a29e",
            500: "#78716c",
            600: "#57534e",
            700: "#44403c",
            800: "#292524",
            900: "#1c1917",
            950: "#0c0a09"
        },
        red: {
            50: "#fef2f2",
            100: "#fee2e2",
            200: "#fecaca",
            300: "#fca5a5",
            400: "#f87171",
            500: "#ef4444",
            600: "#dc2626",
            700: "#b91c1c",
            800: "#991b1b",
            900: "#7f1d1d",
            950: "#450a0a"
        },
        orange: {
            50: "#fff7ed",
            100: "#ffedd5",
            200: "#fed7aa",
            300: "#fdba74",
            400: "#fb923c",
            500: "#f97316",
            600: "#ea580c",
            700: "#c2410c",
            800: "#9a3412",
            900: "#7c2d12",
            950: "#431407"
        },
        amber: {
            50: "#fffbeb",
            100: "#fef3c7",
            200: "#fde68a",
            300: "#fcd34d",
            400: "#fbbf24",
            500: "#f59e0b",
            600: "#d97706",
            700: "#b45309",
            800: "#92400e",
            900: "#78350f",
            950: "#451a03"
        },
        yellow: {
            50: "#fefce8",
            100: "#fef9c3",
            200: "#fef08a",
            300: "#fde047",
            400: "#facc15",
            500: "#eab308",
            600: "#ca8a04",
            700: "#a16207",
            800: "#854d0e",
            900: "#713f12",
            950: "#422006"
        },
        lime: {
            50: "#f7fee7",
            100: "#ecfccb",
            200: "#d9f99d",
            300: "#bef264",
            400: "#a3e635",
            500: "#84cc16",
            600: "#65a30d",
            700: "#4d7c0f",
            800: "#3f6212",
            900: "#365314",
            950: "#1a2e05"
        },
        green: {
            50: "#f0fdf4",
            100: "#dcfce7",
            200: "#bbf7d0",
            300: "#86efac",
            400: "#4ade80",
            500: "#22c55e",
            600: "#16a34a",
            700: "#15803d",
            800: "#166534",
            900: "#14532d",
            950: "#052e16"
        },
        emerald: {
            50: "#ecfdf5",
            100: "#d1fae5",
            200: "#a7f3d0",
            300: "#6ee7b7",
            400: "#34d399",
            500: "#10b981",
            600: "#059669",
            700: "#047857",
            800: "#065f46",
            900: "#064e3b",
            950: "#022c22"
        },
        teal: {
            50: "#f0fdfa",
            100: "#ccfbf1",
            200: "#99f6e4",
            300: "#5eead4",
            400: "#2dd4bf",
            500: "#14b8a6",
            600: "#0d9488",
            700: "#0f766e",
            800: "#115e59",
            900: "#134e4a",
            950: "#042f2e"
        },
        cyan: {
            50: "#ecfeff",
            100: "#cffafe",
            200: "#a5f3fc",
            300: "#67e8f9",
            400: "#22d3ee",
            500: "#06b6d4",
            600: "#0891b2",
            700: "#0e7490",
            800: "#155e75",
            900: "#164e63",
            950: "#083344"
        },
        sky: {
            50: "#f0f9ff",
            100: "#e0f2fe",
            200: "#bae6fd",
            300: "#7dd3fc",
            400: "#38bdf8",
            500: "#0ea5e9",
            600: "#0284c7",
            700: "#0369a1",
            800: "#075985",
            900: "#0c4a6e",
            950: "#082f49"
        },
        blue: {
            50: "#eff6ff",
            100: "#dbeafe",
            200: "#bfdbfe",
            300: "#93c5fd",
            400: "#60a5fa",
            500: "#3b82f6",
            600: "#2563eb",
            700: "#1d4ed8",
            800: "#1e40af",
            900: "#1e3a8a",
            950: "#172554"
        },
        indigo: {
            50: "#eef2ff",
            100: "#e0e7ff",
            200: "#c7d2fe",
            300: "#a5b4fc",
            400: "#818cf8",
            500: "#6366f1",
            600: "#4f46e5",
            700: "#4338ca",
            800: "#3730a3",
            900: "#312e81",
            950: "#1e1b4b"
        },
        violet: {
            50: "#f5f3ff",
            100: "#ede9fe",
            200: "#ddd6fe",
            300: "#c4b5fd",
            400: "#a78bfa",
            500: "#8b5cf6",
            600: "#7c3aed",
            700: "#6d28d9",
            800: "#5b21b6",
            900: "#4c1d95",
            950: "#2e1065"
        },
        purple: {
            50: "#faf5ff",
            100: "#f3e8ff",
            200: "#e9d5ff",
            300: "#d8b4fe",
            400: "#c084fc",
            500: "#a855f7",
            600: "#9333ea",
            700: "#7e22ce",
            800: "#6b21a8",
            900: "#581c87",
            950: "#3b0764"
        },
        fuchsia: {
            50: "#fdf4ff",
            100: "#fae8ff",
            200: "#f5d0fe",
            300: "#f0abfc",
            400: "#e879f9",
            500: "#d946ef",
            600: "#c026d3",
            700: "#a21caf",
            800: "#86198f",
            900: "#701a75",
            950: "#4a044e"
        },
        pink: {
            50: "#fdf2f8",
            100: "#fce7f3",
            200: "#fbcfe8",
            300: "#f9a8d4",
            400: "#f472b6",
            500: "#ec4899",
            600: "#db2777",
            700: "#be185d",
            800: "#9d174d",
            900: "#831843",
            950: "#500724"
        },
        rose: {
            50: "#fff1f2",
            100: "#ffe4e6",
            200: "#fecdd3",
            300: "#fda4af",
            400: "#fb7185",
            500: "#f43f5e",
            600: "#e11d48",
            700: "#be123c",
            800: "#9f1239",
            900: "#881337",
            950: "#4c0519"
        },
        get lightBlue () {
            return r({
                version: "v2.2",
                from: "lightBlue",
                to: "sky"
            }), this.sky;
        },
        get warmGray () {
            return r({
                version: "v3.0",
                from: "warmGray",
                to: "stone"
            }), this.stone;
        },
        get trueGray () {
            return r({
                version: "v3.0",
                from: "trueGray",
                to: "neutral"
            }), this.neutral;
        },
        get coolGray () {
            return r({
                version: "v3.0",
                from: "coolGray",
                to: "gray"
            }), this.gray;
        },
        get blueGray () {
            return r({
                version: "v3.0",
                from: "blueGray",
                to: "slate"
            }), this.slate;
        }
    };
})(tI);
let sf = tI;
var r5 = (sf.__esModule ? sf : {
    default: sf
}).default;
const s5 = /* @__PURE__ */ Ts(r5), i5 = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        x: "0px",
        y: "0px",
        width: 100,
        height: 100,
        viewBox: "0 0 48 48",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("path", {
        d: "M 22 1 C 19.802666 1 18 2.8026661 18 5 L 18 6 L 9 6 C 7.3555411 6 6 7.3544268 6 9 L 6 11 C 6 12.645573 7.3555411 14 9 14 L 33 14 A 1.0001 1.0001 0 1 0 33 12 L 9 12 C 8.4364589 12 8 11.564427 8 11 L 8 9 C 8 8.4355732 8.4364589 8 9 8 L 19 8 A 1.0001 1.0001 0 0 0 20 7 L 20 5 C 20 3.8833339 20.883334 3 22 3 L 26 3 C 27.116666 3 28 3.8833339 28 5 L 28 7 A 1.0001 1.0001 0 0 0 29 8 L 39 8 C 39.563541 8 40 8.4355732 40 9 L 40 11 C 40 11.564427 39.563541 12 39 12 L 38 12 A 1.0001 1.0001 0 0 0 37 13.003906 L 37.105469 40.080078 C 37.060923 41.715433 35.743427 43 34.107422 43 L 14.025391 43 C 12.348977 43 11.014814 41.656796 11.025391 39.980469 A 1.0001 1.0001 0 0 0 11.025391 39.974609 L 11 16.998047 A 1.0001 1.0001 0 1 0 9 17.001953 L 9.0253906 39.96875 C 9.0079668 42.730423 11.263804 45 14.025391 45 L 34.107422 45 C 36.805417 45 39.032014 42.831411 39.105469 40.134766 A 1.0001 1.0001 0 0 0 39.105469 40.103516 L 39.003906 13.998047 C 40.646254 13.995478 42 12.64401 42 11 L 42 9 C 42 7.3544268 40.644459 6 39 6 L 30 6 L 30 5 C 30 2.8026661 28.197334 1 26 1 L 22 1 z M 16.984375 19.986328 A 1.0001 1.0001 0 0 0 16 21 L 16 38 A 1.0001 1.0001 0 1 0 18 38 L 18 21 A 1.0001 1.0001 0 0 0 16.984375 19.986328 z M 23.984375 19.986328 A 1.0001 1.0001 0 0 0 23 21 L 23 38 A 1.0001 1.0001 0 1 0 25 38 L 25 21 A 1.0001 1.0001 0 0 0 23.984375 19.986328 z M 30.984375 19.986328 A 1.0001 1.0001 0 0 0 30 21 L 30 38 A 1.0001 1.0001 0 1 0 32 38 L 32 21 A 1.0001 1.0001 0 0 0 30.984375 19.986328 z"
    })), sI = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        width: 256,
        height: 256,
        viewBox: "0 0 256 256",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: 256,
        height: 256,
        fill: "none"
    }), /* @__PURE__ */ L.createElement("path", {
        d: "M121.678 68.6777C140.081 50.2742 169.919 50.2742 188.322 68.6777C206.726 87.0811 206.726 116.919 188.322 135.322C169.919 153.726 140.081 153.726 121.678 135.322C120.734 134.378 119.733 133.525 118.686 132.764C108.865 124.59 94.2507 125.11 85.0381 134.322L57.5381 161.822C47.775 171.585 47.775 187.415 57.5381 197.178C67.3012 206.941 83.1303 206.941 92.8934 197.178L104.862 185.209C142.205 207.751 191.449 202.907 223.678 170.678C261.607 132.748 261.607 71.252 223.678 33.3223C185.748 -4.60732 124.252 -4.60732 86.3223 33.3223C77.5523 42.0923 70.7787 52.1712 66.0472 62.9564C60.5003 75.6003 66.2535 90.3468 78.8974 95.8938C91.5413 101.441 106.288 95.6875 111.835 83.0436C114.109 77.8604 117.374 72.9809 121.678 68.6777Z",
        fill: "currentColor"
    }), /* @__PURE__ */ L.createElement("path", {
        d: "M59 224C59 238.359 47.3594 250 33 250C18.6406 250 7 238.359 7 224C7 209.641 18.6406 198 33 198C47.3594 198 59 209.641 59 224Z",
        fill: "currentColor"
    }), /* @__PURE__ */ L.createElement("path", {
        d: "M155 130C170.464 130 183 117.464 183 102C183 86.536 170.464 74 155 74C139.536 74 127 86.536 127 102C127 117.464 139.536 130 155 130Z",
        fill: "currentColor"
    })), a5 = new EventTarget();
function kl() {
    if (typeof window > "u") return a5;
    const e = window;
    return e.__spotlight || (e.__spotlight = {}), e.__spotlight.eventTarget || (e.__spotlight.eventTarget = new EventTarget()), e.__spotlight.eventTarget;
}
async function Hl(e, t) {
    kl().dispatchEvent(new CustomEvent(e, {
        detail: t || {}
    }));
}
async function kE(e, t) {
    kl().addEventListener(e, t);
}
async function o5(e, t) {
    kl().removeEventListener(e, t);
}
function he(...e) {
    return e.filter(Boolean).join(" ");
}
function iI(e, t, n, r = !1) {
    const s = e.toLowerCase();
    L.useEffect({
        "iI.useEffect": ()=>{
            function i(a) {
                r || a.stopPropagation(), a.key && t.every({
                    "iI.useEffect.i": (o)=>a[o]
                }["iI.useEffect.i"]) && a.key.toLowerCase() === s && n();
            }
            return window.addEventListener("keyup", i), ({
                "iI.useEffect": ()=>window.removeEventListener("keyup", i)
            })["iI.useEffect"];
        }
    }["iI.useEffect"], [
        s,
        t,
        n,
        r
    ]);
}
function HE({ tabs: e, nested: t, setOpen: n }) {
    const r = co(), s = Ss();
    return iI("Escape", [], ()=>{
        n && s.pathname.split("/").length === 2 ? n(!1) : r(-1);
    }), /* @__PURE__ */ m.jsxs("div", {
        children: [
            /* @__PURE__ */ m.jsxs("div", {
                className: "sm:hidden",
                children: [
                    /* @__PURE__ */ m.jsx("label", {
                        htmlFor: "tabs",
                        className: "sr-only",
                        children: "Select a tab"
                    }),
                    /* @__PURE__ */ m.jsx("select", {
                        id: "tabs",
                        name: "tabs",
                        className: "border-primary-800 bg-primary-800 hover:bg-primary-700 hover:border-primary-700 focus:bg-primary-800 text-primary-100 block w-full rounded-md py-2 pl-3 pr-10 focus:outline-none sm:text-sm",
                        onChange: (i)=>{
                            const a = e.find((o)=>o.id === i.target.value);
                            a != null && a.onSelect && a.onSelect(), r(`${t ? "" : "/"}${(a == null ? void 0 : a.id) || "not-found"}`);
                        },
                        children: e.map((i)=>{
                            var a;
                            return /* @__PURE__ */ m.jsxs("option", {
                                value: i.id,
                                children: [
                                    i.title,
                                    " ",
                                    (a = i.notificationCount) == null ? void 0 : a.count
                                ]
                            }, i.id);
                        })
                    })
                ]
            }),
            /* @__PURE__ */ m.jsx("div", {
                className: "hidden sm:block",
                children: /* @__PURE__ */ m.jsx("nav", {
                    className: "border-b-primary-700 flex space-x-8 border-b px-6",
                    "aria-label": "Tabs",
                    children: e.map((i)=>{
                        var a;
                        return /* @__PURE__ */ m.jsxs(Qv, {
                            to: `${t ? "" : "/"}${i.id}`,
                            replace: !0,
                            className: ({ isActive: o })=>he(o ? "border-primary-200 text-primary-100 [&>.count]:bg-primary-100 [&>.count]:text-primary-600" : "text-primary-400 hover:border-primary-400 hover:text-primary-100 [&>.count]:bg-primary-700 [&>.count]:text-primary-200 border-transparent", "-m-y -mx-2 flex select-none whitespace-nowrap border-b-2 px-2 py-3 text-sm font-medium"),
                            onClick: ()=>{
                                var o;
                                return (o = i.onSelect) == null ? void 0 : o.call(i);
                            },
                            children: [
                                i.title,
                                i.notificationCount !== void 0 ? /* @__PURE__ */ m.jsx("span", {
                                    className: "count ml-3 hidden rounded px-2.5 py-0.5 text-xs font-medium md:inline-block",
                                    children: (a = i.notificationCount) == null ? void 0 : a.count
                                }) : null
                            ]
                        }, i.id);
                    })
                })
            })
        ]
    });
}
function l5({ integrations: e, integrationData: t, setTriggerButtonCount: n, setOpen: r }) {
    const [s, i] = L.useState({
        count: 0,
        severe: !1
    }), a = e.flatMap((l)=>{
        var c;
        if (l.tabs) {
            const u = ((c = t[l.name]) == null ? void 0 : c.map((E)=>E.event)) || [];
            return l.tabs({
                processedEvents: u
            }).map((E)=>({
                    ...E,
                    processedEvents: u
                }));
        }
        return [];
    }), o = a.reduce((l, c)=>{
        var u, E;
        return {
            count: l.count + (((u = c.notificationCount) == null ? void 0 : u.count) || 0),
            severe: l.severe || ((E = c.notificationCount) == null ? void 0 : E.severe) || !1
        };
    }, {
        count: 0,
        severe: !1
    });
    return o.count !== s.count && i(o), L.useEffect({
        "l5.useEffect": ()=>{
            n(s);
        }
    }["l5.useEffect"], [
        s,
        n
    ]), /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsx(HE, {
                tabs: a,
                setOpen: r
            }),
            /* @__PURE__ */ m.jsxs(Rs, {
                children: [
                    /* @__PURE__ */ m.jsx(ze, {
                        path: "/not-found",
                        element: /* @__PURE__ */ m.jsx("p", {
                            children: "Not Found - How'd you manage to get here?"
                        })
                    }, "not-found"),
                    a.map(({ content: l, id: c, processedEvents: u })=>l ? /* @__PURE__ */ m.jsx(ze, {
                            path: `/${c}/*`,
                            element: L.createElement(l, {
                                processedEvents: u
                            })
                        }, c) : null)
                ]
            })
        ]
    });
}
function c5({ isOpen: e, setOpen: t, fullPage: n, children: r }) {
    return n ? /* @__PURE__ */ m.jsx(m.Fragment, {
        children: r
    }) : /* @__PURE__ */ m.jsx("div", {
        className: he("spotlight-fullscreen-blur", e ? "" : "!hidden"),
        onClick: (s)=>{
            s.target === s.currentTarget && t(!1);
        },
        children: r
    });
}
function u5({ integrations: e, isOpen: t, setOpen: n, integrationData: r, isOnline: s, setTriggerButtonCount: i, fullPage: a, showClearEventsButton: o }) {
    return /* @__PURE__ */ m.jsx(c5, {
        isOpen: t,
        setOpen: n,
        fullPage: a,
        children: /* @__PURE__ */ m.jsxs("div", {
            className: he("spotlight-debugger", a ? "spotlight-fullscreen" : ""),
            children: [
                /* @__PURE__ */ m.jsxs("div", {
                    className: "text-primary-200 flex items-center gap-x-2 px-6 py-4",
                    children: [
                        /* @__PURE__ */ m.jsxs("h1", {
                            className: "font-raleway flex flex-1 items-end gap-x-1 leading-7 opacity-80",
                            children: [
                                /* @__PURE__ */ m.jsxs("div", {
                                    className: "inline-flex items-center gap-x-4",
                                    children: [
                                        /* @__PURE__ */ m.jsx(sI, {
                                            height: 32,
                                            width: 32
                                        }),
                                        /* @__PURE__ */ m.jsx("div", {
                                            className: "text-3xl font-light uppercase leading-7 tracking-widest",
                                            children: "Spotlight"
                                        })
                                    ]
                                }),
                                /* @__PURE__ */ m.jsxs("div", {
                                    className: "text-primary-300 flex items-center gap-x-1 text-sm",
                                    children: [
                                        /* @__PURE__ */ m.jsx("span", {
                                            children: "by"
                                        }),
                                        /* @__PURE__ */ m.jsx("a", {
                                            rel: "noopener",
                                            href: "https://sentry.io",
                                            target: "_blank",
                                            className: "font-semibold hover:underline",
                                            children: "Sentry"
                                        }),
                                        /* @__PURE__ */ m.jsxs("a", {
                                            href: "https://github.com/getsentry/spotlight",
                                            target: "_blank",
                                            rel: "noopener",
                                            className: "sl-flex ml-2",
                                            children: [
                                                /* @__PURE__ */ m.jsx("span", {
                                                    className: "sr-only",
                                                    children: "GitHub"
                                                }),
                                                /* @__PURE__ */ m.jsx("svg", {
                                                    "aria-hidden": "true",
                                                    className: "astro-6byselsc",
                                                    width: "16",
                                                    height: "16",
                                                    viewBox: "0 0 24 24",
                                                    fill: "currentColor",
                                                    children: /* @__PURE__ */ m.jsx("path", {
                                                        d: "M12 .3a12 12 0 0 0-3.8 23.38c.6.12.83-.26.83-.57L9 21.07c-3.34.72-4.04-1.61-4.04-1.61-.55-1.39-1.34-1.76-1.34-1.76-1.08-.74.09-.73.09-.73 1.2.09 1.83 1.24 1.83 1.24 1.08 1.83 2.81 1.3 3.5 1 .1-.78.42-1.31.76-1.61-2.67-.3-5.47-1.33-5.47-5.93 0-1.31.47-2.38 1.24-3.22-.14-.3-.54-1.52.1-3.18 0 0 1-.32 3.3 1.23a11.5 11.5 0 0 1 6 0c2.28-1.55 3.29-1.23 3.29-1.23.64 1.66.24 2.88.12 3.18a4.65 4.65 0 0 1 1.23 3.22c0 4.61-2.8 5.63-5.48 5.92.42.36.81 1.1.81 2.22l-.01 3.29c0 .31.2.69.82.57A12 12 0 0 0 12 .3Z"
                                                    })
                                                })
                                            ]
                                        }),
                                        /* @__PURE__ */ m.jsxs("div", {
                                            className: he("ml-2 flex items-center gap-x-2 pl-2 text-xs", s ? "" : "text-red-400"),
                                            children: [
                                                /* @__PURE__ */ m.jsx("div", {
                                                    className: he(" block h-2 w-2 rounded-full", s ? "bg-green-400" : "animate-pulse bg-red-400")
                                                }),
                                                s ? "Connected to Sidecar" : "Not connected to Sidecar"
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        o && /* @__PURE__ */ m.jsxs("button", {
                            className: "bg-primary-900 text-primary-300 hover:bg-primary-800 mr-1 flex items-center gap-1 rounded-md px-2 py-1 hover:transition-colors",
                            onClick: ()=>{
                                kl().dispatchEvent(new CustomEvent("clearEvents", {
                                    detail: {}
                                }));
                            },
                            children: [
                                /* @__PURE__ */ m.jsx(i5, {
                                    width: 18,
                                    height: 18,
                                    className: "fill-red-400 stroke-red-400"
                                }),
                                /* @__PURE__ */ m.jsx("span", {
                                    className: "leading-8",
                                    children: "Clear Events"
                                })
                            ]
                        }),
                        !a && /* @__PURE__ */ m.jsx("button", {
                            className: "hover:bg-primary-800 -my-1 -mr-3 cursor-pointer rounded px-3 py-1 font-mono text-2xl",
                            onClick: ()=>{
                                n(!1);
                            },
                            children: "✕"
                        })
                    ]
                }),
                /* @__PURE__ */ m.jsx(l5, {
                    integrations: e,
                    integrationData: r,
                    setTriggerButtonCount: i,
                    setOpen: n
                })
            ]
        })
    });
}
const Dh = "http://localhost:8969", E5 = new URL("/stream", Dh).href, jp = {
    "sentry:focus-local-events": !0
}, aI = "bottomRight", Xp = "__spotlight_open";
function d5(e) {
    switch(e){
        case "centerRight":
            return "bottom-[45%] right-4";
        case "centerLeft":
            return "bottom-[45%] left-4";
        case "topLeft":
            return "top-4 left-4";
        case "topRight":
            return "top-4 right-4";
        case "bottomLeft":
            return "bottom-4 left-4";
        default:
            return "bottom-4 right-4";
    }
}
function f5({ count: e, children: t, severe: n = !1, ...r }) {
    return /* @__PURE__ */ m.jsxs("div", {
        className: "gap-x hover:bg-primary-400 relative flex items-center rounded p-3",
        ...r,
        children: [
            t,
            e ? /* @__PURE__ */ m.jsx("span", {
                className: he(n ? "bg-red-500" : "bg-primary-500", "absolute -right-2 -top-2 flex h-5 w-5 items-center justify-center rounded-full font-sans text-[0.65rem] font-medium"),
                children: e
            }) : null
        ]
    });
}
function p5({ isOpen: e, setOpen: t, notificationCount: n, anchor: r = aI }) {
    const s = n.count, i = 24;
    return /* @__PURE__ */ m.jsx("div", {
        className: he("z-[999999]", "fixed inline-flex items-center rounded font-medium", "font-raleway bg-primary-700 cursor-pointer text-white", "flex-col", d5(r), e ? "!hidden" : ""),
        id: "spotlight-overlay-trigger",
        title: "Spotlight by Sentry",
        onClick: ()=>t(!e),
        children: /* @__PURE__ */ m.jsx(f5, {
            count: s,
            severe: !!n.severe,
            children: /* @__PURE__ */ m.jsx(sI, {
                height: i,
                width: i
            })
        })
    });
}
const T5 = 30 * 60 * 1e3, h5 = 1e3, A5 = "SentrySpotlight", xr = "events", S5 = 2;
function YE() {
    let e, t;
    const n = new Promise((r, s)=>{
        e = r, t = s;
    });
    return {
        resolve: e,
        reject: t,
        promise: n
    };
}
let af = null;
function R5() {
    const { promise: e, resolve: t, reject: n } = YE(), r = (i)=>n(i.target.error), s = indexedDB.open(A5, S5);
    return s.onerror = r, s.onupgradeneeded = ()=>{
        const i = s.result;
        try {
            i.deleteObjectStore(xr);
        } catch  {}
        i.createObjectStore(xr, {
            autoIncrement: !0
        }).createIndex("timestamp", "timestamp", {
            unique: !1
        });
    }, s.onsuccess = ()=>{
        const i = s.result, a = i.transaction([
            xr
        ], "readwrite");
        a.onerror = r, a.oncomplete = ()=>t(i);
        const o = a.objectStore(xr).index("timestamp").openCursor(IDBKeyRange.upperBound(new Date(Date.now() - T5)));
        o.onerror = r, o.onsuccess = ()=>{
            const l = o.result;
            l && (l.delete(), l.continue());
        };
    }, e;
}
async function wh() {
    return af || (af = await R5()), af;
}
async function m5(e) {
    const { promise: t, resolve: n, reject: r } = YE(), s = (l)=>r(l.target.error), a = (await wh()).transaction([
        xr
    ], "readwrite");
    a.onerror = s;
    const o = a.objectStore(xr).add({
        value: e,
        timestamp: /* @__PURE__ */ new Date()
    });
    return o.onerror = s, o.onsuccess = ()=>n(o.result), t;
}
async function _5() {
    const { promise: e, resolve: t, reject: n } = YE(), r = (l)=>n(l.target.error), i = (await wh()).transaction([
        xr
    ], "readwrite");
    i.onerror = r;
    const a = [], o = i.objectStore(xr).openCursor();
    return o.onerror = r, o.onsuccess = ()=>{
        const l = o.result;
        l ? (a.length < h5 ? a.push(l.value.value) : l.delete(), l.continue()) : t(a);
    }, e;
}
async function N5() {
    const { promise: e, resolve: t, reject: n } = YE(), r = (o)=>n(o.target.error), i = (await wh()).transaction([
        xr
    ], "readwrite");
    i.onerror = r;
    const a = i.objectStore(xr).clear();
    return a.onerror = r, a.onsuccess = ()=>t(!0), e;
}
const dS = "🔎 [Spotlight]", cs = window;
cs.__spotlight || (cs.__spotlight = {});
cs.__spotlight.console || (cs.__spotlight.console = {});
cs.__spotlight.console.log || (cs.__spotlight.console.log = window.console.log);
cs.__spotlight.console.warn || (cs.__spotlight.console.warn = window.console.warn);
const fS = cs.__spotlight.console, oI = (...e)=>{};
let lI = oI, cI = oI;
function I5() {
    lI = (...e)=>fS.log.call(window, dS, ...e), cI = (...e)=>fS.warn.call(window, dS, ...e);
}
function Pe(...e) {
    lI(...e);
}
function pS(...e) {
    cI(...e);
}
function O5(e, t, n) {
    Pe("Connecting to sidecar at", e);
    const r = new URL("/stream", e);
    r.searchParams.append("base64", "1");
    const s = new EventSource(r.href);
    for (const [i, a] of Object.entries(t))s.addEventListener(`${i}`, a);
    return s.addEventListener("open", ()=>{
        n(!0), Pe("Sidecar connected.");
    }), s.addEventListener("error", (i)=>{
        n(!1), console.error("Sidecar connection error:", i);
    }), ()=>{
        Pe("Removing all content type listeners");
        for (const [i, a] of Object.entries(t))s.removeEventListener(i, a), Pe("Removed listener for type", i);
    };
}
function of(e) {
    return Uint8Array.from(atob(e), (t)=>t.charCodeAt(0));
}
const TS = (e, t, n)=>n.processEvent ? n.processEvent({
        contentType: e,
        data: t.data
    }) : {
        event: t
    };
function C5({ openOnInit: e = !1, showTriggerButton: t = !0, integrations: n = [], sidecarUrl: r, anchor: s, fullPage: i = !1, showClearEventsButton: a = !0, initialEvents: o = {} }) {
    const [l, c] = L.useState({
        "C5.useState": ()=>{
            var P;
            const S = {};
            for (const w of n){
                S[w.name] = [];
                for(const G in o){
                    const k = G.split(";"), Y = k[0];
                    if (!((P = w.forwardedContentType) != null && P.includes(Y))) continue;
                    const H = k[k.length - 1] === "base64";
                    for (const F of o[Y]){
                        const x = TS(Y, {
                            data: H ? of(F) : F
                        }, w);
                        x && S[w.name].push(x);
                    }
                }
            }
            return S;
        }
    }["C5.useState"]), [u, E] = L.useState(!1), [p, A] = L.useState({
        count: 0,
        severe: !1
    }), [R, C] = L.useState(e);
    Pe("App rerender", l, u, p, R);
    const O = L.useMemo({
        "C5.useMemo[O]": ()=>{
            const S = /* @__PURE__ */ new Map();
            for (const w of n)if (w.forwardedContentType) for (const G of w.forwardedContentType){
                let k = S.get(G);
                k || (k = [], S.set(G, k)), k.push(w);
            }
            const P = /* @__PURE__ */ Object.create(null);
            for (const [w, G] of S.entries()){
                const k = {
                    "C5.useMemo[O].k": (Y)=>{
                        Pe(`Received new ${w} event`);
                        for (const H of G){
                            const F = TS(w, Y, H);
                            if (!F) continue;
                            const x = H.name;
                            c({
                                "C5.useMemo[O].k": (X)=>({
                                        ...X,
                                        [x]: [
                                            ...X[x] || [],
                                            F
                                        ]
                                    })
                            }["C5.useMemo[O].k"]);
                        }
                    }
                }["C5.useMemo[O].k"];
                Pe("Adding listener for", w), P[w] = k, P[`${w};base64`] = ({
                    "C5.useMemo[O]": ({ data: Y })=>k({
                            data: of(Y)
                        })
                })["C5.useMemo[O]"];
            }
            return P;
        }
    }["C5.useMemo[O]"], [
        n
    ]);
    L.useEffect({
        "C5.useEffect": ()=>O5(r, O, E)
    }["C5.useEffect"], [
        r,
        O
    ]);
    const d = L.useMemo({
        "C5.useMemo[d]": ()=>kl()
    }["C5.useMemo[d]"], []), f = L.useCallback({
        "C5.useCallback[f]": ({ contentType: S, data: P })=>{
            const w = S.split(";"), G = w[0], k = O[G];
            if (!k) {
                Pe("Got event for unknown content type:", G);
                return;
            }
            w[w.length - 1] === "base64" ? k({
                data: of(P)
            }) : k({
                data: P
            });
        }
    }["C5.useCallback[f]"], [
        O
    ]);
    L.useEffect({
        "C5.useEffect": ()=>{
            _5().then({
                "C5.useEffect": (S)=>{
                    for (const P of S)f(P);
                }
            }["C5.useEffect"]);
        }
    }["C5.useEffect"], [
        f
    ]);
    const _ = co(), h = L.useCallback({
        "C5.useCallback[h]": async ()=>{
            try {
                const S = new URL("/clear", r).href;
                await N5(), await fetch(S, {
                    method: "DELETE",
                    mode: "cors"
                });
            } catch (S) {
                console.error("Spotlight can't connect to Sidecar is it running? See: https://spotlightjs.com/sidecar/npx/", S);
                return;
            }
            for (const S of n)c({
                "C5.useCallback[h]": (P)=>({
                        ...P,
                        [S.name]: []
                    })
            }["C5.useCallback[h]"]), S.reset && S.reset();
        }
    }["C5.useCallback[h]"], [
        n,
        r
    ]), I = L.useCallback({
        "C5.useCallback[I]": (S)=>{
            Pe("Open"), C(!0), S.detail.path && _(S.detail.path);
        }
    }["C5.useCallback[I]"], [
        _
    ]), T = L.useCallback({
        "C5.useCallback[T]": ()=>{
            Pe("Close"), C(!1);
        }
    }["C5.useCallback[T]"], []), N = L.useCallback({
        "C5.useCallback[N]": ()=>{
            Pe("Toggle"), C({
                "C5.useCallback[N]": (S)=>!S
            }["C5.useCallback[N]"]);
        }
    }["C5.useCallback[N]"], []), g = L.useCallback({
        "C5.useCallback[g]": (S)=>{
            Pe("Navigate"), _(S.detail);
        }
    }["C5.useCallback[g]"], [
        _
    ]), b = L.useCallback({
        "C5.useCallback[b]": ({ detail: S })=>{
            f(S), m5(S);
        }
    }["C5.useCallback[b]"], [
        f
    ]);
    return iI("F12", [
        "ctrlKey"
    ], N), L.useEffect({
        "C5.useEffect": ()=>(Pe("useEffect: Adding event listeners"), d.addEventListener("open", I), d.addEventListener("close", T), d.addEventListener("navigate", g), d.addEventListener("clearEvents", h), d.addEventListener("event", b), ({
                "C5.useEffect": ()=>{
                    Pe("useEffect[destructor]: Removing event listeners"), d.removeEventListener("open", I), d.removeEventListener("close", T), d.removeEventListener("navigate", g), d.removeEventListener("clearEvents", h), d.removeEventListener("event", b);
                }
            })["C5.useEffect"])
    }["C5.useEffect"], [
        d,
        I,
        T,
        g,
        h,
        b
    ]), L.useEffect({
        "C5.useEffect": ()=>{
            R ? (d.dispatchEvent(new CustomEvent("opened")), document.body.classList.add(Xp)) : (d.dispatchEvent(new CustomEvent("closed")), document.body.classList.remove(Xp));
        }
    }["C5.useEffect"], [
        R,
        d
    ]), L.useEffect({
        "C5.useEffect": ()=>{
            p.severe && d.dispatchEvent(new CustomEvent("severeEventCount", {
                detail: {
                    count: p.count
                }
            }));
        }
    }["C5.useEffect"], [
        p,
        d
    ]), /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            t && /* @__PURE__ */ m.jsx(p5, {
                isOpen: R,
                setOpen: C,
                notificationCount: p,
                anchor: s
            }),
            /* @__PURE__ */ m.jsx(u5, {
                isOpen: i || R,
                setOpen: C,
                isOnline: u,
                integrations: n,
                integrationData: l,
                setTriggerButtonCount: A,
                fullPage: i,
                showClearEventsButton: a
            })
        ]
    });
}
const g5 = '*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}.container{width:100%}@media (min-width: 640px){.container{max-width:640px}}@media (min-width: 768px){.container{max-width:768px}}@media (min-width: 1024px){.container{max-width:1024px}}@media (min-width: 1280px){.container{max-width:1280px}}@media (min-width: 1536px){.container{max-width:1536px}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.visible{visibility:visible}.collapse{visibility:collapse}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.-left-1{left:-.25rem}.-right-2{right:-.5rem}.-top-1{top:-.25rem}.-top-2{top:-.5rem}.bottom-0{bottom:0}.bottom-1{bottom:.25rem}.bottom-4{bottom:1rem}.bottom-\\[45\\%\\]{bottom:45%}.bottom-full{bottom:100%}.left-0{left:0}.left-1\\/2{left:50%}.left-1\\/4{left:25%}.left-4{left:1rem}.left-full{left:100%}.right-0{right:0}.right-1{right:.25rem}.right-4{right:1rem}.right-full{right:100%}.top-0{top:0}.top-1\\/2{top:50%}.top-4{top:1rem}.top-\\[5px\\]{top:5px}.top-full{top:100%}.z-10{z-index:10}.z-20{z-index:20}.z-\\[999999\\]{z-index:999999}.-m-0\\.5{margin:-.125rem}.-m-2{margin:-.5rem}.-mx-2{margin-left:-.5rem;margin-right:-.5rem}.-my-1{margin-top:-.25rem;margin-bottom:-.25rem}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.my-1{margin-top:.25rem;margin-bottom:.25rem}.-mr-3{margin-right:-.75rem}.mb-2{margin-bottom:.5rem}.mb-4{margin-bottom:1rem}.mb-8{margin-bottom:2rem}.ml-2{margin-left:.5rem}.ml-3{margin-left:.75rem}.ml-4{margin-left:1rem}.mr-1{margin-right:.25rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mt-2{margin-top:.5rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.\\!hidden{display:none!important}.hidden{display:none}.h-1{height:.25rem}.h-2{height:.5rem}.h-4{height:1rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-8{height:2rem}.h-\\[21px\\]{height:21px}.h-\\[42px\\]{height:42px}.h-auto{height:auto}.h-full{height:100%}.max-h-\\[150px\\]{max-height:150px}.min-h-0{min-height:0px}.w-1{width:.25rem}.w-1\\/12{width:8.333333%}.w-10{width:2.5rem}.w-16{width:4rem}.w-2{width:.5rem}.w-2\\/5{width:40%}.w-40{width:10rem}.w-48{width:12rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-80{width:20rem}.w-\\[15\\%\\]{width:15%}.w-\\[21px\\]{width:21px}.w-\\[42px\\]{width:42px}.w-full{width:100%}.max-w-\\[150px\\]{max-width:150px}.max-w-full{max-width:100%}.max-w-none{max-width:none}.max-w-sm{max-width:24rem}.flex-1{flex:1 1 0%}.flex-\\[0\\.25\\]{flex:.25}.flex-none{flex:none}.grow{flex-grow:1}.table-fixed{table-layout:fixed}.-translate-x-1\\/2{--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-0\\.5{--tw-translate-y: -.125rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2{--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-0\\.5{--tw-translate-y: .125rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-rotate-90{--tw-rotate: -90deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-0{--tw-rotate: 0deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-180{--tw-rotate: 180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes pulse{50%{opacity:.5}}.animate-pulse{animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite}.cursor-col-resize{cursor:col-resize}.cursor-pointer{cursor:pointer}.cursor-row-resize{cursor:row-resize}.select-none{-webkit-user-select:none;-moz-user-select:none;user-select:none}.grid-cols-2-auto{grid-template-columns:minmax(auto,max-content) 1fr}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.gap-x-1{-moz-column-gap:.25rem;column-gap:.25rem}.gap-x-2{-moz-column-gap:.5rem;column-gap:.5rem}.gap-x-4{-moz-column-gap:1rem;column-gap:1rem}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem * var(--tw-space-y-reverse))}.divide-x>:not([hidden])~:not([hidden]){--tw-divide-x-reverse: 0;border-right-width:calc(1px * var(--tw-divide-x-reverse));border-left-width:calc(1px * calc(1 - var(--tw-divide-x-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse: 0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.divide-primary-700>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(67 56 202 / var(--tw-divide-opacity))}.divide-primary-800>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(55 48 163 / var(--tw-divide-opacity))}.divide-primary-900>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(49 46 129 / var(--tw-divide-opacity))}.overflow-auto{overflow:auto}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.break-words{overflow-wrap:break-word}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.rounded-sm{border-radius:.125rem}.border{border-width:1px}.border-y{border-top-width:1px;border-bottom-width:1px}.\\!border-t-0{border-top-width:0px!important}.border-b{border-bottom-width:1px}.border-b-2{border-bottom-width:2px}.border-l{border-left-width:1px}.border-primary-200{--tw-border-opacity: 1;border-color:rgb(199 210 254 / var(--tw-border-opacity))}.border-primary-300{--tw-border-opacity: 1;border-color:rgb(165 180 252 / var(--tw-border-opacity))}.border-primary-400{--tw-border-opacity: 1;border-color:rgb(129 140 248 / var(--tw-border-opacity))}.border-primary-500{--tw-border-opacity: 1;border-color:rgb(99 102 241 / var(--tw-border-opacity))}.border-primary-600{--tw-border-opacity: 1;border-color:rgb(79 70 229 / var(--tw-border-opacity))}.border-primary-800{--tw-border-opacity: 1;border-color:rgb(55 48 163 / var(--tw-border-opacity))}.border-primary-900{--tw-border-opacity: 1;border-color:rgb(49 46 129 / var(--tw-border-opacity))}.border-primary-950{--tw-border-opacity: 1;border-color:rgb(30 27 75 / var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-white{--tw-border-opacity: 1;border-color:rgb(255 255 255 / var(--tw-border-opacity))}.border-b-primary-400{--tw-border-opacity: 1;border-bottom-color:rgb(129 140 248 / var(--tw-border-opacity))}.border-b-primary-700{--tw-border-opacity: 1;border-bottom-color:rgb(67 56 202 / var(--tw-border-opacity))}.border-b-primary-900{--tw-border-opacity: 1;border-bottom-color:rgb(49 46 129 / var(--tw-border-opacity))}.border-l-primary-400{--tw-border-opacity: 1;border-left-color:rgb(129 140 248 / var(--tw-border-opacity))}.\\!bg-transparent{background-color:transparent!important}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.bg-green-400{--tw-bg-opacity: 1;background-color:rgb(74 222 128 / var(--tw-bg-opacity))}.bg-lime-500{--tw-bg-opacity: 1;background-color:rgb(132 204 22 / var(--tw-bg-opacity))}.bg-primary-200{--tw-bg-opacity: 1;background-color:rgb(199 210 254 / var(--tw-bg-opacity))}.bg-primary-400{--tw-bg-opacity: 1;background-color:rgb(129 140 248 / var(--tw-bg-opacity))}.bg-primary-500{--tw-bg-opacity: 1;background-color:rgb(99 102 241 / var(--tw-bg-opacity))}.bg-primary-600{--tw-bg-opacity: 1;background-color:rgb(79 70 229 / var(--tw-bg-opacity))}.bg-primary-700{--tw-bg-opacity: 1;background-color:rgb(67 56 202 / var(--tw-bg-opacity))}.bg-primary-800{--tw-bg-opacity: 1;background-color:rgb(55 48 163 / var(--tw-bg-opacity))}.bg-primary-900{--tw-bg-opacity: 1;background-color:rgb(49 46 129 / var(--tw-bg-opacity))}.bg-primary-950{--tw-bg-opacity: 1;background-color:rgb(30 27 75 / var(--tw-bg-opacity))}.bg-red-400{--tw-bg-opacity: 1;background-color:rgb(248 113 113 / var(--tw-bg-opacity))}.bg-red-500{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-opacity-20{--tw-bg-opacity: .2}.bg-opacity-30{--tw-bg-opacity: .3}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-primary-900{--tw-gradient-from: #312e81 var(--tw-gradient-from-position);--tw-gradient-to: rgb(49 46 129 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.to-primary-950{--tw-gradient-to: #1e1b4b var(--tw-gradient-to-position)}.to-20\\%{--tw-gradient-to-position: 20%}.fill-primary-200{fill:#c7d2fe}.fill-primary-300{fill:#a5b4fc}.fill-primary-50{fill:#eef2ff}.fill-red-400{fill:#f87171}.stroke-gray-400{stroke:#9ca3af}.stroke-primary-100{stroke:#e0e7ff}.stroke-primary-200{stroke:#c7d2fe}.stroke-primary-300{stroke:#a5b4fc}.stroke-primary-400{stroke:#818cf8}.stroke-primary-50{stroke:#eef2ff}.stroke-primary-500{stroke:#6366f1}.stroke-primary-600{stroke:#4f46e5}.stroke-primary-700{stroke:#4338ca}.stroke-red-400{stroke:#f87171}.p-0\\.5{padding:.125rem}.p-1{padding:.25rem}.p-2{padding:.5rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-1\\.5{padding-left:.375rem;padding-right:.375rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-2\\.5{padding-left:.625rem;padding-right:.625rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-0\\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-3\\.5{padding-top:.875rem;padding-bottom:.875rem}.py-4{padding-top:1rem;padding-bottom:1rem}.pb-4{padding-bottom:1rem}.pb-6{padding-bottom:1.5rem}.pl-2{padding-left:.5rem}.pl-3{padding-left:.75rem}.pl-4{padding-left:1rem}.pr-10{padding-right:2.5rem}.pr-4{padding-right:1rem}.pr-6{padding-right:1.5rem}.pt-2{padding-top:.5rem}.text-left{text-align:left}.text-right{text-align:right}.\\!font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace!important}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.font-raleway{font-family:Raleway,ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji"}.font-sans{font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji"}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-\\[0\\.65rem\\]{font-size:.65rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-light{font-weight:300}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.leading-7{line-height:1.75rem}.leading-8{line-height:2rem}.tracking-widest{letter-spacing:.1em}.text-green-400{--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity))}.text-lime-500{--tw-text-opacity: 1;color:rgb(132 204 22 / var(--tw-text-opacity))}.text-orange-400{--tw-text-opacity: 1;color:rgb(251 146 60 / var(--tw-text-opacity))}.text-primary-100{--tw-text-opacity: 1;color:rgb(224 231 255 / var(--tw-text-opacity))}.text-primary-200{--tw-text-opacity: 1;color:rgb(199 210 254 / var(--tw-text-opacity))}.text-primary-300{--tw-text-opacity: 1;color:rgb(165 180 252 / var(--tw-text-opacity))}.text-primary-400{--tw-text-opacity: 1;color:rgb(129 140 248 / var(--tw-text-opacity))}.text-primary-50{--tw-text-opacity: 1;color:rgb(238 242 255 / var(--tw-text-opacity))}.text-primary-500{--tw-text-opacity: 1;color:rgb(99 102 241 / var(--tw-text-opacity))}.text-red-400{--tw-text-opacity: 1;color:rgb(248 113 113 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity: 1;color:rgb(250 204 21 / var(--tw-text-opacity))}.underline{text-decoration-line:underline}.opacity-80{opacity:.8}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / .05);--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.spotlight-fullscreen-blur{position:fixed;display:flex;height:100vh;width:100vw;flex-direction:column;overflow:hidden;background-color:rgb(0 0 0 / var(--tw-bg-opacity));--tw-bg-opacity: .5;--tw-backdrop-blur: blur(4px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);z-index:999998}.spotlight-debugger{display:flex;height:100%;flex-direction:column;overflow:hidden;border-radius:.5rem;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));--tw-gradient-from: #312e81 var(--tw-gradient-from-position);--tw-gradient-to: rgb(49 46 129 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);--tw-gradient-to: #1e1b4b var(--tw-gradient-to-position);--tw-gradient-to-position: 20%;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity));--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);margin:2.5vh}.spotlight-fullscreen{position:relative;border-radius:0;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);margin:0}.spotlight-sidepanel{-webkit-app-region:no-drag;animation:sidepanel .1s ease-in}@keyframes sidepanel{0%{transform:translate(100%)}to{transform:translate(0)}}ul.tree{position:relative}ul.tree ul.tree{position:static}ul.tree,ul.tree ul{list-style:none;margin:0;padding:0}ul.tree.deep>li>ul{margin-left:8px}ul.tree.deep>li{border-left-width:1px;--tw-border-opacity: 1;border-color:rgb(129 140 248 / var(--tw-border-opacity));padding-left:1rem;margin-left:1rem}ul.tree li:last-child{border-width:0px}ul.tree>li:first-child:before{display:none}ul.tree.deep>li:before,ul.tree ul.tree>li:before{border-bottom-width:1px;--tw-border-opacity: 1;border-color:rgb(129 140 248 / var(--tw-border-opacity));position:absolute;height:15px;width:12px;content:"";display:inline-block;margin-left:-16px}ul.tree li:last-child:before{border-left-width:1px;--tw-border-opacity: 1;border-color:rgb(129 140 248 / var(--tw-border-opacity))}.tree .node{display:flex;align-items:center;-moz-column-gap:.25rem;column-gap:.25rem;overflow:auto;padding-top:.25rem;padding-bottom:.25rem;padding-left:.25rem}.tree .waterfall{position:absolute;right:0;height:1.75rem;border-left-width:2px;--tw-border-opacity: 1;border-left-color:rgb(55 48 163 / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:rgb(30 27 75 / var(--tw-bg-opacity));padding-top:.25rem;padding-bottom:.25rem;padding-left:.25rem}.table-values{border-collapse:collapse;--tw-bg-opacity: 1;background-color:rgb(49 46 129 / var(--tw-bg-opacity));font-size:.875rem;line-height:1.25rem}.table-values tbody th{width:8.333333%;border-top-width:1px;border-bottom-width:1px;--tw-border-opacity: 1;border-color:rgb(30 27 75 / var(--tw-border-opacity));padding:.25rem .5rem;text-align:right;font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-weight:400;--tw-text-opacity: 1;color:rgb(165 180 252 / var(--tw-text-opacity))}.table-values tbody td{border-top-width:1px;border-bottom-width:1px;--tw-border-opacity: 1;border-color:rgb(30 27 75 / var(--tw-border-opacity));padding:.25rem .5rem}.hydration-error-wrapper pre{--tw-text-opacity: 1 !important;color:rgb(165 180 252 / var(--tw-text-opacity))!important}.hydration-error-wrapper td[class^=react-diff][class$=title-block]{--tw-bg-opacity: 1 !important;background-color:rgb(49 46 129 / var(--tw-bg-opacity))!important}.react-json-view{border-radius:.125rem;background-color:rgb(49 46 129 / var(--tw-bg-opacity))!important;--tw-bg-opacity: .5 !important;padding:.5rem}.react-json-view .string-value{word-break:break-word}input:checked{--tw-bg-opacity: 1;background-color:rgb(49 46 129 / var(--tw-bg-opacity))}input:checked~.dot{--tw-translate-x: 100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity: 1;background-color:rgb(55 48 163 / var(--tw-bg-opacity))}.resizer.is-resizing{--tw-bg-opacity: 1;background-color:rgb(99 102 241 / var(--tw-bg-opacity))}.spotlight-debugger.resizing-column .span-resizer,.spotlight-debugger.resizing-row .span-resizer{--tw-bg-opacity: 1;background-color:rgb(99 102 241 / var(--tw-bg-opacity));transform:translate(-2px)!important}.spotlight-debugger.resizing-column,.spotlight-debugger.resizing-column *{cursor:col-resize!important}.spotlight-debugger.resizing-row,.spotlight-debugger.resizing-row *{cursor:row-resize!important}.hover\\:border-primary-400:hover{--tw-border-opacity: 1;border-color:rgb(129 140 248 / var(--tw-border-opacity))}.hover\\:border-primary-500:hover{--tw-border-opacity: 1;border-color:rgb(99 102 241 / var(--tw-border-opacity))}.hover\\:border-primary-700:hover{--tw-border-opacity: 1;border-color:rgb(67 56 202 / var(--tw-border-opacity))}.hover\\:bg-primary-400:hover{--tw-bg-opacity: 1;background-color:rgb(129 140 248 / var(--tw-bg-opacity))}.hover\\:bg-primary-700:hover{--tw-bg-opacity: 1;background-color:rgb(67 56 202 / var(--tw-bg-opacity))}.hover\\:bg-primary-800:hover{--tw-bg-opacity: 1;background-color:rgb(55 48 163 / var(--tw-bg-opacity))}.hover\\:bg-primary-900:hover{--tw-bg-opacity: 1;background-color:rgb(49 46 129 / var(--tw-bg-opacity))}.hover\\:text-primary-100:hover{--tw-text-opacity: 1;color:rgb(224 231 255 / var(--tw-text-opacity))}.hover\\:underline:hover{text-decoration-line:underline}.hover\\:transition-colors:hover{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.focus\\:bg-primary-800:focus{--tw-bg-opacity: 1;background-color:rgb(55 48 163 / var(--tw-bg-opacity))}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.group:hover .group-hover\\:bg-primary-700{--tw-bg-opacity: 1;background-color:rgb(67 56 202 / var(--tw-bg-opacity))}@media (min-width: 640px){.sm\\:block{display:block}.sm\\:hidden{display:none}.sm\\:text-sm{font-size:.875rem;line-height:1.25rem}}@media (min-width: 768px){.md\\:inline-block{display:inline-block}}.\\[\\&\\>\\.count\\]\\:bg-primary-100>.count{--tw-bg-opacity: 1;background-color:rgb(224 231 255 / var(--tw-bg-opacity))}.\\[\\&\\>\\.count\\]\\:bg-primary-700>.count{--tw-bg-opacity: 1;background-color:rgb(67 56 202 / var(--tw-bg-opacity))}.\\[\\&\\>\\.count\\]\\:text-primary-200>.count{--tw-text-opacity: 1;color:rgb(199 210 254 / var(--tw-text-opacity))}.\\[\\&\\>\\.count\\]\\:text-primary-600>.count{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity))}';
async function uI(e, t) {
    if (!e) return [
        [],
        []
    ];
    const n = [], r = [];
    for (const s of e)if (Array.isArray(s)) {
        const i = await uI(s, t);
        n.push(...i[0]), r.push(...i[1]);
    } else if (s) {
        if (s.setup) {
            const i = await s.setup(t);
            i && r.push(i);
        }
        n.push(s);
    }
    return [
        n,
        r
    ];
}
function EI(e, t) {
    try {
        const n = new URL(e);
        return n.pathname.endsWith(t) && (n.pathname = n.pathname.slice(0, -t.length)), n.toString();
    } catch (n) {
        throw n instanceof TypeError ? new Error(`Invalid URL provided: ${e}. Error: ${n.message}`) : n;
    }
}
const me = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__, Di = "8.51.0", Le = globalThis;
function VE(e, t, n) {
    const r = n || Le, s = r.__SENTRY__ = r.__SENTRY__ || {}, i = s[Di] = s[Di] || {};
    return i[e] || (i[e] = t());
}
const di = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__, L5 = "Sentry Logger ", Kp = [
    "debug",
    "info",
    "warn",
    "error",
    "log",
    "assert",
    "trace"
], Qu = {};
function fi(e) {
    if (!("console" in Le)) return e();
    const t = Le.console, n = {}, r = Object.keys(Qu);
    r.forEach((s)=>{
        const i = Qu[s];
        n[s] = t[s], t[s] = i;
    });
    try {
        return e();
    } finally{
        r.forEach((s)=>{
            t[s] = n[s];
        });
    }
}
function y5() {
    let e = !1;
    const t = {
        enable: ()=>{
            e = !0;
        },
        disable: ()=>{
            e = !1;
        },
        isEnabled: ()=>e
    };
    return di ? Kp.forEach((n)=>{
        t[n] = (...r)=>{
            e && fi(()=>{
                Le.console[n](`${L5}[${n}]:`, ...r);
            });
        };
    }) : Kp.forEach((n)=>{
        t[n] = ()=>{};
    }), t;
}
const q = VE("logger", y5), dI = 50, Yi = "?", hS = /\(error: (.*)\)/, AS = /captureMessage|captureException/;
function fI(...e) {
    const t = e.sort((n, r)=>n[0] - r[0]).map((n)=>n[1]);
    return (n, r = 0, s = 0)=>{
        const i = [], a = n.split(`
`);
        for(let o = r; o < a.length; o++){
            const l = a[o];
            if (l.length > 1024) continue;
            const c = hS.test(l) ? l.replace(hS, "$1") : l;
            if (!c.match(/\S*Error: /)) {
                for (const u of t){
                    const E = u(c);
                    if (E) {
                        i.push(E);
                        break;
                    }
                }
                if (i.length >= dI + s) break;
            }
        }
        return b5(i.slice(s));
    };
}
function v5(e) {
    return Array.isArray(e) ? fI(...e) : e;
}
function b5(e) {
    if (!e.length) return [];
    const t = Array.from(e);
    return /sentryWrapped/.test(bc(t).function || "") && t.pop(), t.reverse(), AS.test(bc(t).function || "") && (t.pop(), AS.test(bc(t).function || "") && t.pop()), t.slice(0, dI).map((n)=>({
            ...n,
            filename: n.filename || bc(t).filename,
            function: n.function || Yi
        }));
}
function bc(e) {
    return e[e.length - 1] || {};
}
const lf = "<anonymous>";
function us(e) {
    try {
        return !e || typeof e != "function" ? lf : e.name || lf;
    } catch  {
        return lf;
    }
}
function SS(e) {
    const t = e.exception;
    if (t) {
        const n = [];
        try {
            return t.values.forEach((r)=>{
                r.stacktrace.frames && n.push(...r.stacktrace.frames);
            }), n;
        } catch  {
            return;
        }
    }
}
const Eu = {}, RS = {};
function pi(e, t) {
    Eu[e] = Eu[e] || [], Eu[e].push(t);
}
function Ti(e, t) {
    if (!RS[e]) {
        RS[e] = !0;
        try {
            t();
        } catch (n) {
            di && q.error(`Error while instrumenting ${e}`, n);
        }
    }
}
function ar(e, t) {
    const n = e && Eu[e];
    if (n) for (const r of n)try {
        r(t);
    } catch (s) {
        di && q.error(`Error while triggering instrumentation handler.
Type: ${e}
Name: ${us(r)}
Error:`, s);
    }
}
let cf = null;
function pI(e) {
    const t = "error";
    pi(t, e), Ti(t, P5);
}
function P5() {
    cf = Le.onerror, Le.onerror = function(e, t, n, r, s) {
        return ar("error", {
            column: r,
            error: s,
            line: n,
            msg: e,
            url: t
        }), cf ? cf.apply(this, arguments) : !1;
    }, Le.onerror.__SENTRY_INSTRUMENTED__ = !0;
}
let uf = null;
function TI(e) {
    const t = "unhandledrejection";
    pi(t, e), Ti(t, M5);
}
function M5() {
    uf = Le.onunhandledrejection, Le.onunhandledrejection = function(e) {
        return ar("unhandledrejection", e), uf ? uf.apply(this, arguments) : !0;
    }, Le.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0;
}
function Zi() {
    return xh(Le), Le;
}
function xh(e) {
    const t = e.__SENTRY__ = e.__SENTRY__ || {};
    return t.version = t.version || Di, t[Di] = t[Di] || {};
}
const hI = Object.prototype.toString;
function Uh(e) {
    switch(hI.call(e)){
        case "[object Error]":
        case "[object Exception]":
        case "[object DOMException]":
        case "[object WebAssembly.Exception]":
            return !0;
        default:
            return Es(e, Error);
    }
}
function uo(e, t) {
    return hI.call(e) === `[object ${t}]`;
}
function AI(e) {
    return uo(e, "ErrorEvent");
}
function mS(e) {
    return uo(e, "DOMError");
}
function D5(e) {
    return uo(e, "DOMException");
}
function rs(e) {
    return uo(e, "String");
}
function Fh(e) {
    return typeof e == "object" && e !== null && "__sentry_template_string__" in e && "__sentry_template_values__" in e;
}
function Bh(e) {
    return e === null || Fh(e) || typeof e != "object" && typeof e != "function";
}
function Xa(e) {
    return uo(e, "Object");
}
function WE(e) {
    return typeof Event < "u" && Es(e, Event);
}
function w5(e) {
    return typeof Element < "u" && Es(e, Element);
}
function x5(e) {
    return uo(e, "RegExp");
}
function jE(e) {
    return !!(e && e.then && typeof e.then == "function");
}
function U5(e) {
    return Xa(e) && "nativeEvent" in e && "preventDefault" in e && "stopPropagation" in e;
}
function Es(e, t) {
    try {
        return e instanceof t;
    } catch  {
        return !1;
    }
}
function SI(e) {
    return !!(typeof e == "object" && e !== null && (e.__isVue || e._isVue));
}
const Da = Le, F5 = 80;
function ds(e, t = {}) {
    if (!e) return "<unknown>";
    try {
        let n = e;
        const r = 5, s = [];
        let i = 0, a = 0;
        const o = " > ", l = o.length;
        let c;
        const u = Array.isArray(t) ? t : t.keyAttrs, E = !Array.isArray(t) && t.maxStringLength || F5;
        for(; n && i++ < r && (c = B5(n, u), !(c === "html" || i > 1 && a + s.length * l + c.length >= E));)s.push(c), a += c.length, n = n.parentNode;
        return s.reverse().join(o);
    } catch  {
        return "<unknown>";
    }
}
function B5(e, t) {
    const n = e, r = [];
    if (!n || !n.tagName) return "";
    if (Da.HTMLElement && n instanceof HTMLElement && n.dataset) {
        if (n.dataset.sentryComponent) return n.dataset.sentryComponent;
        if (n.dataset.sentryElement) return n.dataset.sentryElement;
    }
    r.push(n.tagName.toLowerCase());
    const s = t && t.length ? t.filter((a)=>n.getAttribute(a)).map((a)=>[
            a,
            n.getAttribute(a)
        ]) : null;
    if (s && s.length) s.forEach((a)=>{
        r.push(`[${a[0]}="${a[1]}"]`);
    });
    else {
        n.id && r.push(`#${n.id}`);
        const a = n.className;
        if (a && rs(a)) {
            const o = a.split(/\s+/);
            for (const l of o)r.push(`.${l}`);
        }
    }
    const i = [
        "aria-label",
        "type",
        "name",
        "title",
        "alt"
    ];
    for (const a of i){
        const o = n.getAttribute(a);
        o && r.push(`[${a}="${o}"]`);
    }
    return r.join("");
}
function RI() {
    try {
        return Da.document.location.href;
    } catch  {
        return "";
    }
}
function G5(e) {
    return Da.document && Da.document.querySelector ? Da.document.querySelector(e) : null;
}
function mI(e) {
    if (!Da.HTMLElement) return null;
    let t = e;
    const n = 5;
    for(let r = 0; r < n; r++){
        if (!t) return null;
        if (t instanceof HTMLElement) {
            if (t.dataset.sentryComponent) return t.dataset.sentryComponent;
            if (t.dataset.sentryElement) return t.dataset.sentryElement;
        }
        t = t.parentNode;
    }
    return null;
}
function wa(e, t = 0) {
    return typeof e != "string" || t === 0 || e.length <= t ? e : `${e.slice(0, t)}...`;
}
function _S(e, t) {
    if (!Array.isArray(e)) return "";
    const n = [];
    for(let r = 0; r < e.length; r++){
        const s = e[r];
        try {
            SI(s) ? n.push("[VueViewModel]") : n.push(String(s));
        } catch  {
            n.push("[value cannot be serialized]");
        }
    }
    return n.join(t);
}
function k5(e, t, n = !1) {
    return rs(e) ? x5(t) ? t.test(e) : rs(t) ? n ? e === t : e.includes(t) : !1 : !1;
}
function zs(e, t = [], n = !1) {
    return t.some((r)=>k5(e, r, n));
}
function vn(e, t, n) {
    if (!(t in e)) return;
    const r = e[t], s = n(r);
    typeof s == "function" && _I(s, r);
    try {
        e[t] = s;
    } catch  {
        di && q.log(`Failed to replace method "${t}" in object`, e);
    }
}
function cr(e, t, n) {
    try {
        Object.defineProperty(e, t, {
            // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it
            value: n,
            writable: !0,
            configurable: !0
        });
    } catch  {
        di && q.log(`Failed to add non-enumerable property "${t}" to object`, e);
    }
}
function _I(e, t) {
    try {
        const n = t.prototype || {};
        e.prototype = t.prototype = n, cr(e, "__sentry_original__", t);
    } catch  {}
}
function Gh(e) {
    return e.__sentry_original__;
}
function NI(e) {
    if (Uh(e)) return {
        message: e.message,
        name: e.name,
        stack: e.stack,
        ...IS(e)
    };
    if (WE(e)) {
        const t = {
            type: e.type,
            target: NS(e.target),
            currentTarget: NS(e.currentTarget),
            ...IS(e)
        };
        return typeof CustomEvent < "u" && Es(e, CustomEvent) && (t.detail = e.detail), t;
    } else return e;
}
function NS(e) {
    try {
        return w5(e) ? ds(e) : Object.prototype.toString.call(e);
    } catch  {
        return "<unknown>";
    }
}
function IS(e) {
    if (typeof e == "object" && e !== null) {
        const t = {};
        for(const n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t;
    } else return {};
}
function H5(e, t = 40) {
    const n = Object.keys(NI(e));
    n.sort();
    const r = n[0];
    if (!r) return "[object has no keys]";
    if (r.length >= t) return wa(r, t);
    for(let s = n.length; s > 0; s--){
        const i = n.slice(0, s).join(", ");
        if (!(i.length > t)) return s === n.length ? i : wa(i, t);
    }
    return "";
}
function Pt(e) {
    return zp(e, /* @__PURE__ */ new Map());
}
function zp(e, t) {
    if (Y5(e)) {
        const n = t.get(e);
        if (n !== void 0) return n;
        const r = {};
        t.set(e, r);
        for (const s of Object.getOwnPropertyNames(e))typeof e[s] < "u" && (r[s] = zp(e[s], t));
        return r;
    }
    if (Array.isArray(e)) {
        const n = t.get(e);
        if (n !== void 0) return n;
        const r = [];
        return t.set(e, r), e.forEach((s)=>{
            r.push(zp(s, t));
        }), r;
    }
    return e;
}
function Y5(e) {
    if (!Xa(e)) return !1;
    try {
        const t = Object.getPrototypeOf(e).constructor.name;
        return !t || t === "Object";
    } catch  {
        return !0;
    }
}
const II = 1e3;
function Yl() {
    return Date.now() / II;
}
function V5() {
    const { performance: e } = Le;
    if (!e || !e.now) return Yl;
    const t = Date.now() - e.now(), n = e.timeOrigin == null ? t : e.timeOrigin;
    return ()=>(n + e.now()) / II;
}
const kt = V5(), $t = (()=>{
    const { performance: e } = Le;
    if (!e || !e.now) return;
    const t = 3600 * 1e3, n = e.now(), r = Date.now(), s = e.timeOrigin ? Math.abs(e.timeOrigin + n - r) : t, i = s < t, a = e.timing && e.timing.navigationStart, l = typeof a == "number" ? Math.abs(a + n - r) : t, c = l < t;
    return i || c ? s <= l ? e.timeOrigin : a : r;
})();
function Sn() {
    const e = Le, t = e.crypto || e.msCrypto;
    let n = ()=>Math.random() * 16;
    try {
        if (t && t.randomUUID) return t.randomUUID().replace(/-/g, "");
        t && t.getRandomValues && (n = ()=>{
            const r = new Uint8Array(1);
            return t.getRandomValues(r), r[0];
        });
    } catch  {}
    return ("10000000100040008000" + 1e11).replace(/[018]/g, (r)=>// eslint-disable-next-line no-bitwise
        (r ^ (n() & 15) >> r / 4).toString(16));
}
function OI(e) {
    return e.exception && e.exception.values ? e.exception.values[0] : void 0;
}
function ys(e) {
    const { message: t, event_id: n } = e;
    if (t) return t;
    const r = OI(e);
    return r ? r.type && r.value ? `${r.type}: ${r.value}` : r.type || r.value || n || "<unknown>" : n || "<unknown>";
}
function Jp(e, t, n) {
    const r = e.exception = e.exception || {}, s = r.values = r.values || [], i = s[0] = s[0] || {};
    i.value || (i.value = t || ""), i.type || (i.type = "Error");
}
function Ka(e, t) {
    const n = OI(e);
    if (!n) return;
    const r = {
        type: "generic",
        handled: !0
    }, s = n.mechanism;
    if (n.mechanism = {
        ...r,
        ...s,
        ...t
    }, t && "data" in t) {
        const i = {
            ...s && s.data,
            ...t.data
        };
        n.mechanism.data = i;
    }
}
function OS(e) {
    if (W5(e)) return !0;
    try {
        cr(e, "__sentry_captured__", !0);
    } catch  {}
    return !1;
}
function W5(e) {
    try {
        return e.__sentry_captured__;
    } catch  {}
}
var qr;
(function(e) {
    e[e.PENDING = 0] = "PENDING";
    const n = 1;
    e[e.RESOLVED = n] = "RESOLVED";
    const r = 2;
    e[e.REJECTED = r] = "REJECTED";
})(qr || (qr = {}));
function fs(e) {
    return new rr((t)=>{
        t(e);
    });
}
function $u(e) {
    return new rr((t, n)=>{
        n(e);
    });
}
class rr {
    constructor(t){
        rr.prototype.__init.call(this), rr.prototype.__init2.call(this), rr.prototype.__init3.call(this), rr.prototype.__init4.call(this), this._state = qr.PENDING, this._handlers = [];
        try {
            t(this._resolve, this._reject);
        } catch (n) {
            this._reject(n);
        }
    }
    /** JSDoc */ then(t, n) {
        return new rr((r, s)=>{
            this._handlers.push([
                !1,
                (i)=>{
                    if (!t) r(i);
                    else try {
                        r(t(i));
                    } catch (a) {
                        s(a);
                    }
                },
                (i)=>{
                    if (!n) s(i);
                    else try {
                        r(n(i));
                    } catch (a) {
                        s(a);
                    }
                }
            ]), this._executeHandlers();
        });
    }
    /** JSDoc */ catch(t) {
        return this.then((n)=>n, t);
    }
    /** JSDoc */ finally(t) {
        return new rr((n, r)=>{
            let s, i;
            return this.then((a)=>{
                i = !1, s = a, t && t();
            }, (a)=>{
                i = !0, s = a, t && t();
            }).then(()=>{
                if (i) {
                    r(s);
                    return;
                }
                n(s);
            });
        });
    }
    /** JSDoc */ __init() {
        this._resolve = (t)=>{
            this._setResult(qr.RESOLVED, t);
        };
    }
    /** JSDoc */ __init2() {
        this._reject = (t)=>{
            this._setResult(qr.REJECTED, t);
        };
    }
    /** JSDoc */ __init3() {
        this._setResult = (t, n)=>{
            if (this._state === qr.PENDING) {
                if (jE(n)) {
                    n.then(this._resolve, this._reject);
                    return;
                }
                this._state = t, this._value = n, this._executeHandlers();
            }
        };
    }
    /** JSDoc */ __init4() {
        this._executeHandlers = ()=>{
            if (this._state === qr.PENDING) return;
            const t = this._handlers.slice();
            this._handlers = [], t.forEach((n)=>{
                n[0] || (this._state === qr.RESOLVED && n[1](this._value), this._state === qr.REJECTED && n[2](this._value), n[0] = !0);
            });
        };
    }
}
function j5(e) {
    const t = kt(), n = {
        sid: Sn(),
        init: !0,
        timestamp: t,
        started: t,
        duration: 0,
        status: "ok",
        errors: 0,
        ignoreDuration: !1,
        toJSON: ()=>K5(n)
    };
    return e && za(n, e), n;
}
function za(e, t = {}) {
    if (t.user && (!e.ipAddress && t.user.ip_address && (e.ipAddress = t.user.ip_address), !e.did && !t.did && (e.did = t.user.id || t.user.email || t.user.username)), e.timestamp = t.timestamp || kt(), t.abnormal_mechanism && (e.abnormal_mechanism = t.abnormal_mechanism), t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration), t.sid && (e.sid = t.sid.length === 32 ? t.sid : Sn()), t.init !== void 0 && (e.init = t.init), !e.did && t.did && (e.did = `${t.did}`), typeof t.started == "number" && (e.started = t.started), e.ignoreDuration) e.duration = void 0;
    else if (typeof t.duration == "number") e.duration = t.duration;
    else {
        const n = e.timestamp - e.started;
        e.duration = n >= 0 ? n : 0;
    }
    t.release && (e.release = t.release), t.environment && (e.environment = t.environment), !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress), !e.userAgent && t.userAgent && (e.userAgent = t.userAgent), typeof t.errors == "number" && (e.errors = t.errors), t.status && (e.status = t.status);
}
function X5(e, t) {
    let n = {};
    e.status === "ok" && (n = {
        status: "exited"
    }), za(e, n);
}
function K5(e) {
    return Pt({
        sid: `${e.sid}`,
        init: e.init,
        // Make sure that sec is converted to ms for date constructor
        started: new Date(e.started * 1e3).toISOString(),
        timestamp: new Date(e.timestamp * 1e3).toISOString(),
        status: e.status,
        errors: e.errors,
        did: typeof e.did == "number" || typeof e.did == "string" ? `${e.did}` : void 0,
        duration: e.duration,
        abnormal_mechanism: e.abnormal_mechanism,
        attrs: {
            release: e.release,
            environment: e.environment,
            ip_address: e.ipAddress,
            user_agent: e.userAgent
        }
    });
}
function ni() {
    return Sn();
}
function ri() {
    return Sn().substring(16);
}
function XE(e, t, n = 2) {
    if (!t || typeof t != "object" || n <= 0) return t;
    if (e && t && Object.keys(t).length === 0) return e;
    const r = {
        ...e
    };
    for(const s in t)Object.prototype.hasOwnProperty.call(t, s) && (r[s] = XE(r[s], t[s], n - 1));
    return r;
}
const qp = "_sentrySpan";
function Nl(e, t) {
    t ? cr(e, qp, t) : delete e[qp];
}
function eE(e) {
    return e[qp];
}
const z5 = 100;
class kh {
    /** Flag if notifying is happening. */ /** Callback for client to receive scope changes. */ /** Callback list that will be called during event processing. */ /** Array of breadcrumbs. */ /** User */ /** Tags */ /** Extra */ /** Contexts */ /** Attachments */ /** Propagation Context for distributed tracing */ /**
   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get
   * sent to Sentry
   */ /** Fingerprint */ /** Severity */ /**
   * Transaction Name
   *
   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.
   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.
   */ /** Session */ /** Request Mode Session Status */ // eslint-disable-next-line deprecation/deprecation
    /** The client on this scope */ /** Contains the last event id of a captured event.  */ // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.
    constructor(){
        this._notifyingListeners = !1, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this._sdkProcessingMetadata = {}, this._propagationContext = {
            traceId: ni(),
            spanId: ri()
        };
    }
    /**
   * @inheritDoc
   */ clone() {
        const t = new kh();
        return t._breadcrumbs = [
            ...this._breadcrumbs
        ], t._tags = {
            ...this._tags
        }, t._extra = {
            ...this._extra
        }, t._contexts = {
            ...this._contexts
        }, this._contexts.flags && (t._contexts.flags = {
            values: [
                ...this._contexts.flags.values
            ]
        }), t._user = this._user, t._level = this._level, t._session = this._session, t._transactionName = this._transactionName, t._fingerprint = this._fingerprint, t._eventProcessors = [
            ...this._eventProcessors
        ], t._requestSession = this._requestSession, t._attachments = [
            ...this._attachments
        ], t._sdkProcessingMetadata = {
            ...this._sdkProcessingMetadata
        }, t._propagationContext = {
            ...this._propagationContext
        }, t._client = this._client, t._lastEventId = this._lastEventId, Nl(t, eE(this)), t;
    }
    /**
   * @inheritDoc
   */ setClient(t) {
        this._client = t;
    }
    /**
   * @inheritDoc
   */ setLastEventId(t) {
        this._lastEventId = t;
    }
    /**
   * @inheritDoc
   */ getClient() {
        return this._client;
    }
    /**
   * @inheritDoc
   */ lastEventId() {
        return this._lastEventId;
    }
    /**
   * @inheritDoc
   */ addScopeListener(t) {
        this._scopeListeners.push(t);
    }
    /**
   * @inheritDoc
   */ addEventProcessor(t) {
        return this._eventProcessors.push(t), this;
    }
    /**
   * @inheritDoc
   */ setUser(t) {
        return this._user = t || {
            email: void 0,
            id: void 0,
            ip_address: void 0,
            username: void 0
        }, this._session && za(this._session, {
            user: t
        }), this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ getUser() {
        return this._user;
    }
    /**
   * @inheritDoc
   */ // eslint-disable-next-line deprecation/deprecation
    getRequestSession() {
        return this._requestSession;
    }
    /**
   * @inheritDoc
   */ // eslint-disable-next-line deprecation/deprecation
    setRequestSession(t) {
        return this._requestSession = t, this;
    }
    /**
   * @inheritDoc
   */ setTags(t) {
        return this._tags = {
            ...this._tags,
            ...t
        }, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ setTag(t, n) {
        return this._tags = {
            ...this._tags,
            [t]: n
        }, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ setExtras(t) {
        return this._extra = {
            ...this._extra,
            ...t
        }, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ setExtra(t, n) {
        return this._extra = {
            ...this._extra,
            [t]: n
        }, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ setFingerprint(t) {
        return this._fingerprint = t, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ setLevel(t) {
        return this._level = t, this._notifyScopeListeners(), this;
    }
    /**
   * Sets the transaction name on the scope so that the name of e.g. taken server route or
   * the page location is attached to future events.
   *
   * IMPORTANT: Calling this function does NOT change the name of the currently active
   * root span. If you want to change the name of the active root span, use
   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.
   *
   * By default, the SDK updates the scope's transaction name automatically on sensible
   * occasions, such as a page navigation or when handling a new request on the server.
   */ setTransactionName(t) {
        return this._transactionName = t, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ setContext(t, n) {
        return n === null ? delete this._contexts[t] : this._contexts[t] = n, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ setSession(t) {
        return t ? this._session = t : delete this._session, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ getSession() {
        return this._session;
    }
    /**
   * @inheritDoc
   */ update(t) {
        if (!t) return this;
        const n = typeof t == "function" ? t(this) : t, [r, s] = n instanceof Vi ? // eslint-disable-next-line deprecation/deprecation
        [
            n.getScopeData(),
            n.getRequestSession()
        ] : Xa(n) ? [
            t,
            t.requestSession
        ] : [], { tags: i, extra: a, user: o, contexts: l, level: c, fingerprint: u = [], propagationContext: E } = r || {};
        return this._tags = {
            ...this._tags,
            ...i
        }, this._extra = {
            ...this._extra,
            ...a
        }, this._contexts = {
            ...this._contexts,
            ...l
        }, o && Object.keys(o).length && (this._user = o), c && (this._level = c), u.length && (this._fingerprint = u), E && (this._propagationContext = E), s && (this._requestSession = s), this;
    }
    /**
   * @inheritDoc
   */ clear() {
        return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._session = void 0, Nl(this, void 0), this._attachments = [], this.setPropagationContext({
            traceId: ni()
        }), this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ addBreadcrumb(t, n) {
        const r = typeof n == "number" ? n : z5;
        if (r <= 0) return this;
        const s = {
            timestamp: Yl(),
            ...t
        }, i = this._breadcrumbs;
        return i.push(s), this._breadcrumbs = i.length > r ? i.slice(-r) : i, this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ getLastBreadcrumb() {
        return this._breadcrumbs[this._breadcrumbs.length - 1];
    }
    /**
   * @inheritDoc
   */ clearBreadcrumbs() {
        return this._breadcrumbs = [], this._notifyScopeListeners(), this;
    }
    /**
   * @inheritDoc
   */ addAttachment(t) {
        return this._attachments.push(t), this;
    }
    /**
   * @inheritDoc
   */ clearAttachments() {
        return this._attachments = [], this;
    }
    /** @inheritDoc */ getScopeData() {
        return {
            breadcrumbs: this._breadcrumbs,
            attachments: this._attachments,
            contexts: this._contexts,
            tags: this._tags,
            extra: this._extra,
            user: this._user,
            level: this._level,
            fingerprint: this._fingerprint || [],
            eventProcessors: this._eventProcessors,
            propagationContext: this._propagationContext,
            sdkProcessingMetadata: this._sdkProcessingMetadata,
            transactionName: this._transactionName,
            span: eE(this)
        };
    }
    /**
   * @inheritDoc
   */ setSDKProcessingMetadata(t) {
        return this._sdkProcessingMetadata = XE(this._sdkProcessingMetadata, t, 2), this;
    }
    /**
   * @inheritDoc
   */ setPropagationContext(t) {
        return this._propagationContext = {
            // eslint-disable-next-line deprecation/deprecation
            spanId: ri(),
            ...t
        }, this;
    }
    /**
   * @inheritDoc
   */ getPropagationContext() {
        return this._propagationContext;
    }
    /**
   * @inheritDoc
   */ captureException(t, n) {
        const r = n && n.event_id ? n.event_id : Sn();
        if (!this._client) return q.warn("No client configured on scope - will not capture exception!"), r;
        const s = new Error("Sentry syntheticException");
        return this._client.captureException(t, {
            originalException: t,
            syntheticException: s,
            ...n,
            event_id: r
        }, this), r;
    }
    /**
   * @inheritDoc
   */ captureMessage(t, n, r) {
        const s = r && r.event_id ? r.event_id : Sn();
        if (!this._client) return q.warn("No client configured on scope - will not capture message!"), s;
        const i = new Error(t);
        return this._client.captureMessage(t, n, {
            originalException: t,
            syntheticException: i,
            ...r,
            event_id: s
        }, this), s;
    }
    /**
   * @inheritDoc
   */ captureEvent(t, n) {
        const r = n && n.event_id ? n.event_id : Sn();
        return this._client ? (this._client.captureEvent(t, {
            ...n,
            event_id: r
        }, this), r) : (q.warn("No client configured on scope - will not capture event!"), r);
    }
    /**
   * This will be called on every set call.
   */ _notifyScopeListeners() {
        this._notifyingListeners || (this._notifyingListeners = !0, this._scopeListeners.forEach((t)=>{
            t(this);
        }), this._notifyingListeners = !1);
    }
}
const Vi = kh;
function J5() {
    return VE("defaultCurrentScope", ()=>new Vi());
}
function q5() {
    return VE("defaultIsolationScope", ()=>new Vi());
}
class Z5 {
    constructor(t, n){
        let r;
        t ? r = t : r = new Vi();
        let s;
        n ? s = n : s = new Vi(), this._stack = [
            {
                scope: r
            }
        ], this._isolationScope = s;
    }
    /**
   * Fork a scope for the stack.
   */ withScope(t) {
        const n = this._pushScope();
        let r;
        try {
            r = t(n);
        } catch (s) {
            throw this._popScope(), s;
        }
        return jE(r) ? r.then((s)=>(this._popScope(), s), (s)=>{
            throw this._popScope(), s;
        }) : (this._popScope(), r);
    }
    /**
   * Get the client of the stack.
   */ getClient() {
        return this.getStackTop().client;
    }
    /**
   * Returns the scope of the top stack.
   */ getScope() {
        return this.getStackTop().scope;
    }
    /**
   * Get the isolation scope for the stack.
   */ getIsolationScope() {
        return this._isolationScope;
    }
    /**
   * Returns the topmost scope layer in the order domain > local > process.
   */ getStackTop() {
        return this._stack[this._stack.length - 1];
    }
    /**
   * Push a scope to the stack.
   */ _pushScope() {
        const t = this.getScope().clone();
        return this._stack.push({
            client: this.getClient(),
            scope: t
        }), t;
    }
    /**
   * Pop a scope from the stack.
   */ _popScope() {
        return this._stack.length <= 1 ? !1 : !!this._stack.pop();
    }
}
function Ja() {
    const e = Zi(), t = xh(e);
    return t.stack = t.stack || new Z5(J5(), q5());
}
function Q5(e) {
    return Ja().withScope(e);
}
function $5(e, t) {
    const n = Ja();
    return n.withScope(()=>(n.getStackTop().scope = e, t(e)));
}
function CS(e) {
    return Ja().withScope(()=>e(Ja().getIsolationScope()));
}
function e3() {
    return {
        withIsolationScope: CS,
        withScope: Q5,
        withSetScope: $5,
        withSetIsolationScope: (e, t)=>CS(t),
        getCurrentScope: ()=>Ja().getScope(),
        getIsolationScope: ()=>Ja().getIsolationScope()
    };
}
function Eo(e) {
    const t = xh(e);
    return t.acs ? t.acs : e3();
}
function qe() {
    const e = Zi();
    return Eo(e).getCurrentScope();
}
function Ir() {
    const e = Zi();
    return Eo(e).getIsolationScope();
}
function t3() {
    return VE("globalScope", ()=>new Vi());
}
function Hh(...e) {
    const t = Zi(), n = Eo(t);
    if (e.length === 2) {
        const [r, s] = e;
        return r ? n.withSetScope(r, s) : n.withScope(s);
    }
    return n.withScope(e[0]);
}
function ye() {
    return qe().getClient();
}
function n3(e) {
    const t = e.getPropagationContext(), { traceId: n, spanId: r, parentSpanId: s } = t;
    return Pt({
        trace_id: n,
        span_id: r,
        parent_span_id: s
    });
}
const r3 = "_sentryMetrics";
function Zp(e) {
    const t = e[r3];
    if (!t) return;
    const n = {};
    for (const [, [r, s]] of t)(n[r] || (n[r] = [])).push(Pt(s));
    return n;
}
const Sr = "sentry.source", CI = "sentry.sample_rate", si = "sentry.op", Dt = "sentry.origin", Qp = "sentry.idle_span_finish_reason", KE = "sentry.measurement_unit", zE = "sentry.measurement_value", gS = "sentry.custom_span_name", s3 = "sentry.profile_id", Yh = "sentry.exclusive_time", i3 = 0, gI = 1, Ft = 2;
function a3(e) {
    if (e < 400 && e >= 100) return {
        code: gI
    };
    if (e >= 400 && e < 500) switch(e){
        case 401:
            return {
                code: Ft,
                message: "unauthenticated"
            };
        case 403:
            return {
                code: Ft,
                message: "permission_denied"
            };
        case 404:
            return {
                code: Ft,
                message: "not_found"
            };
        case 409:
            return {
                code: Ft,
                message: "already_exists"
            };
        case 413:
            return {
                code: Ft,
                message: "failed_precondition"
            };
        case 429:
            return {
                code: Ft,
                message: "resource_exhausted"
            };
        case 499:
            return {
                code: Ft,
                message: "cancelled"
            };
        default:
            return {
                code: Ft,
                message: "invalid_argument"
            };
    }
    if (e >= 500 && e < 600) switch(e){
        case 501:
            return {
                code: Ft,
                message: "unimplemented"
            };
        case 503:
            return {
                code: Ft,
                message: "unavailable"
            };
        case 504:
            return {
                code: Ft,
                message: "deadline_exceeded"
            };
        default:
            return {
                code: Ft,
                message: "internal_error"
            };
    }
    return {
        code: Ft,
        message: "unknown_error"
    };
}
function LI(e, t) {
    e.setAttribute("http.response.status_code", t);
    const n = a3(t);
    n.message !== "unknown_error" && e.setStatus(n);
}
const Vh = "sentry-", o3 = /^sentry-/, l3 = 8192;
function yI(e) {
    const t = u3(e);
    if (!t) return;
    const n = Object.entries(t).reduce((r, [s, i])=>{
        if (s.match(o3)) {
            const a = s.slice(Vh.length);
            r[a] = i;
        }
        return r;
    }, {});
    if (Object.keys(n).length > 0) return n;
}
function c3(e) {
    if (!e) return;
    const t = Object.entries(e).reduce((n, [r, s])=>(s && (n[`${Vh}${r}`] = s), n), {});
    return E3(t);
}
function u3(e) {
    if (!(!e || !rs(e) && !Array.isArray(e))) return Array.isArray(e) ? e.reduce((t, n)=>{
        const r = LS(n);
        return Object.entries(r).forEach(([s, i])=>{
            t[s] = i;
        }), t;
    }, {}) : LS(e);
}
function LS(e) {
    return e.split(",").map((t)=>t.split("=").map((n)=>decodeURIComponent(n.trim()))).reduce((t, [n, r])=>(n && r && (t[n] = r), t), {});
}
function E3(e) {
    if (Object.keys(e).length !== 0) return Object.entries(e).reduce((t, [n, r], s)=>{
        const i = `${encodeURIComponent(n)}=${encodeURIComponent(r)}`, a = s === 0 ? i : `${t},${i}`;
        return a.length > l3 ? (di && q.warn(`Not adding key: ${n} with val: ${r} to baggage header due to exceeding baggage size limits.`), t) : a;
    }, "");
}
const vI = new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");
function d3(e) {
    if (!e) return;
    const t = e.match(vI);
    if (!t) return;
    let n;
    return t[3] === "1" ? n = !0 : t[3] === "0" && (n = !1), {
        traceId: t[1],
        parentSampled: n,
        parentSpanId: t[2]
    };
}
function f3(e, t) {
    const n = d3(e), r = yI(t);
    if (!n || !n.traceId) return {
        traceId: ni(),
        spanId: ri()
    };
    const { traceId: s, parentSpanId: i, parentSampled: a } = n, o = ri();
    return {
        traceId: s,
        parentSpanId: i,
        spanId: o,
        sampled: a,
        dsc: r || {}
    };
}
function bI(e = ni(), t = ri(), n) {
    let r = "";
    return n !== void 0 && (r = n ? "-1" : "-0"), `${e}-${t}${r}`;
}
const PI = 0, MI = 1;
let yS = !1;
function p3(e) {
    const { spanId: t, traceId: n } = e.spanContext(), { data: r, op: s, parent_span_id: i, status: a, origin: o } = Me(e);
    return Pt({
        parent_span_id: i,
        span_id: t,
        trace_id: n,
        data: r,
        op: s,
        status: a,
        origin: o
    });
}
function T3(e) {
    const { spanId: t, traceId: n, isRemote: r } = e.spanContext(), s = r ? t : Me(e).parent_span_id, i = r ? ri() : t;
    return Pt({
        parent_span_id: s,
        span_id: i,
        trace_id: n
    });
}
function h3(e) {
    const { traceId: t, spanId: n } = e.spanContext(), r = Qi(e);
    return bI(t, n, r);
}
function wi(e) {
    return typeof e == "number" ? vS(e) : Array.isArray(e) ? e[0] + e[1] / 1e9 : e instanceof Date ? vS(e.getTime()) : kt();
}
function vS(e) {
    return e > 9999999999 ? e / 1e3 : e;
}
function Me(e) {
    if (S3(e)) return e.getSpanJSON();
    try {
        const { spanId: t, traceId: n } = e.spanContext();
        if (A3(e)) {
            const { attributes: r, startTime: s, name: i, endTime: a, parentSpanId: o, status: l } = e;
            return Pt({
                span_id: t,
                trace_id: n,
                data: r,
                description: i,
                parent_span_id: o,
                start_timestamp: wi(s),
                // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time
                timestamp: wi(a) || void 0,
                status: DI(l),
                op: r[si],
                origin: r[Dt],
                _metrics_summary: Zp(e)
            });
        }
        return {
            span_id: t,
            trace_id: n
        };
    } catch  {
        return {};
    }
}
function A3(e) {
    const t = e;
    return !!t.attributes && !!t.startTime && !!t.name && !!t.endTime && !!t.status;
}
function S3(e) {
    return typeof e.getSpanJSON == "function";
}
function Qi(e) {
    const { traceFlags: t } = e.spanContext();
    return t === MI;
}
function DI(e) {
    if (!(!e || e.code === i3)) return e.code === gI ? "ok" : e.message || "unknown_error";
}
const xi = "_sentryChildSpans", $p = "_sentryRootSpan";
function wI(e, t) {
    const n = e[$p] || e;
    cr(t, $p, n), e[xi] ? e[xi].add(t) : cr(e, xi, /* @__PURE__ */ new Set([
        t
    ]));
}
function R3(e, t) {
    e[xi] && e[xi].delete(t);
}
function du(e) {
    const t = /* @__PURE__ */ new Set();
    function n(r) {
        if (!t.has(r) && Qi(r)) {
            t.add(r);
            const s = r[xi] ? Array.from(r[xi]) : [];
            for (const i of s)n(i);
        }
    }
    return n(e), Array.from(t);
}
function Mt(e) {
    return e[$p] || e;
}
function wt() {
    const e = Zi(), t = Eo(e);
    return t.getActiveSpan ? t.getActiveSpan() : eE(qe());
}
function xI() {
    yS || (fi(()=>{
        console.warn("[Sentry] Deprecation warning: Returning null from `beforeSendSpan` will be disallowed from SDK version 9.0.0 onwards. The callback will only support mutating spans. To drop certain spans, configure the respective integrations directly.");
    }), yS = !0);
}
let bS = !1;
function m3() {
    bS || (bS = !0, pI(eT), TI(eT));
}
function eT() {
    const e = wt(), t = e && Mt(e);
    if (t) {
        const n = "internal_error";
        me && q.log(`[Tracing] Root span: ${n} -> Global error occurred`), t.setStatus({
            code: Ft,
            message: n
        });
    }
}
eT.tag = "sentry_tracingErrorCallback";
const UI = "_sentryScope", FI = "_sentryIsolationScope";
function _3(e, t, n) {
    e && (cr(e, FI, n), cr(e, UI, t));
}
function PS(e) {
    return {
        scope: e[UI],
        isolationScope: e[FI]
    };
}
function ii(e) {
    if (typeof __SENTRY_TRACING__ == "boolean" && !__SENTRY_TRACING__) return !1;
    const t = ye(), n = e || t && t.getOptions();
    return !!n && (n.enableTracing || "tracesSampleRate" in n || "tracesSampler" in n);
}
class fo {
    constructor(t = {}){
        this._traceId = t.traceId || ni(), this._spanId = t.spanId || ri();
    }
    /** @inheritdoc */ spanContext() {
        return {
            spanId: this._spanId,
            traceId: this._traceId,
            traceFlags: PI
        };
    }
    /** @inheritdoc */ // eslint-disable-next-line @typescript-eslint/no-empty-function
    end(t) {}
    /** @inheritdoc */ setAttribute(t, n) {
        return this;
    }
    /** @inheritdoc */ setAttributes(t) {
        return this;
    }
    /** @inheritdoc */ setStatus(t) {
        return this;
    }
    /** @inheritdoc */ updateName(t) {
        return this;
    }
    /** @inheritdoc */ isRecording() {
        return !1;
    }
    /** @inheritdoc */ addEvent(t, n, r) {
        return this;
    }
    /**
   * This should generally not be used,
   * but we need it for being compliant with the OTEL Span interface.
   *
   * @hidden
   * @internal
   */ addLink(t) {
        return this;
    }
    /**
   * This should generally not be used,
   * but we need it for being compliant with the OTEL Span interface.
   *
   * @hidden
   * @internal
   */ addLinks(t) {
        return this;
    }
    /**
   * This should generally not be used,
   * but we need it for being compliant with the OTEL Span interface.
   *
   * @hidden
   * @internal
   */ recordException(t, n) {}
}
const JE = "production", BI = "_frozenDsc";
function MS(e, t) {
    cr(e, BI, t);
}
function GI(e, t) {
    const n = t.getOptions(), { publicKey: r } = t.getDsn() || {}, s = Pt({
        environment: n.environment || JE,
        release: n.release,
        public_key: r,
        trace_id: e
    });
    return t.emit("createDsc", s), s;
}
function kI(e, t) {
    const n = t.getPropagationContext();
    return n.dsc || GI(n.traceId, e);
}
function $i(e) {
    const t = ye();
    if (!t) return {};
    const n = Mt(e), r = n[BI];
    if (r) return r;
    const s = n.spanContext().traceState, i = s && s.get("sentry.dsc"), a = i && yI(i);
    if (a) return a;
    const o = GI(e.spanContext().traceId, t), l = Me(n), c = l.data || {}, u = c[CI];
    u != null && (o.sample_rate = `${u}`);
    const E = c[Sr], p = l.description;
    return E !== "url" && p && (o.transaction = p), ii() && (o.sampled = String(Qi(n))), t.emit("createDsc", o, n), o;
}
function N3(e) {
    if (!me) return;
    const { description: t = "< unknown name >", op: n = "< unknown op >", parent_span_id: r } = Me(e), { spanId: s } = e.spanContext(), i = Qi(e), a = Mt(e), o = a === e, l = `[Tracing] Starting ${i ? "sampled" : "unsampled"} ${o ? "root " : ""}span`, c = [
        `op: ${n}`,
        `name: ${t}`,
        `ID: ${s}`
    ];
    if (r && c.push(`parent ID: ${r}`), !o) {
        const { op: u, description: E } = Me(a);
        c.push(`root ID: ${a.spanContext().spanId}`), u && c.push(`root op: ${u}`), E && c.push(`root description: ${E}`);
    }
    q.log(`${l}
  ${c.join(`
  `)}`);
}
function I3(e) {
    if (!me) return;
    const { description: t = "< unknown name >", op: n = "< unknown op >" } = Me(e), { spanId: r } = e.spanContext(), i = Mt(e) === e, a = `[Tracing] Finishing "${n}" ${i ? "root " : ""}span "${t}" with ID ${r}`;
    q.log(a);
}
function tE(e) {
    if (typeof e == "boolean") return Number(e);
    const t = typeof e == "string" ? parseFloat(e) : e;
    if (typeof t != "number" || isNaN(t) || t < 0 || t > 1) {
        me && q.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(e)} of type ${JSON.stringify(typeof e)}.`);
        return;
    }
    return t;
}
function O3(e, t) {
    if (!ii(e)) return [
        !1
    ];
    const n = Ir().getScopeData().sdkProcessingMetadata.normalizedRequest, r = {
        ...t,
        normalizedRequest: t.normalizedRequest || n
    };
    let s;
    typeof e.tracesSampler == "function" ? s = e.tracesSampler(r) : r.parentSampled !== void 0 ? s = r.parentSampled : typeof e.tracesSampleRate < "u" ? s = e.tracesSampleRate : s = 1;
    const i = tE(s);
    return i === void 0 ? (me && q.warn("[Tracing] Discarding transaction because of invalid sample rate."), [
        !1
    ]) : i ? Math.random() < i ? [
        !0,
        i
    ] : (me && q.log(`[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(s)})`), [
        !1,
        i
    ]) : (me && q.log(`[Tracing] Discarding transaction because ${typeof e.tracesSampler == "function" ? "tracesSampler returned 0 or false" : "a negative sampling decision was inherited or tracesSampleRate is set to 0"}`), [
        !1,
        i
    ]);
}
const C3 = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function g3(e) {
    return e === "http" || e === "https";
}
function Vl(e, t = !1) {
    const { host: n, path: r, pass: s, port: i, projectId: a, protocol: o, publicKey: l } = e;
    return `${o}://${l}${t && s ? `:${s}` : ""}@${n}${i ? `:${i}` : ""}/${r && `${r}/`}${a}`;
}
function L3(e) {
    const t = C3.exec(e);
    if (!t) {
        fi(()=>{
            console.error(`Invalid Sentry Dsn: ${e}`);
        });
        return;
    }
    const [n, r, s = "", i = "", a = "", o = ""] = t.slice(1);
    let l = "", c = o;
    const u = c.split("/");
    if (u.length > 1 && (l = u.slice(0, -1).join("/"), c = u.pop()), c) {
        const E = c.match(/^\d+/);
        E && (c = E[0]);
    }
    return HI({
        host: i,
        pass: s,
        path: l,
        projectId: c,
        port: a,
        protocol: n,
        publicKey: r
    });
}
function HI(e) {
    return {
        protocol: e.protocol,
        publicKey: e.publicKey || "",
        pass: e.pass || "",
        host: e.host,
        port: e.port || "",
        path: e.path || "",
        projectId: e.projectId
    };
}
function y3(e) {
    if (!di) return !0;
    const { port: t, projectId: n, protocol: r } = e;
    return [
        "protocol",
        "publicKey",
        "host",
        "projectId"
    ].find((a)=>e[a] ? !1 : (q.error(`Invalid Sentry Dsn: ${a} missing`), !0)) ? !1 : n.match(/^\d+$/) ? g3(r) ? t && isNaN(parseInt(t, 10)) ? (q.error(`Invalid Sentry Dsn: Invalid port ${t}`), !1) : !0 : (q.error(`Invalid Sentry Dsn: Invalid protocol ${r}`), !1) : (q.error(`Invalid Sentry Dsn: Invalid projectId ${n}`), !1);
}
function v3(e) {
    const t = typeof e == "string" ? L3(e) : HI(e);
    if (!(!t || !y3(t))) return t;
}
function b3() {
    const e = typeof WeakSet == "function", t = e ? /* @__PURE__ */ new WeakSet() : [];
    function n(s) {
        if (e) return t.has(s) ? !0 : (t.add(s), !1);
        for(let i = 0; i < t.length; i++)if (t[i] === s) return !0;
        return t.push(s), !1;
    }
    function r(s) {
        if (e) t.delete(s);
        else for(let i = 0; i < t.length; i++)if (t[i] === s) {
            t.splice(i, 1);
            break;
        }
    }
    return [
        n,
        r
    ];
}
function Tr(e, t = 100, n = 1 / 0) {
    try {
        return tT("", e, t, n);
    } catch (r) {
        return {
            ERROR: `**non-serializable** (${r})`
        };
    }
}
function YI(e, t = 3, n = 100 * 1024) {
    const r = Tr(e, t);
    return w3(r) > n ? YI(e, t - 1, n) : r;
}
function tT(e, t, n = 1 / 0, r = 1 / 0, s = b3()) {
    const [i, a] = s;
    if (t == null || // this matches null and undefined -> eqeq not eqeqeq
    [
        "boolean",
        "string"
    ].includes(typeof t) || typeof t == "number" && Number.isFinite(t)) return t;
    const o = P3(e, t);
    if (!o.startsWith("[object ")) return o;
    if (t.__sentry_skip_normalization__) return t;
    const l = typeof t.__sentry_override_normalization_depth__ == "number" ? t.__sentry_override_normalization_depth__ : n;
    if (l === 0) return o.replace("object ", "");
    if (i(t)) return "[Circular ~]";
    const c = t;
    if (c && typeof c.toJSON == "function") try {
        const A = c.toJSON();
        return tT("", A, l - 1, r, s);
    } catch  {}
    const u = Array.isArray(t) ? [] : {};
    let E = 0;
    const p = NI(t);
    for(const A in p){
        if (!Object.prototype.hasOwnProperty.call(p, A)) continue;
        if (E >= r) {
            u[A] = "[MaxProperties ~]";
            break;
        }
        const R = p[A];
        u[A] = tT(A, R, l - 1, r, s), E++;
    }
    return a(t), u;
}
function P3(e, t) {
    try {
        if (e === "domain" && t && typeof t == "object" && t._events) return "[Domain]";
        if (e === "domainEmitter") return "[DomainEmitter]";
        if (typeof global < "u" && t === global) return "[Global]";
        if (typeof window < "u" && t === window) return "[Window]";
        if (typeof document < "u" && t === document) return "[Document]";
        if (SI(t)) return "[VueViewModel]";
        if (U5(t)) return "[SyntheticEvent]";
        if (typeof t == "number" && !Number.isFinite(t)) return `[${t}]`;
        if (typeof t == "function") return `[Function: ${us(t)}]`;
        if (typeof t == "symbol") return `[${String(t)}]`;
        if (typeof t == "bigint") return `[BigInt: ${String(t)}]`;
        const n = M3(t);
        return /^HTML(\w*)Element$/.test(n) ? `[HTMLElement: ${n}]` : `[object ${n}]`;
    } catch (n) {
        return `**non-serializable** (${n})`;
    }
}
function M3(e) {
    const t = Object.getPrototypeOf(e);
    return t ? t.constructor.name : "null prototype";
}
function D3(e) {
    return ~-encodeURI(e).split(/%..|./).length;
}
function w3(e) {
    return D3(JSON.stringify(e));
}
function ea(e, t = []) {
    return [
        e,
        t
    ];
}
function x3(e, t) {
    const [n, r] = e;
    return [
        n,
        [
            ...r,
            t
        ]
    ];
}
function nE(e, t) {
    const n = e[1];
    for (const r of n){
        const s = r[0].type;
        if (t(r, s)) return !0;
    }
    return !1;
}
function DS(e, t) {
    return nE(e, (n, r)=>t.includes(r));
}
function rE(e) {
    return Le.__SENTRY__ && Le.__SENTRY__.encodePolyfill ? Le.__SENTRY__.encodePolyfill(e) : new TextEncoder().encode(e);
}
function U3(e) {
    return Le.__SENTRY__ && Le.__SENTRY__.decodePolyfill ? Le.__SENTRY__.decodePolyfill(e) : new TextDecoder().decode(e);
}
function Il(e) {
    const [t, n] = e;
    let r = JSON.stringify(t);
    function s(i) {
        typeof r == "string" ? r = typeof i == "string" ? r + i : [
            rE(r),
            i
        ] : r.push(typeof i == "string" ? rE(i) : i);
    }
    for (const i of n){
        const [a, o] = i;
        if (s(`
${JSON.stringify(a)}
`), typeof o == "string" || o instanceof Uint8Array) s(o);
        else {
            let l;
            try {
                l = JSON.stringify(o);
            } catch  {
                l = JSON.stringify(Tr(o));
            }
            s(l);
        }
    }
    return typeof r == "string" ? r : F3(r);
}
function F3(e) {
    const t = e.reduce((s, i)=>s + i.length, 0), n = new Uint8Array(t);
    let r = 0;
    for (const s of e)n.set(s, r), r += s.length;
    return n;
}
function B3(e) {
    let t = typeof e == "string" ? rE(e) : e;
    function n(a) {
        const o = t.subarray(0, a);
        return t = t.subarray(a + 1), o;
    }
    function r() {
        let a = t.indexOf(10);
        return a < 0 && (a = t.length), JSON.parse(U3(n(a)));
    }
    const s = r(), i = [];
    for(; t.length;){
        const a = r(), o = typeof a.length == "number" ? a.length : void 0;
        i.push([
            a,
            o ? n(o) : r()
        ]);
    }
    return [
        s,
        i
    ];
}
function G3(e) {
    return [
        {
            type: "span"
        },
        e
    ];
}
function k3(e) {
    const t = typeof e.data == "string" ? rE(e.data) : e.data;
    return [
        Pt({
            type: "attachment",
            length: t.length,
            filename: e.filename,
            content_type: e.contentType,
            attachment_type: e.attachmentType
        }),
        t
    ];
}
const H3 = {
    session: "session",
    sessions: "session",
    attachment: "attachment",
    transaction: "transaction",
    event: "error",
    client_report: "internal",
    user_report: "default",
    profile: "profile",
    profile_chunk: "profile",
    replay_event: "replay",
    replay_recording: "replay",
    check_in: "monitor",
    feedback: "feedback",
    span: "span",
    statsd: "metric_bucket",
    raw_security: "security"
};
function wS(e) {
    return H3[e];
}
function Wh(e) {
    if (!e || !e.sdk) return;
    const { name: t, version: n } = e.sdk;
    return {
        name: t,
        version: n
    };
}
function VI(e, t, n, r) {
    const s = e.sdkProcessingMetadata && e.sdkProcessingMetadata.dynamicSamplingContext;
    return {
        event_id: e.event_id,
        sent_at: /* @__PURE__ */ new Date().toISOString(),
        ...t && {
            sdk: t
        },
        ...!!n && r && {
            dsn: Vl(r)
        },
        ...s && {
            trace: Pt({
                ...s
            })
        }
    };
}
function Y3(e, t) {
    return t && (e.sdk = e.sdk || {}, e.sdk.name = e.sdk.name || t.name, e.sdk.version = e.sdk.version || t.version, e.sdk.integrations = [
        ...e.sdk.integrations || [],
        ...t.integrations || []
    ], e.sdk.packages = [
        ...e.sdk.packages || [],
        ...t.packages || []
    ]), e;
}
function V3(e, t, n, r) {
    const s = Wh(n), i = {
        sent_at: /* @__PURE__ */ new Date().toISOString(),
        ...s && {
            sdk: s
        },
        ...!!r && t && {
            dsn: Vl(t)
        }
    }, a = "aggregates" in e ? [
        {
            type: "sessions"
        },
        e
    ] : [
        {
            type: "session"
        },
        e.toJSON()
    ];
    return ea(i, [
        a
    ]);
}
function W3(e, t, n, r) {
    const s = Wh(n), i = e.type && e.type !== "replay_event" ? e.type : "event";
    Y3(e, n && n.sdk);
    const a = VI(e, s, r, t);
    return delete e.sdkProcessingMetadata, ea(a, [
        [
            {
                type: i
            },
            e
        ]
    ]);
}
function j3(e, t) {
    function n(u) {
        return !!u.trace_id && !!u.public_key;
    }
    const r = $i(e[0]), s = t && t.getDsn(), i = t && t.getOptions().tunnel, a = {
        sent_at: /* @__PURE__ */ new Date().toISOString(),
        ...n(r) && {
            trace: r
        },
        ...!!i && s && {
            dsn: Vl(s)
        }
    }, o = t && t.getOptions().beforeSendSpan, l = o ? (u)=>{
        const E = o(Me(u));
        return E || xI(), E;
    } : (u)=>Me(u), c = [];
    for (const u of e){
        const E = l(u);
        E && c.push(G3(E));
    }
    return ea(a, c);
}
function X3(e, t, n, r = wt()) {
    const s = r && Mt(r);
    s && (me && q.log(`[Measurement] Setting measurement on root span: ${e} = ${t} ${n}`), s.addEvent(e, {
        [zE]: t,
        [KE]: n
    }));
}
function xS(e) {
    if (!e || e.length === 0) return;
    const t = {};
    return e.forEach((n)=>{
        const r = n.attributes || {}, s = r[KE], i = r[zE];
        typeof s == "string" && typeof i == "number" && (t[n.name] = {
            value: i,
            unit: s
        });
    }), t;
}
const US = 1e3;
class jh {
    /** Epoch timestamp in seconds when the span started. */ /** Epoch timestamp in seconds when the span ended. */ /** Internal keeper of the status */ /** The timed events added to this span. */ /** if true, treat span as a standalone span (not part of a transaction) */ /**
   * You should never call the constructor manually, always use `Sentry.startSpan()`
   * or other span methods.
   * @internal
   * @hideconstructor
   * @hidden
   */ constructor(t = {}){
        this._traceId = t.traceId || ni(), this._spanId = t.spanId || ri(), this._startTime = t.startTimestamp || kt(), this._attributes = {}, this.setAttributes({
            [Dt]: "manual",
            [si]: t.op,
            ...t.attributes
        }), this._name = t.name, t.parentSpanId && (this._parentSpanId = t.parentSpanId), "sampled" in t && (this._sampled = t.sampled), t.endTimestamp && (this._endTime = t.endTimestamp), this._events = [], this._isStandaloneSpan = t.isStandalone, this._endTime && this._onSpanEnded();
    }
    /**
   * This should generally not be used,
   * but it is needed for being compliant with the OTEL Span interface.
   *
   * @hidden
   * @internal
   */ addLink(t) {
        return this;
    }
    /**
   * This should generally not be used,
   * but it is needed for being compliant with the OTEL Span interface.
   *
   * @hidden
   * @internal
   */ addLinks(t) {
        return this;
    }
    /**
   * This should generally not be used,
   * but it is needed for being compliant with the OTEL Span interface.
   *
   * @hidden
   * @internal
   */ recordException(t, n) {}
    /** @inheritdoc */ spanContext() {
        const { _spanId: t, _traceId: n, _sampled: r } = this;
        return {
            spanId: t,
            traceId: n,
            traceFlags: r ? MI : PI
        };
    }
    /** @inheritdoc */ setAttribute(t, n) {
        return n === void 0 ? delete this._attributes[t] : this._attributes[t] = n, this;
    }
    /** @inheritdoc */ setAttributes(t) {
        return Object.keys(t).forEach((n)=>this.setAttribute(n, t[n])), this;
    }
    /**
   * This should generally not be used,
   * but we need it for browser tracing where we want to adjust the start time afterwards.
   * USE THIS WITH CAUTION!
   *
   * @hidden
   * @internal
   */ updateStartTime(t) {
        this._startTime = wi(t);
    }
    /**
   * @inheritDoc
   */ setStatus(t) {
        return this._status = t, this;
    }
    /**
   * @inheritDoc
   */ updateName(t) {
        return this._name = t, this.setAttribute(Sr, "custom"), this;
    }
    /** @inheritdoc */ end(t) {
        this._endTime || (this._endTime = wi(t), I3(this), this._onSpanEnded());
    }
    /**
   * Get JSON representation of this span.
   *
   * @hidden
   * @internal This method is purely for internal purposes and should not be used outside
   * of SDK code. If you need to get a JSON representation of a span,
   * use `spanToJSON(span)` instead.
   */ getSpanJSON() {
        return Pt({
            data: this._attributes,
            description: this._name,
            op: this._attributes[si],
            parent_span_id: this._parentSpanId,
            span_id: this._spanId,
            start_timestamp: this._startTime,
            status: DI(this._status),
            timestamp: this._endTime,
            trace_id: this._traceId,
            origin: this._attributes[Dt],
            _metrics_summary: Zp(this),
            profile_id: this._attributes[s3],
            exclusive_time: this._attributes[Yh],
            measurements: xS(this._events),
            is_segment: this._isStandaloneSpan && Mt(this) === this || void 0,
            segment_id: this._isStandaloneSpan ? Mt(this).spanContext().spanId : void 0
        });
    }
    /** @inheritdoc */ isRecording() {
        return !this._endTime && !!this._sampled;
    }
    /**
   * @inheritdoc
   */ addEvent(t, n, r) {
        me && q.log("[Tracing] Adding an event to span:", t);
        const s = FS(n) ? n : r || kt(), i = FS(n) ? {} : n || {}, a = {
            name: t,
            time: wi(s),
            attributes: i
        };
        return this._events.push(a), this;
    }
    /**
   * This method should generally not be used,
   * but for now we need a way to publicly check if the `_isStandaloneSpan` flag is set.
   * USE THIS WITH CAUTION!
   * @internal
   * @hidden
   * @experimental
   */ isStandaloneSpan() {
        return !!this._isStandaloneSpan;
    }
    /** Emit `spanEnd` when the span is ended. */ _onSpanEnded() {
        const t = ye();
        if (t && t.emit("spanEnd", this), !(this._isStandaloneSpan || this === Mt(this))) return;
        if (this._isStandaloneSpan) {
            this._sampled ? z3(j3([
                this
            ], t)) : (me && q.log("[Tracing] Discarding standalone span because its trace was not chosen to be sampled."), t && t.recordDroppedEvent("sample_rate", "span"));
            return;
        }
        const r = this._convertSpanToTransaction();
        r && (PS(this).scope || qe()).captureEvent(r);
    }
    /**
   * Finish the transaction & prepare the event to send to Sentry.
   */ _convertSpanToTransaction() {
        if (!BS(Me(this))) return;
        this._name || (me && q.warn("Transaction has no name, falling back to `<unlabeled transaction>`."), this._name = "<unlabeled transaction>");
        const { scope: t, isolationScope: n } = PS(this), s = (t || qe()).getClient() || ye();
        if (this._sampled !== !0) {
            me && q.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled."), s && s.recordDroppedEvent("sample_rate", "transaction");
            return;
        }
        const a = du(this).filter((E)=>E !== this && !K3(E)).map((E)=>Me(E)).filter(BS), o = this._attributes[Sr];
        delete this._attributes[gS], a.forEach((E)=>{
            E.data && delete E.data[gS];
        });
        const l = {
            contexts: {
                trace: p3(this)
            },
            spans: // spans.sort() mutates the array, but `spans` is already a copy so we can safely do this here
            // we do not use spans anymore after this point
            a.length > US ? a.sort((E, p)=>E.start_timestamp - p.start_timestamp).slice(0, US) : a,
            start_timestamp: this._startTime,
            timestamp: this._endTime,
            transaction: this._name,
            type: "transaction",
            sdkProcessingMetadata: {
                capturedSpanScope: t,
                capturedSpanIsolationScope: n,
                ...Pt({
                    dynamicSamplingContext: $i(this)
                })
            },
            _metrics_summary: Zp(this),
            ...o && {
                transaction_info: {
                    source: o
                }
            }
        }, c = xS(this._events);
        return c && Object.keys(c).length && (me && q.log("[Measurements] Adding measurements to transaction event", JSON.stringify(c, void 0, 2)), l.measurements = c), l;
    }
}
function FS(e) {
    return e && typeof e == "number" || e instanceof Date || Array.isArray(e);
}
function BS(e) {
    return !!e.start_timestamp && !!e.timestamp && !!e.span_id && !!e.trace_id;
}
function K3(e) {
    return e instanceof jh && e.isStandaloneSpan();
}
function z3(e) {
    const t = ye();
    if (!t) return;
    const n = e[1];
    if (!n || n.length === 0) {
        t.recordDroppedEvent("before_send", "span");
        return;
    }
    t.sendEnvelope(e);
}
const WI = "__SENTRY_SUPPRESS_TRACING__";
function Wl(e) {
    const t = XI();
    if (t.startInactiveSpan) return t.startInactiveSpan(e);
    const n = q3(e), { forceTransaction: r, parentSpan: s } = e;
    return (e.scope ? (a)=>Hh(e.scope, a) : s !== void 0 ? (a)=>jI(s, a) : (a)=>a())(()=>{
        const a = qe(), o = Q3(a);
        return e.onlyIfParent && !o ? new fo() : J3({
            parentSpan: o,
            spanArguments: n,
            forceTransaction: r,
            scope: a
        });
    });
}
function jI(e, t) {
    const n = XI();
    return n.withActiveSpan ? n.withActiveSpan(e, t) : Hh((r)=>(Nl(r, e || void 0), t(r)));
}
function J3({ parentSpan: e, spanArguments: t, forceTransaction: n, scope: r }) {
    if (!ii()) return new fo();
    const s = Ir();
    let i;
    if (e && !n) i = Z3(e, r, t), wI(e, i);
    else if (e) {
        const a = $i(e), { traceId: o, spanId: l } = e.spanContext(), c = Qi(e);
        i = GS({
            traceId: o,
            parentSpanId: l,
            ...t
        }, r, c), MS(i, a);
    } else {
        const { traceId: a, dsc: o, parentSpanId: l, sampled: c } = {
            ...s.getPropagationContext(),
            ...r.getPropagationContext()
        };
        i = GS({
            traceId: a,
            parentSpanId: l,
            ...t
        }, r, c), o && MS(i, o);
    }
    return N3(i), _3(i, r, s), i;
}
function q3(e) {
    const n = {
        isStandalone: (e.experimental || {}).standalone,
        ...e
    };
    if (e.startTime) {
        const r = {
            ...n
        };
        return r.startTimestamp = wi(e.startTime), delete r.startTime, r;
    }
    return n;
}
function XI() {
    const e = Zi();
    return Eo(e);
}
function GS(e, t, n) {
    const r = ye(), s = r && r.getOptions() || {}, { name: i = "", attributes: a } = e, [o, l] = t.getScopeData().sdkProcessingMetadata[WI] ? [
        !1
    ] : O3(s, {
        name: i,
        parentSampled: n,
        attributes: a,
        transactionContext: {
            name: i,
            parentSampled: n
        }
    }), c = new jh({
        ...e,
        attributes: {
            [Sr]: "custom",
            ...e.attributes
        },
        sampled: o
    });
    return l !== void 0 && c.setAttribute(CI, l), r && r.emit("spanStart", c), c;
}
function Z3(e, t, n) {
    const { spanId: r, traceId: s } = e.spanContext(), i = t.getScopeData().sdkProcessingMetadata[WI] ? !1 : Qi(e), a = i ? new jh({
        ...n,
        parentSpanId: r,
        traceId: s,
        sampled: i
    }) : new fo({
        traceId: s
    });
    wI(e, a);
    const o = ye();
    return o && (o.emit("spanStart", a), n.endTimestamp && o.emit("spanEnd", a)), a;
}
function Q3(e) {
    const t = eE(e);
    if (!t) return;
    const n = ye();
    return (n ? n.getOptions() : {}).parentSpanIsAlwaysRootSpan ? Mt(t) : t;
}
const fu = {
    idleTimeout: 1e3,
    finalTimeout: 3e4,
    childSpanTimeout: 15e3
}, $3 = "heartbeatFailed", eb = "idleTimeout", tb = "finalTimeout", nb = "externalFinish";
function KI(e, t = {}) {
    const n = /* @__PURE__ */ new Map();
    let r = !1, s, i = nb, a = !t.disableAutoFinish;
    const o = [], { idleTimeout: l = fu.idleTimeout, finalTimeout: c = fu.finalTimeout, childSpanTimeout: u = fu.childSpanTimeout, beforeSpanEnd: E } = t, p = ye();
    if (!p || !ii()) return new fo();
    const A = qe(), R = wt(), C = rb(e);
    C.end = new Proxy(C.end, {
        apply (T, N, g) {
            E && E(C);
            const [b, ...S] = g, P = b || kt(), w = wi(P), G = du(C).filter((x)=>x !== C);
            if (!G.length) return I(w), Reflect.apply(T, N, [
                w,
                ...S
            ]);
            const k = G.map((x)=>Me(x).timestamp).filter((x)=>!!x), Y = k.length ? Math.max(...k) : void 0, H = Me(C).start_timestamp, F = Math.min(H ? H + c / 1e3 : 1 / 0, Math.max(H || -1 / 0, Math.min(w, Y || 1 / 0)));
            return I(F), Reflect.apply(T, N, [
                F,
                ...S
            ]);
        }
    });
    function O() {
        s && (clearTimeout(s), s = void 0);
    }
    function d(T) {
        O(), s = setTimeout(()=>{
            !r && n.size === 0 && a && (i = eb, C.end(T));
        }, l);
    }
    function f(T) {
        s = setTimeout(()=>{
            !r && a && (i = $3, C.end(T));
        }, u);
    }
    function _(T) {
        O(), n.set(T, !0);
        const N = kt();
        f(N + u / 1e3);
    }
    function h(T) {
        if (n.has(T) && n.delete(T), n.size === 0) {
            const N = kt();
            d(N + l / 1e3);
        }
    }
    function I(T) {
        r = !0, n.clear(), o.forEach((w)=>w()), Nl(A, R);
        const N = Me(C), { start_timestamp: g } = N;
        if (!g) return;
        (N.data || {})[Qp] || C.setAttribute(Qp, i), q.log(`[Tracing] Idle span "${N.op}" finished`);
        const S = du(C).filter((w)=>w !== C);
        let P = 0;
        S.forEach((w)=>{
            w.isRecording() && (w.setStatus({
                code: Ft,
                message: "cancelled"
            }), w.end(T), me && q.log("[Tracing] Cancelling span since span ended early", JSON.stringify(w, void 0, 2)));
            const G = Me(w), { timestamp: k = 0, start_timestamp: Y = 0 } = G, H = Y <= T, F = (c + l) / 1e3, x = k - Y <= F;
            if (me) {
                const X = JSON.stringify(w, void 0, 2);
                H ? x || q.log("[Tracing] Discarding span since it finished after idle span final timeout", X) : q.log("[Tracing] Discarding span since it happened after idle span was finished", X);
            }
            (!x || !H) && (R3(C, w), P++);
        }), P > 0 && C.setAttribute("sentry.idle_span_discarded_spans", P);
    }
    return o.push(p.on("spanStart", (T)=>{
        if (r || T === C || Me(T).timestamp) return;
        du(C).includes(T) && _(T.spanContext().spanId);
    })), o.push(p.on("spanEnd", (T)=>{
        r || h(T.spanContext().spanId);
    })), o.push(p.on("idleSpanEnableAutoFinish", (T)=>{
        T === C && (a = !0, d(), n.size && f());
    })), t.disableAutoFinish || d(), setTimeout(()=>{
        r || (C.setStatus({
            code: Ft,
            message: "deadline_exceeded"
        }), i = tb, C.end());
    }, c), C;
}
function rb(e) {
    const t = Wl(e);
    return Nl(qe(), t), me && q.log("[Tracing] Started span is an idle span"), t;
}
function nT(e, t, n, r = 0) {
    return new rr((s, i)=>{
        const a = e[r];
        if (t === null || typeof a != "function") s(t);
        else {
            const o = a({
                ...t
            }, n);
            me && a.id && o === null && q.log(`Event processor "${a.id}" dropped event`), jE(o) ? o.then((l)=>nT(e, l, n, r + 1).then(s)).then(null, i) : nT(e, o, n, r + 1).then(s).then(null, i);
        }
    });
}
let Pc, kS, Mc;
function zI(e) {
    const t = Le._sentryDebugIds;
    if (!t) return {};
    const n = Object.keys(t);
    return Mc && n.length === kS || (kS = n.length, Mc = n.reduce((r, s)=>{
        Pc || (Pc = {});
        const i = Pc[s];
        if (i) r[i[0]] = i[1];
        else {
            const a = e(s);
            for(let o = a.length - 1; o >= 0; o--){
                const l = a[o], c = l && l.filename, u = t[s];
                if (c && u) {
                    r[c] = u, Pc[s] = [
                        c,
                        u
                    ];
                    break;
                }
            }
        }
        return r;
    }, {})), Mc;
}
function sb(e, t) {
    const n = zI(e);
    if (!n) return [];
    const r = [];
    for (const s of t)s && n[s] && r.push({
        type: "sourcemap",
        code_file: s,
        debug_id: n[s]
    });
    return r;
}
function ib(e, t) {
    const { fingerprint: n, span: r, breadcrumbs: s, sdkProcessingMetadata: i } = t;
    ab(e, t), r && cb(e, r), ub(e, n), ob(e, s), lb(e, i);
}
function HS(e, t) {
    const { extra: n, tags: r, user: s, contexts: i, level: a, sdkProcessingMetadata: o, breadcrumbs: l, fingerprint: c, eventProcessors: u, attachments: E, propagationContext: p, transactionName: A, span: R } = t;
    Dc(e, "extra", n), Dc(e, "tags", r), Dc(e, "user", s), Dc(e, "contexts", i), e.sdkProcessingMetadata = XE(e.sdkProcessingMetadata, o, 2), a && (e.level = a), A && (e.transactionName = A), R && (e.span = R), l.length && (e.breadcrumbs = [
        ...e.breadcrumbs,
        ...l
    ]), c.length && (e.fingerprint = [
        ...e.fingerprint,
        ...c
    ]), u.length && (e.eventProcessors = [
        ...e.eventProcessors,
        ...u
    ]), E.length && (e.attachments = [
        ...e.attachments,
        ...E
    ]), e.propagationContext = {
        ...e.propagationContext,
        ...p
    };
}
function Dc(e, t, n) {
    e[t] = XE(e[t], n, 1);
}
function ab(e, t) {
    const { extra: n, tags: r, user: s, contexts: i, level: a, transactionName: o } = t, l = Pt(n);
    l && Object.keys(l).length && (e.extra = {
        ...l,
        ...e.extra
    });
    const c = Pt(r);
    c && Object.keys(c).length && (e.tags = {
        ...c,
        ...e.tags
    });
    const u = Pt(s);
    u && Object.keys(u).length && (e.user = {
        ...u,
        ...e.user
    });
    const E = Pt(i);
    E && Object.keys(E).length && (e.contexts = {
        ...E,
        ...e.contexts
    }), a && (e.level = a), o && e.type !== "transaction" && (e.transaction = o);
}
function ob(e, t) {
    const n = [
        ...e.breadcrumbs || [],
        ...t
    ];
    e.breadcrumbs = n.length ? n : void 0;
}
function lb(e, t) {
    e.sdkProcessingMetadata = {
        ...e.sdkProcessingMetadata,
        ...t
    };
}
function cb(e, t) {
    e.contexts = {
        trace: T3(t),
        ...e.contexts
    }, e.sdkProcessingMetadata = {
        dynamicSamplingContext: $i(t),
        ...e.sdkProcessingMetadata
    };
    const n = Mt(t), r = Me(n).description;
    r && !e.transaction && e.type === "transaction" && (e.transaction = r);
}
function ub(e, t) {
    e.fingerprint = e.fingerprint ? Array.isArray(e.fingerprint) ? e.fingerprint : [
        e.fingerprint
    ] : [], t && (e.fingerprint = e.fingerprint.concat(t)), e.fingerprint && !e.fingerprint.length && delete e.fingerprint;
}
function JI(e, t, n, r, s, i) {
    const { normalizeDepth: a = 3, normalizeMaxBreadth: o = 1e3 } = e, l = {
        ...t,
        event_id: t.event_id || n.event_id || Sn(),
        timestamp: t.timestamp || Yl()
    }, c = n.integrations || e.integrations.map((O)=>O.name);
    Eb(l, e), pb(l, c), s && s.emit("applyFrameMetadata", t), t.type === void 0 && db(l, e.stackParser);
    const u = hb(r, n.captureContext);
    n.mechanism && Ka(l, n.mechanism);
    const E = s ? s.getEventProcessors() : [], p = t3().getScopeData();
    if (i) {
        const O = i.getScopeData();
        HS(p, O);
    }
    if (u) {
        const O = u.getScopeData();
        HS(p, O);
    }
    const A = [
        ...n.attachments || [],
        ...p.attachments
    ];
    A.length && (n.attachments = A), ib(l, p);
    const R = [
        ...E,
        // Run scope event processors _after_ all other processors
        ...p.eventProcessors
    ];
    return nT(R, l, n).then((O)=>(O && fb(O), typeof a == "number" && a > 0 ? Tb(O, a, o) : O));
}
function Eb(e, t) {
    const { environment: n, release: r, dist: s, maxValueLength: i = 250 } = t;
    e.environment = e.environment || n || JE, !e.release && r && (e.release = r), !e.dist && s && (e.dist = s), e.message && (e.message = wa(e.message, i));
    const a = e.exception && e.exception.values && e.exception.values[0];
    a && a.value && (a.value = wa(a.value, i));
    const o = e.request;
    o && o.url && (o.url = wa(o.url, i));
}
function db(e, t) {
    const n = zI(t);
    try {
        e.exception.values.forEach((r)=>{
            r.stacktrace.frames.forEach((s)=>{
                n && s.filename && (s.debug_id = n[s.filename]);
            });
        });
    } catch  {}
}
function fb(e) {
    const t = {};
    try {
        e.exception.values.forEach((r)=>{
            r.stacktrace.frames.forEach((s)=>{
                s.debug_id && (s.abs_path ? t[s.abs_path] = s.debug_id : s.filename && (t[s.filename] = s.debug_id), delete s.debug_id);
            });
        });
    } catch  {}
    if (Object.keys(t).length === 0) return;
    e.debug_meta = e.debug_meta || {}, e.debug_meta.images = e.debug_meta.images || [];
    const n = e.debug_meta.images;
    Object.entries(t).forEach(([r, s])=>{
        n.push({
            type: "sourcemap",
            code_file: r,
            debug_id: s
        });
    });
}
function pb(e, t) {
    t.length > 0 && (e.sdk = e.sdk || {}, e.sdk.integrations = [
        ...e.sdk.integrations || [],
        ...t
    ]);
}
function Tb(e, t, n) {
    if (!e) return null;
    const r = {
        ...e,
        ...e.breadcrumbs && {
            breadcrumbs: e.breadcrumbs.map((s)=>({
                    ...s,
                    ...s.data && {
                        data: Tr(s.data, t, n)
                    }
                }))
        },
        ...e.user && {
            user: Tr(e.user, t, n)
        },
        ...e.contexts && {
            contexts: Tr(e.contexts, t, n)
        },
        ...e.extra && {
            extra: Tr(e.extra, t, n)
        }
    };
    return e.contexts && e.contexts.trace && r.contexts && (r.contexts.trace = e.contexts.trace, e.contexts.trace.data && (r.contexts.trace.data = Tr(e.contexts.trace.data, t, n))), e.spans && (r.spans = e.spans.map((s)=>({
            ...s,
            ...s.data && {
                data: Tr(s.data, t, n)
            }
        }))), e.contexts && e.contexts.flags && r.contexts && (r.contexts.flags = Tr(e.contexts.flags, 3, n)), r;
}
function hb(e, t) {
    if (!t) return e;
    const n = e ? e.clone() : new Vi();
    return n.update(t), n;
}
function qI(e, t) {
    return qe().captureException(e, void 0);
}
function ZI(e, t) {
    return qe().captureEvent(e, t);
}
function QI(e, t) {
    Ir().setContext(e, t);
}
function Ab() {
    const e = ye();
    return !!e && e.getOptions().enabled !== !1 && !!e.getTransport();
}
function Sb(e) {
    Ir().addEventProcessor(e);
}
function YS(e) {
    const t = ye(), n = Ir(), r = qe(), { release: s, environment: i = JE } = t && t.getOptions() || {}, { userAgent: a } = Le.navigator || {}, o = j5({
        release: s,
        environment: i,
        user: r.getUser() || n.getUser(),
        ...a && {
            userAgent: a
        },
        ...e
    }), l = n.getSession();
    return l && l.status === "ok" && za(l, {
        status: "exited"
    }), $I(), n.setSession(o), r.setSession(o), o;
}
function $I() {
    const e = Ir(), t = qe(), n = t.getSession() || e.getSession();
    n && X5(n), eO(), e.setSession(), t.setSession();
}
function eO() {
    const e = Ir(), t = qe(), n = ye(), r = t.getSession() || e.getSession();
    r && n && n.captureSession(r);
}
function VS(e = !1) {
    if (e) {
        $I();
        return;
    }
    eO();
}
const Rb = "7";
function mb(e) {
    const t = e.protocol ? `${e.protocol}:` : "", n = e.port ? `:${e.port}` : "";
    return `${t}//${e.host}${n}${e.path ? `/${e.path}` : ""}/api/`;
}
function _b(e) {
    return `${mb(e)}${e.projectId}/envelope/`;
}
function Nb(e, t) {
    const n = {
        sentry_version: Rb
    };
    return e.publicKey && (n.sentry_key = e.publicKey), t && (n.sentry_client = `${t.name}/${t.version}`), new URLSearchParams(n).toString();
}
function Ib(e, t, n) {
    return t || `${_b(e)}?${Nb(e, n)}`;
}
const WS = [];
function Ob(e) {
    const t = {};
    return e.forEach((n)=>{
        const { name: r } = n, s = t[r];
        s && !s.isDefaultInstance && n.isDefaultInstance || (t[r] = n);
    }), Object.values(t);
}
function Cb(e) {
    const t = e.defaultIntegrations || [], n = e.integrations;
    t.forEach((a)=>{
        a.isDefaultInstance = !0;
    });
    let r;
    if (Array.isArray(n)) r = [
        ...t,
        ...n
    ];
    else if (typeof n == "function") {
        const a = n(t);
        r = Array.isArray(a) ? a : [
            a
        ];
    } else r = t;
    const s = Ob(r), i = s.findIndex((a)=>a.name === "Debug");
    if (i > -1) {
        const [a] = s.splice(i, 1);
        s.push(a);
    }
    return s;
}
function gb(e, t) {
    const n = {};
    return t.forEach((r)=>{
        r && tO(e, r, n);
    }), n;
}
function jS(e, t) {
    for (const n of t)n && n.afterAllSetup && n.afterAllSetup(e);
}
function tO(e, t, n) {
    if (n[t.name]) {
        me && q.log(`Integration skipped because it was already installed: ${t.name}`);
        return;
    }
    if (n[t.name] = t, WS.indexOf(t.name) === -1 && typeof t.setupOnce == "function" && (t.setupOnce(), WS.push(t.name)), t.setup && typeof t.setup == "function" && t.setup(e), typeof t.preprocessEvent == "function") {
        const r = t.preprocessEvent.bind(t);
        e.on("preprocessEvent", (s, i)=>r(s, i, e));
    }
    if (typeof t.processEvent == "function") {
        const r = t.processEvent.bind(t), s = Object.assign((i, a)=>r(i, a, e), {
            id: t.name
        });
        e.addEventProcessor(s);
    }
    me && q.log(`Integration installed: ${t.name}`);
}
function Lb(e, t, n) {
    const r = [
        {
            type: "client_report"
        },
        {
            timestamp: Yl(),
            discarded_events: e
        }
    ];
    return ea(t ? {
        dsn: t
    } : {}, [
        r
    ]);
}
class wr extends Error {
    /** Display name of this error instance. */ constructor(t, n = "warn"){
        super(t), this.message = t, this.name = new.target.prototype.constructor.name, Object.setPrototypeOf(this, new.target.prototype), this.logLevel = n;
    }
}
const XS = "Not capturing exception because it's already been captured.";
class yb {
    /** Options passed to the SDK. */ /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */ /** Array of set up integrations. */ /** Number of calls being processed */ /** Holds flushable  */ // eslint-disable-next-line @typescript-eslint/ban-types
    /**
   * Initializes this client instance.
   *
   * @param options Options for the client.
   */ constructor(t){
        if (this._options = t, this._integrations = {}, this._numProcessing = 0, this._outcomes = {}, this._hooks = {}, this._eventProcessors = [], t.dsn ? this._dsn = v3(t.dsn) : me && q.warn("No DSN provided, client will not send events."), this._dsn) {
            const s = Ib(this._dsn, t.tunnel, t._metadata ? t._metadata.sdk : void 0);
            this._transport = t.transport({
                tunnel: this._options.tunnel,
                recordDroppedEvent: this.recordDroppedEvent.bind(this),
                ...t.transportOptions,
                url: s
            });
        }
        const r = [
            "enableTracing",
            "tracesSampleRate",
            "tracesSampler"
        ].find((s)=>s in t && t[s] == null);
        r && fi(()=>{
            console.warn(`[Sentry] Deprecation warning: \`${r}\` is set to undefined, which leads to tracing being enabled. In v9, a value of \`undefined\` will result in tracing being disabled.`);
        });
    }
    /**
   * @inheritDoc
   */ captureException(t, n, r) {
        const s = Sn();
        if (OS(t)) return me && q.log(XS), s;
        const i = {
            event_id: s,
            ...n
        };
        return this._process(this.eventFromException(t, i).then((a)=>this._captureEvent(a, i, r))), i.event_id;
    }
    /**
   * @inheritDoc
   */ captureMessage(t, n, r, s) {
        const i = {
            event_id: Sn(),
            ...r
        }, a = Fh(t) ? t : String(t), o = Bh(t) ? this.eventFromMessage(a, n, i) : this.eventFromException(t, i);
        return this._process(o.then((l)=>this._captureEvent(l, i, s))), i.event_id;
    }
    /**
   * @inheritDoc
   */ captureEvent(t, n, r) {
        const s = Sn();
        if (n && n.originalException && OS(n.originalException)) return me && q.log(XS), s;
        const i = {
            event_id: s,
            ...n
        }, o = (t.sdkProcessingMetadata || {}).capturedSpanScope;
        return this._process(this._captureEvent(t, i, o || r)), i.event_id;
    }
    /**
   * @inheritDoc
   */ captureSession(t) {
        typeof t.release != "string" ? me && q.warn("Discarded session because of missing or non-string release") : (this.sendSession(t), za(t, {
            init: !1
        }));
    }
    /**
   * @inheritDoc
   */ getDsn() {
        return this._dsn;
    }
    /**
   * @inheritDoc
   */ getOptions() {
        return this._options;
    }
    /**
   * @see SdkMetadata
   *
   * @return The metadata of the SDK
   */ getSdkMetadata() {
        return this._options._metadata;
    }
    /**
   * @inheritDoc
   */ getTransport() {
        return this._transport;
    }
    /**
   * @inheritDoc
   */ flush(t) {
        const n = this._transport;
        return n ? (this.emit("flush"), this._isClientDoneProcessing(t).then((r)=>n.flush(t).then((s)=>r && s))) : fs(!0);
    }
    /**
   * @inheritDoc
   */ close(t) {
        return this.flush(t).then((n)=>(this.getOptions().enabled = !1, this.emit("close"), n));
    }
    /** Get all installed event processors. */ getEventProcessors() {
        return this._eventProcessors;
    }
    /** @inheritDoc */ addEventProcessor(t) {
        this._eventProcessors.push(t);
    }
    /** @inheritdoc */ init() {
        (this._isEnabled() || // Force integrations to be setup even if no DSN was set when we have
        // Spotlight enabled. This is particularly important for browser as we
        // don't support the `spotlight` option there and rely on the users
        // adding the `spotlightBrowserIntegration()` to their integrations which
        // wouldn't get initialized with the check below when there's no DSN set.
        this._options.integrations.some(({ name: t })=>t.startsWith("Spotlight"))) && this._setupIntegrations();
    }
    /**
   * Gets an installed integration by its name.
   *
   * @returns The installed integration or `undefined` if no integration with that `name` was installed.
   */ getIntegrationByName(t) {
        return this._integrations[t];
    }
    /**
   * @inheritDoc
   */ addIntegration(t) {
        const n = this._integrations[t.name];
        tO(this, t, this._integrations), n || jS(this, [
            t
        ]);
    }
    /**
   * @inheritDoc
   */ sendEvent(t, n = {}) {
        this.emit("beforeSendEvent", t, n);
        let r = W3(t, this._dsn, this._options._metadata, this._options.tunnel);
        for (const i of n.attachments || [])r = x3(r, k3(i));
        const s = this.sendEnvelope(r);
        s && s.then((i)=>this.emit("afterSendEvent", t, i), null);
    }
    /**
   * @inheritDoc
   */ sendSession(t) {
        const n = V3(t, this._dsn, this._options._metadata, this._options.tunnel);
        this.sendEnvelope(n);
    }
    /**
   * @inheritDoc
   */ recordDroppedEvent(t, n, r) {
        if (this._options.sendClientReports) {
            const s = typeof r == "number" ? r : 1, i = `${t}:${n}`;
            me && q.log(`Recording outcome: "${i}"${s > 1 ? ` (${s} times)` : ""}`), this._outcomes[i] = (this._outcomes[i] || 0) + s;
        }
    }
    // Keep on() & emit() signatures in sync with types' client.ts interface
    /* eslint-disable @typescript-eslint/unified-signatures */ /** @inheritdoc */ /** @inheritdoc */ on(t, n) {
        const r = this._hooks[t] = this._hooks[t] || [];
        return r.push(n), ()=>{
            const s = r.indexOf(n);
            s > -1 && r.splice(s, 1);
        };
    }
    /** @inheritdoc */ /** @inheritdoc */ emit(t, ...n) {
        const r = this._hooks[t];
        r && r.forEach((s)=>s(...n));
    }
    /**
   * @inheritdoc
   */ sendEnvelope(t) {
        return this.emit("beforeEnvelope", t), this._isEnabled() && this._transport ? this._transport.send(t).then(null, (n)=>(me && q.error("Error while sending envelope:", n), n)) : (me && q.error("Transport disabled"), fs({}));
    }
    /* eslint-enable @typescript-eslint/unified-signatures */ /** Setup integrations for this client. */ _setupIntegrations() {
        const { integrations: t } = this._options;
        this._integrations = gb(this, t), jS(this, t);
    }
    /** Updates existing session based on the provided event */ _updateSessionFromEvent(t, n) {
        let r = n.level === "fatal", s = !1;
        const i = n.exception && n.exception.values;
        if (i) {
            s = !0;
            for (const l of i){
                const c = l.mechanism;
                if (c && c.handled === !1) {
                    r = !0;
                    break;
                }
            }
        }
        const a = t.status === "ok";
        (a && t.errors === 0 || a && r) && (za(t, {
            ...r && {
                status: "crashed"
            },
            errors: t.errors || Number(s || r)
        }), this.captureSession(t));
    }
    /**
   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying
   * "no" (resolving to `false`) in order to give the client a chance to potentially finish first.
   *
   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not
   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to
   * `true`.
   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and
   * `false` otherwise
   */ _isClientDoneProcessing(t) {
        return new rr((n)=>{
            let r = 0;
            const s = 1, i = setInterval(()=>{
                this._numProcessing == 0 ? (clearInterval(i), n(!0)) : (r += s, t && r >= t && (clearInterval(i), n(!1)));
            }, s);
        });
    }
    /** Determines whether this SDK is enabled and a transport is present. */ _isEnabled() {
        return this.getOptions().enabled !== !1 && this._transport !== void 0;
    }
    /**
   * Adds common information to events.
   *
   * The information includes release and environment from `options`,
   * breadcrumbs and context (extra, tags and user) from the scope.
   *
   * Information that is already present in the event is never overwritten. For
   * nested objects, such as the context, keys are merged.
   *
   * @param event The original event.
   * @param hint May contain additional information about the original exception.
   * @param currentScope A scope containing event metadata.
   * @returns A new event with more information.
   */ _prepareEvent(t, n, r = qe(), s = Ir()) {
        const i = this.getOptions(), a = Object.keys(this._integrations);
        return !n.integrations && a.length > 0 && (n.integrations = a), this.emit("preprocessEvent", t, n), t.type || s.setLastEventId(t.event_id || n.event_id), JI(i, t, n, r, this, s).then((o)=>{
            if (o === null) return o;
            o.contexts = {
                trace: n3(r),
                ...o.contexts
            };
            const l = kI(this, r);
            return o.sdkProcessingMetadata = {
                dynamicSamplingContext: l,
                ...o.sdkProcessingMetadata
            }, o;
        });
    }
    /**
   * Processes the event and logs an error in case of rejection
   * @param event
   * @param hint
   * @param scope
   */ _captureEvent(t, n = {}, r) {
        return this._processEvent(t, n, r).then((s)=>s.event_id, (s)=>{
            if (me) {
                const i = s;
                i.logLevel === "log" ? q.log(i.message) : q.warn(i);
            }
        });
    }
    /**
   * Processes an event (either error or message) and sends it to Sentry.
   *
   * This also adds breadcrumbs and context information to the event. However,
   * platform specific meta data (such as the User's IP address) must be added
   * by the SDK implementor.
   *
   *
   * @param event The event to send to Sentry.
   * @param hint May contain additional information about the original exception.
   * @param currentScope A scope containing event metadata.
   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.
   */ _processEvent(t, n, r) {
        const s = this.getOptions(), { sampleRate: i } = s, a = rO(t), o = nO(t), l = t.type || "error", c = `before send for type \`${l}\``, u = typeof i > "u" ? void 0 : tE(i);
        if (o && typeof u == "number" && Math.random() > u) return this.recordDroppedEvent("sample_rate", "error", t), $u(new wr(`Discarding event because it's not included in the random sample (sampling rate = ${i})`, "log"));
        const E = l === "replay_event" ? "replay" : l, A = (t.sdkProcessingMetadata || {}).capturedSpanIsolationScope;
        return this._prepareEvent(t, n, r, A).then((R)=>{
            if (R === null) throw this.recordDroppedEvent("event_processor", E, t), new wr("An event processor returned `null`, will not send event.", "log");
            if (n.data && n.data.__sentry__ === !0) return R;
            const O = bb(this, s, R, n);
            return vb(O, c);
        }).then((R)=>{
            if (R === null) {
                if (this.recordDroppedEvent("before_send", E, t), a) {
                    const f = 1 + (t.spans || []).length;
                    this.recordDroppedEvent("before_send", "span", f);
                }
                throw new wr(`${c} returned \`null\`, will not send event.`, "log");
            }
            const C = r && r.getSession();
            if (!a && C && this._updateSessionFromEvent(C, R), a) {
                const d = R.sdkProcessingMetadata && R.sdkProcessingMetadata.spanCountBeforeProcessing || 0, f = R.spans ? R.spans.length : 0, _ = d - f;
                _ > 0 && this.recordDroppedEvent("before_send", "span", _);
            }
            const O = R.transaction_info;
            if (a && O && R.transaction !== t.transaction) {
                const d = "custom";
                R.transaction_info = {
                    ...O,
                    source: d
                };
            }
            return this.sendEvent(R, n), R;
        }).then(null, (R)=>{
            throw R instanceof wr ? R : (this.captureException(R, {
                data: {
                    __sentry__: !0
                },
                originalException: R
            }), new wr(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${R}`));
        });
    }
    /**
   * Occupies the client with processing and event
   */ _process(t) {
        this._numProcessing++, t.then((n)=>(this._numProcessing--, n), (n)=>(this._numProcessing--, n));
    }
    /**
   * Clears outcomes on this client and returns them.
   */ _clearOutcomes() {
        const t = this._outcomes;
        return this._outcomes = {}, Object.entries(t).map(([n, r])=>{
            const [s, i] = n.split(":");
            return {
                reason: s,
                category: i,
                quantity: r
            };
        });
    }
    /**
   * Sends client reports as an envelope.
   */ _flushOutcomes() {
        me && q.log("Flushing outcomes...");
        const t = this._clearOutcomes();
        if (t.length === 0) {
            me && q.log("No outcomes to send");
            return;
        }
        if (!this._dsn) {
            me && q.log("No dsn provided, will not send outcomes");
            return;
        }
        me && q.log("Sending outcomes:", t);
        const n = Lb(t, this._options.tunnel && Vl(this._dsn));
        this.sendEnvelope(n);
    }
}
function vb(e, t) {
    const n = `${t} must return \`null\` or a valid event.`;
    if (jE(e)) return e.then((r)=>{
        if (!Xa(r) && r !== null) throw new wr(n);
        return r;
    }, (r)=>{
        throw new wr(`${t} rejected with ${r}`);
    });
    if (!Xa(e) && e !== null) throw new wr(n);
    return e;
}
function bb(e, t, n, r) {
    const { beforeSend: s, beforeSendTransaction: i, beforeSendSpan: a } = t;
    if (nO(n) && s) return s(n, r);
    if (rO(n)) {
        if (n.spans && a) {
            const o = [];
            for (const l of n.spans){
                const c = a(l);
                c ? o.push(c) : (xI(), e.recordDroppedEvent("before_send", "span"));
            }
            n.spans = o;
        }
        if (i) {
            if (n.spans) {
                const o = n.spans.length;
                n.sdkProcessingMetadata = {
                    ...n.sdkProcessingMetadata,
                    spanCountBeforeProcessing: o
                };
            }
            return i(n, r);
        }
    }
    return n;
}
function nO(e) {
    return e.type === void 0;
}
function rO(e) {
    return e.type === "transaction";
}
function Pb(e, t) {
    t.debug === !0 && (me ? q.enable() : fi(()=>{
        console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.");
    })), qe().update(t.initialScope);
    const r = new e(t);
    return Mb(r), r.init(), r;
}
function Mb(e) {
    qe().setClient(e);
}
function Db(e) {
    const t = [];
    function n() {
        return e === void 0 || t.length < e;
    }
    function r(a) {
        return t.splice(t.indexOf(a), 1)[0] || Promise.resolve(void 0);
    }
    function s(a) {
        if (!n()) return $u(new wr("Not adding Promise because buffer limit was reached."));
        const o = a();
        return t.indexOf(o) === -1 && t.push(o), o.then(()=>r(o)).then(null, ()=>r(o).then(null, ()=>{})), o;
    }
    function i(a) {
        return new rr((o, l)=>{
            let c = t.length;
            if (!c) return o(!0);
            const u = setTimeout(()=>{
                a && a > 0 && o(!1);
            }, a);
            t.forEach((E)=>{
                fs(E).then(()=>{
                    --c || (clearTimeout(u), o(!0));
                }, l);
            });
        });
    }
    return {
        $: t,
        add: s,
        drain: i
    };
}
const wb = 60 * 1e3;
function sO(e, t = Date.now()) {
    const n = parseInt(`${e}`, 10);
    if (!isNaN(n)) return n * 1e3;
    const r = Date.parse(`${e}`);
    return isNaN(r) ? wb : r - t;
}
function xb(e, t) {
    return e[t] || e.all || 0;
}
function iO(e, t, n = Date.now()) {
    return xb(e, t) > n;
}
function aO(e, { statusCode: t, headers: n }, r = Date.now()) {
    const s = {
        ...e
    }, i = n && n["x-sentry-rate-limits"], a = n && n["retry-after"];
    if (i) for (const o of i.trim().split(",")){
        const [l, c, , , u] = o.split(":", 5), E = parseInt(l, 10), p = (isNaN(E) ? 60 : E) * 1e3;
        if (!c) s.all = r + p;
        else for (const A of c.split(";"))A === "metric_bucket" ? (!u || u.split(";").includes("custom")) && (s[A] = r + p) : s[A] = r + p;
    }
    else a ? s.all = r + sO(a, r) : t === 429 && (s.all = r + 60 * 1e3);
    return s;
}
const Ub = 64;
function Fb(e, t, n = Db(e.bufferSize || Ub)) {
    let r = {};
    const s = (a)=>n.drain(a);
    function i(a) {
        const o = [];
        if (nE(a, (E, p)=>{
            const A = wS(p);
            if (iO(r, A)) {
                const R = KS(E, p);
                e.recordDroppedEvent("ratelimit_backoff", A, R);
            } else o.push(E);
        }), o.length === 0) return fs({});
        const l = ea(a[0], o), c = (E)=>{
            nE(l, (p, A)=>{
                const R = KS(p, A);
                e.recordDroppedEvent(E, wS(A), R);
            });
        }, u = ()=>t({
                body: Il(l)
            }).then((E)=>(E.statusCode !== void 0 && (E.statusCode < 200 || E.statusCode >= 300) && me && q.warn(`Sentry responded with status code ${E.statusCode} to sent event.`), r = aO(r, E), E), (E)=>{
                throw c("network_error"), E;
            });
        return n.add(u).then((E)=>E, (E)=>{
            if (E instanceof wr) return me && q.error("Skipped sending event because buffer is full."), c("queue_overflow"), fs({});
            throw E;
        });
    }
    return {
        send: i,
        flush: s
    };
}
function KS(e, t) {
    if (!(t !== "event" && t !== "transaction")) return Array.isArray(e) ? e[1] : void 0;
}
const Ef = 100, df = 5e3, Bb = 36e5;
function Gb(e) {
    function t(...n) {
        me && q.info("[Offline]:", ...n);
    }
    return (n)=>{
        const r = e(n);
        if (!n.createStore) throw new Error("No `createStore` function was provided");
        const s = n.createStore(n);
        let i = df, a;
        function o(E, p, A) {
            return DS(E, [
                "client_report"
            ]) ? !1 : n.shouldStore ? n.shouldStore(E, p, A) : !0;
        }
        function l(E) {
            a && clearTimeout(a), a = setTimeout(async ()=>{
                a = void 0;
                const p = await s.shift();
                p && (t("Attempting to send previously queued event"), p[0].sent_at = /* @__PURE__ */ new Date().toISOString(), u(p, !0).catch((A)=>{
                    t("Failed to retry sending", A);
                }));
            }, E), typeof a != "number" && a.unref && a.unref();
        }
        function c() {
            a || (l(i), i = Math.min(i * 2, Bb));
        }
        async function u(E, p = !1) {
            if (!p && DS(E, [
                "replay_event",
                "replay_recording"
            ])) return await s.push(E), l(Ef), {};
            try {
                const A = await r.send(E);
                let R = Ef;
                if (A) {
                    if (A.headers && A.headers["retry-after"]) R = sO(A.headers["retry-after"]);
                    else if (A.headers && A.headers["x-sentry-rate-limits"]) R = 6e4;
                    else if ((A.statusCode || 0) >= 400) return A;
                }
                return l(R), i = df, A;
            } catch (A) {
                if (await o(E, A, i)) return p ? await s.unshift(E) : await s.push(E), c(), t("Error sending. Event queued.", A), {};
                throw A;
            }
        }
        return n.flushAtStartup && c(), {
            send: u,
            flush: (E)=>(E === void 0 && (i = df, l(Ef)), r.flush(E))
        };
    };
}
function kb(e, t) {
    const n = t && t.getDsn(), r = t && t.getOptions().tunnel;
    return Yb(e, n) || Hb(e, r);
}
function Hb(e, t) {
    return t ? zS(e) === zS(t) : !1;
}
function Yb(e, t) {
    return t ? e.includes(t.host) : !1;
}
function zS(e) {
    return e[e.length - 1] === "/" ? e.slice(0, -1) : e;
}
function oO(e, t, n = [
    t
], r = "npm") {
    const s = e._metadata || {};
    s.sdk || (s.sdk = {
        name: `sentry.javascript.${t}`,
        packages: n.map((i)=>({
                name: `${r}:@sentry/${i}`,
                version: Di
            })),
        version: Di
    }), e._metadata = s;
}
function lO(e = {}) {
    const t = ye();
    if (!Ab() || !t) return {};
    const n = Zi(), r = Eo(n);
    if (r.getTraceData) return r.getTraceData(e);
    const s = qe(), i = e.span || wt(), a = i ? h3(i) : Vb(s), o = i ? $i(i) : kI(t, s), l = c3(o);
    return vI.test(a) ? {
        "sentry-trace": a,
        baggage: l
    } : (q.warn("Invalid sentry-trace data. Cannot generate trace data"), {});
}
function Vb(e) {
    const { traceId: t, sampled: n, spanId: r } = e.getPropagationContext();
    return bI(t, r, n);
}
const Wb = 100;
function ai(e, t) {
    const n = ye(), r = Ir();
    if (!n) return;
    const { beforeBreadcrumb: s = null, maxBreadcrumbs: i = Wb } = n.getOptions();
    if (i <= 0) return;
    const o = {
        timestamp: Yl(),
        ...e
    }, l = s ? fi(()=>s(o, t)) : o;
    l !== null && (n.emit && n.emit("beforeAddBreadcrumb", l, t), r.addBreadcrumb(l, i));
}
let JS;
const jb = "FunctionToString", qS = /* @__PURE__ */ new WeakMap(), Xb = ()=>({
        name: jb,
        setupOnce () {
            JS = Function.prototype.toString;
            try {
                Function.prototype.toString = function(...e) {
                    const t = Gh(this), n = qS.has(ye()) && t !== void 0 ? t : this;
                    return JS.apply(n, e);
                };
            } catch  {}
        },
        setup (e) {
            qS.set(e, !0);
        }
    }), Kb = Xb, zb = [
    /^Script error\.?$/,
    /^Javascript error: Script error\.? on line 0$/,
    /^ResizeObserver loop completed with undelivered notifications.$/,
    // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.
    /^Cannot redefine property: googletag$/,
    // This is thrown when google tag manager is used in combination with an ad blocker
    "undefined is not an object (evaluating 'a.L')",
    // Random error that happens but not actionable or noticeable to end-users.
    `can't redefine non-configurable property "solana"`,
    // Probably a browser extension or custom browser (Brave) throwing this error
    "vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)",
    // Error thrown by GTM, seemingly not affecting end-users
    "Can't find variable: _AutofillCallbackHandler",
    // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/
    /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\d+, MethodName:simulateEvent, ParamCount:\d+$/
], Jb = "InboundFilters", qb = (e = {})=>({
        name: Jb,
        processEvent (t, n, r) {
            const s = r.getOptions(), i = Qb(e, s);
            return $b(t, i) ? null : t;
        }
    }), Zb = qb;
function Qb(e = {}, t = {}) {
    return {
        allowUrls: [
            ...e.allowUrls || [],
            ...t.allowUrls || []
        ],
        denyUrls: [
            ...e.denyUrls || [],
            ...t.denyUrls || []
        ],
        ignoreErrors: [
            ...e.ignoreErrors || [],
            ...t.ignoreErrors || [],
            ...e.disableErrorDefaults ? [] : zb
        ],
        ignoreTransactions: [
            ...e.ignoreTransactions || [],
            ...t.ignoreTransactions || []
        ],
        ignoreInternal: e.ignoreInternal !== void 0 ? e.ignoreInternal : !0
    };
}
function $b(e, t) {
    return t.ignoreInternal && iP(e) ? (me && q.warn(`Event dropped due to being internal Sentry Error.
Event: ${ys(e)}`), !0) : eP(e, t.ignoreErrors) ? (me && q.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${ys(e)}`), !0) : oP(e) ? (me && q.warn(`Event dropped due to not having an error message, error type or stacktrace.
Event: ${ys(e)}`), !0) : tP(e, t.ignoreTransactions) ? (me && q.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${ys(e)}`), !0) : nP(e, t.denyUrls) ? (me && q.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${ys(e)}.
Url: ${sE(e)}`), !0) : rP(e, t.allowUrls) ? !1 : (me && q.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${ys(e)}.
Url: ${sE(e)}`), !0);
}
function eP(e, t) {
    return e.type || !t || !t.length ? !1 : sP(e).some((n)=>zs(n, t));
}
function tP(e, t) {
    if (e.type !== "transaction" || !t || !t.length) return !1;
    const n = e.transaction;
    return n ? zs(n, t) : !1;
}
function nP(e, t) {
    if (!t || !t.length) return !1;
    const n = sE(e);
    return n ? zs(n, t) : !1;
}
function rP(e, t) {
    if (!t || !t.length) return !0;
    const n = sE(e);
    return n ? zs(n, t) : !0;
}
function sP(e) {
    const t = [];
    e.message && t.push(e.message);
    let n;
    try {
        n = e.exception.values[e.exception.values.length - 1];
    } catch  {}
    return n && n.value && (t.push(n.value), n.type && t.push(`${n.type}: ${n.value}`)), t;
}
function iP(e) {
    try {
        return e.exception.values[0].type === "SentryError";
    } catch  {}
    return !1;
}
function aP(e = []) {
    for(let t = e.length - 1; t >= 0; t--){
        const n = e[t];
        if (n && n.filename !== "<anonymous>" && n.filename !== "[native code]") return n.filename || null;
    }
    return null;
}
function sE(e) {
    try {
        let t;
        try {
            t = e.exception.values[0].stacktrace.frames;
        } catch  {}
        return t ? aP(t) : null;
    } catch  {
        return me && q.error(`Cannot extract url for event ${ys(e)}`), null;
    }
}
function oP(e) {
    return e.type || !e.exception || !e.exception.values || e.exception.values.length === 0 ? !1 : // No top-level message
    !e.message && // There are no exception values that have a stacktrace, a non-generic-Error type or value
    !e.exception.values.some((t)=>t.stacktrace || t.type && t.type !== "Error" || t.value);
}
function lP(e, t, n = 250, r, s, i, a) {
    if (!i.exception || !i.exception.values || !a || !Es(a.originalException, Error)) return;
    const o = i.exception.values.length > 0 ? i.exception.values[i.exception.values.length - 1] : void 0;
    o && (i.exception.values = cP(rT(e, t, s, a.originalException, r, i.exception.values, o, 0), n));
}
function rT(e, t, n, r, s, i, a, o) {
    if (i.length >= n + 1) return i;
    let l = [
        ...i
    ];
    if (Es(r[s], Error)) {
        ZS(a, o);
        const c = e(t, r[s]), u = l.length;
        QS(c, s, u, o), l = rT(e, t, n, r[s], s, [
            c,
            ...l
        ], c, u);
    }
    return Array.isArray(r.errors) && r.errors.forEach((c, u)=>{
        if (Es(c, Error)) {
            ZS(a, o);
            const E = e(t, c), p = l.length;
            QS(E, `errors[${u}]`, p, o), l = rT(e, t, n, c, s, [
                E,
                ...l
            ], E, p);
        }
    }), l;
}
function ZS(e, t) {
    e.mechanism = e.mechanism || {
        type: "generic",
        handled: !0
    }, e.mechanism = {
        ...e.mechanism,
        ...e.type === "AggregateError" && {
            is_exception_group: !0
        },
        exception_id: t
    };
}
function QS(e, t, n, r) {
    e.mechanism = e.mechanism || {
        type: "generic",
        handled: !0
    }, e.mechanism = {
        ...e.mechanism,
        type: "chained",
        source: t,
        exception_id: n,
        parent_id: r
    };
}
function cP(e, t) {
    return e.map((n)=>(n.value && (n.value = wa(n.value, t)), n));
}
function Ui(e) {
    if (!e) return {};
    const t = e.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
    if (!t) return {};
    const n = t[6] || "", r = t[8] || "";
    return {
        host: t[4],
        path: t[5],
        protocol: t[2],
        search: n,
        hash: r,
        relative: t[5] + n + r
    };
}
function uP(e) {
    const t = "console";
    pi(t, e), Ti(t, EP);
}
function EP() {
    "console" in Le && Kp.forEach(function(e) {
        e in Le.console && vn(Le.console, e, function(t) {
            return Qu[e] = t, function(...n) {
                ar("console", {
                    args: n,
                    level: e
                });
                const s = Qu[e];
                s && s.apply(Le.console, n);
            };
        });
    });
}
function cO(e) {
    return e === "warn" ? "warning" : [
        "fatal",
        "error",
        "warning",
        "log",
        "info",
        "debug"
    ].includes(e) ? e : "log";
}
const dP = "Dedupe", fP = ()=>{
    let e;
    return {
        name: dP,
        processEvent (t) {
            if (t.type) return t;
            try {
                if (TP(t, e)) return me && q.warn("Event dropped due to being a duplicate of previously captured event."), null;
            } catch  {}
            return e = t;
        }
    };
}, pP = fP;
function TP(e, t) {
    return t ? !!(hP(e, t) || AP(e, t)) : !1;
}
function hP(e, t) {
    const n = e.message, r = t.message;
    return !(!n && !r || n && !r || !n && r || n !== r || !EO(e, t) || !uO(e, t));
}
function AP(e, t) {
    const n = $S(t), r = $S(e);
    return !(!n || !r || n.type !== r.type || n.value !== r.value || !EO(e, t) || !uO(e, t));
}
function uO(e, t) {
    let n = SS(e), r = SS(t);
    if (!n && !r) return !0;
    if (n && !r || !n && r || (n = n, r = r, r.length !== n.length)) return !1;
    for(let s = 0; s < r.length; s++){
        const i = r[s], a = n[s];
        if (i.filename !== a.filename || i.lineno !== a.lineno || i.colno !== a.colno || i.function !== a.function) return !1;
    }
    return !0;
}
function EO(e, t) {
    let n = e.fingerprint, r = t.fingerprint;
    if (!n && !r) return !0;
    if (n && !r || !n && r) return !1;
    n = n, r = r;
    try {
        return n.join("") === r.join("");
    } catch  {
        return !1;
    }
}
function $S(e) {
    return e.exception && e.exception.values && e.exception.values[0];
}
function SP(e, t, n, r, s = "auto.http.browser") {
    if (!e.fetchData) return;
    const i = ii() && t(e.fetchData.url);
    if (e.endTimestamp && i) {
        const p = e.fetchData.__span;
        if (!p) return;
        const A = r[p];
        A && (_P(A, e), delete r[p]);
        return;
    }
    const { method: a, url: o } = e.fetchData, l = mP(o), c = l ? Ui(l).host : void 0, u = !!wt(), E = i && u ? Wl({
        name: `${a} ${o}`,
        attributes: {
            url: o,
            type: "fetch",
            "http.method": a,
            "http.url": l,
            "server.address": c,
            [Dt]: s,
            [si]: "http.client"
        }
    }) : new fo();
    if (e.fetchData.__span = E.spanContext().spanId, r[E.spanContext().spanId] = E, n(e.fetchData.url)) {
        const p = e.args[0], A = e.args[1] || {}, R = RP(p, A, // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),
        // we do not want to use the span as base for the trace headers,
        // which means that the headers will be generated from the scope and the sampling decision is deferred
        ii() && u ? E : void 0);
        R && (e.args[1] = A, A.headers = R);
    }
    return E;
}
function RP(e, t, n) {
    const r = lO({
        span: n
    }), s = r["sentry-trace"], i = r.baggage;
    if (!s) return;
    const a = t.headers || (NP(e) ? e.headers : void 0);
    if (a) if (IP(a)) {
        const o = new Headers(a);
        if (o.set("sentry-trace", s), i) {
            const l = o.get("baggage");
            if (l) {
                const c = wc(l);
                o.set("baggage", // If there are non-sentry entries (i.e. if the stripped string is non-empty/truthy) combine the stripped header and sentry baggage header
                // otherwise just set the sentry baggage header
                c ? `${c},${i}` : i);
            } else o.set("baggage", i);
        }
        return o;
    } else if (Array.isArray(a)) {
        const o = [
            ...a.filter((l)=>!(Array.isArray(l) && l[0] === "sentry-trace")).map((l)=>{
                if (Array.isArray(l) && l[0] === "baggage" && typeof l[1] == "string") {
                    const [c, u, ...E] = l;
                    return [
                        c,
                        wc(u),
                        ...E
                    ];
                } else return l;
            }),
            // Attach the new sentry-trace header
            [
                "sentry-trace",
                s
            ]
        ];
        return i && o.push([
            "baggage",
            i
        ]), o;
    } else {
        const o = "baggage" in a ? a.baggage : void 0;
        let l = [];
        return Array.isArray(o) ? l = o.map((c)=>typeof c == "string" ? wc(c) : c).filter((c)=>c === "") : o && l.push(wc(o)), i && l.push(i), {
            ...a,
            "sentry-trace": s,
            baggage: l.length > 0 ? l.join(",") : void 0
        };
    }
    else return {
        ...r
    };
}
function mP(e) {
    try {
        return new URL(e).href;
    } catch  {
        return;
    }
}
function _P(e, t) {
    if (t.response) {
        LI(e, t.response.status);
        const n = t.response && t.response.headers && t.response.headers.get("content-length");
        if (n) {
            const r = parseInt(n);
            r > 0 && e.setAttribute("http.response_content_length", r);
        }
    } else t.error && e.setStatus({
        code: Ft,
        message: "internal_error"
    });
    e.end();
}
function wc(e) {
    return e.split(",").filter((t)=>!t.split("=")[0].startsWith(Vh)).join(",");
}
function NP(e) {
    return typeof Request < "u" && Es(e, Request);
}
function IP(e) {
    return typeof Headers < "u" && Es(e, Headers);
}
function dO(e) {
    if (e !== void 0) return e >= 400 && e < 500 ? "warning" : e >= 500 ? "error" : void 0;
}
const sT = Le;
function fO() {
    if (!("fetch" in sT)) return !1;
    try {
        return new Headers(), new Request("http://www.example.com"), new Response(), !0;
    } catch  {
        return !1;
    }
}
function iT(e) {
    return e && /^function\s+\w+\(\)\s+\{\s+\[native code\]\s+\}$/.test(e.toString());
}
function OP() {
    if (typeof EdgeRuntime == "string") return !0;
    if (!fO()) return !1;
    if (iT(sT.fetch)) return !0;
    let e = !1;
    const t = sT.document;
    if (t && typeof t.createElement == "function") try {
        const n = t.createElement("iframe");
        n.hidden = !0, t.head.appendChild(n), n.contentWindow && n.contentWindow.fetch && (e = iT(n.contentWindow.fetch)), t.head.removeChild(n);
    } catch (n) {
        di && q.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", n);
    }
    return e;
}
function pO(e, t) {
    const n = "fetch";
    pi(n, e), Ti(n, ()=>TO(void 0, t));
}
function CP(e) {
    const t = "fetch-body-resolved";
    pi(t, e), Ti(t, ()=>TO(LP));
}
function TO(e, t = !1) {
    t && !OP() || vn(Le, "fetch", function(n) {
        return function(...r) {
            const s = new Error(), { method: i, url: a } = yP(r), o = {
                args: r,
                fetchData: {
                    method: i,
                    url: a
                },
                startTimestamp: kt() * 1e3,
                // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation
                virtualError: s
            };
            return e || ar("fetch", {
                ...o
            }), n.apply(Le, r).then(async (l)=>(e ? e(l) : ar("fetch", {
                    ...o,
                    endTimestamp: kt() * 1e3,
                    response: l
                }), l), (l)=>{
                throw ar("fetch", {
                    ...o,
                    endTimestamp: kt() * 1e3,
                    error: l
                }), Uh(l) && l.stack === void 0 && (l.stack = s.stack, cr(l, "framesToPop", 1)), l;
            });
        };
    });
}
async function gP(e, t) {
    if (e && e.body) {
        const n = e.body, r = n.getReader(), s = setTimeout(()=>{
            n.cancel().then(null, ()=>{});
        }, 90 * 1e3);
        let i = !0;
        for(; i;){
            let a;
            try {
                a = setTimeout(()=>{
                    n.cancel().then(null, ()=>{});
                }, 5e3);
                const { done: o } = await r.read();
                clearTimeout(a), o && (t(), i = !1);
            } catch  {
                i = !1;
            } finally{
                clearTimeout(a);
            }
        }
        clearTimeout(s), r.releaseLock(), n.cancel().then(null, ()=>{});
    }
}
function LP(e) {
    let t;
    try {
        t = e.clone();
    } catch  {
        return;
    }
    gP(t, ()=>{
        ar("fetch-body-resolved", {
            endTimestamp: kt() * 1e3,
            response: e
        });
    });
}
function aT(e, t) {
    return !!e && typeof e == "object" && !!e[t];
}
function eR(e) {
    return typeof e == "string" ? e : e ? aT(e, "url") ? e.url : e.toString ? e.toString() : "" : "";
}
function yP(e) {
    if (e.length === 0) return {
        method: "GET",
        url: ""
    };
    if (e.length === 2) {
        const [n, r] = e;
        return {
            url: eR(n),
            method: aT(r, "method") ? String(r.method).toUpperCase() : "GET"
        };
    }
    const t = e[0];
    return {
        url: eR(t),
        method: aT(t, "method") ? String(t.method).toUpperCase() : "GET"
    };
}
function vP() {
    return typeof __SENTRY_BROWSER_BUNDLE__ < "u" && !!__SENTRY_BROWSER_BUNDLE__;
}
function bP() {
    return "npm";
}
function PP() {
    return !vP() && Object.prototype.toString.call(typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] < "u" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] : 0) === "[object process]";
}
function tR() {
    return typeof window < "u" && (!PP() || MP());
}
function MP() {
    const e = Le.process;
    return !!e && e.type === "renderer";
}
const xc = Le;
function DP() {
    const e = xc.chrome, t = e && e.app && e.app.runtime, n = "history" in xc && !!xc.history.pushState && !!xc.history.replaceState;
    return !t && n;
}
function wP(e, t) {
    return e ?? t();
}
function pu(e) {
    let t, n = e[0], r = 1;
    for(; r < e.length;){
        const s = e[r], i = e[r + 1];
        if (r += 2, (s === "optionalAccess" || s === "optionalCall") && n == null) return;
        s === "access" || s === "optionalAccess" ? (t = n, n = i(n)) : (s === "call" || s === "optionalCall") && (n = i((...a)=>n.call(t, ...a)), t = void 0);
    }
    return n;
}
const nR = (e)=>{
    let t;
    const n = /* @__PURE__ */ new Set(), r = (c, u)=>{
        const E = typeof c == "function" ? c(t) : c;
        if (!Object.is(E, t)) {
            const p = t;
            t = u ?? (typeof E != "object" || E === null) ? E : Object.assign({}, t, E), n.forEach((A)=>A(t, p));
        }
    }, s = ()=>t, o = {
        setState: r,
        getState: s,
        getInitialState: ()=>l,
        subscribe: (c)=>(n.add(c), ()=>n.delete(c))
    }, l = t = e(r, s, o);
    return o;
}, xP = (e)=>e ? nR(e) : nR, UP = (e)=>e;
function FP(e, t = UP) {
    const n = Ou.useSyncExternalStore(e.subscribe, {
        "FP.useSyncExternalStore[n]": ()=>t(e.getState())
    }["FP.useSyncExternalStore[n]"], {
        "FP.useSyncExternalStore[n]": ()=>t(e.getInitialState())
    }["FP.useSyncExternalStore[n]"]);
    return Ou.useDebugValue(n), n;
}
const rR = (e)=>{
    const t = xP(e), n = (r)=>FP(t, r);
    return Object.assign(n, t), n;
}, BP = (e)=>e ? rR(e) : rR, hO = /* @__PURE__ */ new Set([
    "event",
    "error"
]), AO = /* @__PURE__ */ new Set([
    "transaction"
]), SO = /* @__PURE__ */ new Set([
    "profile"
]), GP = /* @__PURE__ */ new Set([
    ...hO,
    ...AO,
    ...SO
]);
function qE(e) {
    return e.includes("javascript.astro") ? "javascript.astro" : e.includes("javascript") ? "javascript" : e.includes("java") ? "java" : e.includes("python") ? "python" : e.includes("php.laravel") ? "php.laravel" : e.includes("php.symfony") ? "php.symfony" : e.includes("php") ? "php" : e.includes("ruby") ? "ruby" : e.includes("dotnet") ? "dotnet" : "unknown";
}
const kP = {
    envelopes: []
}, HP = (e, t)=>({
        ...kP,
        pushEnvelope: ({ envelope: n, rawEnvelope: r })=>{
            var A, R;
            const [s, i] = n, a = new Date(s.sent_at).getTime();
            let o;
            (A = s.sdk) != null && A.name && s.sdk.version ? o = {
                name: s.sdk.name,
                version: s.sdk.version,
                lastSeen: a
            } : i.length > 0 ? o = t().inferSdkFromEvent(i[0][1]) : o = {
                name: "unknown",
                version: "0.0.0",
                lastSeen: a
            };
            const { sdks: l } = t(), c = l.find((C)=>C.name === o.name && C.version === o.version);
            c ? c.lastSeen = a : e({
                sdks: [
                    ...l,
                    o
                ]
            });
            const u = s.trace;
            for (const [C, O] of i)if (GP.has(C.type)) {
                const d = O;
                d.platform = qE(o.name), u && (d.contexts || (d.contexts = {}), (R = d.contexts).trace ?? (R.trace = u)), t().pushEvent(O);
            }
            const { envelopes: E } = t(), p = [
                ...E,
                {
                    envelope: n,
                    rawEnvelope: r
                }
            ];
            return e({
                envelopes: p
            }), p.length;
        },
        getEnvelopes: ()=>t().envelopes
    });
function Ol() {
    let e = /* @__PURE__ */ new Date().getTime();
    return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, (t)=>{
        let n = Math.random() * 16;
        return n = (e + n) % 16 | 0, e = Math.floor(e / 16), (t === "x" ? n : n & 3 | 8).toString(16);
    });
}
function YP(e) {
    const t = [], n = Array.from(e.values()).sort((r, s)=>{
        const i = (r.parent_span_id ? 1 : 0) - (s.parent_span_id ? 1 : 0);
        return i === 0 ? Xh(r, s) : i;
    });
    for (const r of n){
        let s = r && VP(r, e, n);
        if (r.children ?? (r.children = []), s) s.children ?? (s.children = []), s.children.push(r);
        else if (r.parent_span_id) {
            const i = n.find((a)=>!a.parent_span_id);
            Pe(i ? `Creating orphan for parent (${r.parent_span_id}) for span (${r.span_id})` : `Root span (${r.parent_span_id}) for span (${r.span_id}). Creating orphan.`), s = {
                trace_id: r.trace_id,
                span_id: r.parent_span_id,
                parent_span_id: i ? i.span_id : null,
                op: "orphan",
                description: "missing or unknown parent span",
                children: [
                    r
                ],
                start_timestamp: r.start_timestamp,
                timestamp: r.timestamp,
                status: "unknown"
            }, e.set(s.span_id, s), i ? (i.children ?? (i.children = []), i.children.push(s)) : t.push(s);
        } else t.push(r);
        e.set(r.span_id, r);
    }
    return t;
}
function VP(e, t, n) {
    if (e.parent_span_id) return t.get(e.parent_span_id) || n.find((r)=>r.span_id === e.parent_span_id);
}
function Xh(e, t) {
    return e.start_timestamp - t.start_timestamp;
}
const sR = /* @__PURE__ */ new Map();
function RO(e) {
    let t = sR.get(e);
    if (!t) {
        const n = e.module || e.filename || e.abs_path || "<unknown>", r = e.function || "<anonymous>", s = e.lineno ? `:${e.lineno}` : "", i = e.lineno && e.colno ? `:${e.colno}` : "";
        t = `${n}@${r}${s}${i}`, sR.set(e, t);
    }
    return t;
}
function mO(e, t) {
    const n = [];
    let r = t[0], s = 1;
    for(; s < t.length + 1;){
        const i = t[s];
        if (s += 1, i && i.description === r.description && i.op === r.op) {
            if (r.timestamp = i.timestamp, i.children) if (r.children) {
                for (const a of i.children)r.children.push(a);
                r.children.sort(Xh);
            } else r.children = i.children;
        } else r.timestamp - r.start_timestamp > 0 && (r.children && (r.children = mO(e, r.children)), n.push(r), e.spans.set(r.span_id, r)), r = i;
    }
    return n;
}
const WP = {
    python: function(e) {
        var t;
        return (t = this[e].module) == null ? void 0 : t.startsWith("sentry_sdk.");
    },
    javascript: function(e) {
        const t = this[e], n = t.module;
        return n ? n.startsWith("@sentry") || n.startsWith("@opentelemetry.instrumentation") : t.abs_path ? /\/node_modules\/.*\/@(sentry|opentelemetry)[^a-z0-9]/.test(t.abs_path) : !1;
    }
};
function jP(e, t, n, r, s, i) {
    var c, u, E, p;
    i.add(t.active_thread_id);
    const a = t.platform && WP[t.platform], o = [];
    for(let A = 0; A < t.samples.length; A++){
        const R = t.samples[A];
        if (R.thread_id && !i.has(R.thread_id)) continue;
        const C = R.start_timestamp;
        if (C < r || C > s) continue;
        const O = t.samples[A + 1], d = O ? O.start_timestamp : s;
        if (d > s) continue;
        const f = {
            start_timestamp: C,
            timestamp: d,
            trace_id: e.trace_id,
            status: "ok",
            tags: {
                source: "profile"
            },
            data: {
                "thread.id": R.thread_id,
                "thread.name": (u = (c = t.thread_metadata) == null ? void 0 : c[R.thread_id]) == null ? void 0 : u.name
            }
        }, _ = {
            span_id: Ol(),
            parent_span_id: n,
            ...f,
            op: "Thread",
            description: ((p = (E = t.thread_metadata) == null ? void 0 : E[R.thread_id]) == null ? void 0 : p.name) || `Thread ${R.thread_id}`,
            data: {
                thread_id: R.thread_id
            }
        };
        let h = _;
        const I = t.stacks[R.stack_id], T = a ? I.findLastIndex(a, t.frames) : 0;
        for(let N = T + 1; N < I.length; N++){
            const g = t.frames[I[N]], [b, S] = RO(g).split("@"), P = {
                span_id: Ol(),
                parent_span_id: h.span_id,
                ...f,
                op: b,
                description: S,
                data: {
                    ...g
                }
            };
            h.children = [
                P
            ], h = P;
        }
        o.push(_);
    }
    if (!o.length) return [];
    const l = mO(e, o);
    return (l.length === 1 ? l[0].children || [] : l).filter((A)=>A.timestamp - A.start_timestamp > 0 && A.timestamp <= s);
}
function oT(e, t, n = e.spanTree, r = e) {
    var i, a, o, l, c;
    if (Pe(`Grafting profile spans into trace ${e.trace_id}`), e.profileGrafted) {
        Pe(`Trace already has profile grafted ${e.trace_id}`);
        return;
    }
    if (!t && (t = e.trace_id ? mt.getState().getProfileByTraceId(e.trace_id) : void 0, !t)) {
        Pe(`Profile not found for trace ${e.trace_id}`);
        return;
    }
    let s = -1;
    for(; s < n.length;){
        const u = n[s];
        if (((i = u == null ? void 0 : u.tags) == null ? void 0 : i.source) === "profile") {
            s += 1;
            continue;
        }
        const E = n[s + 1];
        if (((a = E == null ? void 0 : E.tags) == null ? void 0 : a.source) === "profile") {
            s += 1;
            continue;
        }
        const p = u ? u.timestamp : r.start_timestamp, A = E ? E.start_timestamp : r.timestamp, R = /* @__PURE__ */ new Set([
            (o = u == null ? void 0 : u.data) == null ? void 0 : o.threadId,
            (l = E == null ? void 0 : E.data) == null ? void 0 : l.threadId,
            (c = r == null ? void 0 : r.data) == null ? void 0 : c.threadId
        ]);
        if (R.delete(void 0), A - p > 0) {
            const C = jP(e, t, r.span_id, p, A, R);
            C.length && (n.splice(s + 1, 0, ...C), s += C.length);
        }
        u && (u.children ?? (u.children = []), oT(e, t, u.children, u)), s += 1;
    }
    e.profileGrafted = e.spanTree === n;
}
function qa(e) {
    return (!e.type || hO.has(e.type)) && !!e.exception;
}
function XP(e) {
    return !!e.type && SO.has(e.type) && e.version === "1";
}
function KP(e) {
    return !!e.type && AO.has(e.type);
}
function Uc(e) {
    return typeof e == "string" ? new Date(e).getTime() : e * 1e3;
}
function iR(e, t) {
    const n = t.toString();
    return n.length > 3 ? e + Number.parseInt(n.slice(0, -3), 10) / 1e3 : e;
}
const zP = {
    events: [],
    eventIds: /* @__PURE__ */ new Set()
}, JP = (e, t)=>({
        ...zP,
        pushEvent: async (n)=>{
            var l;
            n.event_id || (n.event_id = Ol());
            const { eventIds: r, events: s } = t();
            if (r.has(n.event_id)) return;
            const i = new Set(r);
            i.add(n.event_id), e({
                eventIds: i
            }), qa(n) && await t().processStacktrace(n), n.timestamp = Uc(n.timestamp), n.start_timestamp && (n.start_timestamp = Uc(n.start_timestamp));
            const a = (l = n.contexts) == null ? void 0 : l.trace, o = [
                ...s,
                n
            ];
            e({
                events: o
            });
            for (const [c, u] of t().subscribers.values())c === "event" && u(n);
            if (a != null && a.trace_id) {
                const { tracesById: c, traces: u } = t(), E = c.get(a.trace_id), p = E ?? {
                    ...a,
                    trace_id: a.trace_id,
                    spans: /* @__PURE__ */ new Map(),
                    spanTree: [],
                    transactions: [],
                    errors: 0,
                    start_timestamp: n.start_timestamp ?? n.timestamp,
                    timestamp: n.timestamp,
                    status: a.status,
                    rootTransactionName: n.transaction || "(unknown transaction)",
                    rootTransaction: null,
                    profileGrafted: !1
                };
                if (p.timestamp = Math.max(n.timestamp, p.timestamp), KP(n)) {
                    p.transactions.push(n), p.transactions.sort(Xh);
                    const R = /* @__PURE__ */ new Map();
                    for (const C of p.transactions){
                        const O = C.contexts.trace;
                        if (!(!O || !O.span_id || !O.trace_id) && (R.set(O.span_id, {
                            ...O,
                            // TypeScript is not smart enough to compose the assertion above
                            // with the spread syntax above, hence the need for these explicit
                            // `span_id` and `trace_id` assignments
                            span_id: O.span_id,
                            trace_id: O.trace_id,
                            tags: C == null ? void 0 : C.tags,
                            start_timestamp: C.start_timestamp,
                            timestamp: C.timestamp,
                            description: a.description || C.transaction,
                            transaction: C
                        }), C.spans)) for (const d of C.spans)R.set(d.span_id, {
                            ...d,
                            timestamp: Uc(d.timestamp),
                            start_timestamp: Uc(d.start_timestamp)
                        });
                    }
                    p.spans = R, p.spanTree = YP(p.spans), oT(p);
                } else qa(n) && (p.errors += 1);
                a.status !== "ok" && (p.status = a.status);
                const A = p.transactions.filter((R)=>!R.contexts.trace.parent_span_id);
                if (A.length === 1 ? (p.rootTransaction = A[0], p.rootTransactionName = A[0].transaction || "(unknown transaction)") : A.length > 1 ? p.rootTransactionName = "(multiple root transactions)" : p.rootTransactionName = "(missing root transaction)", !E) {
                    const R = new Map(c);
                    R.set(p.trace_id, p), u.unshift(p), e({
                        traces: u,
                        tracesById: R
                    });
                }
            }
            if (XP(n)) {
                n.transactions || (n.transactions = n.transaction ? [
                    n.transaction
                ] : []);
                const { profilesByTraceId: c, tracesById: u } = t(), E = new Map(c);
                for (const p of n.transactions){
                    if (typeof p == "string") continue;
                    const A = p, R = u.get(A.trace_id), C = R && A.relative_start_ns != null ? iR(R.start_timestamp, A.relative_start_ns) : n.timestamp, O = {
                        platform: n.platform,
                        thread_metadata: n.profile.thread_metadata,
                        samples: n.profile.samples.map((d)=>({
                                stack_id: d.stack_id,
                                thread_id: d.thread_id,
                                elapsed_since_start_ns: d.elapsed_since_start_ns,
                                start_timestamp: iR(C, d.elapsed_since_start_ns)
                            })),
                        frames: n.profile.frames,
                        stacks: n.profile.stacks.map((d)=>Array.from(d).reverse()),
                        timestamp: C,
                        active_thread_id: A.active_thread_id
                    };
                    E.set(A.trace_id, O), R && R.start_timestamp < R.timestamp && oT(R, O);
                }
                e({
                    profilesByTraceId: E
                });
            }
        },
        getEvents: ()=>t().events
    }), qP = {
    profilesByTraceId: /* @__PURE__ */ new Map()
}, ZP = (e, t)=>({
        ...qP,
        getProfileByTraceId: (n)=>t().profilesByTraceId.get(n),
        getAggregateCallData: ()=>{
            const n = /* @__PURE__ */ new Map();
            for (const [r, s] of t().profilesByTraceId)for(let i = 0; i < s.samples.length - 1; i++){
                const a = s.samples[i], l = s.samples[i + 1].start_timestamp - a.start_timestamp, c = a.stack_id, u = s.stacks[c];
                for (const E of u){
                    const p = s.frames[E], A = RO(p), R = n.get(A);
                    R ? (R.totalTime += l, R.samples += 1, R.traceIds.add(r)) : n.set(A, {
                        name: A,
                        totalTime: l,
                        samples: 1,
                        traceIds: /* @__PURE__ */ new Set([
                            r
                        ])
                    });
                }
            }
            return Array.from(n.values());
        }
    }), QP = {
    sdks: []
}, $P = (e, t)=>({
        ...QP,
        inferSdkFromEvent: (n)=>{
            const r = {
                name: "unknown",
                version: "unknown",
                lastSeen: /* @__PURE__ */ new Date().getTime()
            };
            return n.sdk ? (r.name = n.sdk.name || r.name, r.version = n.sdk.version || r.version) : n.platform && (r.name = n.platform), r;
        },
        getSdks: ()=>t().sdks
    }), eM = {
    contextLinesProvider: new URL(Ym, Dh).href
}, tM = (e)=>({
        ...eM,
        setSidecarUrl: (t)=>{
            const { href: n } = new URL(Ym, t);
            e({
                contextLinesProvider: n
            });
        }
    });
function nM() {
    return rM(window.fetch) ? window.fetch.__sentry_original__ : window.fetch;
}
function rM(e) {
    return "__sentry_original__" in e;
}
const sM = (e, t)=>({
        getEventById: (n)=>t().events.find((r)=>r.event_id === n),
        getTraceById: (n)=>t().tracesById.get(n),
        getEventsByTrace: (n, r)=>{
            const { events: s } = t();
            return s.filter((i)=>{
                var o;
                const a = (o = i.contexts) == null ? void 0 : o.trace;
                return !a || a.trace_id !== n ? !1 : r !== void 0 ? a.span_id === r : !0;
            });
        },
        processStacktrace: async (n)=>!n.exception || !n.exception.values ? [] : Promise.all((n.exception.values ?? []).map(async (r)=>{
                var s;
                if (r.stacktrace) {
                    if (r.stacktrace.frames.reverse(), (s = r.stacktrace.frames) != null && s.every((i)=>i.post_context && i.pre_context && i.context_line)) {
                        Pe("Skipping contextlines request as we have full context for", r);
                        return;
                    }
                    try {
                        const a = await nM()(t().contextLinesProvider, {
                            method: "PUT",
                            body: JSON.stringify(r.stacktrace)
                        });
                        if (!a.ok || a.status !== 200) return;
                        const o = await a.json();
                        r.stacktrace = o;
                    } catch  {}
                }
            })),
        resetData: ()=>{
            e({
                envelopes: [],
                events: [],
                eventIds: /* @__PURE__ */ new Set(),
                traces: [],
                tracesById: /* @__PURE__ */ new Map(),
                profilesByTraceId: /* @__PURE__ */ new Map(),
                localTraceIds: /* @__PURE__ */ new Set()
            });
        }
    }), iM = {
    subscribers: /* @__PURE__ */ new Map()
}, aM = (e, t)=>({
        ...iM,
        subscribe: (...n)=>{
            const r = Ol(), { subscribers: s } = t(), i = new Map(s);
            return i.set(r, n), e({
                subscribers: i
            }), ()=>{
                const { subscribers: a } = t(), o = new Map(a);
                o.delete(r), e({
                    subscribers: o
                });
            };
        }
    }), oM = {
    traces: [],
    tracesById: /* @__PURE__ */ new Map(),
    localTraceIds: /* @__PURE__ */ new Set()
}, lM = (e, t)=>({
        ...oM,
        trackLocalTrace: (n)=>{
            const { localTraceIds: r } = t();
            if (!r.has(n)) {
                const s = new Set(r);
                s.add(n), e({
                    localTraceIds: s
                });
            }
        },
        getTraces: ()=>t().traces
    }), mt = BP()((...e)=>({
        ...JP(...e),
        ...lM(...e),
        ...ZP(...e),
        ...aM(...e),
        ...tM(...e),
        ...HP(...e),
        ...$P(...e),
        ...sM(...e)
    })), cM = ()=>({
        name: "SpotlightBrowserDirect",
        setupOnce: ()=>{},
        setup: ()=>{},
        processEvent: (e)=>{
            var n, r;
            if (uM(e)) return Pe("Dropping transaction created from Spotlight interaction"), null;
            const t = (r = (n = e.contexts) == null ? void 0 : n.trace) == null ? void 0 : r.trace_id;
            return t && mt.getState().trackLocalTrace(t), e;
        },
        afterAllSetup: (e)=>e.on("beforeEnvelope", (t)=>Hl("event", {
                    contentType: "application/x-sentry-envelope",
                    data: Il(t)
                }))
    });
function uM(e) {
    var t, n, r;
    if (e.type === "transaction" && ((n = (t = e.contexts) == null ? void 0 : t.trace) == null ? void 0 : n.op) === "ui.action.click" && e.spans) {
        for (const s of e.spans.values())if ((r = s.description) != null && r.includes("#sentry-spotlight")) return !0;
    }
    return !1;
}
function Tn(e, t, n = {}) {
    return {
        id: e,
        title: t,
        ...n
    };
}
const EM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#1C1E24"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#a)",
        d: "M7.35 16.62c-.89-.8-1.15-2.49-.78-3.7.64.77 1.53 1 2.46 1.15 1.42.21 2.82.13 4.14-.51l.45-.27c.13.35.16.71.12 1.07-.1.9-.56 1.58-1.27 2.1l-.88.6c-.9.6-1.15 1.3-.8 2.33l.02.11a2.46 2.46 0 0 1-1.46-2.25c0-.24 0-.48-.04-.72-.07-.58-.35-.83-.87-.85-.53-.01-.95.3-1.06.82l-.03.12Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M2.88 13.29S5.3 12.1 7.75 12.1l1.84-5.68c.06-.27.26-.46.5-.46.22 0 .42.2.49.46l1.84 5.68a10.3 10.3 0 0 1 4.86 1.18L13.15 2.05c-.12-.33-.32-.55-.6-.55H7.6c-.27 0-.46.22-.58.55L2.88 13.29Z"
    }), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "a",
        x1: 6.41,
        x2: 14.95,
        y1: 19.5,
        y2: 15.41,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#D83333"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 1,
        stopColor: "#F041FF"
    }))), dM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "m3.88 10.1 2.38 1.61c.07.06.15.12.22.2.07.06.11.16.11.26v.9a.22.22 0 0 1-.22.22h-.05a.3.3 0 0 1-.06-.03l-3.7-2.5a1.08 1.08 0 0 1-.23-.18.38.38 0 0 1-.08-.26v-.43c0-.1.02-.2.08-.27.07-.07.14-.13.23-.18l3.7-2.5a.3.3 0 0 1 .06-.02h.05a.22.22 0 0 1 .22.22v.9c0 .1-.04.2-.11.26l-.22.2-2.38 1.6Zm7.18-4.28c.04-.08.1-.16.16-.22.08-.07.2-.1.3-.1h.8a.24.24 0 0 1 .23.23l-.02.1-3.58 8.54a.67.67 0 0 1-.15.22.43.43 0 0 1-.32.1h-.76a.22.22 0 0 1-.16-.07.23.23 0 0 1-.05-.26l3.55-8.54Zm2.68 2.69a1.71 1.71 0 0 1-.22-.2.37.37 0 0 1-.11-.26v-.9a.22.22 0 0 1 .13-.2.22.22 0 0 1 .09-.02h.05l.06.03 3.7 2.5c.09.05.16.1.23.18.06.07.09.17.08.26v.45c0 .1-.02.19-.08.26-.07.07-.14.14-.23.19l-3.7 2.46a.34.34 0 0 1-.06.03h-.05a.22.22 0 0 1-.22-.22v-.9a.37.37 0 0 1 .11-.26l.22-.2 2.38-1.6-2.38-1.6Z"
    })), aR = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#512BD4"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M2.58 13a.56.56 0 0 1-.58-.55.54.54 0 0 1 .17-.4.56.56 0 0 1 .4-.16.56.56 0 0 1 .42.16.53.53 0 0 1 0 .8.56.56 0 0 1-.41.15Zm6.38-.1H7.92L5.19 8.58c-.07-.11-.13-.23-.17-.35h-.03c.03.27.04.54.03.81v3.88H4.1V7h1.11l2.66 4.24c.11.18.18.28.21.36h.02a5.63 5.63 0 0 1-.04-.8V7h.91l-.01 5.9Zm4.47 0h-3.21V7h3.08v.83h-2.13v1.68h1.97v.82h-1.97v1.75h2.26v.83ZM18 7.84h-1.65v5.08h-.95V7.83h-1.64V7H18v.83Z"
    })), fM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#fff"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#a)",
        d: "M17.6124 6.70307C17.2544 5.84166 16.5282 4.91159 15.9596 4.61758C16.3652 5.40312 16.6466 6.24675 16.794 7.11846L16.7955 7.13228C15.8639 4.80976 14.2842 3.87331 12.994 1.83418C12.9273 1.73022 12.8626 1.62504 12.7999 1.5187C12.7675 1.46315 12.7372 1.40642 12.7091 1.34863C12.6556 1.245 12.6144 1.13549 12.5862 1.0223C12.5863 1.01708 12.5844 1.01203 12.5809 1.00811C12.5775 1.00418 12.5727 1.00167 12.5675 1.00104C12.5624 0.999652 12.5571 0.999652 12.552 1.00104C12.5509 1.00104 12.5492 1.00296 12.548 1.00338C12.5467 1.00381 12.5439 1.00572 12.542 1.00657L12.5452 1.00104C10.4757 2.21279 9.77348 4.45602 9.70885 5.57805C8.88238 5.63486 8.0922 5.93942 7.44139 6.452C7.37349 6.39449 7.30253 6.34069 7.22881 6.29086C7.04107 5.63374 7.03307 4.93829 7.20563 4.27702C6.44562 4.6452 5.7703 5.16713 5.22241 5.80977H5.21858C4.89204 5.39587 4.915 4.03105 4.93371 3.74597C4.83711 3.7848 4.7449 3.83375 4.65862 3.89202C4.37036 4.09776 4.10088 4.32861 3.85334 4.58187C3.57126 4.86787 3.31362 5.17699 3.08314 5.50599V5.50726V5.50577C2.55342 6.25675 2.1777 7.10522 1.97768 8.00219L1.96663 8.05661C1.93624 8.22755 1.90923 8.39907 1.88563 8.57107C1.88563 8.57724 1.88436 8.58298 1.88372 8.58914C1.81159 8.96401 1.7669 9.34363 1.75 9.725V9.76752C1.75181 11.8305 2.52744 13.8178 3.9236 15.3366C5.31977 16.8554 7.23488 17.7952 9.29045 17.9703C11.346 18.1453 13.3925 17.5429 15.0254 16.2821C16.6583 15.0213 17.7588 13.1938 18.1095 11.1608C18.1233 11.0545 18.1345 10.9493 18.1469 10.8419C18.3166 9.43933 18.1329 8.01656 17.6124 6.70307ZM8.11615 13.1525C8.15463 13.171 8.19077 13.191 8.23031 13.2087L8.23605 13.2123C8.19608 13.1932 8.15611 13.1732 8.11615 13.1525ZM16.7961 7.13419V7.12633L16.7976 7.13505L16.7961 7.13419Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#b)",
        d: "M17.6124 6.70304C17.2544 5.84163 16.5282 4.91156 15.9596 4.61755C16.3652 5.40309 16.6466 6.24672 16.794 7.11843V7.1263L16.7955 7.13502C17.4305 8.95231 17.3387 10.9447 16.5391 12.6959C15.5948 14.7221 13.309 16.7988 9.73117 16.6978C5.86527 16.5884 2.46068 13.7197 1.82419 9.96243C1.70833 9.36995 1.82419 9.06956 1.88244 8.58805C1.80298 8.96207 1.75864 9.3427 1.75 9.72497V9.76749C1.75181 11.8305 2.52744 13.8178 3.9236 15.3366C5.31977 16.8554 7.23488 17.7952 9.29045 17.9702C11.346 18.1453 13.3925 17.5429 15.0254 16.2821C16.6583 15.0213 17.7588 13.1938 18.1095 11.1608C18.1233 11.0545 18.1345 10.9493 18.1469 10.8419C18.3166 9.4393 18.1329 8.01653 17.6124 6.70304Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#c)",
        d: "M17.6124 6.70304C17.2544 5.84163 16.5282 4.91156 15.9596 4.61755C16.3652 5.40309 16.6466 6.24672 16.794 7.11843V7.1263L16.7955 7.13502C17.4305 8.95231 17.3387 10.9447 16.5391 12.6959C15.5948 14.7221 13.309 16.7988 9.73117 16.6978C5.86527 16.5884 2.46068 13.7197 1.82419 9.96243C1.70833 9.36995 1.82419 9.06956 1.88244 8.58805C1.80298 8.96207 1.75864 9.3427 1.75 9.72497V9.76749C1.75181 11.8305 2.52744 13.8178 3.9236 15.3366C5.31977 16.8554 7.23488 17.7952 9.29045 17.9702C11.346 18.1453 13.3925 17.5429 15.0254 16.2821C16.6583 15.0213 17.7588 13.1938 18.1095 11.1608C18.1233 11.0545 18.1345 10.9493 18.1469 10.8419C18.3166 9.4393 18.1329 8.01653 17.6124 6.70304Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#d)",
        d: "M13.6086 7.67161C13.6264 7.68415 13.643 7.69669 13.6598 7.70924C13.4528 7.34225 13.1952 7.00624 12.8945 6.71114C10.3337 4.14988 12.2233 1.15771 12.542 1.00571L12.5452 1.00104C10.4757 2.21279 9.77349 4.45601 9.70886 5.57805C9.80495 5.57146 9.90019 5.56338 9.99841 5.56338C10.7327 5.56472 11.4536 5.7605 12.0877 6.13081C12.7218 6.50111 13.2466 7.03273 13.6086 7.67161Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#e)",
        d: "M10.0037 8.18307C9.99012 8.38801 9.26605 9.09486 9.01286 9.09486C6.66993 9.09486 6.28961 10.5122 6.28961 10.5122C6.39335 11.7056 7.225 12.6887 8.23032 13.2086C8.27624 13.2324 8.3228 13.2539 8.36936 13.275C8.45 13.3107 8.53064 13.3437 8.61128 13.374C8.9563 13.4961 9.31767 13.5659 9.68336 13.5809C13.7899 13.7735 14.5854 8.67011 11.6219 7.18922C12.3211 7.09826 13.029 7.27016 13.6086 7.67159C13.2466 7.0327 12.7218 6.50108 12.0877 6.13078C11.4536 5.76048 10.7327 5.5647 9.99841 5.56335C9.90062 5.56335 9.80496 5.57143 9.70887 5.57802C8.88239 5.63483 8.09222 5.93939 7.44141 6.45197C7.56705 6.55826 7.70885 6.70027 8.00753 6.99471C8.56664 7.54552 10.0005 8.11611 10.0037 8.18307Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#f)",
        d: "M10.0037 8.18307C9.99012 8.38801 9.26605 9.09486 9.01286 9.09486C6.66993 9.09486 6.28961 10.5122 6.28961 10.5122C6.39335 11.7056 7.225 12.6887 8.23032 13.2086C8.27624 13.2324 8.3228 13.2539 8.36936 13.275C8.45 13.3107 8.53064 13.3437 8.61128 13.374C8.9563 13.4961 9.31767 13.5659 9.68336 13.5809C13.7899 13.7735 14.5854 8.67011 11.6219 7.18922C12.3211 7.09826 13.029 7.27016 13.6086 7.67159C13.2466 7.0327 12.7218 6.50108 12.0877 6.13078C11.4536 5.76048 10.7327 5.5647 9.99841 5.56335C9.90062 5.56335 9.80496 5.57143 9.70887 5.57802C8.88239 5.63483 8.09222 5.93939 7.44141 6.45197C7.56705 6.55826 7.70885 6.70027 8.00753 6.99471C8.56664 7.54552 10.0005 8.11611 10.0037 8.18307Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#g)",
        d: "M7.05728 6.178C7.12403 6.22051 7.17909 6.2575 7.22735 6.29088C7.03961 5.63376 7.03161 4.93831 7.20418 4.27704C6.44416 4.64522 5.76884 5.16715 5.22095 5.80979C5.26113 5.80873 6.45629 5.78726 7.05728 6.178Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#h)",
        d: "M1.82525 9.96247C2.4611 13.7197 5.86633 16.5884 9.73223 16.6979C13.3101 16.7991 15.5958 14.7221 16.5401 12.6959C17.3397 10.9448 17.4316 8.95235 16.7965 7.13505V7.12719C16.7965 7.12102 16.7952 7.11741 16.7965 7.11932L16.798 7.13314C17.0903 9.04154 16.1196 10.8904 14.6022 12.1406L14.5975 12.1513C11.6408 14.5592 8.8113 13.6041 8.23859 13.2142C8.19862 13.1951 8.15866 13.1752 8.11869 13.1545C6.39482 12.3305 5.68265 10.7599 5.83529 9.41293C5.42608 9.41897 5.0239 9.3062 4.67748 9.0883C4.33106 8.8704 4.05527 8.55671 3.88352 8.18524C4.33604 7.90801 4.85201 7.75128 5.38227 7.73C5.91252 7.70871 6.4394 7.82357 6.91268 8.06364C7.88843 8.50659 8.99875 8.55024 10.0063 8.18524C10.0031 8.11827 8.56916 7.54747 8.01006 6.99687C7.71137 6.70244 7.56958 6.56064 7.44394 6.45413C7.37604 6.39662 7.30507 6.34283 7.23135 6.29299C7.18246 6.25962 7.1274 6.22348 7.06128 6.18011C6.4603 5.78937 5.26513 5.81084 5.22559 5.81191H5.22176C4.89523 5.398 4.91819 4.03319 4.93689 3.74811C4.84029 3.78693 4.74808 3.83589 4.6618 3.89416C4.37355 4.09989 4.10407 4.33074 3.85652 4.584C3.57343 4.8692 3.31473 5.17761 3.08313 5.50599V5.50727V5.50578C2.55341 6.25676 2.1777 7.10523 1.97767 8.0022C1.97363 8.01899 1.6809 9.29877 1.82525 9.96247Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#i)",
        d: "M12.8949 6.71115C13.1957 7.00658 13.4533 7.34294 13.6602 7.71031C13.7055 7.74453 13.7478 7.77855 13.7837 7.8115C15.6517 9.53346 14.673 11.9676 14.6001 12.1408C16.1175 10.8906 17.0873 9.04174 16.7959 7.13334C15.8639 4.80976 14.2842 3.87331 12.994 1.83418C12.9273 1.73022 12.8626 1.62504 12.7999 1.5187C12.7675 1.46315 12.7372 1.40642 12.7091 1.34863C12.6556 1.245 12.6143 1.13549 12.5862 1.0223C12.5863 1.01708 12.5844 1.01203 12.5809 1.00811C12.5775 1.00418 12.5727 1.00167 12.5675 1.00104C12.5624 0.999652 12.5571 0.999652 12.552 1.00104C12.5509 1.00104 12.5492 1.00296 12.5479 1.00338C12.5467 1.00381 12.5439 1.00572 12.542 1.00657C12.2233 1.15772 10.3336 4.14989 12.8949 6.71115Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#j)",
        d: "M13.7825 7.81043C13.7429 7.77481 13.7017 7.74104 13.659 7.70924C13.6422 7.6967 13.6256 7.68415 13.6077 7.67161C13.0282 7.27018 12.3202 7.09829 11.6211 7.18925C14.5846 8.67099 13.7895 13.7735 9.68253 13.5809C9.31684 13.5659 8.95547 13.4962 8.61045 13.3741C8.52981 13.3439 8.44917 13.3109 8.36852 13.275C8.32197 13.2537 8.27541 13.2325 8.22949 13.2087L8.23523 13.2123C8.80794 13.6032 11.6366 14.5584 14.5942 12.1493L14.5988 12.1387C14.6726 11.9665 15.6513 9.53175 13.7825 7.81043Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#k)",
        d: "M6.2896 10.5122C6.2896 10.5122 6.66992 9.09487 9.01285 9.09487C9.26604 9.09487 9.99075 8.38801 10.0037 8.18308C8.99621 8.54808 7.88589 8.50444 6.91014 8.06148C6.43686 7.82142 5.90998 7.70656 5.37973 7.72784C4.84947 7.74913 4.3335 7.90585 3.88098 8.18308C4.05273 8.55455 4.32852 8.86824 4.67494 9.08614C5.02136 9.30405 5.42354 9.41681 5.83275 9.41077C5.68011 10.7579 6.39228 12.3285 8.11615 13.1523C8.15463 13.1708 8.19077 13.1908 8.23031 13.2084C7.22413 12.6887 6.39334 11.7057 6.2896 10.5122Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#l)",
        d: "M17.6124 6.70307C17.2544 5.84166 16.5282 4.91159 15.9596 4.61758C16.3652 5.40312 16.6466 6.24675 16.794 7.11846L16.7955 7.13228C15.8639 4.80976 14.2842 3.87331 12.994 1.83418C12.9273 1.73022 12.8626 1.62504 12.7999 1.5187C12.7675 1.46315 12.7372 1.40642 12.7091 1.34863C12.6556 1.245 12.6144 1.13549 12.5862 1.0223C12.5863 1.01708 12.5844 1.01203 12.5809 1.00811C12.5775 1.00418 12.5727 1.00167 12.5675 1.00104C12.5624 0.999652 12.5571 0.999652 12.552 1.00104C12.5509 1.00104 12.5492 1.00296 12.548 1.00338C12.5467 1.00381 12.5439 1.00572 12.542 1.00657L12.5452 1.00104C10.4757 2.21279 9.77348 4.45602 9.70885 5.57805C9.80494 5.57146 9.90018 5.56339 9.9984 5.56339C10.7327 5.56473 11.4536 5.76051 12.0877 6.13081C12.7218 6.50112 13.2465 7.03274 13.6086 7.67162C13.029 7.27019 12.321 7.09829 11.6219 7.18926C14.5854 8.67099 13.7903 13.7735 9.68334 13.5809C9.31766 13.5659 8.95629 13.4962 8.61126 13.3741C8.53062 13.3439 8.44998 13.3109 8.36934 13.275C8.32278 13.2537 8.27623 13.2325 8.23031 13.2087L8.23605 13.2123C8.19608 13.1932 8.15611 13.1732 8.11615 13.1525C8.15463 13.171 8.19077 13.191 8.23031 13.2087C7.22413 12.6887 6.39334 11.7057 6.28959 10.5122C6.28959 10.5122 6.66991 9.09489 9.01284 9.09489C9.26603 9.09489 9.99074 8.38804 10.0037 8.1831C10.0005 8.11614 8.56662 7.54534 8.00752 6.99474C7.70883 6.7003 7.56703 6.55851 7.44139 6.452C7.37349 6.39449 7.30253 6.34069 7.22881 6.29086C7.04107 5.63374 7.03307 4.93829 7.20563 4.27702C6.44562 4.6452 5.7703 5.16713 5.22241 5.80977H5.21858C4.89204 5.39587 4.915 4.03105 4.93371 3.74597C4.83711 3.7848 4.7449 3.83375 4.65862 3.89202C4.37036 4.09776 4.10088 4.32861 3.85334 4.58187C3.57126 4.86787 3.31362 5.17699 3.08314 5.50599V5.50726V5.50577C2.55342 6.25675 2.1777 7.10522 1.97768 8.00219L1.96663 8.05661C1.95111 8.12911 1.88159 8.49731 1.8716 8.57639C1.8716 8.58234 1.8716 8.57022 1.8716 8.57639C1.80802 8.95647 1.76741 9.34003 1.75 9.725V9.76752C1.75181 11.8305 2.52744 13.8178 3.9236 15.3366C5.31977 16.8554 7.23488 17.7952 9.29045 17.9703C11.346 18.1453 13.3925 17.5429 15.0254 16.2821C16.6583 15.0213 17.7588 13.1938 18.1095 11.1608C18.1233 11.0545 18.1345 10.9493 18.1469 10.8419C18.3166 9.43933 18.1329 8.01656 17.6124 6.70307Z"
    }), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "a",
        x1: 16.522,
        x2: 2.844,
        y1: 3.634,
        y2: 16.83,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.048,
        stopColor: "#FFF44F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.111,
        stopColor: "#FFE847"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.225,
        stopColor: "#FFC830"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.368,
        stopColor: "#FF980E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.401,
        stopColor: "#FF8B16"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.462,
        stopColor: "#FF672A"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.534,
        stopColor: "#FF3647"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.705,
        stopColor: "#E31587"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "b",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(15.89 2.887) scale(17.1764)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.129,
        stopColor: "#FFBD4F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.186,
        stopColor: "#FFAC31"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.247,
        stopColor: "#FF9D17"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.283,
        stopColor: "#FF980E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.403,
        stopColor: "#FF563B"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.467,
        stopColor: "#FF3750"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.71,
        stopColor: "#F5156C"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.782,
        stopColor: "#EB0878"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.86,
        stopColor: "#E50080"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "c",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(9.613 9.909) scale(17.1764)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.3,
        stopColor: "#960E18"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.351,
        stopColor: "#B11927",
        stopOpacity: 0.74
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.435,
        stopColor: "#DB293D",
        stopOpacity: 0.343
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.497,
        stopColor: "#F5334B",
        stopOpacity: 0.094
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.53,
        stopColor: "#FF3750",
        stopOpacity: 0
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "d",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(11.684 -1.011) scale(12.4436)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.132,
        stopColor: "#FFF44F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.252,
        stopColor: "#FFDC3E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.506,
        stopColor: "#FF9D12"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.526,
        stopColor: "#FF980E"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "e",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "matrix(8.17846 0 0 8.17845 7.714 14.396)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.353,
        stopColor: "#3A8EE6"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.472,
        stopColor: "#5C79F0"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.669,
        stopColor: "#9059FF"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 1,
        stopColor: "#C139E6"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "f",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "matrix(4.21474 -1.019 1.193 4.9344 10.552 8.501)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.206,
        stopColor: "#9059FF",
        stopOpacity: 0
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.278,
        stopColor: "#8C4FF3",
        stopOpacity: 0.064
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.747,
        stopColor: "#7716A8",
        stopOpacity: 0.45
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.975,
        stopColor: "#6E008B",
        stopOpacity: 0.6
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "g",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(9.397 2.184) scale(5.88357)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#FFE226"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.121,
        stopColor: "#FFDB27"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.295,
        stopColor: "#FFC82A"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.502,
        stopColor: "#FFA930"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.732,
        stopColor: "#FF7E37"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.792,
        stopColor: "#FF7139"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "h",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(14.021 -1.548) scale(25.1026)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.113,
        stopColor: "#FFF44F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.456,
        stopColor: "#FF980E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.622,
        stopColor: "#FF5634"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.716,
        stopColor: "#FF3647"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.904,
        stopColor: "#E31587"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "i",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "rotate(83.976 6.037 6.538) scale(18.3983 12.0746)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#FFF44F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.06,
        stopColor: "#FFE847"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.168,
        stopColor: "#FFC830"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.304,
        stopColor: "#FF980E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.356,
        stopColor: "#FF8B16"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.455,
        stopColor: "#FF672A"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.57,
        stopColor: "#FF3647"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.737,
        stopColor: "#E31587"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "j",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(9.258 4.363) scale(15.672)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.137,
        stopColor: "#FFF44F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.48,
        stopColor: "#FF980E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.592,
        stopColor: "#FF5634"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.655,
        stopColor: "#FF3647"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.904,
        stopColor: "#E31587"
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "k",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(13.395 5.28) scale(17.1528)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.094,
        stopColor: "#FFF44F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.231,
        stopColor: "#FFE141"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.509,
        stopColor: "#FFAF1E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.626,
        stopColor: "#FF980E"
    })), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "l",
        x1: 16.358,
        x2: 4.719,
        y1: 3.563,
        y2: 15.201,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.167,
        stopColor: "#FFF44F",
        stopOpacity: 0.8
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.266,
        stopColor: "#FFF44F",
        stopOpacity: 0.634
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.489,
        stopColor: "#FFF44F",
        stopOpacity: 0.217
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.6,
        stopColor: "#FFF44F",
        stopOpacity: 0
    }))), pM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#fff"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#4286F5",
        d: "M17.38 8.6c.47 3.2-.46 5.66-2.16 7.2l-2.42-1.88a3.97 3.97 0 0 0 1.57-2.36h-4.2V8.6h7.2Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#EA4235",
        d: "m15.3 4.3-2.2 2.18a4.22 4.22 0 0 0-2.94-1.15 4.6 4.6 0 0 0-4.35 3.18l-2.5-1.95A7.66 7.66 0 0 1 15.3 4.3Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#34A853",
        d: "m12.8 13.92 2.42 1.89a7.43 7.43 0 0 1-5.06 1.84 7.66 7.66 0 0 1-6.85-4.23l2.5-1.95a4.6 4.6 0 0 0 4.35 3.18c1.1 0 1.97-.26 2.64-.73Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#FBBC05",
        d: "m3.31 6.56 2.5 1.94c-.32.97-.32 2 0 2.97l-2.5 1.95a7.66 7.66 0 0 1 0-6.86Z"
    })), TM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#F6DE1E"
    }), /* @__PURE__ */ L.createElement("path", {
        d: "m9.82 13.28 1.82-1.07.3.42a2.38 2.38 0 0 0 3 .7 1 1 0 0 0 .15-1.66c-.14-.13-.3-.23-.46-.31-.44-.22-.9-.42-1.35-.62a6.9 6.9 0 0 1-1.78-1 3.08 3.08 0 0 1-1-2.68 2.92 2.92 0 0 1 2.56-2.69 4.58 4.58 0 0 1 1.88.06 3.28 3.28 0 0 1 2.13 1.7l-1.78 1.1-.26-.38a1.43 1.43 0 0 0-1.55-.55 1 1 0 0 0-.5 1.64c.17.18.37.32.6.42.48.25.99.45 1.49.68.55.24 1.06.54 1.53.91a3 3 0 0 1 1.13 2.75 2.89 2.89 0 0 1-2.24 2.7 5.33 5.33 0 0 1-3.76-.27 3.83 3.83 0 0 1-1.91-1.85Zm-8.07.25 1.84-1.12.36.53a1.35 1.35 0 0 0 1.58.57.8.8 0 0 0 .61-.52c.06-.19.1-.37.13-.56V4.4h2.26v7.73c.01.43-.04.87-.15 1.3a2.72 2.72 0 0 1-2 2c-1.03.3-2.13.2-3.1-.29a3.37 3.37 0 0 1-1.53-1.62Z"
    })), hM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#FF2D20"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        fillRule: "evenodd",
        d: "M18 5.75v3.38a.24.24 0 0 1-.12.2l-2.78 1.62v3.17a.24.24 0 0 1-.12.2l-5.8 3.35a.17.17 0 0 1-.05.02H9.1a.27.27 0 0 1-.12 0h-.02a.37.37 0 0 1-.04-.02l-5.8-3.34a.24.24 0 0 1-.13-.21V4.17l.01-.06v-.02c0-.02 0-.03.02-.04l.01-.02.03-.04.02-.02.03-.01 2.9-1.68a.24.24 0 0 1 .24 0l2.9 1.68.02.01.03.02a.33.33 0 0 1 .05.1v6.29l2.42-1.4V5.74l.02-.04.01-.02.03-.03.02-.01.03-.03 2.9-1.67a.25.25 0 0 1 .23 0l2.9 1.67.03.03.02.01.02.03.02.02.01.04.08.02ZM17.52 9V6.23l-1.01.58-1.4.81v2.76l2.41-1.4Zm-2.9 4.99v-2.76l-1.38.79-3.95 2.25v2.78l5.34-3.06ZM3.49 4.58v9.4l5.33 3.06v-2.78l-2.78-1.58-.03-.02-.02-.02-.02-.02-.02-.02v-.03l-.02-.03V5.98l-1.42-.8-1.02-.59Zm2.67-1.8L3.73 4.17l2.42 1.4 2.42-1.4-2.42-1.4Zm1.26 8.69 1.4-.81V4.59l-1.02.58-1.4.81v6.08l1.02-.6Zm7.45-7.05-2.43 1.4 2.42 1.39 2.42-1.4-2.41-1.4Zm-.24 3.2-1.41-.8-1.02-.58v2.75l1.4.8 1.02.59V7.62Zm-5.57 6.22 3.55-2.03 1.77-1-2.41-1.4L9.17 11l-2.53 1.46 2.41 1.37Z",
        clipRule: "evenodd"
    })), AM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#2D4C91"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#425D9C",
        d: "M0 20V0l20 20H0Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#FEFEFE",
        d: "M8.12 5v1.78l.02.06v2.31l.01.4.02.4v.1a.04.04 0 0 1-.03-.01L7.32 8.7 5.05 5.07A.13.13 0 0 0 4.92 5h-.8v5.96h.69v-4.4a5.47 5.47 0 0 0-.03-.68.5.5 0 0 1 0-.06l.02.03.01.03.05.1.12.24 2.95 4.67c0 .02.02.04.04.05l.07.02h.76V5h-.68ZM10.32 5.01V10.97h3.1v-.66h-2.39V8.25h2.09v-.63h-2.09V5.63h2.24v-.62h-2.95ZM2.88 10.77a.47.47 0 0 0 .03-.19.47.47 0 0 0-.12-.35.45.45 0 0 0-.34-.15.44.44 0 0 0-.33.15.47.47 0 0 0-.12.35.47.47 0 0 0 .12.35.45.45 0 0 0 .33.15.45.45 0 0 0 .34-.15c.04-.04.07-.1.1-.16ZM13.95 5.63h1.68v5.32h.67V5.63H18V5h-4.05v.63ZM6.26 15.07h-.3V12.5h.38l.88 1.57h.02l.88-1.57h.38v2.57h-.3v-2.06h-.02l-.93 1.62H7.2L6.28 13h-.02v2.07Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#FEFEFE",
        fillRule: "evenodd",
        d: "M9.95 12.5h.4l.97 2.54v.03h-.35l-.25-.67H9.58l-.25.67h-.34v-.03l.96-2.54Zm.2.36-.47 1.25h.94l-.46-1.25h-.02Z",
        clipRule: "evenodd"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#FEFEFE",
        d: "M13.7 14.17c0 .59-.38.94-1 .94s-1-.35-1-.94V12.5h.32v1.66c0 .4.22.65.67.65.46 0 .68-.26.68-.65V12.5h.33v1.67ZM14.74 15.07h-.33V12.5h.33v2.57Z"
    })), SM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#1A1A1A"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#E0234E",
        fillRule: "evenodd",
        d: "M11.2154 1.75c-.1193 0-.2301.0256-.3324.0597.2173.1448.3366.3366.3963.554.0043.0297.0128.051.0171.0809.0042.0255.0085.0511.0085.0767.017.375-.098.4218-.179.6434-.1236.2855-.0895.5923.0597.8395a.5039.5039 0 0 0 .0511.0937c-.1619-1.078.7372-1.24.9034-1.5766.0127-.294-.2301-.49-.4219-.6264-.1832-.1108-.3494-.1449-.5028-.1449Zm1.355.2429c-.017.098-.0042.0724-.0085.1236-.0042.034-.0042.0767-.0085.1108-.0085.034-.017.0681-.0298.1022a.9495.9495 0 0 1-.0341.1023c-.0171.034-.0298.0639-.0469.098-.0128.017-.0213.034-.0341.0511l-.0255.0384a1.4831 1.4831 0 0 1-.064.0852c-.0255.0256-.0468.0554-.0767.0767v.0043c-.0255.0213-.0511.0468-.0809.0681-.0895.0682-.1918.1194-.2855.1833-.0298.0213-.0597.0383-.0852.0639a.621.621 0 0 0-.081.0682c-.0298.0255-.0511.0511-.0767.081-.0213.0255-.0469.0553-.0639.0852-.0213.0298-.0426.0596-.0597.0894-.017.0341-.0298.064-.0469.098-.0127.0341-.0255.064-.034.098-.0128.0384-.0213.0725-.0299.1066-.0042.017-.0042.0383-.0085.0554-.0043.017-.0043.034-.0085.0511 0 .0341-.0043.0724-.0043.1065 0 .0256 0 .0512.0043.0767 0 .0341.0043.0682.0128.1066.0043.034.0128.0681.0213.1022.0128.0341.0213.0682.0341.1023.0085.0213.0213.0426.0298.0597l-.9801-.3793a10.4914 10.4914 0 0 0-.4943-.1278l-.2684-.064a7.9133 7.9133 0 0 0-.7755-.115c-.0085 0-.0128-.0042-.0213-.0042a7.6176 7.6176 0 0 0-.7628-.0384 8.039 8.039 0 0 0-.5582.0213c-.26.017-.5199.0511-.7798.0938-.0639.0085-.1278.0213-.1917.034a8.55 8.55 0 0 0-.3835.0853l-.1918.051c-.064.0257-.1236.0555-.1832.081l-.1406.064c-.0086.0042-.017.0042-.0213.0085-.0427.0213-.081.0383-.1194.0596a.2083.2083 0 0 0-.0298.0128 1.8785 1.8785 0 0 0-.132.0682c-.03.0128-.0597.0298-.0853.0426a.385.385 0 0 1-.0383.0213c-.0384.0213-.0768.0426-.1108.064a1.071 1.071 0 0 0-.1023.0639c-.0298.0213-.0597.0383-.0852.0596-.0043.0043-.0085.0043-.0128.0085a.9833.9833 0 0 0-.081.0597l-.0085.0085-.064.0511c-.0084.0043-.017.0128-.0255.017-.0213.0171-.0426.0384-.0639.0555-.0043.0085-.0128.0128-.017.017-.0256.0256-.0512.047-.0767.0725-.0043 0-.0043.0042-.0086.0085a1.1979 1.1979 0 0 0-.0767.0724c-.0042.0043-.0042.0085-.0085.0085a1.0015 1.0015 0 0 0-.0639.0682c-.0085.0085-.0213.017-.0298.0256-.0213.0256-.0469.0511-.0725.0767-.0042.0085-.0128.0128-.017.0213-.0341.034-.064.0682-.098.1023l-.0128.0128c-.0682.0724-.1406.1448-.2173.2087a2.4213 2.4213 0 0 1-.2386.1875 3.2231 3.2231 0 0 1-.2557.162 2.597 2.597 0 0 1-.2685.1278 3.0709 3.0709 0 0 1-.277.1023c-.179.0383-.3622.1108-.5198.1235-.0341 0-.0724.0086-.1065.0128-.0384.0085-.0725.017-.1066.0256l-.1022.0383a1.09 1.09 0 0 0-.1023.047c-.0298.0212-.064.0383-.0937.0596a.6963.6963 0 0 0-.0853.0724c-.0298.0213-.0596.0511-.0852.0767-.0256.0298-.0511.0554-.0724.0852-.0213.0341-.0469.064-.064.098a.7506.7506 0 0 0-.0596.098c-.017.0384-.034.0725-.0469.1108-.0128.0341-.0255.0725-.0383.1108-.0085.0341-.017.0682-.0213.1023 0 .0043-.0043.0085-.0043.0128-.0085.0383-.0085.0895-.0128.115-.0042.0298-.0085.0554-.0085.0852 0 .0171 0 .0384.0043.0554a.4518.4518 0 0 0 .017.081.568.568 0 0 0 .0298.0767v.0043a.7396.7396 0 0 0 .047.0767c.017.0255.034.0511.0553.0767.0213.0213.0469.0468.0725.0682a.624.624 0 0 0 .081.0681c.1022.0895.1278.1193.2598.1875.0213.0128.0427.0213.0682.0341.0043 0 .0085.0043.0128.0043 0 .0085 0 .0128.0043.0213a.873.873 0 0 0 .0213.1022.5751.5751 0 0 0 .034.1023c.0129.0256.0214.0511.0342.0767.0042.0085.0085.017.0128.0213.017.0341.034.064.051.0938l.064.0895c.0213.0255.0469.0553.0724.081.0256.0255.0512.0468.081.0724 0 0 .0043.0042.0085.0042.0256.0213.0511.0426.0767.0597a.6778.6778 0 0 0 .0938.0554c.0298.017.0639.034.098.0469.0255.0127.0554.0213.0852.0298.0043.0043.0085.0043.017.0085.017.0043.0384.0085.0554.0128-.0128.23-.017.4474.017.5241.0384.0852.226-.1747.4134-.473-.0255.294-.0426.6392 0 .7415.0469.1065.3026-.2259.5241-.5923 3.0212-.6989 5.7782 1.3891 6.068 4.3378-.0555-.4602-.6222-.7159-.8821-.652-.1279.3154-.3452.7202-.6946.9716a2.732 2.732 0 0 0-.0426-.8522c-.0938.392-.277.7584-.5284 1.0738-.4048.0298-.8096-.1662-1.0227-.4602-.017-.0128-.0213-.0384-.034-.0554-.0129-.0299-.0256-.0597-.0342-.0895a.3544.3544 0 0 1-.0255-.0895c-.0043-.0298-.0043-.0597-.0043-.0937v-.064a.6801.6801 0 0 1 .0213-.0894.729.729 0 0 1 .0298-.0895c.017-.0299.0299-.0597.0512-.0895.0724-.2046.0724-.3707-.0597-.4687a.4833.4833 0 0 0-.081-.0427c-.017-.0042-.0383-.0127-.0553-.017-.0128-.0043-.0213-.0085-.0341-.0128a.6913.6913 0 0 0-.0895-.0213.3253.3253 0 0 0-.0895-.0128.7068.7068 0 0 0-.0937-.0085c-.0213 0-.0427.0043-.064.0043a.3294.3294 0 0 0-.0937.0128.6555.6555 0 0 0-.0895.017.7441.7441 0 0 0-.0895.0298c-.0298.0128-.0554.0256-.0852.0384-.0256.0128-.0511.0298-.081.0426-.9928.6477-.4005 2.1647.277 2.6036-.2557.0468-.5156.1022-.588.1576l-.0085.0085c.1832.1108.375.2046.5752.2855.2727.0895.5625.1705.6903.2046v.0042a4.12 4.12 0 0 0 1.0738.0767c1.8877-.1321 3.4345-1.5681 3.7158-3.46.0085.0383.017.0724.0255.1108.0128.0767.0299.1576.0384.2386v.0043c.0085.0383.0128.0767.017.1108v.017c.0043.0384.0085.0767.0085.1108.0043.0469.0086.0937.0086.1406v.0682c0 .0213.0042.0469.0042.0682 0 .0255-.0042.0511-.0042.0767v.0596c0 .0299-.0043.0554-.0043.0853 0 .017 0 .034-.0043.0554 0 .0298-.0042.0596-.0042.0937-.0043.0128-.0043.0256-.0043.0383-.0043.0341-.0085.064-.0128.0981 0 .0127 0 .0255-.0043.0383-.0042.0426-.0128.081-.017.1236v.0085c-.0085.0384-.0171.081-.0256.1193v.0128a47.477 47.477 0 0 1-.0256.1151c0 .0042-.0042.0127-.0042.017a1.1596 1.1596 0 0 1-.0298.1151v.0127c-.0128.0427-.0256.081-.0341.1194-.0043.0042-.0043.0085-.0043.0085l-.0384.1278c-.017.0426-.0298.081-.0468.1236-.0171.0426-.0299.0852-.0469.1236-.0171.0426-.0341.0809-.0511.1235h-.0043c-.0171.0384-.0341.081-.0554.1193a.207.207 0 0 1-.0128.0299c-.0043.0042-.0043.0085-.0085.0128-.277.5582-.686 1.0482-1.1974 1.4317-.034.0213-.0682.0469-.1022.0724-.0086.0086-.0214.0128-.0299.0213a1.7283 1.7283 0 0 1-.0937.064l.0128.0255h.0042l.179-.0255h.0043a9.218 9.218 0 0 0 .3323-.0597.7537.7537 0 0 0 .0938-.0213c.0213-.0043.0383-.0085.0596-.0128.0299-.0043.0597-.0128.0895-.017.0256-.0085.0511-.0128.0767-.0213.4261-.1023.8395-.2429 1.2357-.4091-.6775.9247-1.5851 1.6704-2.6461 2.1604.49-.0341.98-.1151 1.453-.2514 1.7173-.5071 3.1618-1.6619 4.0268-3.2172a6.8014 6.8014 0 0 1-1.1462 2.7399 6.7117 6.7117 0 0 0 1.1377-.9459 6.7537 6.7537 0 0 0 1.7939-3.622 6.7853 6.7853 0 0 1 .1236 2.0539c3.0766-4.291.2557-8.7397-.9247-9.9115-.0042-.0085-.0085-.0128-.0085-.0213-.0042.0043-.0043.0043-.0043.0085 0-.0042 0-.0042-.0042-.0085 0 .0511-.0043.1023-.0085.1534a5.8096 5.8096 0 0 1-.0426.2855c-.0213.0938-.0469.1875-.0725.2813a3.5133 3.5133 0 0 1-.1023.2727 3.6249 3.6249 0 0 1-.1278.2599c-.0469.081-.098.1662-.1534.2429a3.2451 3.2451 0 0 1-.1747.23c-.0639.0768-.1321.145-.2003.2131a2.749 2.749 0 0 1-.1235.1066c-.0341.0298-.064.0554-.098.0852a2.382 2.382 0 0 1-.2387.1662c-.0809.0511-.1662.1022-.2514.1449a7.3882 7.3882 0 0 1-.2684.1193 3.007 3.007 0 0 1-.277.0894 3.4422 3.4422 0 0 1-.2855.064c-.098.017-.196.0255-.2898.034a3.2708 3.2708 0 0 1-.2045.0086c-.098 0-.196-.0085-.2898-.017-.098-.0086-.196-.0214-.2897-.0427a2.1534 2.1534 0 0 1-.2855-.0724h-.0043c.0938-.0085.1875-.017.2813-.0341.098-.017.1917-.0384.2855-.064a3.002 3.002 0 0 0 .2769-.0894c.0938-.0341.1833-.0767.2685-.1193.0895-.0427.1704-.0895.2557-.1406.0809-.0554.1619-.1108.2386-.1705a2.3314 2.3314 0 0 0 .2173-.1917c.0724-.064.1364-.1364.2003-.2088a4.2167 4.2167 0 0 0 .1789-.2302c.0086-.0127.0171-.0298.0256-.0426.0426-.0681.0852-.1363.1236-.2045a2.9446 2.9446 0 0 0 .2301-.5326c.0298-.0895.0511-.1833.0724-.277.0171-.098.0341-.1918.0426-.2855.0085-.098.0171-.196.0171-.2898 0-.0681-.0043-.1363-.0085-.2045a5.8943 5.8943 0 0 0-.0341-.2855 3.1281 3.1281 0 0 0-.0639-.2855c-.0299-.0895-.0597-.1832-.0938-.2727-.0341-.0895-.0767-.179-.1193-.2642-.0469-.0852-.0937-.1704-.1449-.2514a4.7429 4.7429 0 0 0-.1704-.2344 9.1534 9.1534 0 0 0-.196-.2173 2.7053 2.7053 0 0 0-.1108-.1065 7.8697 7.8697 0 0 0-.5923-.4176.802.802 0 0 0-.0852-.0426c-.1407-.0895-.2728-.1364-.4049-.179Z",
        clipRule: "evenodd"
    })), RM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#a)",
        d: "M7.04 5 18.2 19.38c-.24.21-.5.42-.76.62h-.86L6.62 7.14V15H4.94V5h2.1Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#b)",
        d: "M15.08 5H13.4v10h1.67V5Z"
    }), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "a",
        x1: 12.58,
        x2: 17.51,
        y1: 13.68,
        y2: 19.79,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#fff"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 1,
        stopColor: "#fff",
        stopOpacity: 0
    })), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "b",
        x1: 14.24,
        x2: 14.22,
        y1: 5,
        y2: 12.34,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#fff"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 1,
        stopColor: "#fff",
        stopOpacity: 0
    }))), _O = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#333"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#a)",
        d: "M10.38 2.1a.8.8 0 0 0-.78 0L3.16 5.72a.74.74 0 0 0-.38.65v7.25c0 .27.15.52.38.66L9.6 17.9a.8.8 0 0 0 .78 0l6.44-3.62a.74.74 0 0 0 .38-.66V6.37a.77.77 0 0 0-.38-.65L10.38 2.1Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#b)",
        d: "M16.84 5.72 10.37 2.1a1.08 1.08 0 0 0-.2-.07L2.92 14.1a.8.8 0 0 0 .21.18L9.6 17.9c.19.1.4.13.6.07L17 5.85a.48.48 0 0 0-.16-.13Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#c)",
        d: "M16.84 14.28c.18-.1.32-.28.38-.48L10.14 2.01a.8.8 0 0 0-.55.1L3.16 5.7 10.1 18l.3-.09 6.45-3.63Z"
    }), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "a",
        x1: 12.61,
        x2: 7.04,
        y1: 4.8,
        y2: 16.47,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#3F873F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.33,
        stopColor: "#3F8B3D"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.64,
        stopColor: "#3E9638"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.93,
        stopColor: "#3DA92E"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 1,
        stopColor: "#3DAE2B"
    })), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "b",
        x1: 9.01,
        x2: 25.03,
        y1: 10.85,
        y2: -1.32,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.14,
        stopColor: "#3F873F"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.4,
        stopColor: "#52A044"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.71,
        stopColor: "#64B749"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.91,
        stopColor: "#6ABF4B"
    })), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "c",
        x1: 2.55,
        x2: 17.44,
        y1: 10,
        y2: 10,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        offset: 0.09,
        stopColor: "#6ABF4B"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.29,
        stopColor: "#64B749"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.6,
        stopColor: "#52A044"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.86,
        stopColor: "#3F873F"
    }))), mM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#5C669A"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M3.06 7.48H5.5c.72 0 1.24.21 1.57.62.32.41.42.97.32 1.66a3.2 3.2 0 0 1-.87 1.78c-.27.3-.6.5-.98.6a4.5 4.5 0 0 1-1.08.13h-1.1L3.03 14H1.75l1.3-6.52Zm1.06 1.04-.54 2.73h.23c.5.01 1-.04 1.47-.18.39-.12.65-.57.77-1.32.11-.64 0-1-.33-1.1A4.21 4.21 0 0 0 4.3 8.5h-.2.02Zm4.71-2.77h1.26l-.36 1.73h1.13c.5-.02.98.11 1.39.39.3.24.4.7.27 1.38l-.6 3.03h-1.3l.6-2.9a.82.82 0 0 0-.06-.64.77.77 0 0 0-.63-.19H9.5l-.74 3.73H7.51l1.31-6.52.01-.01Zm5.05 1.73h2.45c.72 0 1.24.21 1.56.62.32.41.43.97.32 1.66a3.2 3.2 0 0 1-.87 1.78c-.26.3-.6.5-.98.6a4.5 4.5 0 0 1-1.07.13h-1.1L13.84 14h-1.27l1.31-6.52Zm1.07 1.04-.55 2.73h.24c.5.01.99-.04 1.46-.18.39-.12.65-.57.77-1.32.11-.64 0-1-.32-1.1a4.19 4.19 0 0 0-1.43-.14h-.19"
    })), _M = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#5A9FD4"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M9.9 2c-.6 0-1.22.05-1.82.16-1.61.28-1.9.88-1.9 1.98V5.6H10v.48H4.74c-1.1 0-2.08.67-2.38 1.93a7.18 7.18 0 0 0 0 3.88c.27 1.13.92 1.94 2.02 1.94H5.7v-1.74A2.43 2.43 0 0 1 8.08 9.7h3.81a1.92 1.92 0 0 0 1.91-1.94V4.14c0-1.03-.87-1.81-1.9-1.98-.66-.11-1.33-.16-2-.16ZM7.85 3.17a.73.73 0 1 1 .03 1.46.73.73 0 0 1-.03-1.46Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M14.28 6.08v1.7a2.45 2.45 0 0 1-2.39 2.42H8.1a1.95 1.95 0 0 0-1.92 1.94v3.63c0 1.03.9 1.64 1.91 1.94 1.24.39 2.57.39 3.81 0 .97-.28 1.91-.84 1.91-1.94v-1.46H10v-.48h5.71c1.11 0 1.52-.77 1.91-1.94.4-1.2.38-2.34 0-3.88-.27-1.1-.8-1.93-1.9-1.93h-1.44Zm-2.15 9.2a.73.73 0 1 1-.5.22.72.72 0 0 1 .5-.22Z"
    })), NM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#212121"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M15.42 16.5c0-.77 0-1.47-.12-2.97-.14-1.51-.93-2.28-2.27-2.55 1.59-.2 2.77-1.44 2.77-3.35 0-2.54-1.68-4.13-5.05-4.13H4.5v2.65h5.63c1.49 0 2.23.64 2.23 1.7 0 1.2-.74 1.64-2.23 1.64H4.5v2.71h5.47c1.17 0 1.82.33 1.92 1.82.08 1.02.07 1.52.06 2v.48h3.47Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M4.5 14.48v2.02h4.42v-1.3c0-.26-.13-.72-.75-.72H4.5Z"
    })), IM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#BD0012"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "m6.63 15.68 6.57-4.2 3.36 5.57-9.93-1.35v-.02ZM17.5 5.3v.1c0 .42-.05.85-.07 1.27v.84c0 .56-.06 1.12-.09 1.7v.84l-.08 1.66v.86c0 .3-.05.86-.07 1.3 0 .28 0 .56-.05.83 0 .45-.04.89-.06 1.33-.02.44 0 .63-.05.94l-.05-.05-.54-.83-2.86-4.6c-.12-.2-.12-.2 0-.41l3.13-4.69c.24-.34.46-.7.7-1.03l.09-.06ZM3.6 9.61l1.15-1.72c.16-.23.35-.43.56-.62L7.33 5.4c.26-.25.56-.46.87-.64l2.12-1.2a.3.3 0 0 1 .27 0c.3.13.61.23.94.35h.06v.07l-.82 1.63a.74.74 0 0 1-.18.24l-2.65 2.4-.46.45a1.8 1.8 0 0 1-.3.21 44.84 44.84 0 0 1-2.8 1.4.2.2 0 0 1-.12-.05l-.65-.65Zm4.03-.12 5.18 1.66-6.56 4.22c0-.07 1.31-5.7 1.38-5.88Zm9.26-4.2-3.68 5.54-1.88-4.6c.05 0 4.88-.87 5.56-.94ZM7.7 9.04l3.24-2.87 1.87 4.55-5.1-1.68Zm-1.8 6.48-3.4.09 1.77-4.24 1.62 4.15Zm.04-.98L4.5 10.79l2.69-1.37-.2.86-.2.86-.22.86-.2.84-.2.85-.22.85Zm5.25-8.75a.3.3 0 0 1 0-.12l.8-1.62c.06-.11.1-.13.21-.1l1.2.31 2.66.7h.13c-.05.1-4.42.77-5 .83Zm1.88-2.08 3.65-.8.78 2.02-4.43-1.22ZM3.16 16.12a.22.22 0 0 1 .17-.05h.69l1.65-.05c.28 0 .56.01.84.06l.94.1 1.13.16 1.13.16 1.06.15 1 .14 1.4.19 1.12.15h.1-.05l-.77-.08-.87-.07-1.1-.1-.87-.1-1.07-.09-.86-.08-1.08-.07-.86-.07-1.06-.1-.87-.08-.94-.08-.83-.09Zm-.66-1.7.88-4.34.33.34.27.27c.1.12.12.17.06.31l-.69 1.59-.73 1.7-.12.15v-.01Zm8.7-11.16c.43-.08 3.47-.48 3.55-.46h-.07l-.69.16-1.83.46c-.25.06-.5.04-.73-.07l-.22-.09Z"
    })), OM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#fff"
    }), /* @__PURE__ */ L.createElement("g", {
        filter: "url(#a)",
        opacity: 0.53
    }, /* @__PURE__ */ L.createElement("path", {
        d: "M17.6325 10.6143C17.6325 11.5842 17.4341 12.5446 17.0486 13.4407C16.6632 14.3368 16.0982 15.151 15.386 15.8369C14.6737 16.5227 13.8282 17.0667 12.8976 17.4379C11.967 17.8091 10.9697 18.0001 9.96242 18.0001C8.95518 18.0001 7.9578 17.8091 7.02723 17.4379C6.09666 17.0667 5.25112 16.5227 4.53889 15.8369C3.82666 15.151 3.26169 14.3368 2.87624 13.4407C2.49078 12.5446 2.29239 11.5842 2.29239 10.6143C2.29239 8.65547 3.10048 6.77687 4.53889 5.39176C5.9773 4.00666 7.9282 3.22852 9.96242 3.22852C10.9697 3.22852 11.967 3.41955 12.8976 3.79073C13.8282 4.1619 14.6737 4.70593 15.386 5.39176C16.0982 6.0776 16.6632 6.8918 17.0486 7.78789C17.4341 8.68397 17.6325 9.64439 17.6325 10.6143Z"
    })), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#b)",
        stroke: "#CDCDCD",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 0.15,
        d: "M17.9241 9.96204C17.9241 11.0076 17.7181 12.043 17.318 13.009C16.9179 13.975 16.3314 14.8527 15.5921 15.5921C14.8527 16.3314 13.975 16.9179 13.009 17.318C12.043 17.7181 11.0076 17.9241 9.96203 17.9241C7.85037 17.9241 5.8252 17.0852 4.33203 15.5921C2.83885 14.0989 2 12.0737 2 9.96204C2 7.85038 2.83885 5.8252 4.33203 4.33203C5.8252 2.83886 7.85037 2 9.96203 2C11.0076 2 12.043 2.20595 13.009 2.60608C13.975 3.00621 14.8527 3.59269 15.5921 4.33203C16.3314 5.07137 16.9179 5.9491 17.318 6.9151C17.7181 7.8811 17.9241 8.91645 17.9241 9.96204Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "url(#c)",
        d: "M17.3002 9.96217C17.3002 11.9084 16.5271 13.7748 15.1509 15.151C13.7747 16.5272 11.9082 17.3003 9.96204 17.3003C8.01585 17.3003 6.14936 16.5272 4.77319 15.151C3.39702 13.7748 2.6239 11.9084 2.6239 9.96217C2.6239 8.01597 3.39702 6.14948 4.77319 4.77332C6.14936 3.39715 8.01585 2.62402 9.96204 2.62402C11.9082 2.62402 13.7747 3.39715 15.1509 4.77332C16.5271 6.14948 17.3002 8.01597 17.3002 9.96217Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#F4F2F3",
        d: "M9.96203 3.00659C9.90276 3.00659 9.85504 3.05431 9.85504 3.11358V4.34764C9.85504 4.40691 9.90276 4.45462 9.96203 4.45462C10.0213 4.45462 10.069 4.40691 10.069 4.34764V3.11358C10.069 3.05431 10.0213 3.00659 9.96203 3.00659ZM9.26212 3.05083C9.25503 3.05007 9.24773 3.05007 9.24036 3.05092C9.18141 3.05707 9.1389 3.10948 9.14506 3.16843L9.19899 3.68471C9.20514 3.74366 9.25755 3.78617 9.3165 3.78001C9.37546 3.77386 9.41797 3.72145 9.41181 3.6625L9.35792 3.14622C9.35253 3.09464 9.31173 3.05564 9.26212 3.05083ZM10.6668 3.05134C10.6172 3.05612 10.5764 3.09511 10.571 3.14668L10.5167 3.66292C10.5105 3.72186 10.553 3.77432 10.6119 3.78052C10.6709 3.78672 10.7233 3.74426 10.7295 3.68531L10.7838 3.16903C10.79 3.11009 10.7475 3.05767 10.6885 3.05147C10.6812 3.05071 10.6739 3.05071 10.6668 3.05134ZM8.54314 3.15509C8.53602 3.15515 8.52878 3.15585 8.52153 3.15738C8.46355 3.16965 8.42674 3.22623 8.43902 3.28422L8.6946 4.4915C8.70687 4.54948 8.76345 4.58628 8.82143 4.57401C8.87942 4.56173 8.91622 4.5052 8.90395 4.44721L8.64837 3.23989C8.63762 3.18915 8.59298 3.1547 8.54314 3.15509ZM11.3858 3.15611C11.3359 3.1556 11.2913 3.19015 11.2805 3.24088L11.024 4.44802C11.0117 4.506 11.0485 4.56259 11.1065 4.5749C11.1644 4.58723 11.221 4.55045 11.2333 4.49248L11.4898 3.28534C11.5021 3.22737 11.4654 3.17077 11.4074 3.15846C11.4001 3.15693 11.3929 3.15611 11.3858 3.15611ZM7.85698 3.34856C7.84313 3.34729 7.82883 3.34881 7.81473 3.35349C7.75836 3.37182 7.72771 3.4319 7.74603 3.48827L7.90644 3.98197C7.92476 4.03834 7.9849 4.06899 8.04127 4.05068C8.09764 4.03235 8.12825 3.97222 8.10993 3.91585L7.94952 3.42215C7.93579 3.37987 7.89854 3.35209 7.85698 3.34856ZM12.068 3.34881C12.0265 3.35235 11.9893 3.38014 11.9755 3.42242L11.815 3.91607C11.7967 3.97243 11.8273 4.03257 11.8837 4.0509C11.94 4.06922 12.0002 4.03859 12.0185 3.98224L12.179 3.48854C12.1973 3.43217 12.1667 3.37203 12.1103 3.35371C12.0963 3.34913 12.0819 3.34764 12.068 3.34881ZM7.17845 3.59686C7.16455 3.59712 7.15048 3.60017 7.13694 3.60619C7.08281 3.63026 7.05856 3.69323 7.08264 3.74739L7.58386 4.87506C7.60793 4.92922 7.6709 4.95344 7.72506 4.92937C7.7792 4.9053 7.80349 4.84233 7.77941 4.78816L7.27814 3.66049C7.26009 3.61987 7.22015 3.59605 7.17845 3.59686ZM12.7542 3.60065C12.7126 3.59989 12.6726 3.62355 12.6545 3.66414L12.1517 4.79112C12.1276 4.84525 12.1517 4.90826 12.2058 4.93241C12.26 4.95656 12.323 4.93243 12.3471 4.8783L12.8499 3.75132C12.874 3.69719 12.8499 3.63417 12.7958 3.61002C12.7822 3.604 12.7681 3.60095 12.7542 3.60065ZM6.54863 3.9301C6.52809 3.92858 6.50693 3.93315 6.48768 3.94429C6.43635 3.97392 6.41889 4.0391 6.44852 4.09043L6.70807 4.53998C6.73771 4.59132 6.80288 4.60878 6.85421 4.57914C6.90554 4.5495 6.92301 4.48433 6.89337 4.433L6.63382 3.98345C6.61529 3.95136 6.58287 3.9325 6.54863 3.9301ZM13.3754 3.9301C13.3412 3.93239 13.3088 3.95135 13.2903 3.98344L13.0307 4.43299C13.0011 4.48432 13.0186 4.5495 13.0699 4.57913C13.1212 4.60877 13.1864 4.59131 13.216 4.53998L13.4756 4.09042C13.5052 4.03909 13.4878 3.97392 13.4364 3.94428C13.4172 3.93317 13.396 3.92868 13.3754 3.9301ZM5.93705 4.31155C5.91647 4.31231 5.89585 4.31892 5.87786 4.33196C5.82988 4.36676 5.81927 4.4334 5.85409 4.48138L6.57871 5.48027C6.61351 5.52825 6.68019 5.53886 6.72817 5.50406C6.77615 5.46926 6.78676 5.40262 6.75194 5.35464L6.02728 4.35575C6.00552 4.32576 5.97135 4.31038 5.93705 4.31155ZM13.9947 4.31699C13.9604 4.31572 13.9262 4.3311 13.9044 4.36104L13.1784 5.35896C13.1435 5.40689 13.1541 5.47356 13.202 5.50843C13.2499 5.5433 13.3166 5.5328 13.3515 5.48489L14.0774 4.48697C14.1123 4.43904 14.1017 4.37237 14.0538 4.3375C14.0359 4.32444 14.0152 4.31773 13.9947 4.31699ZM5.39039 4.77001C5.36308 4.76848 5.33522 4.77761 5.31319 4.79743C5.26914 4.83709 5.2656 4.90446 5.30526 4.94852L5.65258 5.33435C5.69224 5.3784 5.75961 5.38195 5.80367 5.34228C5.84772 5.30262 5.85126 5.2352 5.8116 5.19115L5.46432 4.80536C5.44449 4.78333 5.41771 4.77144 5.39039 4.77001ZM14.5345 4.77077C14.5071 4.77229 14.4804 4.78411 14.4605 4.80614L14.1132 5.19188C14.0735 5.23593 14.077 5.30335 14.1211 5.34301C14.1652 5.38267 14.2325 5.37911 14.2722 5.33508L14.6196 4.94934C14.6592 4.90529 14.6557 4.83787 14.6116 4.79821C14.5896 4.77838 14.5618 4.76934 14.5345 4.77077ZM4.86645 5.27328C4.83914 5.27481 4.8124 5.28663 4.79257 5.30865C4.75292 5.35271 4.75646 5.42008 4.8005 5.45974L5.71767 6.28538C5.76172 6.32504 5.82909 6.32149 5.86875 6.27745C5.90841 6.2334 5.90491 6.16602 5.86084 6.12637L4.94364 5.30072C4.9216 5.2809 4.89377 5.27185 4.86645 5.27328ZM15.0609 5.27689C15.0336 5.27537 15.0057 5.28447 14.9837 5.30427L14.066 6.12927C14.0219 6.1689 14.0183 6.23627 14.0579 6.28035C14.0975 6.32443 14.1649 6.32801 14.209 6.28839L15.1268 5.46339C15.1709 5.42376 15.1744 5.35639 15.1348 5.31231C15.115 5.29027 15.0882 5.27835 15.0609 5.27689ZM4.43075 5.83353C4.39645 5.83226 4.36225 5.84771 4.34048 5.87767C4.30564 5.92562 4.31621 5.99225 4.36417 6.02709L4.78413 6.33221C4.83208 6.36705 4.89871 6.35654 4.93355 6.30857C4.96839 6.26062 4.95784 6.19395 4.90991 6.15911L4.48995 5.85399C4.47198 5.84092 4.45133 5.83426 4.43075 5.83353ZM15.4962 5.83742C15.4756 5.83818 15.455 5.84476 15.437 5.85783L15.0169 6.16267C14.9689 6.19748 14.9583 6.26416 14.9931 6.31214C15.0279 6.36011 15.0945 6.37068 15.1425 6.33588L15.5627 6.03104C15.6107 5.99623 15.6212 5.92959 15.5864 5.88161C15.5647 5.85163 15.5305 5.83624 15.4962 5.83742ZM4.02359 6.43113C3.98935 6.43342 3.95696 6.45238 3.93844 6.48446C3.9088 6.53579 3.92626 6.60096 3.9776 6.6306L5.0463 7.24763C5.09763 7.27726 5.16281 7.2598 5.19244 7.20847C5.22208 7.15714 5.20462 7.09197 5.15329 7.06233L4.08458 6.4453C4.06534 6.43419 4.04413 6.4297 4.02359 6.43113ZM15.9005 6.43113C15.8799 6.4296 15.8587 6.43418 15.8395 6.44531L14.7708 7.06234C14.7194 7.09198 14.702 7.15715 14.7316 7.20848C14.7613 7.25981 14.8264 7.27727 14.8778 7.24764L15.9465 6.63061C15.9978 6.60097 16.0153 6.5358 15.9857 6.48447C15.9671 6.45239 15.9347 6.43352 15.9005 6.43113ZM3.71574 7.0681C3.67405 7.06709 3.63407 7.09095 3.61596 7.13154C3.59181 7.18568 3.61594 7.2487 3.67008 7.27284L4.14419 7.48432C4.19832 7.50846 4.26134 7.48434 4.28549 7.4302C4.30963 7.37607 4.28546 7.31305 4.23132 7.28891L3.75725 7.07743C3.74373 7.07138 3.72964 7.06838 3.71574 7.0681ZM16.2104 7.0725C16.1965 7.07275 16.1824 7.0758 16.1688 7.08183L15.6946 7.29294C15.6405 7.31706 15.6163 7.38004 15.6404 7.43418C15.6645 7.48833 15.7275 7.51255 15.7817 7.48844L16.2559 7.27728C16.31 7.25319 16.3342 7.19019 16.3101 7.13604C16.292 7.09542 16.2521 7.07167 16.2104 7.0725ZM3.44137 7.73386C3.39982 7.73734 3.36256 7.7651 3.34879 7.80737C3.33044 7.86372 3.36099 7.92388 3.41736 7.94224L4.5907 8.32457C4.64705 8.34292 4.70721 8.31234 4.72558 8.256C4.74393 8.19964 4.71337 8.13948 4.65701 8.12112L3.48367 7.7388C3.46959 7.7342 3.45522 7.73269 3.44137 7.73386ZM16.4843 7.73843C16.4704 7.73716 16.4561 7.73869 16.442 7.74336L15.2684 8.12486C15.212 8.14318 15.1814 8.20332 15.1997 8.25969C15.2181 8.31606 15.2782 8.34667 15.3346 8.32835L16.5081 7.94686C16.5645 7.92853 16.5952 7.86839 16.5768 7.81203C16.5631 7.76975 16.5258 7.74196 16.4843 7.73843ZM3.27044 8.43271C3.22059 8.43221 3.17589 8.4668 3.16511 8.51753C3.15278 8.57551 3.18956 8.6321 3.24753 8.64442L3.75531 8.75233C3.81329 8.76466 3.86987 8.72788 3.8822 8.66991C3.89453 8.61193 3.85775 8.55534 3.79978 8.54302L3.29204 8.43511C3.2848 8.43359 3.27755 8.43271 3.27044 8.43271ZM16.6539 8.43373C16.6467 8.43379 16.6395 8.43475 16.6323 8.43602L16.1245 8.54388C16.0665 8.55621 16.0298 8.61274 16.0421 8.67072C16.0544 8.7287 16.111 8.76551 16.169 8.75319L16.6767 8.64533C16.7347 8.633 16.7715 8.57642 16.7592 8.51844C16.7484 8.46771 16.7037 8.43331 16.6539 8.43373ZM3.14105 9.13567C3.09144 9.14043 3.0506 9.17935 3.04515 9.23093C3.03892 9.28987 3.08133 9.34236 3.14027 9.34858L4.36749 9.47833C4.42644 9.48456 4.47892 9.44211 4.48514 9.38317C4.49137 9.32423 4.44892 9.27174 4.38998 9.26552L3.16276 9.13577C3.15539 9.135 3.14814 9.135 3.14105 9.13567ZM16.7842 9.1449C16.7771 9.14414 16.7698 9.14414 16.7624 9.14499L15.535 9.27308C15.4761 9.27923 15.4336 9.33164 15.4397 9.39059C15.4459 9.44954 15.4983 9.49205 15.5573 9.4859L16.7846 9.35781C16.8436 9.35166 16.8861 9.29925 16.8799 9.24029C16.8745 9.18871 16.8338 9.14972 16.7842 9.1449ZM3.12027 9.85525C3.061 9.85525 3.01329 9.90296 3.01329 9.96223C3.01329 10.0215 3.061 10.0692 3.12027 10.0692H3.63937C3.69864 10.0692 3.7464 10.0215 3.7464 9.96223C3.7464 9.90296 3.69864 9.85525 3.63937 9.85525H3.12027ZM16.2847 9.85525C16.2254 9.85525 16.1777 9.90296 16.1777 9.96223C16.1777 10.0215 16.2254 10.0692 16.2847 10.0692H16.8038C16.8631 10.0692 16.9108 10.0215 16.9108 9.96223C16.9108 9.90296 16.8631 9.85525 16.8038 9.85525H16.2847ZM4.38855 10.4385C4.38146 10.4377 4.37421 10.4377 4.36684 10.4386L3.13943 10.5667C3.08048 10.5728 3.03798 10.6252 3.04413 10.6842C3.05028 10.7431 3.10269 10.7856 3.16164 10.7795L4.38905 10.6514C4.448 10.6452 4.4905 10.5928 4.48435 10.5339C4.47897 10.4823 4.43816 10.4433 4.38855 10.4385ZM15.5349 10.4461C15.4852 10.4508 15.4444 10.4897 15.439 10.5413C15.4327 10.6003 15.4751 10.6527 15.5341 10.659L16.7613 10.7887C16.8202 10.7949 16.8727 10.7525 16.879 10.6935C16.8852 10.6346 16.8427 10.5821 16.7838 10.5759L15.5566 10.4461C15.5492 10.4454 15.542 10.4454 15.5349 10.4461ZM3.77674 11.1688C3.76962 11.1689 3.76238 11.1696 3.75513 11.1711L3.24735 11.279C3.18937 11.2913 3.15262 11.3479 3.16493 11.4059C3.17726 11.4638 3.23384 11.5006 3.29182 11.4883L3.7996 11.3805C3.85758 11.3681 3.89433 11.3116 3.88202 11.2536C3.87124 11.2028 3.82658 11.1684 3.77674 11.1688ZM16.1472 11.1698C16.0973 11.1693 16.0527 11.2039 16.0419 11.2546C16.0296 11.3126 16.0663 11.3692 16.1243 11.3815L16.6321 11.4894C16.69 11.5017 16.7466 11.465 16.7589 11.407C16.7713 11.3491 16.7345 11.2924 16.6765 11.2801L16.1688 11.1722C16.1615 11.1707 16.1543 11.1698 16.1472 11.1698ZM4.63179 11.5912C4.61794 11.59 4.60364 11.5915 4.58954 11.5962L3.41593 11.9776C3.35956 11.996 3.32895 12.0561 3.34727 12.1125C3.3656 12.1688 3.42573 12.1995 3.4821 12.1811L4.65567 11.7996C4.71204 11.7813 4.7427 11.7212 4.72438 11.6648C4.71062 11.6225 4.67334 11.5947 4.63179 11.5912ZM15.2911 11.595C15.2496 11.5985 15.2123 11.6263 15.1985 11.6685C15.1802 11.7249 15.2107 11.785 15.2671 11.8034L16.4404 12.1857C16.4968 12.2041 16.557 12.1735 16.5753 12.1172C16.5937 12.0608 16.5631 12.0006 16.5067 11.9823L15.3334 11.6C15.3193 11.5954 15.305 11.5938 15.2911 11.595ZM4.18395 12.4268C4.17005 12.4271 4.15597 12.4301 4.14244 12.4361L3.66818 12.6472C3.61403 12.6713 3.58987 12.7343 3.61397 12.7885C3.63809 12.8426 3.70107 12.8668 3.75522 12.8427L4.22948 12.6316C4.28363 12.6075 4.30779 12.5445 4.28369 12.4903C4.26561 12.4497 4.22564 12.426 4.18395 12.4268ZM15.7384 12.4309C15.6967 12.4298 15.6567 12.4537 15.6386 12.4943C15.6145 12.5484 15.6386 12.6115 15.6927 12.6356L16.1668 12.8471C16.2209 12.8712 16.284 12.8471 16.3081 12.793C16.3322 12.7388 16.3081 12.6758 16.254 12.6517L15.7799 12.4402C15.7664 12.4341 15.7523 12.4311 15.7384 12.4309ZM5.1073 12.6627C5.08676 12.6612 5.06555 12.6658 5.0463 12.6769L3.9776 13.2939C3.92626 13.3236 3.9088 13.3887 3.93844 13.4401C3.96808 13.4914 4.03325 13.5089 4.08458 13.4792L5.15329 12.8622C5.20462 12.8326 5.22208 12.7674 5.19244 12.716C5.17391 12.684 5.14153 12.6651 5.1073 12.6627ZM14.8168 12.6627C14.7826 12.665 14.7501 12.684 14.7316 12.716C14.702 12.7674 14.7194 12.8326 14.7708 12.8622L15.8395 13.4792C15.8908 13.5088 15.956 13.4914 15.9857 13.4401C16.0153 13.3887 15.9978 13.3235 15.9465 13.2939L14.8778 12.6769C14.8585 12.6658 14.8373 12.6613 14.8168 12.6627ZM4.84073 13.5682C4.82015 13.5689 4.79953 13.5756 4.78154 13.5886L4.3614 13.8935C4.31342 13.9283 4.30281 13.9949 4.33761 14.0429C4.37242 14.0909 4.43905 14.1015 4.48703 14.0667L4.90721 13.7618C4.95519 13.727 4.9658 13.6604 4.931 13.6124C4.90925 13.5824 4.87503 13.567 4.84073 13.5682ZM15.0808 13.5718C15.0465 13.5705 15.0123 13.586 14.9905 13.6159C14.9557 13.6639 14.9662 13.7306 15.0142 13.7654L15.4342 14.0705C15.4821 14.1054 15.5487 14.0948 15.5836 14.0468C15.6184 13.9989 15.6079 13.9323 15.5599 13.8974L15.14 13.5923C15.122 13.5792 15.1014 13.5725 15.0808 13.5718ZM5.79229 13.6087C5.76499 13.6072 5.73713 13.6163 5.71509 13.6361L4.79733 14.4611C4.75325 14.5007 4.74967 14.5681 4.7893 14.6122C4.82892 14.6563 4.8963 14.6599 4.94038 14.6202L5.85814 13.7952C5.90222 13.7556 5.9058 13.6882 5.86617 13.6441C5.84637 13.6221 5.81961 13.6102 5.79229 13.6087ZM14.1292 13.6117C14.1019 13.6132 14.0751 13.625 14.0553 13.6471C14.0156 13.6911 14.0192 13.7585 14.0632 13.7981L14.9804 14.6238C15.0244 14.6634 15.0919 14.6599 15.1315 14.6158C15.1712 14.5718 15.1676 14.5044 15.1236 14.4648L14.2064 13.6391C14.1843 13.6193 14.1565 13.6102 14.1292 13.6117ZM6.66296 14.3954C6.62867 14.3942 6.59444 14.4095 6.57264 14.4395L5.84669 15.4374C5.81182 15.4853 5.82231 15.552 5.87023 15.5869C5.91816 15.6218 5.98483 15.6113 6.01969 15.5633L6.74565 14.5654C6.78051 14.5175 6.77002 14.4508 6.72211 14.4159C6.70414 14.4029 6.68354 14.3962 6.66296 14.3954ZM13.2551 14.3999C13.2346 14.4007 13.2139 14.4073 13.1959 14.4203C13.148 14.4551 13.1374 14.5218 13.1722 14.5698L13.8968 15.5686C13.9316 15.6166 13.9982 15.6272 14.0462 15.5924C14.0942 15.5576 14.1048 15.491 14.07 15.443L13.3454 14.4441C13.3236 14.4141 13.2894 14.3987 13.2551 14.3999ZM5.7258 14.5541C5.69849 14.5556 5.67171 14.5674 5.65188 14.5894L5.30455 14.9752C5.26489 15.0192 5.2684 15.0866 5.31246 15.1263C5.35651 15.166 5.42388 15.1624 5.46354 15.1183L5.81091 14.7326C5.85058 14.6885 5.84702 14.6211 5.80298 14.5815C5.78094 14.5616 5.75312 14.5526 5.7258 14.5541ZM14.1976 14.5546C14.1703 14.553 14.1425 14.5622 14.1205 14.582C14.0764 14.6216 14.0729 14.689 14.1125 14.7331L14.4598 15.1189C14.4994 15.163 14.5668 15.1665 14.6109 15.1268C14.6549 15.0872 14.6585 15.0198 14.6188 14.9757L14.2715 14.5899C14.2517 14.5679 14.2249 14.556 14.1976 14.5546ZM7.67672 14.9825C7.63503 14.9815 7.5951 15.0054 7.57699 15.0459L7.07419 16.1729C7.05004 16.2271 7.07418 16.2901 7.12831 16.3142C7.18244 16.3384 7.24545 16.3142 7.2696 16.2601L7.77239 15.1331C7.79654 15.079 7.77241 15.016 7.71828 14.9918C7.70475 14.9858 7.69062 14.9828 7.67672 14.9825ZM12.2406 14.9856C12.2266 14.9859 12.2125 14.9889 12.199 14.9949C12.1449 15.019 12.1206 15.0819 12.1447 15.1361L12.6459 16.2638C12.67 16.3179 12.733 16.3421 12.7872 16.3181C12.8413 16.294 12.8655 16.231 12.8415 16.1769L12.3402 15.0492C12.3222 15.0086 12.2822 14.9848 12.2406 14.9856ZM6.79322 15.3309C6.75899 15.3332 6.72659 15.3522 6.70807 15.3843L6.44852 15.8338C6.41889 15.8852 6.43635 15.9503 6.48768 15.98C6.53901 16.0096 6.60419 15.9921 6.63382 15.9408L6.89337 15.4913C6.92301 15.4399 6.90555 15.3748 6.85421 15.3451C6.83497 15.334 6.81376 15.3295 6.79322 15.3309ZM13.1308 15.3309C13.1103 15.3294 13.0891 15.334 13.0699 15.3451C13.0186 15.3748 13.0011 15.4399 13.0307 15.4913L13.2903 15.9408C13.3199 15.9922 13.3851 16.0096 13.4364 15.98C13.4878 15.9503 13.5052 15.8852 13.4756 15.8338L13.216 15.3843C13.1975 15.3522 13.1651 15.3333 13.1308 15.3309ZM8.79603 15.3471C8.74619 15.3465 8.70153 15.3811 8.69076 15.4318L8.4343 16.639C8.42198 16.6969 8.45875 16.7535 8.51672 16.7659C8.5747 16.7782 8.6313 16.7414 8.64361 16.6834L8.90006 15.4763C8.91239 15.4183 8.87561 15.3617 8.81764 15.3494C8.8104 15.3479 8.80315 15.3471 8.79603 15.3471ZM11.1242 15.3478C11.1171 15.3479 11.1099 15.3486 11.1027 15.3501C11.0447 15.3624 11.0079 15.4189 11.0202 15.4769L11.2757 16.6842C11.288 16.7422 11.3446 16.779 11.4026 16.7667C11.4606 16.7545 11.4974 16.6979 11.4851 16.6399L11.2295 15.4327C11.2187 15.3819 11.1741 15.3474 11.1242 15.3478ZM9.96203 15.4696C9.90276 15.4696 9.85504 15.5173 9.85504 15.5766V16.8106C9.85504 16.8699 9.90276 16.9176 9.96203 16.9176C10.0213 16.9176 10.069 16.8699 10.069 16.8106V15.5766C10.069 15.5173 10.0213 15.4696 9.96203 15.4696ZM7.99814 15.8683C7.95659 15.8719 7.9193 15.8997 7.90556 15.9419L7.7451 16.4356C7.72678 16.492 7.75741 16.5521 7.81377 16.5705C7.87013 16.5888 7.93027 16.5581 7.94859 16.5018L8.10905 16.0081C8.12738 15.9517 8.09675 15.8916 8.04039 15.8733C8.02631 15.8687 8.01199 15.8672 7.99814 15.8683ZM11.9251 15.8686C11.9112 15.8673 11.8969 15.8689 11.8828 15.8735C11.8265 15.8918 11.7958 15.952 11.8141 16.0083L11.9745 16.502C11.9929 16.5584 12.053 16.589 12.1094 16.5707C12.1657 16.5524 12.1964 16.4923 12.1781 16.4359L12.0176 15.9422C12.0039 15.8999 11.9666 15.8721 11.9251 15.8686ZM9.29047 16.1436C9.24086 16.1483 9.19998 16.1873 9.19457 16.2389L9.14031 16.7551C9.13411 16.8141 9.17657 16.8665 9.23552 16.8727C9.29447 16.8789 9.34693 16.8364 9.35313 16.7775L9.40738 16.2613C9.41358 16.2023 9.37112 16.1499 9.31217 16.1437C9.3048 16.1429 9.29756 16.1429 9.29047 16.1436ZM10.6293 16.1441C10.6222 16.1433 10.6149 16.1433 10.6075 16.1442C10.5486 16.1503 10.5061 16.2027 10.5122 16.2617L10.5662 16.778C10.5723 16.8369 10.6247 16.8794 10.6837 16.8733C10.7426 16.8671 10.7851 16.8147 10.779 16.7557L10.7251 16.2395C10.7197 16.1879 10.6789 16.1489 10.6293 16.1441Z"
    }), /* @__PURE__ */ L.createElement("g", {
        filter: "url(#d)",
        opacity: 0.409
    }, /* @__PURE__ */ L.createElement("path", {
        d: "M14.9763 5.68262L9.12289 9.08348L5.42194 14.9098L10.8361 10.8996L14.9763 5.68262Z"
    })), /* @__PURE__ */ L.createElement("path", {
        fill: "#FF5150",
        d: "M10.8009 10.8406L9.12314 9.08358L15.0749 5.07983L10.8009 10.8406Z"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#F1F1F1",
        d: "M10.8009 10.8405L9.12315 9.0835L4.84918 14.8443L10.8009 10.8405Z"
    }), /* @__PURE__ */ L.createElement("path", {
        d: "M4.84918 14.8444L10.8009 10.8406L15.0749 5.07983L4.84918 14.8444Z",
        opacity: 0.243
    }), /* @__PURE__ */ L.createElement("defs", null, /* @__PURE__ */ L.createElement("filter", {
        id: "a",
        width: 17.34,
        height: 16.771,
        x: 1.292,
        y: 2.229,
        colorInterpolationFilters: "sRGB",
        filterUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("feFlood", {
        floodOpacity: 0,
        result: "BackgroundImageFix"
    }), /* @__PURE__ */ L.createElement("feBlend", {
        in: "SourceGraphic",
        in2: "BackgroundImageFix",
        result: "shape"
    }), /* @__PURE__ */ L.createElement("feGaussianBlur", {
        result: "effect1_foregroundBlur_312_309",
        stdDeviation: 0.5
    })), /* @__PURE__ */ L.createElement("filter", {
        id: "d",
        width: 14.644,
        height: 14.317,
        x: 2.877,
        y: 3.138,
        colorInterpolationFilters: "sRGB",
        filterUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("feFlood", {
        floodOpacity: 0,
        result: "BackgroundImageFix"
    }), /* @__PURE__ */ L.createElement("feBlend", {
        in: "SourceGraphic",
        in2: "BackgroundImageFix",
        result: "shape"
    }), /* @__PURE__ */ L.createElement("feGaussianBlur", {
        result: "effect1_foregroundBlur_312_309",
        stdDeviation: 1.272
    })), /* @__PURE__ */ L.createElement("radialGradient", {
        id: "c",
        cx: 0,
        cy: 0,
        r: 1,
        gradientTransform: "translate(9.995 8.892) scale(7.96201)",
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#06C2E7"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.25,
        stopColor: "#0DB8EC"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.5,
        stopColor: "#12AEF1"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 0.75,
        stopColor: "#1F86F9"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 1,
        stopColor: "#107DDD"
    })), /* @__PURE__ */ L.createElement("linearGradient", {
        id: "b",
        x1: 9.962,
        x2: 9.962,
        y1: 17.924,
        y2: 2,
        gradientUnits: "userSpaceOnUse"
    }, /* @__PURE__ */ L.createElement("stop", {
        stopColor: "#BDBDBD"
    }), /* @__PURE__ */ L.createElement("stop", {
        offset: 1,
        stopColor: "#fff"
    })))), CM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("rect", {
        width: "100%",
        height: "100%",
        fill: "#1A171B"
    }), /* @__PURE__ */ L.createElement("path", {
        fill: "#fff",
        d: "M15.8 1.5a4.5 4.5 0 0 0-3.23 1.72 10.85 10.85 0 0 0-1.97 3.63C9.82 6.2 9.2 5.37 7.94 5c-.97-.28-2-.16-2.94.54-.45.34-.76.84-.9 1.31-.38 1.24.4 2.33.75 2.73l.77.82c.16.17.54.59.36 1.2-.2.66-1 1.08-1.82.83-.36-.11-.88-.38-.77-.76.05-.16.16-.28.22-.41.06-.12.08-.2.1-.26.15-.48-.05-1.12-.57-1.28-.5-.15-.99-.03-1.18.6-.22.71.12 2 1.94 2.56 2.14.66 3.95-.5 4.2-2.02.16-.95-.26-1.66-1.05-2.56l-.64-.71a1.17 1.17 0 0 1-.12-1.56c.34-.43.82-.61 1.61-.4 1.15.32 1.67 1.12 2.53 1.76-.36 1.17-.59 2.33-.8 3.38l-.13.78c-.61 3.21-1.08 4.98-2.3 6-.24.17-.59.43-1.12.45-.27 0-.36-.18-.37-.27 0-.2.16-.28.27-.37.16-.09.4-.23.39-.7a1.07 1.07 0 0 0-1.15-1.02c-.5.02-1.26.49-1.23 1.35.03.88.86 1.55 2.1 1.5.68-.01 2.17-.29 3.64-2.03 1.7-2 2.18-4.3 2.54-5.98l.4-2.22c.23.03.47.05.73.05 2.13.05 3.2-1.05 3.2-1.86.02-.48-.31-.96-.77-.95a.89.89 0 0 0-.85.69c-.1.44.68.85.08 1.24-.43.28-1.2.47-2.3.32l.2-1.1c.4-2.07.9-4.61 2.8-4.67.13-.01.63 0 .64.33 0 .12-.02.14-.15.4a.9.9 0 0 0-.18.56c.02.53.42.88 1 .85.78-.02 1-.78 1-1.17-.04-.91-1-1.49-2.28-1.45Z"
    })), oR = {
    Safari: OM,
    Chrome: pM,
    Firefox: fM
}, gM = dM, ff = {
    "sentry.javascript.nextjs": RM,
    "sentry.javascript.astro": EM,
    "sentry.javascript.remix": NM,
    "sentry.javascript.nestjs": SM,
    ruby: IM,
    python: _M,
    javascript: TM,
    node: _O,
    php: mM,
    "php.laravel": hM,
    "php.symfony": CM,
    dotnet: aR,
    "dotnet.maui": AM,
    csharp: aR
};
function Js({ platform: e, event: t, size: n = 42, title: r, ...s }) {
    return /* @__PURE__ */ m.jsx(LM, {
        platform: e,
        event: t,
        size: n,
        title: r,
        ...s,
        children: /* @__PURE__ */ m.jsx(vM, {
            platform: e,
            event: t,
            size: n,
            title: r,
            ...s
        })
    });
}
function LM({ event: e, size: t = 42, ...n }) {
    const r = t / 3, s = t / 3;
    return /* @__PURE__ */ m.jsxs("div", {
        className: "relative",
        children: [
            n.children,
            /* @__PURE__ */ m.jsx(yM, {
                event: e,
                size: t,
                width: r,
                height: s,
                ...n,
                className: "absolute bottom-1 right-1"
            })
        ]
    });
}
function yM({ event: e, size: t = 42, ...n }) {
    var l, c, u, E, p, A, R, C;
    const r = `${((c = (l = e == null ? void 0 : e.contexts) == null ? void 0 : l.runtime) == null ? void 0 : c.name) || ""}`;
    if (!r) return null;
    const s = `${r} ${(E = (u = e == null ? void 0 : e.contexts) == null ? void 0 : u.runtime) == null ? void 0 : E.version}`;
    switch(r){
        case "node":
            return /* @__PURE__ */ m.jsx(_O, {
                title: s,
                width: t,
                height: t,
                ...n
            });
    }
    const i = `${((A = (p = e == null ? void 0 : e.contexts) == null ? void 0 : p.browser) == null ? void 0 : A.name) || ""}`, a = `${i} ${(C = (R = e == null ? void 0 : e.contexts) == null ? void 0 : R.browser) == null ? void 0 : C.version}`, o = Object.keys(oR).find((O)=>i.includes(O));
    if (o) {
        const O = oR[o];
        return /* @__PURE__ */ m.jsx(O, {
            title: a,
            width: t,
            height: t,
            ...n
        });
    }
    return null;
}
function vM({ platform: e, event: t, size: n = 42, title: r, ...s }) {
    var u;
    const i = e || (t == null ? void 0 : t.platform) || "unknown", a = ((u = t == null ? void 0 : t.sdk) == null ? void 0 : u.name) || "", o = r ?? i, l = Object.keys(ff).find((E)=>a.startsWith(E));
    if (l) {
        const E = ff[l];
        return /* @__PURE__ */ m.jsx(E, {
            title: o,
            width: n,
            height: n,
            ...s
        });
    }
    const c = ff[i] ?? gM;
    return /* @__PURE__ */ m.jsx(c, {
        title: o,
        width: n,
        height: n,
        ...s
    });
}
const NO = L.createContext({
    variant: "default"
});
function bM() {
    return L.useContext(NO);
}
function Je({ children: e, className: t, variant: n = "default", ...r }) {
    return /* @__PURE__ */ m.jsx(NO.Provider, {
        value: {
            variant: n
        },
        children: /* @__PURE__ */ m.jsx("table", {
            className: he(n === "detail" ? "divide-primary-700 w-full table-fixed divide-y" : "", t),
            ...r,
            children: e
        })
    });
}
function PM({ children: e, className: t, variant: n = "default", ...r }) {
    const { variant: s } = bM(), i = n ?? s;
    return /* @__PURE__ */ m.jsx("thead", {
        className: he(i === "detail" ? "bg-primary-950 sticky top-0 z-20" : "", t),
        ...r,
        children: e
    });
}
function MM({ children: e, className: t, ...n }) {
    return /* @__PURE__ */ m.jsx("tbody", {
        className: t,
        ...n,
        children: e
    });
}
Je.Header = PM;
Je.Body = MM;
const DM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "800px",
        height: "800px",
        viewBox: "0 0 24 24",
        fill: "none",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("path", {
        d: "M4 12.6111L8.92308 17.5L20 6.5",
        stroke: "inherit",
        strokeWidth: 2,
        strokeLinecap: "round",
        strokeLinejoin: "round"
    })), wM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "800px",
        height: "800px",
        viewBox: "0 0 24 24",
        fill: "none",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("g", {
        id: "Edit / Copy"
    }, /* @__PURE__ */ L.createElement("path", {
        id: "Vector",
        d: "M9 9V6.2002C9 5.08009 9 4.51962 9.21799 4.0918C9.40973 3.71547 9.71547 3.40973 10.0918 3.21799C10.5196 3 11.0801 3 12.2002 3H17.8002C18.9203 3 19.4801 3 19.9079 3.21799C20.2842 3.40973 20.5905 3.71547 20.7822 4.0918C21.0002 4.51962 21.0002 5.07967 21.0002 6.19978V11.7998C21.0002 12.9199 21.0002 13.48 20.7822 13.9078C20.5905 14.2841 20.2839 14.5905 19.9076 14.7822C19.4802 15 18.921 15 17.8031 15H15M9 9H6.2002C5.08009 9 4.51962 9 4.0918 9.21799C3.71547 9.40973 3.40973 9.71547 3.21799 10.0918C3 10.5196 3 11.0801 3 12.2002V17.8002C3 18.9203 3 19.4801 3.21799 19.9079C3.40973 20.2842 3.71547 20.5905 4.0918 20.7822C4.5192 21 5.07899 21 6.19691 21H11.8036C12.9215 21 13.4805 21 13.9079 20.7822C14.2842 20.5905 14.5905 20.2839 14.7822 19.9076C15 19.4802 15 18.921 15 17.8031V15M9 9H11.8002C12.9203 9 13.4801 9 13.9079 9.21799C14.2842 9.40973 14.5905 9.71547 14.7822 10.0918C15 10.5192 15 11.079 15 12.1969L15 15",
        stroke: "inherit",
        strokeWidth: 2,
        strokeLinecap: "round",
        strokeLinejoin: "round"
    })));
function xM({ data: e }) {
    const [t, n] = L.useState(!1), r = L.useCallback({
        "xM.useCallback[r]": (s)=>{
            s.stopPropagation(), navigator.clipboard.writeText(e), setTimeout({
                "xM.useCallback[r]": ()=>{
                    n(!1);
                }
            }["xM.useCallback[r]"], 1e3), n(!0);
        }
    }["xM.useCallback[r]"], [
        e
    ]);
    return t ? /* @__PURE__ */ m.jsx(DM, {
        width: 18,
        height: 18,
        title: "Copy filename",
        className: "stroke-primary-50 transition-all"
    }) : /* @__PURE__ */ m.jsx(wM, {
        width: 18,
        height: 18,
        title: "Copy filename",
        className: "stroke-primary-50 cursor-pointer transition-all",
        onClick: r
    });
}
const IO = L.createContext({
    open: ()=>{},
    close: ()=>{},
    experiments: jp,
    sidecarUrl: Dh
}), UM = ({ children: e, context: t })=>/* @__PURE__ */ m.jsx(IO.Provider, {
        value: t,
        children: e
    }), ZE = ()=>{
    const e = L.useContext(IO);
    return {
        ...e,
        getSidecarUrl: (n = "")=>new URL(n, e.sidecarUrl).href
    };
}, FM = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "800px",
        height: "800px",
        viewBox: "0 0 24 24",
        fill: "none",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("path", {
        d: "M12 4H6C4.89543 4 4 4.89543 4 6V18C4 19.1046 4.89543 20 6 20H18C19.1046 20 20 19.1046 20 18V12M9 15V12.5L17.75 3.75C18.4404 3.05964 19.5596 3.05964 20.25 3.75V3.75C20.9404 4.44036 20.9404 5.55964 20.25 6.25L15.5 11L11.5 15H9Z",
        stroke: "inherit",
        strokeWidth: 2,
        strokeLinecap: "round",
        strokeLinejoin: "round"
    }));
function BM({ file: e }) {
    const { getSidecarUrl: t } = ZE(), n = t("/open"), r = L.useCallback({
        "BM.useCallback[r]": (s)=>{
            fetch(n, {
                method: "POST",
                body: e,
                credentials: "omit"
            }), s.stopPropagation();
        }
    }["BM.useCallback[r]"], [
        e,
        n
    ]);
    return /* @__PURE__ */ m.jsx(FM, {
        width: 18,
        height: 18,
        title: "Open in editor",
        className: "stroke-primary-100 cursor-pointer",
        onClick: r
    });
}
function GM(e) {
    return e === void 0 ? "undefined" : JSON.stringify(e, (t, n)=>typeof n == "function" || typeof n == "symbol" || typeof n == "bigint" ? n.toString() : n, 2);
}
function OO(e) {
    try {
        e = new URL(e).pathname.slice(1);
    } catch  {}
    return e;
}
function kM(e) {
    if (e.startsWith("node:")) return e;
    const t = OO(e);
    return t.indexOf("/node_modules/") === -1 ? t : `npm:${t.replace(/\/node_modules\//gi, "npm:").split("npm:").pop()}`;
}
function HM({ vars: e }) {
    return /* @__PURE__ */ m.jsx(Je, {
        className: "table-values w-full",
        children: /* @__PURE__ */ m.jsx(Je.Body, {
            children: Object.entries(e).map(([t, n])=>/* @__PURE__ */ m.jsxs("tr", {
                    children: [
                        /* @__PURE__ */ m.jsx("th", {
                            children: /* @__PURE__ */ m.jsx("div", {
                                className: "w-full truncate",
                                children: t
                            })
                        }),
                        /* @__PURE__ */ m.jsx("td", {
                            children: /* @__PURE__ */ m.jsx("pre", {
                                className: "whitespace-nowrap font-mono",
                                children: GM(n)
                            })
                        })
                    ]
                }, t))
        })
    });
}
function YM({ frame: e }) {
    if (!e.filename) return null;
    const t = OO(e.filename);
    return /* @__PURE__ */ m.jsxs("div", {
        className: "flex items-center gap-2",
        children: [
            /* @__PURE__ */ m.jsx(BM, {
                file: `${t}:${e.lineno}:${e.colno}`
            }),
            /* @__PURE__ */ m.jsx(xM, {
                data: t
            })
        ]
    });
}
function VM({ frame: e, defaultExpand: t = !1, platform: n }) {
    var o, l;
    const [r, s] = L.useState(t), i = !!e.context_line, a = n === "java" ? e.module : e.filename || e.module;
    return /* @__PURE__ */ m.jsxs("li", {
        className: he(i ? "cursor-pointer" : "", !r && i ? "hover:bg-primary-900" : "", "bg-primary-950 border-primary-900 my-1 overflow-hidden rounded-md border"),
        children: [
            /* @__PURE__ */ m.jsxs("div", {
                className: he("text-primary-400 flex items-center justify-between px-2 py-1", r ? "bg-primary-900" : ""),
                onClick: i ? ()=>s(!r) : void 0,
                children: [
                    /* @__PURE__ */ m.jsxs("div", {
                        children: [
                            a ? /* @__PURE__ */ m.jsxs("span", {
                                className: "text-primary-100",
                                children: [
                                    kM(a),
                                    " in "
                                ]
                            }) : null,
                            /* @__PURE__ */ m.jsx("span", {
                                className: "text-primary-100",
                                children: e.function
                            }),
                            e.lineno !== void 0 && /* @__PURE__ */ m.jsxs(m.Fragment, {
                                children: [
                                    " ",
                                    "at line",
                                    " ",
                                    /* @__PURE__ */ m.jsxs("span", {
                                        className: "text-primary-100",
                                        children: [
                                            e.lineno,
                                            e.colno !== void 0 && `:${e.colno}`
                                        ]
                                    })
                                ]
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsx(YM, {
                        frame: e
                    })
                ]
            }),
            r && /* @__PURE__ */ m.jsxs("div", {
                className: "bg-primary-950",
                children: [
                    (o = e.pre_context) == null ? void 0 : o.map((c, u)=>{
                        const E = e.lineno != null ? e.lineno - e.pre_context.length + u : u;
                        return /* @__PURE__ */ m.jsxs("div", {
                            className: "flex items-center",
                            children: [
                                e.lineno !== void 0 && /* @__PURE__ */ m.jsx("div", {
                                    className: "text-primary-300 w-16 text-right",
                                    children: E
                                }),
                                /* @__PURE__ */ m.jsx("pre", {
                                    className: "text-primary-100 flex-1  whitespace-pre-wrap px-2 py-1",
                                    children: c
                                })
                            ]
                        }, `pre-context-${E}`);
                    }),
                    e.context_line && /* @__PURE__ */ m.jsxs("div", {
                        className: he(e.pre_context || e.post_context ? "bg-primary-600" : "bg-primary-900", "flex items-center"),
                        children: [
                            e.lineno !== void 0 && /* @__PURE__ */ m.jsx("div", {
                                className: "text-primary-300 w-16 text-right",
                                children: e.lineno
                            }),
                            /* @__PURE__ */ m.jsx("pre", {
                                className: "text-primary-100 whitespace-pre-wrap px-2 py-1",
                                children: e.context_line
                            })
                        ]
                    }),
                    (l = e.post_context) == null ? void 0 : l.map((c, u)=>{
                        const E = e.lineno != null ? e.lineno + 1 + u : u;
                        return /* @__PURE__ */ m.jsxs("div", {
                            className: "flex items-center",
                            children: [
                                e.lineno !== void 0 && /* @__PURE__ */ m.jsx("div", {
                                    className: "text-primary-300 w-16 text-right",
                                    children: E
                                }),
                                /* @__PURE__ */ m.jsx("pre", {
                                    className: "text-primary-100 flex-1  whitespace-pre-wrap px-2 py-1",
                                    children: c
                                })
                            ]
                        }, `post-context-${E}`);
                    }),
                    e.vars && /* @__PURE__ */ m.jsx(HM, {
                        vars: e.vars
                    })
                ]
            })
        ]
    });
}
function CO({ event: e }) {
    const t = Kh(e.exception);
    return /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsxs("strong", {
                className: "font-bold",
                children: [
                    t[0].type,
                    ":"
                ]
            }),
            " ",
            t[0].value
        ]
    });
}
function WM({ event: e }) {
    const t = Kh(e.exception);
    return /* @__PURE__ */ m.jsx("div", {
        className: "space-y-4 font-mono",
        children: /* @__PURE__ */ m.jsxs("h3", {
            className: "flex flex-col",
            children: [
                /* @__PURE__ */ m.jsx("strong", {
                    className: "text-xl",
                    children: t[0].type
                }),
                /* @__PURE__ */ m.jsx("span", {
                    className: "",
                    children: t[0].value
                })
            ]
        })
    });
}
function jM({ event: e }) {
    const t = Kh(e.exception);
    return /* @__PURE__ */ m.jsx("div", {
        className: "flex-1 px-6 py-4",
        children: /* @__PURE__ */ m.jsx("ol", {
            className: "space-y-4",
            children: t.map((n, r)=>{
                var s;
                return /* @__PURE__ */ m.jsxs("li", {
                    className: "space-y-4 font-mono",
                    children: [
                        /* @__PURE__ */ m.jsxs("h3", {
                            className: "bg-primary-950 flex flex-col",
                            children: [
                                /* @__PURE__ */ m.jsx("strong", {
                                    className: "text-xl",
                                    children: n.type
                                }),
                                /* @__PURE__ */ m.jsx("pre", {
                                    children: n.value
                                })
                            ]
                        }),
                        /* @__PURE__ */ m.jsx("ul", {
                            children: (s = n.stacktrace) == null ? void 0 : s.frames.map((i, a)=>/* @__PURE__ */ m.jsx(VM, {
                                    frame: i,
                                    defaultExpand: r === 0 && a === 0,
                                    platform: e.platform
                                }, a))
                        })
                    ]
                }, r);
            })
        })
    });
}
function Kh(e) {
    return e.value ? [
        e.value
    ] : e.values;
}
function zh(e) {
    return typeof e.message == "string" ? e.message : e.message !== void 0 && typeof e.message.formatted == "string" ? e.message.formatted : "";
}
function XM({ event: e }) {
    return "exception" in e ? /* @__PURE__ */ m.jsx(CO, {
        event: e
    }) : /* @__PURE__ */ m.jsx("strong", {
        className: "font-bold",
        children: zh(e) || /* @__PURE__ */ m.jsx("em", {
            children: "Unknown Event"
        })
    });
}
function KM({ event: e }) {
    return "exception" in e ? /* @__PURE__ */ m.jsx(WM, {
        event: e
    }) : /* @__PURE__ */ m.jsx("div", {
        className: "space-y-4 font-mono",
        children: /* @__PURE__ */ m.jsx("h3", {
            className: "flex flex-col",
            children: /* @__PURE__ */ m.jsx("strong", {
                className: "text-xl",
                children: zh(e) || /* @__PURE__ */ m.jsx("em", {
                    children: "Unknown Event"
                })
            })
        })
    });
}
function zM({ event: e }) {
    return "exception" in e ? /* @__PURE__ */ m.jsx(jM, {
        event: e
    }) : /* @__PURE__ */ m.jsx("div", {
        className: "flex-1 px-6 py-4",
        children: /* @__PURE__ */ m.jsxs("h3", {
            className: "bg-primary-950 flex flex-col",
            children: [
                /* @__PURE__ */ m.jsx("strong", {
                    className: "text-xl",
                    children: "Message:"
                }),
                /* @__PURE__ */ m.jsx("pre", {
                    children: zh(e) || /* @__PURE__ */ m.jsx("em", {
                        children: "No message"
                    })
                })
            ]
        })
    });
}
var gO = {
    exports: {}
};
(function(e, t) {
    (function(n, r) {
        e.exports = r();
    })(at, function() {
        var n = 1e3, r = 6e4, s = 36e5, i = "millisecond", a = "second", o = "minute", l = "hour", c = "day", u = "week", E = "month", p = "quarter", A = "year", R = "date", C = "Invalid Date", O = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, d = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, f = {
            name: "en",
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            ordinal: function(k) {
                var Y = [
                    "th",
                    "st",
                    "nd",
                    "rd"
                ], H = k % 100;
                return "[" + k + (Y[(H - 20) % 10] || Y[H] || Y[0]) + "]";
            }
        }, _ = function(k, Y, H) {
            var F = String(k);
            return !F || F.length >= Y ? k : "" + Array(Y + 1 - F.length).join(H) + k;
        }, h = {
            s: _,
            z: function(k) {
                var Y = -k.utcOffset(), H = Math.abs(Y), F = Math.floor(H / 60), x = H % 60;
                return (Y <= 0 ? "+" : "-") + _(F, 2, "0") + ":" + _(x, 2, "0");
            },
            m: function k(Y, H) {
                if (Y.date() < H.date()) return -k(H, Y);
                var F = 12 * (H.year() - Y.year()) + (H.month() - Y.month()), x = Y.clone().add(F, E), X = H - x < 0, J = Y.clone().add(F + (X ? -1 : 1), E);
                return +(-(F + (H - x) / (X ? x - J : J - x)) || 0);
            },
            a: function(k) {
                return k < 0 ? Math.ceil(k) || 0 : Math.floor(k);
            },
            p: function(k) {
                return ({
                    M: E,
                    y: A,
                    w: u,
                    d: c,
                    D: R,
                    h: l,
                    m: o,
                    s: a,
                    ms: i,
                    Q: p
                })[k] || String(k || "").toLowerCase().replace(/s$/, "");
            },
            u: function(k) {
                return k === void 0;
            }
        }, I = "en", T = {};
        T[I] = f;
        var N = "$isDayjsObject", g = function(k) {
            return k instanceof w || !(!k || !k[N]);
        }, b = function k(Y, H, F) {
            var x;
            if (!Y) return I;
            if (typeof Y == "string") {
                var X = Y.toLowerCase();
                T[X] && (x = X), H && (T[X] = H, x = X);
                var J = Y.split("-");
                if (!x && J.length > 1) return k(J[0]);
            } else {
                var le = Y.name;
                T[le] = Y, x = le;
            }
            return !F && x && (I = x), x || !F && I;
        }, S = function(k, Y) {
            if (g(k)) return k.clone();
            var H = typeof Y == "object" ? Y : {};
            return H.date = k, H.args = arguments, new w(H);
        }, P = h;
        P.l = b, P.i = g, P.w = function(k, Y) {
            return S(k, {
                locale: Y.$L,
                utc: Y.$u,
                x: Y.$x,
                $offset: Y.$offset
            });
        };
        var w = function() {
            function k(H) {
                this.$L = b(H.locale, null, !0), this.parse(H), this.$x = this.$x || H.x || {}, this[N] = !0;
            }
            var Y = k.prototype;
            return Y.parse = function(H) {
                this.$d = function(F) {
                    var x = F.date, X = F.utc;
                    if (x === null) return /* @__PURE__ */ new Date(NaN);
                    if (P.u(x)) return /* @__PURE__ */ new Date();
                    if (x instanceof Date) return new Date(x);
                    if (typeof x == "string" && !/Z$/i.test(x)) {
                        var J = x.match(O);
                        if (J) {
                            var le = J[2] - 1 || 0, pe = (J[7] || "0").substring(0, 3);
                            return X ? new Date(Date.UTC(J[1], le, J[3] || 1, J[4] || 0, J[5] || 0, J[6] || 0, pe)) : new Date(J[1], le, J[3] || 1, J[4] || 0, J[5] || 0, J[6] || 0, pe);
                        }
                    }
                    return new Date(x);
                }(H), this.init();
            }, Y.init = function() {
                var H = this.$d;
                this.$y = H.getFullYear(), this.$M = H.getMonth(), this.$D = H.getDate(), this.$W = H.getDay(), this.$H = H.getHours(), this.$m = H.getMinutes(), this.$s = H.getSeconds(), this.$ms = H.getMilliseconds();
            }, Y.$utils = function() {
                return P;
            }, Y.isValid = function() {
                return this.$d.toString() !== C;
            }, Y.isSame = function(H, F) {
                var x = S(H);
                return this.startOf(F) <= x && x <= this.endOf(F);
            }, Y.isAfter = function(H, F) {
                return S(H) < this.startOf(F);
            }, Y.isBefore = function(H, F) {
                return this.endOf(F) < S(H);
            }, Y.$g = function(H, F, x) {
                return P.u(H) ? this[F] : this.set(x, H);
            }, Y.unix = function() {
                return Math.floor(this.valueOf() / 1e3);
            }, Y.valueOf = function() {
                return this.$d.getTime();
            }, Y.startOf = function(H, F) {
                var x = this, X = !!P.u(F) || F, J = P.p(H), le = function(Ht, Ke) {
                    var ut = P.w(x.$u ? Date.UTC(x.$y, Ke, Ht) : new Date(x.$y, Ke, Ht), x);
                    return X ? ut : ut.endOf(c);
                }, pe = function(Ht, Ke) {
                    return P.w(x.toDate()[Ht].apply(x.toDate("s"), (X ? [
                        0,
                        0,
                        0,
                        0
                    ] : [
                        23,
                        59,
                        59,
                        999
                    ]).slice(Ke)), x);
                }, ve = this.$W, be = this.$M, Xe = this.$D, et = "set" + (this.$u ? "UTC" : "");
                switch(J){
                    case A:
                        return X ? le(1, 0) : le(31, 11);
                    case E:
                        return X ? le(1, be) : le(0, be + 1);
                    case u:
                        var Be = this.$locale().weekStart || 0, en = (ve < Be ? ve + 7 : ve) - Be;
                        return le(X ? Xe - en : Xe + (6 - en), be);
                    case c:
                    case R:
                        return pe(et + "Hours", 0);
                    case l:
                        return pe(et + "Minutes", 1);
                    case o:
                        return pe(et + "Seconds", 2);
                    case a:
                        return pe(et + "Milliseconds", 3);
                    default:
                        return this.clone();
                }
            }, Y.endOf = function(H) {
                return this.startOf(H, !1);
            }, Y.$set = function(H, F) {
                var x, X = P.p(H), J = "set" + (this.$u ? "UTC" : ""), le = (x = {}, x[c] = J + "Date", x[R] = J + "Date", x[E] = J + "Month", x[A] = J + "FullYear", x[l] = J + "Hours", x[o] = J + "Minutes", x[a] = J + "Seconds", x[i] = J + "Milliseconds", x)[X], pe = X === c ? this.$D + (F - this.$W) : F;
                if (X === E || X === A) {
                    var ve = this.clone().set(R, 1);
                    ve.$d[le](pe), ve.init(), this.$d = ve.set(R, Math.min(this.$D, ve.daysInMonth())).$d;
                } else le && this.$d[le](pe);
                return this.init(), this;
            }, Y.set = function(H, F) {
                return this.clone().$set(H, F);
            }, Y.get = function(H) {
                return this[P.p(H)]();
            }, Y.add = function(H, F) {
                var x, X = this;
                H = Number(H);
                var J = P.p(F), le = function(be) {
                    var Xe = S(X);
                    return P.w(Xe.date(Xe.date() + Math.round(be * H)), X);
                };
                if (J === E) return this.set(E, this.$M + H);
                if (J === A) return this.set(A, this.$y + H);
                if (J === c) return le(1);
                if (J === u) return le(7);
                var pe = (x = {}, x[o] = r, x[l] = s, x[a] = n, x)[J] || 1, ve = this.$d.getTime() + H * pe;
                return P.w(ve, this);
            }, Y.subtract = function(H, F) {
                return this.add(-1 * H, F);
            }, Y.format = function(H) {
                var F = this, x = this.$locale();
                if (!this.isValid()) return x.invalidDate || C;
                var X = H || "YYYY-MM-DDTHH:mm:ssZ", J = P.z(this), le = this.$H, pe = this.$m, ve = this.$M, be = x.weekdays, Xe = x.months, et = x.meridiem, Be = function(Ke, ut, Yt, Or) {
                    return Ke && (Ke[ut] || Ke(F, X)) || Yt[ut].slice(0, Or);
                }, en = function(Ke) {
                    return P.s(le % 12 || 12, Ke, "0");
                }, Ht = et || function(Ke, ut, Yt) {
                    var Or = Ke < 12 ? "AM" : "PM";
                    return Yt ? Or.toLowerCase() : Or;
                };
                return X.replace(d, function(Ke, ut) {
                    return ut || function(Yt) {
                        switch(Yt){
                            case "YY":
                                return String(F.$y).slice(-2);
                            case "YYYY":
                                return P.s(F.$y, 4, "0");
                            case "M":
                                return ve + 1;
                            case "MM":
                                return P.s(ve + 1, 2, "0");
                            case "MMM":
                                return Be(x.monthsShort, ve, Xe, 3);
                            case "MMMM":
                                return Be(Xe, ve);
                            case "D":
                                return F.$D;
                            case "DD":
                                return P.s(F.$D, 2, "0");
                            case "d":
                                return String(F.$W);
                            case "dd":
                                return Be(x.weekdaysMin, F.$W, be, 2);
                            case "ddd":
                                return Be(x.weekdaysShort, F.$W, be, 3);
                            case "dddd":
                                return be[F.$W];
                            case "H":
                                return String(le);
                            case "HH":
                                return P.s(le, 2, "0");
                            case "h":
                                return en(1);
                            case "hh":
                                return en(2);
                            case "a":
                                return Ht(le, pe, !0);
                            case "A":
                                return Ht(le, pe, !1);
                            case "m":
                                return String(pe);
                            case "mm":
                                return P.s(pe, 2, "0");
                            case "s":
                                return String(F.$s);
                            case "ss":
                                return P.s(F.$s, 2, "0");
                            case "SSS":
                                return P.s(F.$ms, 3, "0");
                            case "Z":
                                return J;
                        }
                        return null;
                    }(Ke) || J.replace(":", "");
                });
            }, Y.utcOffset = function() {
                return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
            }, Y.diff = function(H, F, x) {
                var X, J = this, le = P.p(F), pe = S(H), ve = (pe.utcOffset() - this.utcOffset()) * r, be = this - pe, Xe = function() {
                    return P.m(J, pe);
                };
                switch(le){
                    case A:
                        X = Xe() / 12;
                        break;
                    case E:
                        X = Xe();
                        break;
                    case p:
                        X = Xe() / 3;
                        break;
                    case u:
                        X = (be - ve) / 6048e5;
                        break;
                    case c:
                        X = (be - ve) / 864e5;
                        break;
                    case l:
                        X = be / s;
                        break;
                    case o:
                        X = be / r;
                        break;
                    case a:
                        X = be / n;
                        break;
                    default:
                        X = be;
                }
                return x ? X : P.a(X);
            }, Y.daysInMonth = function() {
                return this.endOf(E).$D;
            }, Y.$locale = function() {
                return T[this.$L];
            }, Y.locale = function(H, F) {
                if (!H) return this.$L;
                var x = this.clone(), X = b(H, F, !0);
                return X && (x.$L = X), x;
            }, Y.clone = function() {
                return P.w(this.$d, this);
            }, Y.toDate = function() {
                return new Date(this.valueOf());
            }, Y.toJSON = function() {
                return this.isValid() ? this.toISOString() : null;
            }, Y.toISOString = function() {
                return this.$d.toISOString();
            }, Y.toString = function() {
                return this.$d.toUTCString();
            }, k;
        }(), G = w.prototype;
        return S.prototype = G, [
            [
                "$ms",
                i
            ],
            [
                "$s",
                a
            ],
            [
                "$m",
                o
            ],
            [
                "$H",
                l
            ],
            [
                "$W",
                c
            ],
            [
                "$M",
                E
            ],
            [
                "$y",
                A
            ],
            [
                "$D",
                R
            ]
        ].forEach(function(k) {
            G[k[1]] = function(Y) {
                return this.$g(Y, k[0], k[1]);
            };
        }), S.extend = function(k, Y) {
            return k.$i || (k(Y, w, S), k.$i = !0), S;
        }, S.locale = b, S.isDayjs = g, S.unix = function(k) {
            return S(1e3 * k);
        }, S.en = T[I], S.Ls = T, S.p = {}, S;
    });
})(gO);
var JM = gO.exports;
const Wi = /* @__PURE__ */ Ts(JM);
var LO = {
    exports: {}
};
(function(e, t) {
    (function(n, r) {
        e.exports = r();
    })(at, function() {
        var n = {
            LTS: "h:mm:ss A",
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A"
        };
        return function(r, s, i) {
            var a = s.prototype, o = a.format;
            i.en.formats = n, a.format = function(l) {
                l === void 0 && (l = "YYYY-MM-DDTHH:mm:ssZ");
                var c = this.$locale().formats, u = function(E, p) {
                    return E.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(A, R, C) {
                        var O = C && C.toUpperCase();
                        return R || p[C] || n[C] || p[O].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(d, f, _) {
                            return f || _.slice(1);
                        });
                    });
                }(l, c === void 0 ? {} : c);
                return o.call(this, u);
            };
        };
    });
})(LO);
var qM = LO.exports;
const yO = /* @__PURE__ */ Ts(qM);
Wi.extend(yO);
function ZM({ date: e, ...t }) {
    return e ? /* @__PURE__ */ m.jsx("time", {
        dateTime: e instanceof Date ? e.toISOString() : `${e}`,
        ...t,
        children: Wi(e).format(t.format ? t.format : "LTS")
    }) : null;
}
var vO = {
    exports: {}
};
(function(e, t) {
    (function(n, r) {
        e.exports = r(L);
    })(at, (n)=>(()=>{
            var r = {
                9735: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "apathy",
                        author: "jannik siebert (https://github.com/janniks)",
                        base00: "#031A16",
                        base01: "#0B342D",
                        base02: "#184E45",
                        base03: "#2B685E",
                        base04: "#5F9C92",
                        base05: "#81B5AC",
                        base06: "#A7CEC8",
                        base07: "#D2E7E4",
                        base08: "#3E9688",
                        base09: "#3E7996",
                        base0A: "#3E4C96",
                        base0B: "#883E96",
                        base0C: "#963E4C",
                        base0D: "#96883E",
                        base0E: "#4C963E",
                        base0F: "#3E965B"
                    }, o.exports = l.default;
                },
                294: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "ashes",
                        author: "jannik siebert (https://github.com/janniks)",
                        base00: "#1C2023",
                        base01: "#393F45",
                        base02: "#565E65",
                        base03: "#747C84",
                        base04: "#ADB3BA",
                        base05: "#C7CCD1",
                        base06: "#DFE2E5",
                        base07: "#F3F4F5",
                        base08: "#C7AE95",
                        base09: "#C7C795",
                        base0A: "#AEC795",
                        base0B: "#95C7AE",
                        base0C: "#95AEC7",
                        base0D: "#AE95C7",
                        base0E: "#C795AE",
                        base0F: "#C79595"
                    }, o.exports = l.default;
                },
                1733: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "atelier dune",
                        author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)",
                        base00: "#20201d",
                        base01: "#292824",
                        base02: "#6e6b5e",
                        base03: "#7d7a68",
                        base04: "#999580",
                        base05: "#a6a28c",
                        base06: "#e8e4cf",
                        base07: "#fefbec",
                        base08: "#d73737",
                        base09: "#b65611",
                        base0A: "#cfb017",
                        base0B: "#60ac39",
                        base0C: "#1fad83",
                        base0D: "#6684e1",
                        base0E: "#b854d4",
                        base0F: "#d43552"
                    }, o.exports = l.default;
                },
                8974: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "atelier forest",
                        author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)",
                        base00: "#1b1918",
                        base01: "#2c2421",
                        base02: "#68615e",
                        base03: "#766e6b",
                        base04: "#9c9491",
                        base05: "#a8a19f",
                        base06: "#e6e2e0",
                        base07: "#f1efee",
                        base08: "#f22c40",
                        base09: "#df5320",
                        base0A: "#d5911a",
                        base0B: "#5ab738",
                        base0C: "#00ad9c",
                        base0D: "#407ee7",
                        base0E: "#6666ea",
                        base0F: "#c33ff3"
                    }, o.exports = l.default;
                },
                6933: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "atelier heath",
                        author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)",
                        base00: "#1b181b",
                        base01: "#292329",
                        base02: "#695d69",
                        base03: "#776977",
                        base04: "#9e8f9e",
                        base05: "#ab9bab",
                        base06: "#d8cad8",
                        base07: "#f7f3f7",
                        base08: "#ca402b",
                        base09: "#a65926",
                        base0A: "#bb8a35",
                        base0B: "#379a37",
                        base0C: "#159393",
                        base0D: "#516aec",
                        base0E: "#7b59c0",
                        base0F: "#cc33cc"
                    }, o.exports = l.default;
                },
                523: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "atelier lakeside",
                        author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)",
                        base00: "#161b1d",
                        base01: "#1f292e",
                        base02: "#516d7b",
                        base03: "#5a7b8c",
                        base04: "#7195a8",
                        base05: "#7ea2b4",
                        base06: "#c1e4f6",
                        base07: "#ebf8ff",
                        base08: "#d22d72",
                        base09: "#935c25",
                        base0A: "#8a8a0f",
                        base0B: "#568c3b",
                        base0C: "#2d8f6f",
                        base0D: "#257fad",
                        base0E: "#5d5db1",
                        base0F: "#b72dd2"
                    }, o.exports = l.default;
                },
                1223: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "atelier seaside",
                        author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)",
                        base00: "#131513",
                        base01: "#242924",
                        base02: "#5e6e5e",
                        base03: "#687d68",
                        base04: "#809980",
                        base05: "#8ca68c",
                        base06: "#cfe8cf",
                        base07: "#f0fff0",
                        base08: "#e6193c",
                        base09: "#87711d",
                        base0A: "#c3c322",
                        base0B: "#29a329",
                        base0C: "#1999b3",
                        base0D: "#3d62f5",
                        base0E: "#ad2bee",
                        base0F: "#e619c3"
                    }, o.exports = l.default;
                },
                1233: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "bespin",
                        author: "jan t. sott",
                        base00: "#28211c",
                        base01: "#36312e",
                        base02: "#5e5d5c",
                        base03: "#666666",
                        base04: "#797977",
                        base05: "#8a8986",
                        base06: "#9d9b97",
                        base07: "#baae9e",
                        base08: "#cf6a4c",
                        base09: "#cf7d34",
                        base0A: "#f9ee98",
                        base0B: "#54be0d",
                        base0C: "#afc4db",
                        base0D: "#5ea6ea",
                        base0E: "#9b859d",
                        base0F: "#937121"
                    }, o.exports = l.default;
                },
                2847: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "brewer",
                        author: "timothée poisot (http://github.com/tpoisot)",
                        base00: "#0c0d0e",
                        base01: "#2e2f30",
                        base02: "#515253",
                        base03: "#737475",
                        base04: "#959697",
                        base05: "#b7b8b9",
                        base06: "#dadbdc",
                        base07: "#fcfdfe",
                        base08: "#e31a1c",
                        base09: "#e6550d",
                        base0A: "#dca060",
                        base0B: "#31a354",
                        base0C: "#80b1d3",
                        base0D: "#3182bd",
                        base0E: "#756bb1",
                        base0F: "#b15928"
                    }, o.exports = l.default;
                },
                8120: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "bright",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#000000",
                        base01: "#303030",
                        base02: "#505050",
                        base03: "#b0b0b0",
                        base04: "#d0d0d0",
                        base05: "#e0e0e0",
                        base06: "#f5f5f5",
                        base07: "#ffffff",
                        base08: "#fb0120",
                        base09: "#fc6d24",
                        base0A: "#fda331",
                        base0B: "#a1c659",
                        base0C: "#76c7b7",
                        base0D: "#6fb3d2",
                        base0E: "#d381c3",
                        base0F: "#be643c"
                    }, o.exports = l.default;
                },
                6305: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "chalk",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#151515",
                        base01: "#202020",
                        base02: "#303030",
                        base03: "#505050",
                        base04: "#b0b0b0",
                        base05: "#d0d0d0",
                        base06: "#e0e0e0",
                        base07: "#f5f5f5",
                        base08: "#fb9fb1",
                        base09: "#eda987",
                        base0A: "#ddb26f",
                        base0B: "#acc267",
                        base0C: "#12cfc0",
                        base0D: "#6fc2ef",
                        base0E: "#e1a3ee",
                        base0F: "#deaf8f"
                    }, o.exports = l.default;
                },
                525: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "codeschool",
                        author: "brettof86",
                        base00: "#232c31",
                        base01: "#1c3657",
                        base02: "#2a343a",
                        base03: "#3f4944",
                        base04: "#84898c",
                        base05: "#9ea7a6",
                        base06: "#a7cfa3",
                        base07: "#b5d8f6",
                        base08: "#2a5491",
                        base09: "#43820d",
                        base0A: "#a03b1e",
                        base0B: "#237986",
                        base0C: "#b02f30",
                        base0D: "#484d79",
                        base0E: "#c59820",
                        base0F: "#c98344"
                    }, o.exports = l.default;
                },
                4124: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "colors",
                        author: "mrmrs (http://clrs.cc)",
                        base00: "#111111",
                        base01: "#333333",
                        base02: "#555555",
                        base03: "#777777",
                        base04: "#999999",
                        base05: "#bbbbbb",
                        base06: "#dddddd",
                        base07: "#ffffff",
                        base08: "#ff4136",
                        base09: "#ff851b",
                        base0A: "#ffdc00",
                        base0B: "#2ecc40",
                        base0C: "#7fdbff",
                        base0D: "#0074d9",
                        base0E: "#b10dc9",
                        base0F: "#85144b"
                    }, o.exports = l.default;
                },
                7167: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "default",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#181818",
                        base01: "#282828",
                        base02: "#383838",
                        base03: "#585858",
                        base04: "#b8b8b8",
                        base05: "#d8d8d8",
                        base06: "#e8e8e8",
                        base07: "#f8f8f8",
                        base08: "#ab4642",
                        base09: "#dc9656",
                        base0A: "#f7ca88",
                        base0B: "#a1b56c",
                        base0C: "#86c1b9",
                        base0D: "#7cafc2",
                        base0E: "#ba8baf",
                        base0F: "#a16946"
                    }, o.exports = l.default;
                },
                4582: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "eighties",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#2d2d2d",
                        base01: "#393939",
                        base02: "#515151",
                        base03: "#747369",
                        base04: "#a09f93",
                        base05: "#d3d0c8",
                        base06: "#e8e6df",
                        base07: "#f2f0ec",
                        base08: "#f2777a",
                        base09: "#f99157",
                        base0A: "#ffcc66",
                        base0B: "#99cc99",
                        base0C: "#66cccc",
                        base0D: "#6699cc",
                        base0E: "#cc99cc",
                        base0F: "#d27b53"
                    }, o.exports = l.default;
                },
                7096: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "embers",
                        author: "jannik siebert (https://github.com/janniks)",
                        base00: "#16130F",
                        base01: "#2C2620",
                        base02: "#433B32",
                        base03: "#5A5047",
                        base04: "#8A8075",
                        base05: "#A39A90",
                        base06: "#BEB6AE",
                        base07: "#DBD6D1",
                        base08: "#826D57",
                        base09: "#828257",
                        base0A: "#6D8257",
                        base0B: "#57826D",
                        base0C: "#576D82",
                        base0D: "#6D5782",
                        base0E: "#82576D",
                        base0F: "#825757"
                    }, o.exports = l.default;
                },
                9887: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "flat",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#2C3E50",
                        base01: "#34495E",
                        base02: "#7F8C8D",
                        base03: "#95A5A6",
                        base04: "#BDC3C7",
                        base05: "#e0e0e0",
                        base06: "#f5f5f5",
                        base07: "#ECF0F1",
                        base08: "#E74C3C",
                        base09: "#E67E22",
                        base0A: "#F1C40F",
                        base0B: "#2ECC71",
                        base0C: "#1ABC9C",
                        base0D: "#3498DB",
                        base0E: "#9B59B6",
                        base0F: "#be643c"
                    }, o.exports = l.default;
                },
                7199: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "google",
                        author: "seth wright (http://sethawright.com)",
                        base00: "#1d1f21",
                        base01: "#282a2e",
                        base02: "#373b41",
                        base03: "#969896",
                        base04: "#b4b7b4",
                        base05: "#c5c8c6",
                        base06: "#e0e0e0",
                        base07: "#ffffff",
                        base08: "#CC342B",
                        base09: "#F96A38",
                        base0A: "#FBA922",
                        base0B: "#198844",
                        base0C: "#3971ED",
                        base0D: "#3971ED",
                        base0E: "#A36AC7",
                        base0F: "#3971ED"
                    }, o.exports = l.default;
                },
                1985: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "grayscale",
                        author: "alexandre gavioli (https://github.com/alexx2/)",
                        base00: "#101010",
                        base01: "#252525",
                        base02: "#464646",
                        base03: "#525252",
                        base04: "#ababab",
                        base05: "#b9b9b9",
                        base06: "#e3e3e3",
                        base07: "#f7f7f7",
                        base08: "#7c7c7c",
                        base09: "#999999",
                        base0A: "#a0a0a0",
                        base0B: "#8e8e8e",
                        base0C: "#868686",
                        base0D: "#686868",
                        base0E: "#747474",
                        base0F: "#5e5e5e"
                    }, o.exports = l.default;
                },
                8093: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "green screen",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#001100",
                        base01: "#003300",
                        base02: "#005500",
                        base03: "#007700",
                        base04: "#009900",
                        base05: "#00bb00",
                        base06: "#00dd00",
                        base07: "#00ff00",
                        base08: "#007700",
                        base09: "#009900",
                        base0A: "#007700",
                        base0B: "#00bb00",
                        base0C: "#005500",
                        base0D: "#009900",
                        base0E: "#00bb00",
                        base0F: "#005500"
                    }, o.exports = l.default;
                },
                1615: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "harmonic16",
                        author: "jannik siebert (https://github.com/janniks)",
                        base00: "#0b1c2c",
                        base01: "#223b54",
                        base02: "#405c79",
                        base03: "#627e99",
                        base04: "#aabcce",
                        base05: "#cbd6e2",
                        base06: "#e5ebf1",
                        base07: "#f7f9fb",
                        base08: "#bf8b56",
                        base09: "#bfbf56",
                        base0A: "#8bbf56",
                        base0B: "#56bf8b",
                        base0C: "#568bbf",
                        base0D: "#8b56bf",
                        base0E: "#bf568b",
                        base0F: "#bf5656"
                    }, o.exports = l.default;
                },
                9063: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "hopscotch",
                        author: "jan t. sott",
                        base00: "#322931",
                        base01: "#433b42",
                        base02: "#5c545b",
                        base03: "#797379",
                        base04: "#989498",
                        base05: "#b9b5b8",
                        base06: "#d5d3d5",
                        base07: "#ffffff",
                        base08: "#dd464c",
                        base09: "#fd8b19",
                        base0A: "#fdcc59",
                        base0B: "#8fc13e",
                        base0C: "#149b93",
                        base0D: "#1290bf",
                        base0E: "#c85e7c",
                        base0F: "#b33508"
                    }, o.exports = l.default;
                },
                9446: (o, l, c)=>{
                    function u(Yt) {
                        return Yt && Yt.__esModule ? Yt.default : Yt;
                    }
                    l.__esModule = !0;
                    var E = c(1308);
                    l.threezerotwofour = u(E);
                    var p = c(9735);
                    l.apathy = u(p);
                    var A = c(294);
                    l.ashes = u(A);
                    var R = c(1733);
                    l.atelierDune = u(R);
                    var C = c(8974);
                    l.atelierForest = u(C);
                    var O = c(6933);
                    l.atelierHeath = u(O);
                    var d = c(523);
                    l.atelierLakeside = u(d);
                    var f = c(1223);
                    l.atelierSeaside = u(f);
                    var _ = c(1233);
                    l.bespin = u(_);
                    var h = c(2847);
                    l.brewer = u(h);
                    var I = c(8120);
                    l.bright = u(I);
                    var T = c(6305);
                    l.chalk = u(T);
                    var N = c(525);
                    l.codeschool = u(N);
                    var g = c(4124);
                    l.colors = u(g);
                    var b = c(7167);
                    l.default = u(b);
                    var S = c(4582);
                    l.eighties = u(S);
                    var P = c(7096);
                    l.embers = u(P);
                    var w = c(9887);
                    l.flat = u(w);
                    var G = c(7199);
                    l.google = u(G);
                    var k = c(1985);
                    l.grayscale = u(k);
                    var Y = c(8093);
                    l.greenscreen = u(Y);
                    var H = c(1615);
                    l.harmonic = u(H);
                    var F = c(9063);
                    l.hopscotch = u(F);
                    var x = c(9033);
                    l.isotope = u(x);
                    var X = c(4112);
                    l.marrakesh = u(X);
                    var J = c(9600);
                    l.mocha = u(J);
                    var le = c(1240);
                    l.monokai = u(le);
                    var pe = c(9768);
                    l.ocean = u(pe);
                    var ve = c(8293);
                    l.paraiso = u(ve);
                    var be = c(3093);
                    l.pop = u(be);
                    var Xe = c(1951);
                    l.railscasts = u(Xe);
                    var et = c(6368);
                    l.shapeshifter = u(et);
                    var Be = c(2317);
                    l.solarized = u(Be);
                    var en = c(1091);
                    l.summerfruit = u(en);
                    var Ht = c(6943);
                    l.tomorrow = u(Ht);
                    var Ke = c(5670);
                    l.tube = u(Ke);
                    var ut = c(2536);
                    l.twilight = u(ut);
                },
                9033: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "isotope",
                        author: "jan t. sott",
                        base00: "#000000",
                        base01: "#404040",
                        base02: "#606060",
                        base03: "#808080",
                        base04: "#c0c0c0",
                        base05: "#d0d0d0",
                        base06: "#e0e0e0",
                        base07: "#ffffff",
                        base08: "#ff0000",
                        base09: "#ff9900",
                        base0A: "#ff0099",
                        base0B: "#33ff00",
                        base0C: "#00ffff",
                        base0D: "#0066ff",
                        base0E: "#cc00ff",
                        base0F: "#3300ff"
                    }, o.exports = l.default;
                },
                4112: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "marrakesh",
                        author: "alexandre gavioli (http://github.com/alexx2/)",
                        base00: "#201602",
                        base01: "#302e00",
                        base02: "#5f5b17",
                        base03: "#6c6823",
                        base04: "#86813b",
                        base05: "#948e48",
                        base06: "#ccc37a",
                        base07: "#faf0a5",
                        base08: "#c35359",
                        base09: "#b36144",
                        base0A: "#a88339",
                        base0B: "#18974e",
                        base0C: "#75a738",
                        base0D: "#477ca1",
                        base0E: "#8868b3",
                        base0F: "#b3588e"
                    }, o.exports = l.default;
                },
                9600: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "mocha",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#3B3228",
                        base01: "#534636",
                        base02: "#645240",
                        base03: "#7e705a",
                        base04: "#b8afad",
                        base05: "#d0c8c6",
                        base06: "#e9e1dd",
                        base07: "#f5eeeb",
                        base08: "#cb6077",
                        base09: "#d28b71",
                        base0A: "#f4bc87",
                        base0B: "#beb55b",
                        base0C: "#7bbda4",
                        base0D: "#8ab3b5",
                        base0E: "#a89bb9",
                        base0F: "#bb9584"
                    }, o.exports = l.default;
                },
                1240: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "monokai",
                        author: "wimer hazenberg (http://www.monokai.nl)",
                        base00: "#272822",
                        base01: "#383830",
                        base02: "#49483e",
                        base03: "#75715e",
                        base04: "#a59f85",
                        base05: "#f8f8f2",
                        base06: "#f5f4f1",
                        base07: "#f9f8f5",
                        base08: "#f92672",
                        base09: "#fd971f",
                        base0A: "#f4bf75",
                        base0B: "#a6e22e",
                        base0C: "#a1efe4",
                        base0D: "#66d9ef",
                        base0E: "#ae81ff",
                        base0F: "#cc6633"
                    }, o.exports = l.default;
                },
                9768: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "ocean",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#2b303b",
                        base01: "#343d46",
                        base02: "#4f5b66",
                        base03: "#65737e",
                        base04: "#a7adba",
                        base05: "#c0c5ce",
                        base06: "#dfe1e8",
                        base07: "#eff1f5",
                        base08: "#bf616a",
                        base09: "#d08770",
                        base0A: "#ebcb8b",
                        base0B: "#a3be8c",
                        base0C: "#96b5b4",
                        base0D: "#8fa1b3",
                        base0E: "#b48ead",
                        base0F: "#ab7967"
                    }, o.exports = l.default;
                },
                8293: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "paraiso",
                        author: "jan t. sott",
                        base00: "#2f1e2e",
                        base01: "#41323f",
                        base02: "#4f424c",
                        base03: "#776e71",
                        base04: "#8d8687",
                        base05: "#a39e9b",
                        base06: "#b9b6b0",
                        base07: "#e7e9db",
                        base08: "#ef6155",
                        base09: "#f99b15",
                        base0A: "#fec418",
                        base0B: "#48b685",
                        base0C: "#5bc4bf",
                        base0D: "#06b6ef",
                        base0E: "#815ba4",
                        base0F: "#e96ba8"
                    }, o.exports = l.default;
                },
                3093: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "pop",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#000000",
                        base01: "#202020",
                        base02: "#303030",
                        base03: "#505050",
                        base04: "#b0b0b0",
                        base05: "#d0d0d0",
                        base06: "#e0e0e0",
                        base07: "#ffffff",
                        base08: "#eb008a",
                        base09: "#f29333",
                        base0A: "#f8ca12",
                        base0B: "#37b349",
                        base0C: "#00aabb",
                        base0D: "#0e5a94",
                        base0E: "#b31e8d",
                        base0F: "#7a2d00"
                    }, o.exports = l.default;
                },
                1951: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "railscasts",
                        author: "ryan bates (http://railscasts.com)",
                        base00: "#2b2b2b",
                        base01: "#272935",
                        base02: "#3a4055",
                        base03: "#5a647e",
                        base04: "#d4cfc9",
                        base05: "#e6e1dc",
                        base06: "#f4f1ed",
                        base07: "#f9f7f3",
                        base08: "#da4939",
                        base09: "#cc7833",
                        base0A: "#ffc66d",
                        base0B: "#a5c261",
                        base0C: "#519f50",
                        base0D: "#6d9cbe",
                        base0E: "#b6b3eb",
                        base0F: "#bc9458"
                    }, o.exports = l.default;
                },
                6368: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "shapeshifter",
                        author: "tyler benziger (http://tybenz.com)",
                        base00: "#000000",
                        base01: "#040404",
                        base02: "#102015",
                        base03: "#343434",
                        base04: "#555555",
                        base05: "#ababab",
                        base06: "#e0e0e0",
                        base07: "#f9f9f9",
                        base08: "#e92f2f",
                        base09: "#e09448",
                        base0A: "#dddd13",
                        base0B: "#0ed839",
                        base0C: "#23edda",
                        base0D: "#3b48e3",
                        base0E: "#f996e2",
                        base0F: "#69542d"
                    }, o.exports = l.default;
                },
                2317: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "solarized",
                        author: "ethan schoonover (http://ethanschoonover.com/solarized)",
                        base00: "#002b36",
                        base01: "#073642",
                        base02: "#586e75",
                        base03: "#657b83",
                        base04: "#839496",
                        base05: "#93a1a1",
                        base06: "#eee8d5",
                        base07: "#fdf6e3",
                        base08: "#dc322f",
                        base09: "#cb4b16",
                        base0A: "#b58900",
                        base0B: "#859900",
                        base0C: "#2aa198",
                        base0D: "#268bd2",
                        base0E: "#6c71c4",
                        base0F: "#d33682"
                    }, o.exports = l.default;
                },
                1091: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "summerfruit",
                        author: "christopher corley (http://cscorley.github.io/)",
                        base00: "#151515",
                        base01: "#202020",
                        base02: "#303030",
                        base03: "#505050",
                        base04: "#B0B0B0",
                        base05: "#D0D0D0",
                        base06: "#E0E0E0",
                        base07: "#FFFFFF",
                        base08: "#FF0086",
                        base09: "#FD8900",
                        base0A: "#ABA800",
                        base0B: "#00C918",
                        base0C: "#1faaaa",
                        base0D: "#3777E6",
                        base0E: "#AD00A1",
                        base0F: "#cc6633"
                    }, o.exports = l.default;
                },
                1308: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "threezerotwofour",
                        author: "jan t. sott (http://github.com/idleberg)",
                        base00: "#090300",
                        base01: "#3a3432",
                        base02: "#4a4543",
                        base03: "#5c5855",
                        base04: "#807d7c",
                        base05: "#a5a2a2",
                        base06: "#d6d5d4",
                        base07: "#f7f7f7",
                        base08: "#db2d20",
                        base09: "#e8bbd0",
                        base0A: "#fded02",
                        base0B: "#01a252",
                        base0C: "#b5e4f4",
                        base0D: "#01a0e4",
                        base0E: "#a16a94",
                        base0F: "#cdab53"
                    }, o.exports = l.default;
                },
                6943: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "tomorrow",
                        author: "chris kempson (http://chriskempson.com)",
                        base00: "#1d1f21",
                        base01: "#282a2e",
                        base02: "#373b41",
                        base03: "#969896",
                        base04: "#b4b7b4",
                        base05: "#c5c8c6",
                        base06: "#e0e0e0",
                        base07: "#ffffff",
                        base08: "#cc6666",
                        base09: "#de935f",
                        base0A: "#f0c674",
                        base0B: "#b5bd68",
                        base0C: "#8abeb7",
                        base0D: "#81a2be",
                        base0E: "#b294bb",
                        base0F: "#a3685a"
                    }, o.exports = l.default;
                },
                5670: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "london tube",
                        author: "jan t. sott",
                        base00: "#231f20",
                        base01: "#1c3f95",
                        base02: "#5a5758",
                        base03: "#737171",
                        base04: "#959ca1",
                        base05: "#d9d8d8",
                        base06: "#e7e7e8",
                        base07: "#ffffff",
                        base08: "#ee2e24",
                        base09: "#f386a1",
                        base0A: "#ffd204",
                        base0B: "#00853e",
                        base0C: "#85cebc",
                        base0D: "#009ddc",
                        base0E: "#98005d",
                        base0F: "#b06110"
                    }, o.exports = l.default;
                },
                2536: (o, l)=>{
                    l.__esModule = !0, l.default = {
                        scheme: "twilight",
                        author: "david hart (http://hart-dev.com)",
                        base00: "#1e1e1e",
                        base01: "#323537",
                        base02: "#464b50",
                        base03: "#5f5a60",
                        base04: "#838184",
                        base05: "#a7a7a7",
                        base06: "#c3c3c3",
                        base07: "#ffffff",
                        base08: "#cf6a4c",
                        base09: "#cda869",
                        base0A: "#f9ee98",
                        base0B: "#8f9d6a",
                        base0C: "#afc4db",
                        base0D: "#7587a6",
                        base0E: "#9b859d",
                        base0F: "#9b703f"
                    }, o.exports = l.default;
                },
                6481: (o, l, c)=>{
                    var u = c(4176), E = {};
                    for(var p in u)u.hasOwnProperty(p) && (E[u[p]] = p);
                    var A = o.exports = {
                        rgb: {
                            channels: 3,
                            labels: "rgb"
                        },
                        hsl: {
                            channels: 3,
                            labels: "hsl"
                        },
                        hsv: {
                            channels: 3,
                            labels: "hsv"
                        },
                        hwb: {
                            channels: 3,
                            labels: "hwb"
                        },
                        cmyk: {
                            channels: 4,
                            labels: "cmyk"
                        },
                        xyz: {
                            channels: 3,
                            labels: "xyz"
                        },
                        lab: {
                            channels: 3,
                            labels: "lab"
                        },
                        lch: {
                            channels: 3,
                            labels: "lch"
                        },
                        hex: {
                            channels: 1,
                            labels: [
                                "hex"
                            ]
                        },
                        keyword: {
                            channels: 1,
                            labels: [
                                "keyword"
                            ]
                        },
                        ansi16: {
                            channels: 1,
                            labels: [
                                "ansi16"
                            ]
                        },
                        ansi256: {
                            channels: 1,
                            labels: [
                                "ansi256"
                            ]
                        },
                        hcg: {
                            channels: 3,
                            labels: [
                                "h",
                                "c",
                                "g"
                            ]
                        },
                        apple: {
                            channels: 3,
                            labels: [
                                "r16",
                                "g16",
                                "b16"
                            ]
                        },
                        gray: {
                            channels: 1,
                            labels: [
                                "gray"
                            ]
                        }
                    };
                    for(var R in A)if (A.hasOwnProperty(R)) {
                        if (!("channels" in A[R])) throw new Error("missing channels property: " + R);
                        if (!("labels" in A[R])) throw new Error("missing channel labels property: " + R);
                        if (A[R].labels.length !== A[R].channels) throw new Error("channel and label counts mismatch: " + R);
                        var C = A[R].channels, O = A[R].labels;
                        delete A[R].channels, delete A[R].labels, Object.defineProperty(A[R], "channels", {
                            value: C
                        }), Object.defineProperty(A[R], "labels", {
                            value: O
                        });
                    }
                    A.rgb.hsl = function(d) {
                        var f, _, h = d[0] / 255, I = d[1] / 255, T = d[2] / 255, N = Math.min(h, I, T), g = Math.max(h, I, T), b = g - N;
                        return g === N ? f = 0 : h === g ? f = (I - T) / b : I === g ? f = 2 + (T - h) / b : T === g && (f = 4 + (h - I) / b), (f = Math.min(60 * f, 360)) < 0 && (f += 360), _ = (N + g) / 2, [
                            f,
                            100 * (g === N ? 0 : _ <= 0.5 ? b / (g + N) : b / (2 - g - N)),
                            100 * _
                        ];
                    }, A.rgb.hsv = function(d) {
                        var f, _, h, I, T, N = d[0] / 255, g = d[1] / 255, b = d[2] / 255, S = Math.max(N, g, b), P = S - Math.min(N, g, b), w = function(G) {
                            return (S - G) / 6 / P + 0.5;
                        };
                        return P === 0 ? I = T = 0 : (T = P / S, f = w(N), _ = w(g), h = w(b), N === S ? I = h - _ : g === S ? I = 0.3333333333333333 + f - h : b === S && (I = 0.6666666666666666 + _ - f), I < 0 ? I += 1 : I > 1 && (I -= 1)), [
                            360 * I,
                            100 * T,
                            100 * S
                        ];
                    }, A.rgb.hwb = function(d) {
                        var f = d[0], _ = d[1], h = d[2];
                        return [
                            A.rgb.hsl(d)[0],
                            100 * (0.00392156862745098 * Math.min(f, Math.min(_, h))),
                            100 * (h = 1 - 0.00392156862745098 * Math.max(f, Math.max(_, h)))
                        ];
                    }, A.rgb.cmyk = function(d) {
                        var f, _ = d[0] / 255, h = d[1] / 255, I = d[2] / 255;
                        return [
                            100 * ((1 - _ - (f = Math.min(1 - _, 1 - h, 1 - I))) / (1 - f) || 0),
                            100 * ((1 - h - f) / (1 - f) || 0),
                            100 * ((1 - I - f) / (1 - f) || 0),
                            100 * f
                        ];
                    }, A.rgb.keyword = function(d) {
                        var f = E[d];
                        if (f) return f;
                        var _, h, I, T = 1 / 0;
                        for(var N in u)if (u.hasOwnProperty(N)) {
                            var g = u[N], b = (h = d, I = g, Math.pow(h[0] - I[0], 2) + Math.pow(h[1] - I[1], 2) + Math.pow(h[2] - I[2], 2));
                            b < T && (T = b, _ = N);
                        }
                        return _;
                    }, A.keyword.rgb = function(d) {
                        return u[d];
                    }, A.rgb.xyz = function(d) {
                        var f = d[0] / 255, _ = d[1] / 255, h = d[2] / 255;
                        return [
                            100 * (0.4124 * (f = f > 0.04045 ? Math.pow((f + 0.055) / 1.055, 2.4) : f / 12.92) + 0.3576 * (_ = _ > 0.04045 ? Math.pow((_ + 0.055) / 1.055, 2.4) : _ / 12.92) + 0.1805 * (h = h > 0.04045 ? Math.pow((h + 0.055) / 1.055, 2.4) : h / 12.92)),
                            100 * (0.2126 * f + 0.7152 * _ + 0.0722 * h),
                            100 * (0.0193 * f + 0.1192 * _ + 0.9505 * h)
                        ];
                    }, A.rgb.lab = function(d) {
                        var f = A.rgb.xyz(d), _ = f[0], h = f[1], I = f[2];
                        return h /= 100, I /= 108.883, _ = (_ /= 95.047) > 8856e-6 ? Math.pow(_, 0.3333333333333333) : 7.787 * _ + 0.13793103448275862, [
                            116 * (h = h > 8856e-6 ? Math.pow(h, 0.3333333333333333) : 7.787 * h + 0.13793103448275862) - 16,
                            500 * (_ - h),
                            200 * (h - (I = I > 8856e-6 ? Math.pow(I, 0.3333333333333333) : 7.787 * I + 0.13793103448275862))
                        ];
                    }, A.hsl.rgb = function(d) {
                        var f, _, h, I, T, N = d[0] / 360, g = d[1] / 100, b = d[2] / 100;
                        if (g === 0) return [
                            T = 255 * b,
                            T,
                            T
                        ];
                        f = 2 * b - (_ = b < 0.5 ? b * (1 + g) : b + g - b * g), I = [
                            0,
                            0,
                            0
                        ];
                        for(var S = 0; S < 3; S++)(h = N + 0.3333333333333333 * -(S - 1)) < 0 && h++, h > 1 && h--, T = 6 * h < 1 ? f + 6 * (_ - f) * h : 2 * h < 1 ? _ : 3 * h < 2 ? f + (_ - f) * (0.6666666666666666 - h) * 6 : f, I[S] = 255 * T;
                        return I;
                    }, A.hsl.hsv = function(d) {
                        var f = d[0], _ = d[1] / 100, h = d[2] / 100, I = _, T = Math.max(h, 0.01);
                        return _ *= (h *= 2) <= 1 ? h : 2 - h, I *= T <= 1 ? T : 2 - T, [
                            f,
                            100 * (h === 0 ? 2 * I / (T + I) : 2 * _ / (h + _)),
                            100 * ((h + _) / 2)
                        ];
                    }, A.hsv.rgb = function(d) {
                        var f = d[0] / 60, _ = d[1] / 100, h = d[2] / 100, I = Math.floor(f) % 6, T = f - Math.floor(f), N = 255 * h * (1 - _), g = 255 * h * (1 - _ * T), b = 255 * h * (1 - _ * (1 - T));
                        switch(h *= 255, I){
                            case 0:
                                return [
                                    h,
                                    b,
                                    N
                                ];
                            case 1:
                                return [
                                    g,
                                    h,
                                    N
                                ];
                            case 2:
                                return [
                                    N,
                                    h,
                                    b
                                ];
                            case 3:
                                return [
                                    N,
                                    g,
                                    h
                                ];
                            case 4:
                                return [
                                    b,
                                    N,
                                    h
                                ];
                            case 5:
                                return [
                                    h,
                                    N,
                                    g
                                ];
                        }
                    }, A.hsv.hsl = function(d) {
                        var f, _, h, I = d[0], T = d[1] / 100, N = d[2] / 100, g = Math.max(N, 0.01);
                        return h = (2 - T) * N, _ = T * g, [
                            I,
                            100 * (_ = (_ /= (f = (2 - T) * g) <= 1 ? f : 2 - f) || 0),
                            100 * (h /= 2)
                        ];
                    }, A.hwb.rgb = function(d) {
                        var f, _, h, I, T, N, g, b = d[0] / 360, S = d[1] / 100, P = d[2] / 100, w = S + P;
                        switch(w > 1 && (S /= w, P /= w), h = 6 * b - (f = Math.floor(6 * b)), 1 & f && (h = 1 - h), I = S + h * ((_ = 1 - P) - S), f){
                            default:
                            case 6:
                            case 0:
                                T = _, N = I, g = S;
                                break;
                            case 1:
                                T = I, N = _, g = S;
                                break;
                            case 2:
                                T = S, N = _, g = I;
                                break;
                            case 3:
                                T = S, N = I, g = _;
                                break;
                            case 4:
                                T = I, N = S, g = _;
                                break;
                            case 5:
                                T = _, N = S, g = I;
                        }
                        return [
                            255 * T,
                            255 * N,
                            255 * g
                        ];
                    }, A.cmyk.rgb = function(d) {
                        var f = d[0] / 100, _ = d[1] / 100, h = d[2] / 100, I = d[3] / 100;
                        return [
                            255 * (1 - Math.min(1, f * (1 - I) + I)),
                            255 * (1 - Math.min(1, _ * (1 - I) + I)),
                            255 * (1 - Math.min(1, h * (1 - I) + I))
                        ];
                    }, A.xyz.rgb = function(d) {
                        var f, _, h, I = d[0] / 100, T = d[1] / 100, N = d[2] / 100;
                        return _ = -0.9689 * I + 1.8758 * T + 0.0415 * N, h = 0.0557 * I + -0.204 * T + 1.057 * N, f = (f = 3.2406 * I + -1.5372 * T + -0.4986 * N) > 31308e-7 ? 1.055 * Math.pow(f, 0.4166666666666667) - 0.055 : 12.92 * f, _ = _ > 31308e-7 ? 1.055 * Math.pow(_, 0.4166666666666667) - 0.055 : 12.92 * _, h = h > 31308e-7 ? 1.055 * Math.pow(h, 0.4166666666666667) - 0.055 : 12.92 * h, [
                            255 * (f = Math.min(Math.max(0, f), 1)),
                            255 * (_ = Math.min(Math.max(0, _), 1)),
                            255 * (h = Math.min(Math.max(0, h), 1))
                        ];
                    }, A.xyz.lab = function(d) {
                        var f = d[0], _ = d[1], h = d[2];
                        return _ /= 100, h /= 108.883, f = (f /= 95.047) > 8856e-6 ? Math.pow(f, 0.3333333333333333) : 7.787 * f + 0.13793103448275862, [
                            116 * (_ = _ > 8856e-6 ? Math.pow(_, 0.3333333333333333) : 7.787 * _ + 0.13793103448275862) - 16,
                            500 * (f - _),
                            200 * (_ - (h = h > 8856e-6 ? Math.pow(h, 0.3333333333333333) : 7.787 * h + 0.13793103448275862))
                        ];
                    }, A.lab.xyz = function(d) {
                        var f, _, h, I = d[0];
                        f = d[1] / 500 + (_ = (I + 16) / 116), h = _ - d[2] / 200;
                        var T = Math.pow(_, 3), N = Math.pow(f, 3), g = Math.pow(h, 3);
                        return _ = T > 8856e-6 ? T : (_ - 0.13793103448275862) / 7.787, f = N > 8856e-6 ? N : (f - 0.13793103448275862) / 7.787, h = g > 8856e-6 ? g : (h - 0.13793103448275862) / 7.787, [
                            f *= 95.047,
                            _ *= 100,
                            h *= 108.883
                        ];
                    }, A.lab.lch = function(d) {
                        var f, _ = d[0], h = d[1], I = d[2];
                        return (f = 360 * Math.atan2(I, h) / 2 / Math.PI) < 0 && (f += 360), [
                            _,
                            Math.sqrt(h * h + I * I),
                            f
                        ];
                    }, A.lch.lab = function(d) {
                        var f, _ = d[0], h = d[1];
                        return f = d[2] / 360 * 2 * Math.PI, [
                            _,
                            h * Math.cos(f),
                            h * Math.sin(f)
                        ];
                    }, A.rgb.ansi16 = function(d) {
                        var f = d[0], _ = d[1], h = d[2], I = 1 in arguments ? arguments[1] : A.rgb.hsv(d)[2];
                        if ((I = Math.round(I / 50)) === 0) return 30;
                        var T = 30 + (Math.round(h / 255) << 2 | Math.round(_ / 255) << 1 | Math.round(f / 255));
                        return I === 2 && (T += 60), T;
                    }, A.hsv.ansi16 = function(d) {
                        return A.rgb.ansi16(A.hsv.rgb(d), d[2]);
                    }, A.rgb.ansi256 = function(d) {
                        var f = d[0], _ = d[1], h = d[2];
                        return f === _ && _ === h ? f < 8 ? 16 : f > 248 ? 231 : Math.round((f - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(f / 255 * 5) + 6 * Math.round(_ / 255 * 5) + Math.round(h / 255 * 5);
                    }, A.ansi16.rgb = function(d) {
                        var f = d % 10;
                        if (f === 0 || f === 7) return d > 50 && (f += 3.5), [
                            f = f / 10.5 * 255,
                            f,
                            f
                        ];
                        var _ = 0.5 * (1 + ~~(d > 50));
                        return [
                            (1 & f) * _ * 255,
                            (f >> 1 & 1) * _ * 255,
                            (f >> 2 & 1) * _ * 255
                        ];
                    }, A.ansi256.rgb = function(d) {
                        if (d >= 232) {
                            var f = 10 * (d - 232) + 8;
                            return [
                                f,
                                f,
                                f
                            ];
                        }
                        var _;
                        return d -= 16, [
                            Math.floor(d / 36) / 5 * 255,
                            Math.floor((_ = d % 36) / 6) / 5 * 255,
                            _ % 6 / 5 * 255
                        ];
                    }, A.rgb.hex = function(d) {
                        var f = (((255 & Math.round(d[0])) << 16) + ((255 & Math.round(d[1])) << 8) + (255 & Math.round(d[2]))).toString(16).toUpperCase();
                        return "000000".substring(f.length) + f;
                    }, A.hex.rgb = function(d) {
                        var f = d.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
                        if (!f) return [
                            0,
                            0,
                            0
                        ];
                        var _ = f[0];
                        f[0].length === 3 && (_ = _.split("").map(function(I) {
                            return I + I;
                        }).join(""));
                        var h = parseInt(_, 16);
                        return [
                            h >> 16 & 255,
                            h >> 8 & 255,
                            255 & h
                        ];
                    }, A.rgb.hcg = function(d) {
                        var f, _ = d[0] / 255, h = d[1] / 255, I = d[2] / 255, T = Math.max(Math.max(_, h), I), N = Math.min(Math.min(_, h), I), g = T - N;
                        return f = g <= 0 ? 0 : T === _ ? (h - I) / g % 6 : T === h ? 2 + (I - _) / g : 4 + (_ - h) / g + 4, f /= 6, [
                            360 * (f %= 1),
                            100 * g,
                            100 * (g < 1 ? N / (1 - g) : 0)
                        ];
                    }, A.hsl.hcg = function(d) {
                        var f = d[1] / 100, _ = d[2] / 100, h = 1, I = 0;
                        return (h = _ < 0.5 ? 2 * f * _ : 2 * f * (1 - _)) < 1 && (I = (_ - 0.5 * h) / (1 - h)), [
                            d[0],
                            100 * h,
                            100 * I
                        ];
                    }, A.hsv.hcg = function(d) {
                        var f = d[1] / 100, _ = d[2] / 100, h = f * _, I = 0;
                        return h < 1 && (I = (_ - h) / (1 - h)), [
                            d[0],
                            100 * h,
                            100 * I
                        ];
                    }, A.hcg.rgb = function(d) {
                        var f = d[0] / 360, _ = d[1] / 100, h = d[2] / 100;
                        if (_ === 0) return [
                            255 * h,
                            255 * h,
                            255 * h
                        ];
                        var I, T = [
                            0,
                            0,
                            0
                        ], N = f % 1 * 6, g = N % 1, b = 1 - g;
                        switch(Math.floor(N)){
                            case 0:
                                T[0] = 1, T[1] = g, T[2] = 0;
                                break;
                            case 1:
                                T[0] = b, T[1] = 1, T[2] = 0;
                                break;
                            case 2:
                                T[0] = 0, T[1] = 1, T[2] = g;
                                break;
                            case 3:
                                T[0] = 0, T[1] = b, T[2] = 1;
                                break;
                            case 4:
                                T[0] = g, T[1] = 0, T[2] = 1;
                                break;
                            default:
                                T[0] = 1, T[1] = 0, T[2] = b;
                        }
                        return I = (1 - _) * h, [
                            255 * (_ * T[0] + I),
                            255 * (_ * T[1] + I),
                            255 * (_ * T[2] + I)
                        ];
                    }, A.hcg.hsv = function(d) {
                        var f = d[1] / 100, _ = f + d[2] / 100 * (1 - f), h = 0;
                        return _ > 0 && (h = f / _), [
                            d[0],
                            100 * h,
                            100 * _
                        ];
                    }, A.hcg.hsl = function(d) {
                        var f = d[1] / 100, _ = d[2] / 100 * (1 - f) + 0.5 * f, h = 0;
                        return _ > 0 && _ < 0.5 ? h = f / (2 * _) : _ >= 0.5 && _ < 1 && (h = f / (2 * (1 - _))), [
                            d[0],
                            100 * h,
                            100 * _
                        ];
                    }, A.hcg.hwb = function(d) {
                        var f = d[1] / 100, _ = f + d[2] / 100 * (1 - f);
                        return [
                            d[0],
                            100 * (_ - f),
                            100 * (1 - _)
                        ];
                    }, A.hwb.hcg = function(d) {
                        var f = d[1] / 100, _ = 1 - d[2] / 100, h = _ - f, I = 0;
                        return h < 1 && (I = (_ - h) / (1 - h)), [
                            d[0],
                            100 * h,
                            100 * I
                        ];
                    }, A.apple.rgb = function(d) {
                        return [
                            d[0] / 65535 * 255,
                            d[1] / 65535 * 255,
                            d[2] / 65535 * 255
                        ];
                    }, A.rgb.apple = function(d) {
                        return [
                            d[0] / 255 * 65535,
                            d[1] / 255 * 65535,
                            d[2] / 255 * 65535
                        ];
                    }, A.gray.rgb = function(d) {
                        return [
                            d[0] / 100 * 255,
                            d[0] / 100 * 255,
                            d[0] / 100 * 255
                        ];
                    }, A.gray.hsl = A.gray.hsv = function(d) {
                        return [
                            0,
                            0,
                            d[0]
                        ];
                    }, A.gray.hwb = function(d) {
                        return [
                            0,
                            100,
                            d[0]
                        ];
                    }, A.gray.cmyk = function(d) {
                        return [
                            0,
                            0,
                            0,
                            d[0]
                        ];
                    }, A.gray.lab = function(d) {
                        return [
                            d[0],
                            0,
                            0
                        ];
                    }, A.gray.hex = function(d) {
                        var f = 255 & Math.round(d[0] / 100 * 255), _ = ((f << 16) + (f << 8) + f).toString(16).toUpperCase();
                        return "000000".substring(_.length) + _;
                    }, A.rgb.gray = function(d) {
                        return [
                            (d[0] + d[1] + d[2]) / 3 / 255 * 100
                        ];
                    };
                },
                4732: (o, l, c)=>{
                    var u = c(6481), E = c(1157), p = {};
                    Object.keys(u).forEach(function(A) {
                        p[A] = {}, Object.defineProperty(p[A], "channels", {
                            value: u[A].channels
                        }), Object.defineProperty(p[A], "labels", {
                            value: u[A].labels
                        });
                        var R = E(A);
                        Object.keys(R).forEach(function(C) {
                            var O = R[C];
                            p[A][C] = function(d) {
                                var f = function(_) {
                                    if (_ == null) return _;
                                    arguments.length > 1 && (_ = Array.prototype.slice.call(arguments));
                                    var h = d(_);
                                    if (typeof h == "object") for(var I = h.length, T = 0; T < I; T++)h[T] = Math.round(h[T]);
                                    return h;
                                };
                                return "conversion" in d && (f.conversion = d.conversion), f;
                            }(O), p[A][C].raw = function(d) {
                                var f = function(_) {
                                    return _ == null ? _ : (arguments.length > 1 && (_ = Array.prototype.slice.call(arguments)), d(_));
                                };
                                return "conversion" in d && (f.conversion = d.conversion), f;
                            }(O);
                        });
                    }), o.exports = p;
                },
                1157: (o, l, c)=>{
                    var u = c(6481);
                    function E(R) {
                        var C = function() {
                            for(var N = {}, g = Object.keys(u), b = g.length, S = 0; S < b; S++)N[g[S]] = {
                                distance: -1,
                                parent: null
                            };
                            return N;
                        }(), O = [
                            R
                        ];
                        for(C[R].distance = 0; O.length;)for(var d = O.pop(), f = Object.keys(u[d]), _ = f.length, h = 0; h < _; h++){
                            var I = f[h], T = C[I];
                            T.distance === -1 && (T.distance = C[d].distance + 1, T.parent = d, O.unshift(I));
                        }
                        return C;
                    }
                    function p(R, C) {
                        return function(O) {
                            return C(R(O));
                        };
                    }
                    function A(R, C) {
                        for(var O = [
                            C[R].parent,
                            R
                        ], d = u[C[R].parent][R], f = C[R].parent; C[f].parent;)O.unshift(C[f].parent), d = p(u[C[f].parent][f], d), f = C[f].parent;
                        return d.conversion = O, d;
                    }
                    o.exports = function(R) {
                        for(var C = E(R), O = {}, d = Object.keys(C), f = d.length, _ = 0; _ < f; _++){
                            var h = d[_];
                            C[h].parent !== null && (O[h] = A(h, C));
                        }
                        return O;
                    };
                },
                4176: (o)=>{
                    o.exports = {
                        aliceblue: [
                            240,
                            248,
                            255
                        ],
                        antiquewhite: [
                            250,
                            235,
                            215
                        ],
                        aqua: [
                            0,
                            255,
                            255
                        ],
                        aquamarine: [
                            127,
                            255,
                            212
                        ],
                        azure: [
                            240,
                            255,
                            255
                        ],
                        beige: [
                            245,
                            245,
                            220
                        ],
                        bisque: [
                            255,
                            228,
                            196
                        ],
                        black: [
                            0,
                            0,
                            0
                        ],
                        blanchedalmond: [
                            255,
                            235,
                            205
                        ],
                        blue: [
                            0,
                            0,
                            255
                        ],
                        blueviolet: [
                            138,
                            43,
                            226
                        ],
                        brown: [
                            165,
                            42,
                            42
                        ],
                        burlywood: [
                            222,
                            184,
                            135
                        ],
                        cadetblue: [
                            95,
                            158,
                            160
                        ],
                        chartreuse: [
                            127,
                            255,
                            0
                        ],
                        chocolate: [
                            210,
                            105,
                            30
                        ],
                        coral: [
                            255,
                            127,
                            80
                        ],
                        cornflowerblue: [
                            100,
                            149,
                            237
                        ],
                        cornsilk: [
                            255,
                            248,
                            220
                        ],
                        crimson: [
                            220,
                            20,
                            60
                        ],
                        cyan: [
                            0,
                            255,
                            255
                        ],
                        darkblue: [
                            0,
                            0,
                            139
                        ],
                        darkcyan: [
                            0,
                            139,
                            139
                        ],
                        darkgoldenrod: [
                            184,
                            134,
                            11
                        ],
                        darkgray: [
                            169,
                            169,
                            169
                        ],
                        darkgreen: [
                            0,
                            100,
                            0
                        ],
                        darkgrey: [
                            169,
                            169,
                            169
                        ],
                        darkkhaki: [
                            189,
                            183,
                            107
                        ],
                        darkmagenta: [
                            139,
                            0,
                            139
                        ],
                        darkolivegreen: [
                            85,
                            107,
                            47
                        ],
                        darkorange: [
                            255,
                            140,
                            0
                        ],
                        darkorchid: [
                            153,
                            50,
                            204
                        ],
                        darkred: [
                            139,
                            0,
                            0
                        ],
                        darksalmon: [
                            233,
                            150,
                            122
                        ],
                        darkseagreen: [
                            143,
                            188,
                            143
                        ],
                        darkslateblue: [
                            72,
                            61,
                            139
                        ],
                        darkslategray: [
                            47,
                            79,
                            79
                        ],
                        darkslategrey: [
                            47,
                            79,
                            79
                        ],
                        darkturquoise: [
                            0,
                            206,
                            209
                        ],
                        darkviolet: [
                            148,
                            0,
                            211
                        ],
                        deeppink: [
                            255,
                            20,
                            147
                        ],
                        deepskyblue: [
                            0,
                            191,
                            255
                        ],
                        dimgray: [
                            105,
                            105,
                            105
                        ],
                        dimgrey: [
                            105,
                            105,
                            105
                        ],
                        dodgerblue: [
                            30,
                            144,
                            255
                        ],
                        firebrick: [
                            178,
                            34,
                            34
                        ],
                        floralwhite: [
                            255,
                            250,
                            240
                        ],
                        forestgreen: [
                            34,
                            139,
                            34
                        ],
                        fuchsia: [
                            255,
                            0,
                            255
                        ],
                        gainsboro: [
                            220,
                            220,
                            220
                        ],
                        ghostwhite: [
                            248,
                            248,
                            255
                        ],
                        gold: [
                            255,
                            215,
                            0
                        ],
                        goldenrod: [
                            218,
                            165,
                            32
                        ],
                        gray: [
                            128,
                            128,
                            128
                        ],
                        green: [
                            0,
                            128,
                            0
                        ],
                        greenyellow: [
                            173,
                            255,
                            47
                        ],
                        grey: [
                            128,
                            128,
                            128
                        ],
                        honeydew: [
                            240,
                            255,
                            240
                        ],
                        hotpink: [
                            255,
                            105,
                            180
                        ],
                        indianred: [
                            205,
                            92,
                            92
                        ],
                        indigo: [
                            75,
                            0,
                            130
                        ],
                        ivory: [
                            255,
                            255,
                            240
                        ],
                        khaki: [
                            240,
                            230,
                            140
                        ],
                        lavender: [
                            230,
                            230,
                            250
                        ],
                        lavenderblush: [
                            255,
                            240,
                            245
                        ],
                        lawngreen: [
                            124,
                            252,
                            0
                        ],
                        lemonchiffon: [
                            255,
                            250,
                            205
                        ],
                        lightblue: [
                            173,
                            216,
                            230
                        ],
                        lightcoral: [
                            240,
                            128,
                            128
                        ],
                        lightcyan: [
                            224,
                            255,
                            255
                        ],
                        lightgoldenrodyellow: [
                            250,
                            250,
                            210
                        ],
                        lightgray: [
                            211,
                            211,
                            211
                        ],
                        lightgreen: [
                            144,
                            238,
                            144
                        ],
                        lightgrey: [
                            211,
                            211,
                            211
                        ],
                        lightpink: [
                            255,
                            182,
                            193
                        ],
                        lightsalmon: [
                            255,
                            160,
                            122
                        ],
                        lightseagreen: [
                            32,
                            178,
                            170
                        ],
                        lightskyblue: [
                            135,
                            206,
                            250
                        ],
                        lightslategray: [
                            119,
                            136,
                            153
                        ],
                        lightslategrey: [
                            119,
                            136,
                            153
                        ],
                        lightsteelblue: [
                            176,
                            196,
                            222
                        ],
                        lightyellow: [
                            255,
                            255,
                            224
                        ],
                        lime: [
                            0,
                            255,
                            0
                        ],
                        limegreen: [
                            50,
                            205,
                            50
                        ],
                        linen: [
                            250,
                            240,
                            230
                        ],
                        magenta: [
                            255,
                            0,
                            255
                        ],
                        maroon: [
                            128,
                            0,
                            0
                        ],
                        mediumaquamarine: [
                            102,
                            205,
                            170
                        ],
                        mediumblue: [
                            0,
                            0,
                            205
                        ],
                        mediumorchid: [
                            186,
                            85,
                            211
                        ],
                        mediumpurple: [
                            147,
                            112,
                            219
                        ],
                        mediumseagreen: [
                            60,
                            179,
                            113
                        ],
                        mediumslateblue: [
                            123,
                            104,
                            238
                        ],
                        mediumspringgreen: [
                            0,
                            250,
                            154
                        ],
                        mediumturquoise: [
                            72,
                            209,
                            204
                        ],
                        mediumvioletred: [
                            199,
                            21,
                            133
                        ],
                        midnightblue: [
                            25,
                            25,
                            112
                        ],
                        mintcream: [
                            245,
                            255,
                            250
                        ],
                        mistyrose: [
                            255,
                            228,
                            225
                        ],
                        moccasin: [
                            255,
                            228,
                            181
                        ],
                        navajowhite: [
                            255,
                            222,
                            173
                        ],
                        navy: [
                            0,
                            0,
                            128
                        ],
                        oldlace: [
                            253,
                            245,
                            230
                        ],
                        olive: [
                            128,
                            128,
                            0
                        ],
                        olivedrab: [
                            107,
                            142,
                            35
                        ],
                        orange: [
                            255,
                            165,
                            0
                        ],
                        orangered: [
                            255,
                            69,
                            0
                        ],
                        orchid: [
                            218,
                            112,
                            214
                        ],
                        palegoldenrod: [
                            238,
                            232,
                            170
                        ],
                        palegreen: [
                            152,
                            251,
                            152
                        ],
                        paleturquoise: [
                            175,
                            238,
                            238
                        ],
                        palevioletred: [
                            219,
                            112,
                            147
                        ],
                        papayawhip: [
                            255,
                            239,
                            213
                        ],
                        peachpuff: [
                            255,
                            218,
                            185
                        ],
                        peru: [
                            205,
                            133,
                            63
                        ],
                        pink: [
                            255,
                            192,
                            203
                        ],
                        plum: [
                            221,
                            160,
                            221
                        ],
                        powderblue: [
                            176,
                            224,
                            230
                        ],
                        purple: [
                            128,
                            0,
                            128
                        ],
                        rebeccapurple: [
                            102,
                            51,
                            153
                        ],
                        red: [
                            255,
                            0,
                            0
                        ],
                        rosybrown: [
                            188,
                            143,
                            143
                        ],
                        royalblue: [
                            65,
                            105,
                            225
                        ],
                        saddlebrown: [
                            139,
                            69,
                            19
                        ],
                        salmon: [
                            250,
                            128,
                            114
                        ],
                        sandybrown: [
                            244,
                            164,
                            96
                        ],
                        seagreen: [
                            46,
                            139,
                            87
                        ],
                        seashell: [
                            255,
                            245,
                            238
                        ],
                        sienna: [
                            160,
                            82,
                            45
                        ],
                        silver: [
                            192,
                            192,
                            192
                        ],
                        skyblue: [
                            135,
                            206,
                            235
                        ],
                        slateblue: [
                            106,
                            90,
                            205
                        ],
                        slategray: [
                            112,
                            128,
                            144
                        ],
                        slategrey: [
                            112,
                            128,
                            144
                        ],
                        snow: [
                            255,
                            250,
                            250
                        ],
                        springgreen: [
                            0,
                            255,
                            127
                        ],
                        steelblue: [
                            70,
                            130,
                            180
                        ],
                        tan: [
                            210,
                            180,
                            140
                        ],
                        teal: [
                            0,
                            128,
                            128
                        ],
                        thistle: [
                            216,
                            191,
                            216
                        ],
                        tomato: [
                            255,
                            99,
                            71
                        ],
                        turquoise: [
                            64,
                            224,
                            208
                        ],
                        violet: [
                            238,
                            130,
                            238
                        ],
                        wheat: [
                            245,
                            222,
                            179
                        ],
                        white: [
                            255,
                            255,
                            255
                        ],
                        whitesmoke: [
                            245,
                            245,
                            245
                        ],
                        yellow: [
                            255,
                            255,
                            0
                        ],
                        yellowgreen: [
                            154,
                            205,
                            50
                        ]
                    };
                },
                4877: (o)=>{
                    o.exports = {
                        aliceblue: [
                            240,
                            248,
                            255
                        ],
                        antiquewhite: [
                            250,
                            235,
                            215
                        ],
                        aqua: [
                            0,
                            255,
                            255
                        ],
                        aquamarine: [
                            127,
                            255,
                            212
                        ],
                        azure: [
                            240,
                            255,
                            255
                        ],
                        beige: [
                            245,
                            245,
                            220
                        ],
                        bisque: [
                            255,
                            228,
                            196
                        ],
                        black: [
                            0,
                            0,
                            0
                        ],
                        blanchedalmond: [
                            255,
                            235,
                            205
                        ],
                        blue: [
                            0,
                            0,
                            255
                        ],
                        blueviolet: [
                            138,
                            43,
                            226
                        ],
                        brown: [
                            165,
                            42,
                            42
                        ],
                        burlywood: [
                            222,
                            184,
                            135
                        ],
                        cadetblue: [
                            95,
                            158,
                            160
                        ],
                        chartreuse: [
                            127,
                            255,
                            0
                        ],
                        chocolate: [
                            210,
                            105,
                            30
                        ],
                        coral: [
                            255,
                            127,
                            80
                        ],
                        cornflowerblue: [
                            100,
                            149,
                            237
                        ],
                        cornsilk: [
                            255,
                            248,
                            220
                        ],
                        crimson: [
                            220,
                            20,
                            60
                        ],
                        cyan: [
                            0,
                            255,
                            255
                        ],
                        darkblue: [
                            0,
                            0,
                            139
                        ],
                        darkcyan: [
                            0,
                            139,
                            139
                        ],
                        darkgoldenrod: [
                            184,
                            134,
                            11
                        ],
                        darkgray: [
                            169,
                            169,
                            169
                        ],
                        darkgreen: [
                            0,
                            100,
                            0
                        ],
                        darkgrey: [
                            169,
                            169,
                            169
                        ],
                        darkkhaki: [
                            189,
                            183,
                            107
                        ],
                        darkmagenta: [
                            139,
                            0,
                            139
                        ],
                        darkolivegreen: [
                            85,
                            107,
                            47
                        ],
                        darkorange: [
                            255,
                            140,
                            0
                        ],
                        darkorchid: [
                            153,
                            50,
                            204
                        ],
                        darkred: [
                            139,
                            0,
                            0
                        ],
                        darksalmon: [
                            233,
                            150,
                            122
                        ],
                        darkseagreen: [
                            143,
                            188,
                            143
                        ],
                        darkslateblue: [
                            72,
                            61,
                            139
                        ],
                        darkslategray: [
                            47,
                            79,
                            79
                        ],
                        darkslategrey: [
                            47,
                            79,
                            79
                        ],
                        darkturquoise: [
                            0,
                            206,
                            209
                        ],
                        darkviolet: [
                            148,
                            0,
                            211
                        ],
                        deeppink: [
                            255,
                            20,
                            147
                        ],
                        deepskyblue: [
                            0,
                            191,
                            255
                        ],
                        dimgray: [
                            105,
                            105,
                            105
                        ],
                        dimgrey: [
                            105,
                            105,
                            105
                        ],
                        dodgerblue: [
                            30,
                            144,
                            255
                        ],
                        firebrick: [
                            178,
                            34,
                            34
                        ],
                        floralwhite: [
                            255,
                            250,
                            240
                        ],
                        forestgreen: [
                            34,
                            139,
                            34
                        ],
                        fuchsia: [
                            255,
                            0,
                            255
                        ],
                        gainsboro: [
                            220,
                            220,
                            220
                        ],
                        ghostwhite: [
                            248,
                            248,
                            255
                        ],
                        gold: [
                            255,
                            215,
                            0
                        ],
                        goldenrod: [
                            218,
                            165,
                            32
                        ],
                        gray: [
                            128,
                            128,
                            128
                        ],
                        green: [
                            0,
                            128,
                            0
                        ],
                        greenyellow: [
                            173,
                            255,
                            47
                        ],
                        grey: [
                            128,
                            128,
                            128
                        ],
                        honeydew: [
                            240,
                            255,
                            240
                        ],
                        hotpink: [
                            255,
                            105,
                            180
                        ],
                        indianred: [
                            205,
                            92,
                            92
                        ],
                        indigo: [
                            75,
                            0,
                            130
                        ],
                        ivory: [
                            255,
                            255,
                            240
                        ],
                        khaki: [
                            240,
                            230,
                            140
                        ],
                        lavender: [
                            230,
                            230,
                            250
                        ],
                        lavenderblush: [
                            255,
                            240,
                            245
                        ],
                        lawngreen: [
                            124,
                            252,
                            0
                        ],
                        lemonchiffon: [
                            255,
                            250,
                            205
                        ],
                        lightblue: [
                            173,
                            216,
                            230
                        ],
                        lightcoral: [
                            240,
                            128,
                            128
                        ],
                        lightcyan: [
                            224,
                            255,
                            255
                        ],
                        lightgoldenrodyellow: [
                            250,
                            250,
                            210
                        ],
                        lightgray: [
                            211,
                            211,
                            211
                        ],
                        lightgreen: [
                            144,
                            238,
                            144
                        ],
                        lightgrey: [
                            211,
                            211,
                            211
                        ],
                        lightpink: [
                            255,
                            182,
                            193
                        ],
                        lightsalmon: [
                            255,
                            160,
                            122
                        ],
                        lightseagreen: [
                            32,
                            178,
                            170
                        ],
                        lightskyblue: [
                            135,
                            206,
                            250
                        ],
                        lightslategray: [
                            119,
                            136,
                            153
                        ],
                        lightslategrey: [
                            119,
                            136,
                            153
                        ],
                        lightsteelblue: [
                            176,
                            196,
                            222
                        ],
                        lightyellow: [
                            255,
                            255,
                            224
                        ],
                        lime: [
                            0,
                            255,
                            0
                        ],
                        limegreen: [
                            50,
                            205,
                            50
                        ],
                        linen: [
                            250,
                            240,
                            230
                        ],
                        magenta: [
                            255,
                            0,
                            255
                        ],
                        maroon: [
                            128,
                            0,
                            0
                        ],
                        mediumaquamarine: [
                            102,
                            205,
                            170
                        ],
                        mediumblue: [
                            0,
                            0,
                            205
                        ],
                        mediumorchid: [
                            186,
                            85,
                            211
                        ],
                        mediumpurple: [
                            147,
                            112,
                            219
                        ],
                        mediumseagreen: [
                            60,
                            179,
                            113
                        ],
                        mediumslateblue: [
                            123,
                            104,
                            238
                        ],
                        mediumspringgreen: [
                            0,
                            250,
                            154
                        ],
                        mediumturquoise: [
                            72,
                            209,
                            204
                        ],
                        mediumvioletred: [
                            199,
                            21,
                            133
                        ],
                        midnightblue: [
                            25,
                            25,
                            112
                        ],
                        mintcream: [
                            245,
                            255,
                            250
                        ],
                        mistyrose: [
                            255,
                            228,
                            225
                        ],
                        moccasin: [
                            255,
                            228,
                            181
                        ],
                        navajowhite: [
                            255,
                            222,
                            173
                        ],
                        navy: [
                            0,
                            0,
                            128
                        ],
                        oldlace: [
                            253,
                            245,
                            230
                        ],
                        olive: [
                            128,
                            128,
                            0
                        ],
                        olivedrab: [
                            107,
                            142,
                            35
                        ],
                        orange: [
                            255,
                            165,
                            0
                        ],
                        orangered: [
                            255,
                            69,
                            0
                        ],
                        orchid: [
                            218,
                            112,
                            214
                        ],
                        palegoldenrod: [
                            238,
                            232,
                            170
                        ],
                        palegreen: [
                            152,
                            251,
                            152
                        ],
                        paleturquoise: [
                            175,
                            238,
                            238
                        ],
                        palevioletred: [
                            219,
                            112,
                            147
                        ],
                        papayawhip: [
                            255,
                            239,
                            213
                        ],
                        peachpuff: [
                            255,
                            218,
                            185
                        ],
                        peru: [
                            205,
                            133,
                            63
                        ],
                        pink: [
                            255,
                            192,
                            203
                        ],
                        plum: [
                            221,
                            160,
                            221
                        ],
                        powderblue: [
                            176,
                            224,
                            230
                        ],
                        purple: [
                            128,
                            0,
                            128
                        ],
                        rebeccapurple: [
                            102,
                            51,
                            153
                        ],
                        red: [
                            255,
                            0,
                            0
                        ],
                        rosybrown: [
                            188,
                            143,
                            143
                        ],
                        royalblue: [
                            65,
                            105,
                            225
                        ],
                        saddlebrown: [
                            139,
                            69,
                            19
                        ],
                        salmon: [
                            250,
                            128,
                            114
                        ],
                        sandybrown: [
                            244,
                            164,
                            96
                        ],
                        seagreen: [
                            46,
                            139,
                            87
                        ],
                        seashell: [
                            255,
                            245,
                            238
                        ],
                        sienna: [
                            160,
                            82,
                            45
                        ],
                        silver: [
                            192,
                            192,
                            192
                        ],
                        skyblue: [
                            135,
                            206,
                            235
                        ],
                        slateblue: [
                            106,
                            90,
                            205
                        ],
                        slategray: [
                            112,
                            128,
                            144
                        ],
                        slategrey: [
                            112,
                            128,
                            144
                        ],
                        snow: [
                            255,
                            250,
                            250
                        ],
                        springgreen: [
                            0,
                            255,
                            127
                        ],
                        steelblue: [
                            70,
                            130,
                            180
                        ],
                        tan: [
                            210,
                            180,
                            140
                        ],
                        teal: [
                            0,
                            128,
                            128
                        ],
                        thistle: [
                            216,
                            191,
                            216
                        ],
                        tomato: [
                            255,
                            99,
                            71
                        ],
                        turquoise: [
                            64,
                            224,
                            208
                        ],
                        violet: [
                            238,
                            130,
                            238
                        ],
                        wheat: [
                            245,
                            222,
                            179
                        ],
                        white: [
                            255,
                            255,
                            255
                        ],
                        whitesmoke: [
                            245,
                            245,
                            245
                        ],
                        yellow: [
                            255,
                            255,
                            0
                        ],
                        yellowgreen: [
                            154,
                            205,
                            50
                        ]
                    };
                },
                6138: (o, l, c)=>{
                    var u = c(4877), E = c(301), p = Object.hasOwnProperty, A = /* @__PURE__ */ Object.create(null);
                    for(var R in u)p.call(u, R) && (A[u[R]] = R);
                    var C = o.exports = {
                        to: {},
                        get: {}
                    };
                    function O(f, _, h) {
                        return Math.min(Math.max(_, f), h);
                    }
                    function d(f) {
                        var _ = Math.round(f).toString(16).toUpperCase();
                        return _.length < 2 ? "0" + _ : _;
                    }
                    C.get = function(f) {
                        var _, h;
                        switch(f.substring(0, 3).toLowerCase()){
                            case "hsl":
                                _ = C.get.hsl(f), h = "hsl";
                                break;
                            case "hwb":
                                _ = C.get.hwb(f), h = "hwb";
                                break;
                            default:
                                _ = C.get.rgb(f), h = "rgb";
                        }
                        return _ ? {
                            model: h,
                            value: _
                        } : null;
                    }, C.get.rgb = function(f) {
                        if (!f) return null;
                        var _, h, I, T = [
                            0,
                            0,
                            0,
                            1
                        ];
                        if (_ = f.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)) {
                            for(I = _[2], _ = _[1], h = 0; h < 3; h++){
                                var N = 2 * h;
                                T[h] = parseInt(_.slice(N, N + 2), 16);
                            }
                            I && (T[3] = parseInt(I, 16) / 255);
                        } else if (_ = f.match(/^#([a-f0-9]{3,4})$/i)) {
                            for(I = (_ = _[1])[3], h = 0; h < 3; h++)T[h] = parseInt(_[h] + _[h], 16);
                            I && (T[3] = parseInt(I + I, 16) / 255);
                        } else if (_ = f.match(/^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/)) {
                            for(h = 0; h < 3; h++)T[h] = parseInt(_[h + 1], 0);
                            _[4] && (_[5] ? T[3] = 0.01 * parseFloat(_[4]) : T[3] = parseFloat(_[4]));
                        } else {
                            if (!(_ = f.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/))) return (_ = f.match(/^(\w+)$/)) ? _[1] === "transparent" ? [
                                0,
                                0,
                                0,
                                0
                            ] : p.call(u, _[1]) ? ((T = u[_[1]])[3] = 1, T) : null : null;
                            for(h = 0; h < 3; h++)T[h] = Math.round(2.55 * parseFloat(_[h + 1]));
                            _[4] && (_[5] ? T[3] = 0.01 * parseFloat(_[4]) : T[3] = parseFloat(_[4]));
                        }
                        for(h = 0; h < 3; h++)T[h] = O(T[h], 0, 255);
                        return T[3] = O(T[3], 0, 1), T;
                    }, C.get.hsl = function(f) {
                        if (!f) return null;
                        var _ = f.match(/^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);
                        if (_) {
                            var h = parseFloat(_[4]);
                            return [
                                (parseFloat(_[1]) % 360 + 360) % 360,
                                O(parseFloat(_[2]), 0, 100),
                                O(parseFloat(_[3]), 0, 100),
                                O(isNaN(h) ? 1 : h, 0, 1)
                            ];
                        }
                        return null;
                    }, C.get.hwb = function(f) {
                        if (!f) return null;
                        var _ = f.match(/^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);
                        if (_) {
                            var h = parseFloat(_[4]);
                            return [
                                (parseFloat(_[1]) % 360 + 360) % 360,
                                O(parseFloat(_[2]), 0, 100),
                                O(parseFloat(_[3]), 0, 100),
                                O(isNaN(h) ? 1 : h, 0, 1)
                            ];
                        }
                        return null;
                    }, C.to.hex = function() {
                        var f = E(arguments);
                        return "#" + d(f[0]) + d(f[1]) + d(f[2]) + (f[3] < 1 ? d(Math.round(255 * f[3])) : "");
                    }, C.to.rgb = function() {
                        var f = E(arguments);
                        return f.length < 4 || f[3] === 1 ? "rgb(" + Math.round(f[0]) + ", " + Math.round(f[1]) + ", " + Math.round(f[2]) + ")" : "rgba(" + Math.round(f[0]) + ", " + Math.round(f[1]) + ", " + Math.round(f[2]) + ", " + f[3] + ")";
                    }, C.to.rgb.percent = function() {
                        var f = E(arguments), _ = Math.round(f[0] / 255 * 100), h = Math.round(f[1] / 255 * 100), I = Math.round(f[2] / 255 * 100);
                        return f.length < 4 || f[3] === 1 ? "rgb(" + _ + "%, " + h + "%, " + I + "%)" : "rgba(" + _ + "%, " + h + "%, " + I + "%, " + f[3] + ")";
                    }, C.to.hsl = function() {
                        var f = E(arguments);
                        return f.length < 4 || f[3] === 1 ? "hsl(" + f[0] + ", " + f[1] + "%, " + f[2] + "%)" : "hsla(" + f[0] + ", " + f[1] + "%, " + f[2] + "%, " + f[3] + ")";
                    }, C.to.hwb = function() {
                        var f = E(arguments), _ = "";
                        return f.length >= 4 && f[3] !== 1 && (_ = ", " + f[3]), "hwb(" + f[0] + ", " + f[1] + "%, " + f[2] + "%" + _ + ")";
                    }, C.to.keyword = function(f) {
                        return A[f.slice(0, 3)];
                    };
                },
                3639: (o, l, c)=>{
                    var u = c(6138), E = c(4732), p = [].slice, A = [
                        "keyword",
                        "gray",
                        "hex"
                    ], R = {};
                    Object.keys(E).forEach(function(h) {
                        R[p.call(E[h].labels).sort().join("")] = h;
                    });
                    var C = {};
                    function O(h, I) {
                        if (!(this instanceof O)) return new O(h, I);
                        if (I && I in A && (I = null), I && !(I in E)) throw new Error("Unknown model: " + I);
                        var T, N;
                        if (h == null) this.model = "rgb", this.color = [
                            0,
                            0,
                            0
                        ], this.valpha = 1;
                        else if (h instanceof O) this.model = h.model, this.color = h.color.slice(), this.valpha = h.valpha;
                        else if (typeof h == "string") {
                            var g = u.get(h);
                            if (g === null) throw new Error("Unable to parse color from string: " + h);
                            this.model = g.model, N = E[this.model].channels, this.color = g.value.slice(0, N), this.valpha = typeof g.value[N] == "number" ? g.value[N] : 1;
                        } else if (h.length) {
                            this.model = I || "rgb", N = E[this.model].channels;
                            var b = p.call(h, 0, N);
                            this.color = _(b, N), this.valpha = typeof h[N] == "number" ? h[N] : 1;
                        } else if (typeof h == "number") h &= 16777215, this.model = "rgb", this.color = [
                            h >> 16 & 255,
                            h >> 8 & 255,
                            255 & h
                        ], this.valpha = 1;
                        else {
                            this.valpha = 1;
                            var S = Object.keys(h);
                            "alpha" in h && (S.splice(S.indexOf("alpha"), 1), this.valpha = typeof h.alpha == "number" ? h.alpha : 0);
                            var P = S.sort().join("");
                            if (!(P in R)) throw new Error("Unable to parse color from object: " + JSON.stringify(h));
                            this.model = R[P];
                            var w = E[this.model].labels, G = [];
                            for(T = 0; T < w.length; T++)G.push(h[w[T]]);
                            this.color = _(G);
                        }
                        if (C[this.model]) for(N = E[this.model].channels, T = 0; T < N; T++){
                            var k = C[this.model][T];
                            k && (this.color[T] = k(this.color[T]));
                        }
                        this.valpha = Math.max(0, Math.min(1, this.valpha)), Object.freeze && Object.freeze(this);
                    }
                    function d(h, I, T) {
                        return (h = Array.isArray(h) ? h : [
                            h
                        ]).forEach(function(N) {
                            (C[N] || (C[N] = []))[I] = T;
                        }), h = h[0], function(N) {
                            var g;
                            return arguments.length ? (T && (N = T(N)), (g = this[h]()).color[I] = N, g) : (g = this[h]().color[I], T && (g = T(g)), g);
                        };
                    }
                    function f(h) {
                        return function(I) {
                            return Math.max(0, Math.min(h, I));
                        };
                    }
                    function _(h, I) {
                        for(var T = 0; T < I; T++)typeof h[T] != "number" && (h[T] = 0);
                        return h;
                    }
                    O.prototype = {
                        toString: function() {
                            return this.string();
                        },
                        toJSON: function() {
                            return this[this.model]();
                        },
                        string: function(h) {
                            var I = this.model in u.to ? this : this.rgb(), T = (I = I.round(typeof h == "number" ? h : 1)).valpha === 1 ? I.color : I.color.concat(this.valpha);
                            return u.to[I.model](T);
                        },
                        percentString: function(h) {
                            var I = this.rgb().round(typeof h == "number" ? h : 1), T = I.valpha === 1 ? I.color : I.color.concat(this.valpha);
                            return u.to.rgb.percent(T);
                        },
                        array: function() {
                            return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
                        },
                        object: function() {
                            for(var h = {}, I = E[this.model].channels, T = E[this.model].labels, N = 0; N < I; N++)h[T[N]] = this.color[N];
                            return this.valpha !== 1 && (h.alpha = this.valpha), h;
                        },
                        unitArray: function() {
                            var h = this.rgb().color;
                            return h[0] /= 255, h[1] /= 255, h[2] /= 255, this.valpha !== 1 && h.push(this.valpha), h;
                        },
                        unitObject: function() {
                            var h = this.rgb().object();
                            return h.r /= 255, h.g /= 255, h.b /= 255, this.valpha !== 1 && (h.alpha = this.valpha), h;
                        },
                        round: function(h) {
                            return h = Math.max(h || 0, 0), new O(this.color.map(/* @__PURE__ */ function(I) {
                                return function(T) {
                                    return function(N, g) {
                                        return Number(N.toFixed(g));
                                    }(T, I);
                                };
                            }(h)).concat(this.valpha), this.model);
                        },
                        alpha: function(h) {
                            return arguments.length ? new O(this.color.concat(Math.max(0, Math.min(1, h))), this.model) : this.valpha;
                        },
                        red: d("rgb", 0, f(255)),
                        green: d("rgb", 1, f(255)),
                        blue: d("rgb", 2, f(255)),
                        hue: d([
                            "hsl",
                            "hsv",
                            "hsl",
                            "hwb",
                            "hcg"
                        ], 0, function(h) {
                            return (h % 360 + 360) % 360;
                        }),
                        saturationl: d("hsl", 1, f(100)),
                        lightness: d("hsl", 2, f(100)),
                        saturationv: d("hsv", 1, f(100)),
                        value: d("hsv", 2, f(100)),
                        chroma: d("hcg", 1, f(100)),
                        gray: d("hcg", 2, f(100)),
                        white: d("hwb", 1, f(100)),
                        wblack: d("hwb", 2, f(100)),
                        cyan: d("cmyk", 0, f(100)),
                        magenta: d("cmyk", 1, f(100)),
                        yellow: d("cmyk", 2, f(100)),
                        black: d("cmyk", 3, f(100)),
                        x: d("xyz", 0, f(100)),
                        y: d("xyz", 1, f(100)),
                        z: d("xyz", 2, f(100)),
                        l: d("lab", 0, f(100)),
                        a: d("lab", 1),
                        b: d("lab", 2),
                        keyword: function(h) {
                            return arguments.length ? new O(h) : E[this.model].keyword(this.color);
                        },
                        hex: function(h) {
                            return arguments.length ? new O(h) : u.to.hex(this.rgb().round().color);
                        },
                        rgbNumber: function() {
                            var h = this.rgb().color;
                            return (255 & h[0]) << 16 | (255 & h[1]) << 8 | 255 & h[2];
                        },
                        luminosity: function() {
                            for(var h = this.rgb().color, I = [], T = 0; T < h.length; T++){
                                var N = h[T] / 255;
                                I[T] = N <= 0.03928 ? N / 12.92 : Math.pow((N + 0.055) / 1.055, 2.4);
                            }
                            return 0.2126 * I[0] + 0.7152 * I[1] + 0.0722 * I[2];
                        },
                        contrast: function(h) {
                            var I = this.luminosity(), T = h.luminosity();
                            return I > T ? (I + 0.05) / (T + 0.05) : (T + 0.05) / (I + 0.05);
                        },
                        level: function(h) {
                            var I = this.contrast(h);
                            return I >= 7.1 ? "AAA" : I >= 4.5 ? "AA" : "";
                        },
                        isDark: function() {
                            var h = this.rgb().color;
                            return (299 * h[0] + 587 * h[1] + 114 * h[2]) / 1e3 < 128;
                        },
                        isLight: function() {
                            return !this.isDark();
                        },
                        negate: function() {
                            for(var h = this.rgb(), I = 0; I < 3; I++)h.color[I] = 255 - h.color[I];
                            return h;
                        },
                        lighten: function(h) {
                            var I = this.hsl();
                            return I.color[2] += I.color[2] * h, I;
                        },
                        darken: function(h) {
                            var I = this.hsl();
                            return I.color[2] -= I.color[2] * h, I;
                        },
                        saturate: function(h) {
                            var I = this.hsl();
                            return I.color[1] += I.color[1] * h, I;
                        },
                        desaturate: function(h) {
                            var I = this.hsl();
                            return I.color[1] -= I.color[1] * h, I;
                        },
                        whiten: function(h) {
                            var I = this.hwb();
                            return I.color[1] += I.color[1] * h, I;
                        },
                        blacken: function(h) {
                            var I = this.hwb();
                            return I.color[2] += I.color[2] * h, I;
                        },
                        grayscale: function() {
                            var h = this.rgb().color, I = 0.3 * h[0] + 0.59 * h[1] + 0.11 * h[2];
                            return O.rgb(I, I, I);
                        },
                        fade: function(h) {
                            return this.alpha(this.valpha - this.valpha * h);
                        },
                        opaquer: function(h) {
                            return this.alpha(this.valpha + this.valpha * h);
                        },
                        rotate: function(h) {
                            var I = this.hsl(), T = I.color[0];
                            return T = (T = (T + h) % 360) < 0 ? 360 + T : T, I.color[0] = T, I;
                        },
                        mix: function(h, I) {
                            if (!h || !h.rgb) throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof h);
                            var T = h.rgb(), N = this.rgb(), g = I === void 0 ? 0.5 : I, b = 2 * g - 1, S = T.alpha() - N.alpha(), P = ((b * S == -1 ? b : (b + S) / (1 + b * S)) + 1) / 2, w = 1 - P;
                            return O.rgb(P * T.red() + w * N.red(), P * T.green() + w * N.green(), P * T.blue() + w * N.blue(), T.alpha() * g + N.alpha() * (1 - g));
                        }
                    }, Object.keys(E).forEach(function(h) {
                        if (A.indexOf(h) === -1) {
                            var I = E[h].channels;
                            O.prototype[h] = function() {
                                if (this.model === h) return new O(this);
                                if (arguments.length) return new O(arguments, h);
                                var T, N = typeof arguments[I] == "number" ? I : this.valpha;
                                return new O((T = E[this.model][h].raw(this.color), Array.isArray(T) ? T : [
                                    T
                                ]).concat(N), h);
                            }, O[h] = function(T) {
                                return typeof T == "number" && (T = _(p.call(arguments), I)), new O(T, h);
                            };
                        }
                    }), o.exports = O;
                },
                9784: (o)=>{
                    var l, c = typeof Reflect == "object" ? Reflect : null, u = c && typeof c.apply == "function" ? c.apply : function(N, g, b) {
                        return Function.prototype.apply.call(N, g, b);
                    };
                    l = c && typeof c.ownKeys == "function" ? c.ownKeys : Object.getOwnPropertySymbols ? function(N) {
                        return Object.getOwnPropertyNames(N).concat(Object.getOwnPropertySymbols(N));
                    } : function(N) {
                        return Object.getOwnPropertyNames(N);
                    };
                    var E = Number.isNaN || function(N) {
                        return N != N;
                    };
                    function p() {
                        p.init.call(this);
                    }
                    o.exports = p, o.exports.once = function(N, g) {
                        return new Promise(function(b, S) {
                            function P(G) {
                                N.removeListener(g, w), S(G);
                            }
                            function w() {
                                typeof N.removeListener == "function" && N.removeListener("error", P), b([].slice.call(arguments));
                            }
                            T(N, g, w, {
                                once: !0
                            }), g !== "error" && function(G, k, Y) {
                                typeof G.on == "function" && T(G, "error", k, Y);
                            }(N, P, {
                                once: !0
                            });
                        });
                    }, p.EventEmitter = p, p.prototype._events = void 0, p.prototype._eventsCount = 0, p.prototype._maxListeners = void 0;
                    var A = 10;
                    function R(N) {
                        if (typeof N != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof N);
                    }
                    function C(N) {
                        return N._maxListeners === void 0 ? p.defaultMaxListeners : N._maxListeners;
                    }
                    function O(N, g, b, S) {
                        var P, w, G, k;
                        if (R(b), (w = N._events) === void 0 ? (w = N._events = /* @__PURE__ */ Object.create(null), N._eventsCount = 0) : (w.newListener !== void 0 && (N.emit("newListener", g, b.listener ? b.listener : b), w = N._events), G = w[g]), G === void 0) G = w[g] = b, ++N._eventsCount;
                        else if (typeof G == "function" ? G = w[g] = S ? [
                            b,
                            G
                        ] : [
                            G,
                            b
                        ] : S ? G.unshift(b) : G.push(b), (P = C(N)) > 0 && G.length > P && !G.warned) {
                            G.warned = !0;
                            var Y = new Error("Possible EventEmitter memory leak detected. " + G.length + " " + String(g) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                            Y.name = "MaxListenersExceededWarning", Y.emitter = N, Y.type = g, Y.count = G.length, k = Y, console && console.warn && console.warn(k);
                        }
                        return N;
                    }
                    function d() {
                        if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
                    }
                    function f(N, g, b) {
                        var S = {
                            fired: !1,
                            wrapFn: void 0,
                            target: N,
                            type: g,
                            listener: b
                        }, P = d.bind(S);
                        return P.listener = b, S.wrapFn = P, P;
                    }
                    function _(N, g, b) {
                        var S = N._events;
                        if (S === void 0) return [];
                        var P = S[g];
                        return P === void 0 ? [] : typeof P == "function" ? b ? [
                            P.listener || P
                        ] : [
                            P
                        ] : b ? function(w) {
                            for(var G = new Array(w.length), k = 0; k < G.length; ++k)G[k] = w[k].listener || w[k];
                            return G;
                        }(P) : I(P, P.length);
                    }
                    function h(N) {
                        var g = this._events;
                        if (g !== void 0) {
                            var b = g[N];
                            if (typeof b == "function") return 1;
                            if (b !== void 0) return b.length;
                        }
                        return 0;
                    }
                    function I(N, g) {
                        for(var b = new Array(g), S = 0; S < g; ++S)b[S] = N[S];
                        return b;
                    }
                    function T(N, g, b, S) {
                        if (typeof N.on == "function") S.once ? N.once(g, b) : N.on(g, b);
                        else {
                            if (typeof N.addEventListener != "function") throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof N);
                            N.addEventListener(g, function P(w) {
                                S.once && N.removeEventListener(g, P), b(w);
                            });
                        }
                    }
                    Object.defineProperty(p, "defaultMaxListeners", {
                        enumerable: !0,
                        get: function() {
                            return A;
                        },
                        set: function(N) {
                            if (typeof N != "number" || N < 0 || E(N)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + N + ".");
                            A = N;
                        }
                    }), p.init = function() {
                        this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
                    }, p.prototype.setMaxListeners = function(N) {
                        if (typeof N != "number" || N < 0 || E(N)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + N + ".");
                        return this._maxListeners = N, this;
                    }, p.prototype.getMaxListeners = function() {
                        return C(this);
                    }, p.prototype.emit = function(N) {
                        for(var g = [], b = 1; b < arguments.length; b++)g.push(arguments[b]);
                        var S = N === "error", P = this._events;
                        if (P !== void 0) S = S && P.error === void 0;
                        else if (!S) return !1;
                        if (S) {
                            var w;
                            if (g.length > 0 && (w = g[0]), w instanceof Error) throw w;
                            var G = new Error("Unhandled error." + (w ? " (" + w.message + ")" : ""));
                            throw G.context = w, G;
                        }
                        var k = P[N];
                        if (k === void 0) return !1;
                        if (typeof k == "function") u(k, this, g);
                        else {
                            var Y = k.length, H = I(k, Y);
                            for(b = 0; b < Y; ++b)u(H[b], this, g);
                        }
                        return !0;
                    }, p.prototype.addListener = function(N, g) {
                        return O(this, N, g, !1);
                    }, p.prototype.on = p.prototype.addListener, p.prototype.prependListener = function(N, g) {
                        return O(this, N, g, !0);
                    }, p.prototype.once = function(N, g) {
                        return R(g), this.on(N, f(this, N, g)), this;
                    }, p.prototype.prependOnceListener = function(N, g) {
                        return R(g), this.prependListener(N, f(this, N, g)), this;
                    }, p.prototype.removeListener = function(N, g) {
                        var b, S, P, w, G;
                        if (R(g), (S = this._events) === void 0) return this;
                        if ((b = S[N]) === void 0) return this;
                        if (b === g || b.listener === g) --this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete S[N], S.removeListener && this.emit("removeListener", N, b.listener || g));
                        else if (typeof b != "function") {
                            for(P = -1, w = b.length - 1; w >= 0; w--)if (b[w] === g || b[w].listener === g) {
                                G = b[w].listener, P = w;
                                break;
                            }
                            if (P < 0) return this;
                            P === 0 ? b.shift() : function(k, Y) {
                                for(; Y + 1 < k.length; Y++)k[Y] = k[Y + 1];
                                k.pop();
                            }(b, P), b.length === 1 && (S[N] = b[0]), S.removeListener !== void 0 && this.emit("removeListener", N, G || g);
                        }
                        return this;
                    }, p.prototype.off = p.prototype.removeListener, p.prototype.removeAllListeners = function(N) {
                        var g, b, S;
                        if ((b = this._events) === void 0) return this;
                        if (b.removeListener === void 0) return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : b[N] !== void 0 && (--this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete b[N]), this;
                        if (arguments.length === 0) {
                            var P, w = Object.keys(b);
                            for(S = 0; S < w.length; ++S)(P = w[S]) !== "removeListener" && this.removeAllListeners(P);
                            return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
                        }
                        if (typeof (g = b[N]) == "function") this.removeListener(N, g);
                        else if (g !== void 0) for(S = g.length - 1; S >= 0; S--)this.removeListener(N, g[S]);
                        return this;
                    }, p.prototype.listeners = function(N) {
                        return _(this, N, !0);
                    }, p.prototype.rawListeners = function(N) {
                        return _(this, N, !1);
                    }, p.listenerCount = function(N, g) {
                        return typeof N.listenerCount == "function" ? N.listenerCount(g) : h.call(N, g);
                    }, p.prototype.listenerCount = h, p.prototype.eventNames = function() {
                        return this._eventsCount > 0 ? l(this._events) : [];
                    };
                },
                4263: (o)=>{
                    o.exports = function(l, c) {
                        for(var u = arguments.length, E = new Array(u > 2 ? u - 2 : 0), p = 2; p < u; p++)E[p - 2] = arguments[p];
                        if (!l) {
                            var A;
                            if (c === void 0) A = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                            else {
                                var R = 0;
                                (A = new Error(c.replace(/%s/g, function() {
                                    return String(E[R++]);
                                }))).name = "Invariant Violation";
                            }
                            throw A.framesToPop = 1, A;
                        }
                    };
                },
                9361: (o, l, c)=>{
                    o.exports.Dispatcher = c(9808);
                },
                9808: (o, l, c)=>{
                    function u(A, R, C) {
                        return (R = function(O) {
                            var d = function(f, _) {
                                if (typeof f != "object" || f === null) return f;
                                var h = f[Symbol.toPrimitive];
                                if (h !== void 0) {
                                    var I = h.call(f, _);
                                    if (typeof I != "object") return I;
                                    throw new TypeError("@@toPrimitive must return a primitive value.");
                                }
                                return (("TURBOPACK compile-time truthy", 1) ? String : ("TURBOPACK unreachable", undefined))(f);
                            }(O, "string");
                            return typeof d == "symbol" ? d : String(d);
                        }(R)) in A ? Object.defineProperty(A, R, {
                            value: C,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : A[R] = C, A;
                    }
                    var E = c(4263), p = function() {
                        function A() {
                            u(this, "_callbacks", void 0), u(this, "_isDispatching", void 0), u(this, "_isHandled", void 0), u(this, "_isPending", void 0), u(this, "_lastID", void 0), u(this, "_pendingPayload", void 0), this._callbacks = {}, this._isDispatching = !1, this._isHandled = {}, this._isPending = {}, this._lastID = 1;
                        }
                        var R = A.prototype;
                        return R.register = function(C) {
                            var O = "ID_" + this._lastID++;
                            return this._callbacks[O] = C, O;
                        }, R.unregister = function(C) {
                            this._callbacks[C] || E(!1), delete this._callbacks[C];
                        }, R.waitFor = function(C) {
                            this._isDispatching || E(!1);
                            for(var O = 0; O < C.length; O++){
                                var d = C[O];
                                this._isPending[d] ? this._isHandled[d] || E(!1) : (this._callbacks[d] || E(!1), this._invokeCallback(d));
                            }
                        }, R.dispatch = function(C) {
                            this._isDispatching && E(!1), this._startDispatching(C);
                            try {
                                for(var O in this._callbacks)this._isPending[O] || this._invokeCallback(O);
                            } finally{
                                this._stopDispatching();
                            }
                        }, R.isDispatching = function() {
                            return this._isDispatching;
                        }, R._invokeCallback = function(C) {
                            this._isPending[C] = !0, this._callbacks[C](this._pendingPayload), this._isHandled[C] = !0;
                        }, R._startDispatching = function(C) {
                            for(var O in this._callbacks)this._isPending[O] = !1, this._isHandled[O] = !1;
                            this._pendingPayload = C, this._isDispatching = !0;
                        }, R._stopDispatching = function() {
                            delete this._pendingPayload, this._isDispatching = !1;
                        }, A;
                    }();
                    o.exports = p;
                },
                8336: (o)=>{
                    o.exports = function(l) {
                        return !(!l || typeof l == "string") && (l instanceof Array || Array.isArray(l) || l.length >= 0 && (l.splice instanceof Function || Object.getOwnPropertyDescriptor(l, l.length - 1) && l.constructor.name !== "String"));
                    };
                },
                3989: (o, l, c)=>{
                    var u = "__lodash_placeholder__", E = 32, p = 1 / 0, A = NaN, R = [
                        [
                            "ary",
                            128
                        ],
                        [
                            "bind",
                            1
                        ],
                        [
                            "bindKey",
                            2
                        ],
                        [
                            "curry",
                            8
                        ],
                        [
                            "curryRight",
                            16
                        ],
                        [
                            "flip",
                            512
                        ],
                        [
                            "partial",
                            E
                        ],
                        [
                            "partialRight",
                            64
                        ],
                        [
                            "rearg",
                            256
                        ]
                    ], C = "[object Function]", O = "[object GeneratorFunction]", d = /^\s+|\s+$/g, f = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, _ = /\{\n\/\* \[wrapped with (.+)\] \*/, h = /,? & /, I = /^[-+]0x[0-9a-f]+$/i, T = /^0b[01]+$/i, N = /^\[object .+?Constructor\]$/, g = /^0o[0-7]+$/i, b = /^(?:0|[1-9]\d*)$/, S = parseInt, P = typeof c.g == "object" && c.g && c.g.Object === Object && c.g, w = typeof self == "object" && self && self.Object === Object && self, G = P || w || Function("return this")();
                    function k($, j, ae) {
                        switch(ae.length){
                            case 0:
                                return $.call(j);
                            case 1:
                                return $.call(j, ae[0]);
                            case 2:
                                return $.call(j, ae[0], ae[1]);
                            case 3:
                                return $.call(j, ae[0], ae[1], ae[2]);
                        }
                        return $.apply(j, ae);
                    }
                    function Y($, j) {
                        return !!($ && $.length) && function(ae, Ee, we) {
                            if (Ee != Ee) return function(Tt, Jn, Fn, Bn) {
                                for(var ur = Tt.length, _t = Fn + -1; ++_t < ur;)if (Jn(Tt[_t], _t, Tt)) return _t;
                                return -1;
                            }(ae, H, we);
                            for(var Et = we - 1, xt = ae.length; ++Et < xt;)if (ae[Et] === Ee) return Et;
                            return -1;
                        }($, j, 0) > -1;
                    }
                    function H($) {
                        return $ != $;
                    }
                    function F($, j) {
                        for(var ae = -1, Ee = $.length, we = 0, Et = []; ++ae < Ee;){
                            var xt = $[ae];
                            xt !== j && xt !== u || ($[ae] = u, Et[we++] = ae);
                        }
                        return Et;
                    }
                    var x, X, J, le = Function.prototype, pe = Object.prototype, ve = G["__core-js_shared__"], be = (x = /[^.]+$/.exec(ve && ve.keys && ve.keys.IE_PROTO || "")) ? "Symbol(src)_1." + x : "", Xe = le.toString, et = pe.hasOwnProperty, Be = pe.toString, en = RegExp("^" + Xe.call(et).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), Ht = Object.create, Ke = Math.max, ut = Math.min, Yt = (X = ne(Object, "defineProperty"), (J = ne.name) && J.length > 2 ? X : void 0);
                    function Or($) {
                        if (!Ct($) || function(ae) {
                            return !!be && be in ae;
                        }($)) return !1;
                        var j = function(ae) {
                            var Ee = Ct(ae) ? Be.call(ae) : "";
                            return Ee == C || Ee == O;
                        }($) || function(ae) {
                            var Ee = !1;
                            if (ae != null && typeof ae.toString != "function") try {
                                Ee = !!(ae + "");
                            } catch  {}
                            return Ee;
                        }($) ? en : N;
                        return j.test(function(ae) {
                            if (ae != null) {
                                try {
                                    return Xe.call(ae);
                                } catch  {}
                                try {
                                    return ae + "";
                                } catch  {}
                            }
                            return "";
                        }($));
                    }
                    function En($) {
                        return function() {
                            var j = arguments;
                            switch(j.length){
                                case 0:
                                    return new $();
                                case 1:
                                    return new $(j[0]);
                                case 2:
                                    return new $(j[0], j[1]);
                                case 3:
                                    return new $(j[0], j[1], j[2]);
                                case 4:
                                    return new $(j[0], j[1], j[2], j[3]);
                                case 5:
                                    return new $(j[0], j[1], j[2], j[3], j[4]);
                                case 6:
                                    return new $(j[0], j[1], j[2], j[3], j[4], j[5]);
                                case 7:
                                    return new $(j[0], j[1], j[2], j[3], j[4], j[5], j[6]);
                            }
                            var ae, Ee = Ct(ae = $.prototype) ? Ht(ae) : {}, we = $.apply(Ee, j);
                            return Ct(we) ? we : Ee;
                        };
                    }
                    function xn($, j, ae, Ee, we, Et, xt, Tt, Jn, Fn) {
                        var Bn = 128 & j, ur = 1 & j, _t = 2 & j, Nt = 24 & j, _n = 512 & j, Wr = _t ? void 0 : En($);
                        return function qn() {
                            for(var Wt = arguments.length, st = Array(Wt), nn = Wt; nn--;)st[nn] = arguments[nn];
                            if (Nt) var Nn = Vr(qn), ht = function(At, In) {
                                for(var Gn = At.length, Qn = 0; Gn--;)At[Gn] === In && Qn++;
                                return Qn;
                            }(st, Nn);
                            if (Ee && (st = function(At, In, Gn, Qn) {
                                for(var rn = -1, gr = At.length, Lr = Gn.length, On = -1, $n = In.length, yr = Ke(gr - Lr, 0), jr = Array($n + yr), Is = !Qn; ++On < $n;)jr[On] = In[On];
                                for(; ++rn < Lr;)(Is || rn < gr) && (jr[Gn[rn]] = At[rn]);
                                for(; yr--;)jr[On++] = At[rn++];
                                return jr;
                            }(st, Ee, we, Nt)), Et && (st = function(At, In, Gn, Qn) {
                                for(var rn = -1, gr = At.length, Lr = -1, On = Gn.length, $n = -1, yr = In.length, jr = Ke(gr - On, 0), Is = Array(jr + yr), Id = !Qn; ++rn < jr;)Is[rn] = At[rn];
                                for(var lc = rn; ++$n < yr;)Is[lc + $n] = In[$n];
                                for(; ++Lr < On;)(Id || rn < gr) && (Is[lc + Gn[Lr]] = At[rn++]);
                                return Is;
                            }(st, Et, xt, Nt)), Wt -= ht, Nt && Wt < Fn) {
                                var Cr = F(st, Nn);
                                return _s($, j, xn, qn.placeholder, ae, st, Cr, Tt, Jn, Fn - Wt);
                            }
                            var Zn = ur ? ae : this, Ns = _t ? Zn[$] : $;
                            return Wt = st.length, Tt ? st = function(At, In) {
                                for(var Gn = At.length, Qn = ut(In.length, Gn), rn = function(Lr, On) {
                                    var $n = -1, yr = Lr.length;
                                    for(On || (On = Array(yr)); ++$n < yr;)On[$n] = Lr[$n];
                                    return On;
                                }(At); Qn--;){
                                    var gr = In[Qn];
                                    At[Qn] = Oe(gr, Gn) ? rn[gr] : void 0;
                                }
                                return At;
                            }(st, Tt) : _n && Wt > 1 && st.reverse(), Bn && Jn < Wt && (st.length = Jn), this && this !== G && this instanceof qn && (Ns = Wr || En(Ns)), Ns.apply(Zn, st);
                        };
                    }
                    function _s($, j, ae, Ee, we, Et, xt, Tt, Jn, Fn) {
                        var Bn = 8 & j;
                        j |= Bn ? E : 64, 4 & (j &= ~(Bn ? 64 : E)) || (j &= -4);
                        var ur = ae($, j, we, Bn ? Et : void 0, Bn ? xt : void 0, Bn ? void 0 : Et, Bn ? void 0 : xt, Tt, Jn, Fn);
                        return ur.placeholder = Ee, Ve(ur, $, j);
                    }
                    function Ai($, j, ae, Ee, we, Et, xt, Tt) {
                        var Jn = 2 & j;
                        if (!Jn && typeof $ != "function") throw new TypeError("Expected a function");
                        var Fn = Ee ? Ee.length : 0;
                        if (Fn || (j &= -97, Ee = we = void 0), xt = xt === void 0 ? xt : Ke(Vt(xt), 0), Tt = Tt === void 0 ? Tt : Vt(Tt), Fn -= we ? we.length : 0, 64 & j) {
                            var Bn = Ee, ur = we;
                            Ee = we = void 0;
                        }
                        var _t = [
                            $,
                            j,
                            ae,
                            Ee,
                            we,
                            Bn,
                            ur,
                            Et,
                            xt,
                            Tt
                        ];
                        if ($ = _t[0], j = _t[1], ae = _t[2], Ee = _t[3], we = _t[4], !(Tt = _t[9] = _t[9] == null ? Jn ? 0 : $.length : Ke(_t[9] - Fn, 0)) && 24 & j && (j &= -25), j && j != 1) Nt = j == 8 || j == 16 ? function(_n, Wr, qn) {
                            var Wt = En(_n);
                            return function st() {
                                for(var nn = arguments.length, Nn = Array(nn), ht = nn, Cr = Vr(st); ht--;)Nn[ht] = arguments[ht];
                                var Zn = nn < 3 && Nn[0] !== Cr && Nn[nn - 1] !== Cr ? [] : F(Nn, Cr);
                                return (nn -= Zn.length) < qn ? _s(_n, Wr, xn, st.placeholder, void 0, Nn, Zn, void 0, void 0, qn - nn) : k(this && this !== G && this instanceof st ? Wt : _n, this, Nn);
                            };
                        }($, j, Tt) : j != E && j != 33 || we.length ? xn.apply(void 0, _t) : function(_n, Wr, qn, Wt) {
                            var st = 1 & Wr, nn = En(_n);
                            return function Nn() {
                                for(var ht = -1, Cr = arguments.length, Zn = -1, Ns = Wt.length, At = Array(Ns + Cr), In = this && this !== G && this instanceof Nn ? nn : _n; ++Zn < Ns;)At[Zn] = Wt[Zn];
                                for(; Cr--;)At[Zn++] = arguments[++ht];
                                return k(In, st ? qn : this, At);
                            };
                        }($, j, ae, Ee);
                        else var Nt = function(_n, Wr, qn) {
                            var Wt = 1 & Wr, st = En(_n);
                            return function nn() {
                                return (this && this !== G && this instanceof nn ? st : _n).apply(Wt ? qn : this, arguments);
                            };
                        }($, j, ae);
                        return Ve(Nt, $, j);
                    }
                    function Vr($) {
                        return $.placeholder;
                    }
                    function ne($, j) {
                        var ae = function(Ee, we) {
                            return Ee == null ? void 0 : Ee[we];
                        }($, j);
                        return Or(ae) ? ae : void 0;
                    }
                    function _e($) {
                        var j = $.match(_);
                        return j ? j[1].split(h) : [];
                    }
                    function tn($, j) {
                        var ae = j.length, Ee = ae - 1;
                        return j[Ee] = (ae > 1 ? "& " : "") + j[Ee], j = j.join(ae > 2 ? ", " : " "), $.replace(f, `{
/* [wrapped with ` + j + `] */
`);
                    }
                    function Oe($, j) {
                        return !!(j = j ?? 9007199254740991) && (typeof $ == "number" || b.test($)) && $ > -1 && $ % 1 == 0 && $ < j;
                    }
                    var Ve = Yt ? function($, j, ae) {
                        var Ee, we = j + "";
                        return Yt($, "toString", {
                            configurable: !0,
                            enumerable: !1,
                            value: (Ee = tn(we, Ie(_e(we), ae)), function() {
                                return Ee;
                            })
                        });
                    } : function($) {
                        return $;
                    };
                    function Ie($, j) {
                        return function(ae, Ee) {
                            for(var we = -1, Et = ("TURBOPACK compile-time truthy", 1) ? ae.length : ("TURBOPACK unreachable", undefined); ++we < Et && Ee(ae[we], we, ae) !== !1;);
                        }(R, function(ae) {
                            var Ee = "_." + ae[0];
                            j & ae[1] && !Y($, Ee) && $.push(Ee);
                        }), $.sort();
                    }
                    function Un($, j, ae) {
                        var Ee = Ai($, 8, void 0, void 0, void 0, void 0, void 0, j = ae ? void 0 : j);
                        return Ee.placeholder = Un.placeholder, Ee;
                    }
                    function Ct($) {
                        var j = typeof $;
                        return !!$ && (j == "object" || j == "function");
                    }
                    function _o($) {
                        return $ ? ($ = function(j) {
                            if (typeof j == "number") return j;
                            if (function(we) {
                                return typeof we == "symbol" || /* @__PURE__ */ function(Et) {
                                    return !!Et && typeof Et == "object";
                                }(we) && Be.call(we) == "[object Symbol]";
                            }(j)) return A;
                            if (Ct(j)) {
                                var ae = typeof j.valueOf == "function" ? j.valueOf() : j;
                                j = Ct(ae) ? ae + "" : ae;
                            }
                            if (typeof j != "string") return j === 0 ? j : +j;
                            j = j.replace(d, "");
                            var Ee = T.test(j);
                            return Ee || g.test(j) ? S(j.slice(2), Ee ? 2 : 8) : I.test(j) ? A : +j;
                        }($)) === p || $ === -1 / 0 ? 17976931348623157e292 * ($ < 0 ? -1 : 1) : $ == $ ? $ : 0 : $ === 0 ? $ : 0;
                    }
                    function Vt($) {
                        var j = _o($), ae = j % 1;
                        return j == j ? ae ? j - ae : j : 0;
                    }
                    Un.placeholder = {}, o.exports = Un;
                },
                301: (o, l, c)=>{
                    var u = c(8336), E = Array.prototype.concat, p = Array.prototype.slice, A = o.exports = function(R) {
                        for(var C = [], O = 0, d = R.length; O < d; O++){
                            var f = R[O];
                            u(f) ? C = E.call(C, p.call(f)) : C.push(f);
                        }
                        return C;
                    };
                    A.wrap = function(R) {
                        return function() {
                            return R(A(arguments));
                        };
                    };
                },
                4119: (o)=>{
                    o.exports = n;
                }
            }, s = {};
            function i(o) {
                var l = s[o];
                if (l !== void 0) return l.exports;
                var c = s[o] = {
                    exports: {}
                };
                return r[o](c, c.exports, i), c.exports;
            }
            i.n = (o)=>{
                var l = o && o.__esModule ? ()=>o.default : ()=>o;
                return i.d(l, {
                    a: l
                }), l;
            }, i.d = (o, l)=>{
                for(var c in l)i.o(l, c) && !i.o(o, c) && Object.defineProperty(o, c, {
                    enumerable: !0,
                    get: l[c]
                });
            }, i.g = function() {
                if (typeof globalThis == "object") return globalThis;
                try {
                    return this || new Function("return this")();
                } catch  {
                    if (typeof window == "object") return window;
                }
            }(), i.o = (o, l)=>Object.prototype.hasOwnProperty.call(o, l), i.r = (o)=>{
                typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, {
                    value: "Module"
                }), Object.defineProperty(o, "__esModule", {
                    value: !0
                });
            };
            var a = {};
            return (()=>{
                function o(D) {
                    return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
                        return typeof y;
                    } : function(y) {
                        return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
                    }, o(D);
                }
                function l(D) {
                    var y = function(v, M) {
                        if (o(v) != "object" || !v) return v;
                        var U = v[Symbol.toPrimitive];
                        if (U !== void 0) {
                            var W = U.call(v, M);
                            if (o(W) != "object") return W;
                            throw new TypeError("@@toPrimitive must return a primitive value.");
                        }
                        return (("TURBOPACK compile-time truthy", 1) ? String : ("TURBOPACK unreachable", undefined))(v);
                    }(D, "string");
                    return o(y) == "symbol" ? y : y + "";
                }
                function c(D, y, v) {
                    return (y = l(y)) in D ? Object.defineProperty(D, y, {
                        value: v,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : D[y] = v, D;
                }
                function u(D, y) {
                    var v = Object.keys(D);
                    if (Object.getOwnPropertySymbols) {
                        var M = Object.getOwnPropertySymbols(D);
                        y && (M = M.filter(function(U) {
                            return Object.getOwnPropertyDescriptor(D, U).enumerable;
                        })), v.push.apply(v, M);
                    }
                    return v;
                }
                function E(D) {
                    for(var y = 1; y < arguments.length; y++){
                        var v = arguments[y] != null ? arguments[y] : {};
                        y % 2 ? u(Object(v), !0).forEach(function(M) {
                            c(D, M, v[M]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(D, Object.getOwnPropertyDescriptors(v)) : u(Object(v)).forEach(function(M) {
                            Object.defineProperty(D, M, Object.getOwnPropertyDescriptor(v, M));
                        });
                    }
                    return D;
                }
                function p(D, y) {
                    if (!(D instanceof y)) throw new TypeError("Cannot call a class as a function");
                }
                function A(D, y) {
                    for(var v = 0; v < y.length; v++){
                        var M = y[v];
                        M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(D, l(M.key), M);
                    }
                }
                function R(D, y, v) {
                    return y && A(D.prototype, y), v && A(D, v), Object.defineProperty(D, "prototype", {
                        writable: !1
                    }), D;
                }
                function C(D) {
                    return C = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
                        return y.__proto__ || Object.getPrototypeOf(y);
                    }, C(D);
                }
                function O() {
                    try {
                        var D = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
                    } catch  {}
                    return (O = function() {
                        return !!D;
                    })();
                }
                function d(D, y) {
                    if (y && (o(y) == "object" || typeof y == "function")) return y;
                    if (y !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function(v) {
                        if (v === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return v;
                    }(D);
                }
                function f(D, y, v) {
                    return y = C(y), d(D, O() ? Reflect.construct(y, v || [], C(D).constructor) : y.apply(D, v));
                }
                function _(D, y) {
                    return _ = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(v, M) {
                        return v.__proto__ = M, v;
                    }, _(D, y);
                }
                function h(D, y) {
                    if (typeof y != "function" && y !== null) throw new TypeError("Super expression must either be null or a function");
                    D.prototype = Object.create(y && y.prototype, {
                        constructor: {
                            value: D,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(D, "prototype", {
                        writable: !1
                    }), y && _(D, y);
                }
                i.r(a), i.d(a, {
                    default: ()=>NL
                });
                var I = i(4119), T = i.n(I);
                function N() {
                    var D = this.constructor.getDerivedStateFromProps(this.props, this.state);
                    D != null && this.setState(D);
                }
                function g(D) {
                    this.setState((function(y) {
                        var v = this.constructor.getDerivedStateFromProps(D, y);
                        return v ?? null;
                    }).bind(this));
                }
                function b(D, y) {
                    try {
                        var v = this.props, M = this.state;
                        this.props = D, this.state = y, this.__reactInternalSnapshotFlag = !0, this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(v, M);
                    } finally{
                        this.props = v, this.state = M;
                    }
                }
                function S(D) {
                    var y = D.prototype;
                    if (!y || !y.isReactComponent) throw new Error("Can only polyfill class components");
                    if (typeof D.getDerivedStateFromProps != "function" && typeof y.getSnapshotBeforeUpdate != "function") return D;
                    var v = null, M = null, U = null;
                    if (typeof y.componentWillMount == "function" ? v = "componentWillMount" : typeof y.UNSAFE_componentWillMount == "function" && (v = "UNSAFE_componentWillMount"), typeof y.componentWillReceiveProps == "function" ? M = "componentWillReceiveProps" : typeof y.UNSAFE_componentWillReceiveProps == "function" && (M = "UNSAFE_componentWillReceiveProps"), typeof y.componentWillUpdate == "function" ? U = "componentWillUpdate" : typeof y.UNSAFE_componentWillUpdate == "function" && (U = "UNSAFE_componentWillUpdate"), v !== null || M !== null || U !== null) {
                        var W = D.displayName || D.name, V = typeof D.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                        throw Error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

` + W + " uses " + V + " but also contains the following legacy lifecycles:" + (v !== null ? `
  ` + v : "") + (M !== null ? `
  ` + M : "") + (U !== null ? `
  ` + U : "") + `

The above lifecycles should be removed. Learn more about this warning here:
https://fb.me/react-async-component-lifecycle-hooks`);
                    }
                    if (typeof D.getDerivedStateFromProps == "function" && (y.componentWillMount = N, y.componentWillReceiveProps = g), typeof y.getSnapshotBeforeUpdate == "function") {
                        if (typeof y.componentDidUpdate != "function") throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
                        y.componentWillUpdate = b;
                        var B = y.componentDidUpdate;
                        y.componentDidUpdate = function(z, te, re) {
                            var se = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : re;
                            B.call(this, z, te, se);
                        };
                    }
                    return D;
                }
                function P(D, y) {
                    if (D == null) return {};
                    var v = {};
                    for(var M in D)if (({}).hasOwnProperty.call(D, M)) {
                        if (y.includes(M)) continue;
                        v[M] = D[M];
                    }
                    return v;
                }
                function w(D, y) {
                    if (D == null) return {};
                    var v, M, U = P(D, y);
                    if (Object.getOwnPropertySymbols) {
                        var W = Object.getOwnPropertySymbols(D);
                        for(M = 0; M < W.length; M++)v = W[M], y.includes(v) || ({}).propertyIsEnumerable.call(D, v) && (U[v] = D[v]);
                    }
                    return U;
                }
                function G(D) {
                    var y = function(v) {
                        return ({}).toString.call(v).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
                    }(D);
                    return y === "number" && (y = isNaN(D) ? "nan" : (0 | D) != D ? "float" : "integer"), y;
                }
                function k(D) {
                    return D.replace(/\\/g, "\\\\").replace(/\n/g, "\\n").replace(/\t/g, "\\t").replace(/\r/g, "\\r").replace(/\f/g, "\\f");
                }
                N.__suppressDeprecationWarning = !0, g.__suppressDeprecationWarning = !0, b.__suppressDeprecationWarning = !0;
                var Y = {
                    scheme: "rjv-default",
                    author: "mac gainor",
                    base00: "rgba(0, 0, 0, 0)",
                    base01: "rgb(245, 245, 245)",
                    base02: "rgb(235, 235, 235)",
                    base03: "#93a1a1",
                    base04: "rgba(0, 0, 0, 0.3)",
                    base05: "#586e75",
                    base06: "#073642",
                    base07: "#002b36",
                    base08: "#d33682",
                    base09: "#cb4b16",
                    base0A: "#dc322f",
                    base0B: "#859900",
                    base0C: "#6c71c4",
                    base0D: "#586e75",
                    base0E: "#2aa198",
                    base0F: "#268bd2"
                }, H = {
                    scheme: "rjv-grey",
                    author: "mac gainor",
                    base00: "rgba(1, 1, 1, 0)",
                    base01: "rgba(1, 1, 1, 0.1)",
                    base02: "rgba(0, 0, 0, 0.2)",
                    base03: "rgba(1, 1, 1, 0.3)",
                    base04: "rgba(0, 0, 0, 0.4)",
                    base05: "rgba(1, 1, 1, 0.5)",
                    base06: "rgba(1, 1, 1, 0.6)",
                    base07: "rgba(1, 1, 1, 0.7)",
                    base08: "rgba(1, 1, 1, 0.8)",
                    base09: "rgba(1, 1, 1, 0.8)",
                    base0A: "rgba(1, 1, 1, 0.8)",
                    base0B: "rgba(1, 1, 1, 0.8)",
                    base0C: "rgba(1, 1, 1, 0.8)",
                    base0D: "rgba(1, 1, 1, 0.8)",
                    base0E: "rgba(1, 1, 1, 0.8)",
                    base0F: "rgba(1, 1, 1, 0.8)"
                };
                const F = {
                    globalFontFamily: "monospace",
                    globalCursor: "default",
                    braceFontWeight: "bold",
                    braceCursor: "pointer",
                    ellipsisFontSize: "18px",
                    ellipsisLineHeight: "10px",
                    ellipsisCursor: "pointer",
                    keyMargin: "0px 5px",
                    keyLetterSpacing: "0.5px",
                    keyFontStyle: "none",
                    keyVerticalAlign: "top",
                    keyOpacity: "0.85",
                    keyOpacityHover: "1",
                    keyValPaddingTop: "3px",
                    keyValPaddingBottom: "3px",
                    keyValPaddingRight: "5px",
                    keyValBorderLeft: "1px solid",
                    keyValBorderHover: "2px solid",
                    pushedContentMarginLeft: "6px",
                    variableValuePaddingRight: "6px",
                    nullFontSize: "11px",
                    nullFontWeight: "bold",
                    nullPadding: "1px 2px",
                    nullBorderRadius: "3px",
                    nanFontSize: "11px",
                    nanFontWeight: "bold",
                    nanPadding: "1px 2px",
                    nanBorderRadius: "3px",
                    undefinedFontSize: "11px",
                    undefinedPadding: "1px 2px",
                    undefinedBorderRadius: "3px",
                    dataTypeFontSize: "11px",
                    dataTypeMarginRight: "4px",
                    datatypeOpacity: "0.8",
                    objectSizeBorderRadius: "3px",
                    objectSizeFontStyle: "italic",
                    objectSizeMargin: "0px 6px 0px 0px",
                    clipboardCursor: "pointer",
                    clipboardCheckMarginLeft: "-12px",
                    metaDataPadding: "0px 0px 0px 10px",
                    arrayGroupMetaPadding: "0px 0px 0px 4px",
                    iconContainerWidth: "17px",
                    tooltipPadding: "4px",
                    editInputMinWidth: "130px",
                    editInputBorderRadius: "2px",
                    editInputPadding: "5px",
                    editInputMarginRight: "4px",
                    editInputFontFamily: "monospace",
                    iconCursor: "pointer",
                    iconFontSize: "15px",
                    iconPaddingRight: "1px",
                    dateValueMarginLeft: "2px",
                    iconMarginRight: "3px",
                    detectedRowPaddingTop: "3px",
                    addKeyCoverBackground: "rgba(255, 255, 255, 0.3)",
                    addKeyCoverPosition: "absolute",
                    addKeyCoverPositionPx: "0px",
                    addKeyModalWidth: "200px",
                    addKeyModalMargin: "auto",
                    addKeyModalPadding: "10px",
                    addKeyModalRadius: "3px"
                };
                function x(D, y) {
                    (y == null || y > D.length) && (y = D.length);
                    for(var v = 0, M = Array(y); v < y; v++)M[v] = D[v];
                    return M;
                }
                function X(D, y) {
                    if (D) {
                        if (typeof D == "string") return x(D, y);
                        var v = ({}).toString.call(D).slice(8, -1);
                        return v === "Object" && D.constructor && (v = D.constructor.name), v === "Map" || v === "Set" ? Array.from(D) : v === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(v) ? x(D, y) : void 0;
                    }
                }
                function J(D, y) {
                    return function(v) {
                        if (Array.isArray(v)) return v;
                    }(D) || function(v, M) {
                        var U = v == null ? null : typeof Symbol < "u" && v[Symbol.iterator] || v["@@iterator"];
                        if (U != null) {
                            var W, V, B, z, te = [], re = !0, se = !1;
                            try {
                                if (B = (U = U.call(v)).next, M === 0) {
                                    if (Object(U) !== U) return;
                                    re = !1;
                                } else for(; !(re = (W = B.call(U)).done) && (te.push(W.value), te.length !== M); re = !0);
                            } catch (ue) {
                                se = !0, V = ue;
                            } finally{
                                try {
                                    if (!re && U.return != null && (z = U.return(), Object(z) !== z)) return;
                                } finally{
                                    if (se) throw V;
                                }
                            }
                            return te;
                        }
                    }(D, y) || X(D, y) || function() {
                        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                    }();
                }
                var le = i(9446), pe = i(3639), ve = i.n(pe), be = i(3989), Xe = i.n(be);
                function et(D, y) {
                    var v = Object.keys(D);
                    if (Object.getOwnPropertySymbols) {
                        var M = Object.getOwnPropertySymbols(D);
                        y && (M = M.filter(function(U) {
                            return Object.getOwnPropertyDescriptor(D, U).enumerable;
                        })), v.push.apply(v, M);
                    }
                    return v;
                }
                function Be(D) {
                    for(var y = 1; y < arguments.length; y++){
                        var v = arguments[y] != null ? arguments[y] : {};
                        y % 2 ? et(Object(v), !0).forEach(function(M) {
                            c(D, M, v[M]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(D, Object.getOwnPropertyDescriptors(v)) : et(Object(v)).forEach(function(M) {
                            Object.defineProperty(D, M, Object.getOwnPropertyDescriptor(v, M));
                        });
                    }
                    return D;
                }
                var en = le.default, Ht = Object.keys(en), Ke = function(D) {
                    var y, v = function(z) {
                        var te = z[0] / 255, re = z[1] / 255, se = z[2] / 255;
                        return [
                            0.299 * te + 0.587 * re + 0.114 * se,
                            -0.14713 * te + -0.28886 * re + 0.436 * se,
                            0.615 * te + -0.51499 * re + -0.10001 * se
                        ];
                    }(ve()(D).array()), M = J(v, 3), U = M[0], W = M[1], V = M[2], B = function(z) {
                        var te, re, se, ue = z[0], ie = z[1], Ce = z[2];
                        return te = 1 * ue + 0 * ie + 1.13983 * Ce, re = 1 * ue + -0.39465 * ie + -0.5806 * Ce, se = 1 * ue + 2.02311 * ie + 0 * Ce, [
                            255 * (te = Math.min(Math.max(0, te), 1)),
                            255 * (re = Math.min(Math.max(0, re), 1)),
                            255 * (se = Math.min(Math.max(0, se), 1))
                        ];
                    }([
                        (y = U, y < 0.25 ? 1 : y < 0.5 ? 0.9 - y : 1.1 - y),
                        W,
                        V
                    ]);
                    return ve().rgb(B).hex();
                }, ut = function(D) {
                    return function(y) {
                        return {
                            className: [
                                y.className,
                                D.className
                            ].filter(Boolean).join(" "),
                            style: Be(Be({}, y.style || {}), D.style || {})
                        };
                    };
                }, Yt = function(D, y) {
                    var v = Object.keys(y);
                    for(var M in D)v.indexOf(M) === -1 && v.push(M);
                    return v.reduce(function(U, W) {
                        return U[W] = function(V, B) {
                            if (V === void 0) return B;
                            if (B === void 0) return V;
                            var z = o(V), te = o(B);
                            switch(z){
                                case "string":
                                    switch(te){
                                        case "string":
                                            return [
                                                B,
                                                V
                                            ].filter(Boolean).join(" ");
                                        case "object":
                                            return ut({
                                                className: V,
                                                style: B
                                            });
                                        case "function":
                                            return function(re) {
                                                for(var se = arguments.length, ue = new Array(se > 1 ? se - 1 : 0), ie = 1; ie < se; ie++)ue[ie - 1] = arguments[ie];
                                                return ut({
                                                    className: V
                                                })(B.apply(void 0, [
                                                    re
                                                ].concat(ue)));
                                            };
                                    }
                                    break;
                                case "object":
                                    switch(te){
                                        case "string":
                                            return ut({
                                                className: B,
                                                style: V
                                            });
                                        case "object":
                                            return Be(Be({}, B), V);
                                        case "function":
                                            return function(re) {
                                                for(var se = arguments.length, ue = new Array(se > 1 ? se - 1 : 0), ie = 1; ie < se; ie++)ue[ie - 1] = arguments[ie];
                                                return ut({
                                                    style: V
                                                })(B.apply(void 0, [
                                                    re
                                                ].concat(ue)));
                                            };
                                    }
                                    break;
                                case "function":
                                    switch(te){
                                        case "string":
                                            return function(re) {
                                                for(var se = arguments.length, ue = new Array(se > 1 ? se - 1 : 0), ie = 1; ie < se; ie++)ue[ie - 1] = arguments[ie];
                                                return V.apply(void 0, [
                                                    ut(re)({
                                                        className: B
                                                    })
                                                ].concat(ue));
                                            };
                                        case "object":
                                            return function(re) {
                                                for(var se = arguments.length, ue = new Array(se > 1 ? se - 1 : 0), ie = 1; ie < se; ie++)ue[ie - 1] = arguments[ie];
                                                return V.apply(void 0, [
                                                    ut(re)({
                                                        style: B
                                                    })
                                                ].concat(ue));
                                            };
                                        case "function":
                                            return function(re) {
                                                for(var se = arguments.length, ue = new Array(se > 1 ? se - 1 : 0), ie = 1; ie < se; ie++)ue[ie - 1] = arguments[ie];
                                                return V.apply(void 0, [
                                                    B.apply(void 0, [
                                                        re
                                                    ].concat(ue))
                                                ].concat(ue));
                                            };
                                    }
                            }
                        }(D[W], y[W]), U;
                    }, {});
                }, Or = function(D, y) {
                    for(var v = arguments.length, M = new Array(v > 2 ? v - 2 : 0), U = 2; U < v; U++)M[U - 2] = arguments[U];
                    if (y === null) return D;
                    Array.isArray(y) || (y = [
                        y
                    ]);
                    var W = y.map(function(V) {
                        return D[V];
                    }).filter(Boolean).reduce(function(V, B) {
                        return typeof B == "string" ? V.className = [
                            V.className,
                            B
                        ].filter(Boolean).join(" ") : o(B) === "object" ? V.style = Be(Be({}, V.style), B) : typeof B == "function" && (V = Be(Be({}, V), B.apply(void 0, [
                            V
                        ].concat(M)))), V;
                    }, {
                        className: "",
                        style: {}
                    });
                    return W.className || delete W.className, Object.keys(W.style).length === 0 && delete W.style, W;
                }, En = function(D) {
                    return Object.keys(D).reduce(function(y, v) {
                        return y[v] = /^base/.test(v) ? Ke(D[v]) : v === "scheme" ? D[v] + ":inverted" : D[v], y;
                    }, {});
                }, xn = Xe()(function(D) {
                    var y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, v = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, M = y.defaultBase16, U = M === void 0 ? en : M, W = y.base16Themes, V = Ai(v, W === void 0 ? null : W);
                    V && (v = Be(Be({}, V), v));
                    for(var B = Ht.reduce(function(Ce, We) {
                        return Ce[We] = v[We] || U[We], Ce;
                    }, {}), z = Object.keys(v).reduce(function(Ce, We) {
                        return Ht.indexOf(We) === -1 && (Ce[We] = v[We]), Ce;
                    }, {}), te = D(B), re = Yt(z, te), se = arguments.length, ue = new Array(se > 3 ? se - 3 : 0), ie = 3; ie < se; ie++)ue[ie - 3] = arguments[ie];
                    return Xe()(Or, 2).apply(void 0, [
                        re
                    ].concat(ue));
                }, 3), _s = function(D) {
                    return !!D.extend;
                }, Ai = function(D, y) {
                    if (D && _s(D) && D.extend && (D = D.extend), typeof D == "string") {
                        var v = J(D.split(":"), 2), M = v[0], U = v[1];
                        D = y ? y[M] : le[M], U === "inverted" && (D = En(D));
                    }
                    return D && Object.prototype.hasOwnProperty.call(D, "base00") ? D : void 0;
                }, Vr = function(D) {
                    var y = function(v) {
                        return {
                            backgroundColor: v.base00,
                            ellipsisColor: v.base09,
                            braceColor: v.base07,
                            expandedIcon: v.base0D,
                            collapsedIcon: v.base0E,
                            keyColor: v.base07,
                            arrayKeyColor: v.base0C,
                            objectSize: v.base04,
                            copyToClipboard: v.base0F,
                            copyToClipboardCheck: v.base0D,
                            objectBorder: v.base02,
                            dataTypes: {
                                boolean: v.base0E,
                                date: v.base0D,
                                float: v.base0B,
                                function: v.base0D,
                                integer: v.base0F,
                                string: v.base09,
                                nan: v.base08,
                                null: v.base0A,
                                undefined: v.base05,
                                regexp: v.base0A,
                                background: v.base02
                            },
                            editVariable: {
                                editIcon: v.base0E,
                                cancelIcon: v.base09,
                                removeIcon: v.base09,
                                addIcon: v.base0E,
                                checkIcon: v.base0E,
                                background: v.base01,
                                color: v.base0A,
                                border: v.base07
                            },
                            addKeyModal: {
                                background: v.base05,
                                border: v.base04,
                                color: v.base0A,
                                labelColor: v.base01
                            },
                            validationFailure: {
                                background: v.base09,
                                iconColor: v.base01,
                                fontColor: v.base01
                            }
                        };
                    }(D);
                    return {
                        "app-container": {
                            fontFamily: F.globalFontFamily,
                            cursor: F.globalCursor,
                            backgroundColor: y.backgroundColor,
                            position: "relative"
                        },
                        ellipsis: {
                            display: "inline-block",
                            color: y.ellipsisColor,
                            fontSize: F.ellipsisFontSize,
                            lineHeight: F.ellipsisLineHeight,
                            cursor: F.ellipsisCursor
                        },
                        "brace-row": {
                            display: "inline-block",
                            cursor: "pointer"
                        },
                        brace: {
                            display: "inline-block",
                            cursor: F.braceCursor,
                            fontWeight: F.braceFontWeight,
                            color: y.braceColor
                        },
                        "expanded-icon": {
                            color: y.expandedIcon
                        },
                        "collapsed-icon": {
                            color: y.collapsedIcon
                        },
                        colon: {
                            display: "inline-block",
                            margin: F.keyMargin,
                            color: y.keyColor,
                            verticalAlign: "top"
                        },
                        objectKeyVal: function(v, M) {
                            return {
                                style: E({
                                    paddingTop: F.keyValPaddingTop,
                                    paddingRight: F.keyValPaddingRight,
                                    paddingBottom: F.keyValPaddingBottom,
                                    borderLeft: F.keyValBorderLeft + " " + y.objectBorder,
                                    ":hover": {
                                        paddingLeft: M.paddingLeft - 1 + "px",
                                        borderLeft: F.keyValBorderHover + " " + y.objectBorder
                                    }
                                }, M)
                            };
                        },
                        "object-key-val-no-border": {
                            padding: F.keyValPadding
                        },
                        "pushed-content": {
                            marginLeft: F.pushedContentMarginLeft
                        },
                        variableValue: function(v, M) {
                            return {
                                style: E({
                                    display: "inline-block",
                                    paddingRight: F.variableValuePaddingRight,
                                    position: "relative"
                                }, M)
                            };
                        },
                        "object-name": {
                            display: "inline-block",
                            color: y.keyColor,
                            letterSpacing: F.keyLetterSpacing,
                            fontStyle: F.keyFontStyle,
                            verticalAlign: F.keyVerticalAlign,
                            opacity: F.keyOpacity,
                            ":hover": {
                                opacity: F.keyOpacityHover
                            }
                        },
                        "array-key": {
                            display: "inline-block",
                            color: y.arrayKeyColor,
                            letterSpacing: F.keyLetterSpacing,
                            fontStyle: F.keyFontStyle,
                            verticalAlign: F.keyVerticalAlign,
                            opacity: F.keyOpacity,
                            ":hover": {
                                opacity: F.keyOpacityHover
                            }
                        },
                        "object-size": {
                            color: y.objectSize,
                            borderRadius: F.objectSizeBorderRadius,
                            fontStyle: F.objectSizeFontStyle,
                            margin: F.objectSizeMargin,
                            cursor: "default"
                        },
                        "data-type-label": {
                            fontSize: F.dataTypeFontSize,
                            marginRight: F.dataTypeMarginRight,
                            opacity: F.datatypeOpacity
                        },
                        boolean: {
                            display: "inline-block",
                            color: y.dataTypes.boolean
                        },
                        date: {
                            display: "inline-block",
                            color: y.dataTypes.date
                        },
                        "date-value": {
                            marginLeft: F.dateValueMarginLeft
                        },
                        float: {
                            display: "inline-block",
                            color: y.dataTypes.float
                        },
                        function: {
                            display: "inline-block",
                            color: y.dataTypes.function,
                            cursor: "pointer",
                            whiteSpace: "pre-line"
                        },
                        "function-value": {
                            fontStyle: "italic"
                        },
                        integer: {
                            display: "inline-block",
                            color: y.dataTypes.integer
                        },
                        string: {
                            display: "inline-block",
                            color: y.dataTypes.string
                        },
                        nan: {
                            display: "inline-block",
                            color: y.dataTypes.nan,
                            fontSize: F.nanFontSize,
                            fontWeight: F.nanFontWeight,
                            backgroundColor: y.dataTypes.background,
                            padding: F.nanPadding,
                            borderRadius: F.nanBorderRadius
                        },
                        null: {
                            display: "inline-block",
                            color: y.dataTypes.null,
                            fontSize: F.nullFontSize,
                            fontWeight: F.nullFontWeight,
                            backgroundColor: y.dataTypes.background,
                            padding: F.nullPadding,
                            borderRadius: F.nullBorderRadius
                        },
                        undefined: {
                            display: "inline-block",
                            color: y.dataTypes.undefined,
                            fontSize: F.undefinedFontSize,
                            padding: F.undefinedPadding,
                            borderRadius: F.undefinedBorderRadius,
                            backgroundColor: y.dataTypes.background
                        },
                        regexp: {
                            display: "inline-block",
                            color: y.dataTypes.regexp
                        },
                        "copy-to-clipboard": {
                            cursor: F.clipboardCursor
                        },
                        "copy-icon": {
                            color: y.copyToClipboard,
                            fontSize: F.iconFontSize,
                            marginRight: F.iconMarginRight,
                            verticalAlign: "top"
                        },
                        "copy-icon-copied": {
                            color: y.copyToClipboardCheck,
                            marginLeft: F.clipboardCheckMarginLeft
                        },
                        "array-group-meta-data": {
                            display: "inline-block",
                            padding: F.arrayGroupMetaPadding
                        },
                        "object-meta-data": {
                            display: "inline-block",
                            padding: F.metaDataPadding
                        },
                        "icon-container": {
                            display: "inline-block",
                            width: F.iconContainerWidth
                        },
                        tooltip: {
                            padding: F.tooltipPadding
                        },
                        removeVarIcon: {
                            verticalAlign: "top",
                            display: "inline-block",
                            color: y.editVariable.removeIcon,
                            cursor: F.iconCursor,
                            fontSize: F.iconFontSize,
                            marginRight: F.iconMarginRight
                        },
                        addVarIcon: {
                            verticalAlign: "top",
                            display: "inline-block",
                            color: y.editVariable.addIcon,
                            cursor: F.iconCursor,
                            fontSize: F.iconFontSize,
                            marginRight: F.iconMarginRight
                        },
                        editVarIcon: {
                            verticalAlign: "top",
                            display: "inline-block",
                            color: y.editVariable.editIcon,
                            cursor: F.iconCursor,
                            fontSize: F.iconFontSize,
                            marginRight: F.iconMarginRight
                        },
                        "edit-icon-container": {
                            display: "inline-block",
                            verticalAlign: "top"
                        },
                        "check-icon": {
                            display: "inline-block",
                            cursor: F.iconCursor,
                            color: y.editVariable.checkIcon,
                            fontSize: F.iconFontSize,
                            paddingRight: F.iconPaddingRight
                        },
                        "cancel-icon": {
                            display: "inline-block",
                            cursor: F.iconCursor,
                            color: y.editVariable.cancelIcon,
                            fontSize: F.iconFontSize,
                            paddingRight: F.iconPaddingRight
                        },
                        "edit-input": {
                            display: "inline-block",
                            minWidth: F.editInputMinWidth,
                            borderRadius: F.editInputBorderRadius,
                            backgroundColor: y.editVariable.background,
                            color: y.editVariable.color,
                            padding: F.editInputPadding,
                            marginRight: F.editInputMarginRight,
                            fontFamily: F.editInputFontFamily
                        },
                        "detected-row": {
                            paddingTop: F.detectedRowPaddingTop
                        },
                        "key-modal-request": {
                            position: F.addKeyCoverPosition,
                            top: F.addKeyCoverPositionPx,
                            left: F.addKeyCoverPositionPx,
                            right: F.addKeyCoverPositionPx,
                            bottom: F.addKeyCoverPositionPx,
                            backgroundColor: F.addKeyCoverBackground
                        },
                        "key-modal": {
                            width: F.addKeyModalWidth,
                            backgroundColor: y.addKeyModal.background,
                            marginLeft: F.addKeyModalMargin,
                            marginRight: F.addKeyModalMargin,
                            padding: F.addKeyModalPadding,
                            borderRadius: F.addKeyModalRadius,
                            marginTop: "15px",
                            position: "relative"
                        },
                        "key-modal-label": {
                            color: y.addKeyModal.labelColor,
                            marginLeft: "2px",
                            marginBottom: "5px",
                            fontSize: "11px"
                        },
                        "key-modal-input-container": {
                            overflow: "hidden"
                        },
                        "key-modal-input": {
                            width: "100%",
                            padding: "3px 6px",
                            fontFamily: "monospace",
                            color: y.addKeyModal.color,
                            border: "none",
                            boxSizing: "border-box",
                            borderRadius: "2px"
                        },
                        "key-modal-cancel": {
                            backgroundColor: y.editVariable.removeIcon,
                            position: "absolute",
                            top: "0px",
                            right: "0px",
                            borderRadius: "0px 3px 0px 3px",
                            cursor: "pointer"
                        },
                        "key-modal-cancel-icon": {
                            color: y.addKeyModal.labelColor,
                            fontSize: F.iconFontSize,
                            transform: "rotate(45deg)"
                        },
                        "key-modal-submit": {
                            color: y.editVariable.addIcon,
                            fontSize: F.iconFontSize,
                            position: "absolute",
                            right: "2px",
                            top: "3px",
                            cursor: "pointer"
                        },
                        "function-ellipsis": {
                            display: "inline-block",
                            color: y.ellipsisColor,
                            fontSize: F.ellipsisFontSize,
                            lineHeight: F.ellipsisLineHeight,
                            cursor: F.ellipsisCursor
                        },
                        "validation-failure": {
                            float: "right",
                            padding: "3px 6px",
                            borderRadius: "2px",
                            cursor: "pointer",
                            color: y.validationFailure.fontColor,
                            backgroundColor: y.validationFailure.background
                        },
                        "validation-failure-label": {
                            marginRight: "6px"
                        },
                        "validation-failure-clear": {
                            position: "relative",
                            verticalAlign: "top",
                            cursor: "pointer",
                            color: y.validationFailure.iconColor,
                            fontSize: F.iconFontSize,
                            transform: "rotate(45deg)"
                        }
                    };
                };
                function ne(D, y, v) {
                    return D || console.error("theme has not been set"), (function(M) {
                        var U = Y;
                        return M !== !1 && M !== "none" || (U = H), xn(Vr, {
                            defaultBase16: U
                        })(M);
                    })(D)(y, v);
                }
                var _e = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.type_name, U = v.displayDataTypes, W = v.theme;
                                return U ? T().createElement("span", Object.assign({
                                    className: "data-type-label"
                                }, ne(W, "data-type-label")), M) : null;
                            }
                        }
                    ]);
                }(T().PureComponent), tn = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props;
                                return T().createElement("div", ne(v.theme, "boolean"), T().createElement(_e, Object.assign({
                                    type_name: "bool"
                                }, v)), v.value ? "true" : "false");
                            }
                        }
                    ]);
                }(T().PureComponent), Oe = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props;
                                return T().createElement("div", ne(v.theme, "date"), T().createElement(_e, Object.assign({
                                    type_name: "date"
                                }, v)), T().createElement("span", Object.assign({
                                    className: "date-value"
                                }, ne(v.theme, "date-value")), v.value.toLocaleTimeString("en-us", {
                                    weekday: "short",
                                    year: "numeric",
                                    month: "short",
                                    day: "numeric",
                                    hour: "2-digit",
                                    minute: "2-digit"
                                })));
                            }
                        }
                    ]);
                }(T().PureComponent), Ve = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props;
                                return T().createElement("div", ne(v.theme, "float"), T().createElement(_e, Object.assign({
                                    type_name: "float"
                                }, v)), this.props.value);
                            }
                        }
                    ]);
                }(T().PureComponent);
                function Ie(D) {
                    return function(y) {
                        if (Array.isArray(y)) return x(y);
                    }(D) || function(y) {
                        if (typeof Symbol < "u" && y[Symbol.iterator] != null || y["@@iterator"] != null) return Array.from(y);
                    }(D) || X(D) || function() {
                        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                    }();
                }
                var Un = i(9784);
                const Ct = new (i(9361)).Dispatcher();
                var _o = new (function(D) {
                    function y() {
                        var v;
                        p(this, y);
                        for(var M = arguments.length, U = new Array(M), W = 0; W < M; W++)U[W] = arguments[W];
                        return (v = f(this, y, [].concat(U))).objects = {}, v.set = function(V, B, z, te) {
                            v.objects[V] === void 0 && (v.objects[V] = {}), v.objects[V][B] === void 0 && (v.objects[V][B] = {}), v.objects[V][B][z] = te;
                        }, v.get = function(V, B, z, te) {
                            return v.objects[V] === void 0 || v.objects[V][B] === void 0 || v.objects[V][B][z] == null ? te : v.objects[V][B][z];
                        }, v.handleAction = function(V) {
                            var B = V.rjvId, z = V.data;
                            switch(V.name){
                                case "RESET":
                                    v.emit("reset-" + B);
                                    break;
                                case "VARIABLE_UPDATED":
                                    V.data.updated_src = v.updateSrc(B, z), v.set(B, "action", "variable-update", E(E({}, z), {}, {
                                        type: "variable-edited"
                                    })), v.emit("variable-update-" + B);
                                    break;
                                case "VARIABLE_REMOVED":
                                    V.data.updated_src = v.updateSrc(B, z), v.set(B, "action", "variable-update", E(E({}, z), {}, {
                                        type: "variable-removed"
                                    })), v.emit("variable-update-" + B);
                                    break;
                                case "VARIABLE_ADDED":
                                    V.data.updated_src = v.updateSrc(B, z), v.set(B, "action", "variable-update", E(E({}, z), {}, {
                                        type: "variable-added"
                                    })), v.emit("variable-update-" + B);
                                    break;
                                case "ADD_VARIABLE_KEY_REQUEST":
                                    v.set(B, "action", "new-key-request", z), v.emit("add-key-request-" + B);
                            }
                        }, v.updateSrc = function(V, B) {
                            var z = B.name, te = B.namespace, re = B.new_value, se = B.variable_removed;
                            te.shift();
                            var ue, ie = v.get(V, "global", "src"), Ce = v.deepCopy(ie, Ie(te)), We = Ce, xe = function(tt, Xr) {
                                var jt = typeof Symbol < "u" && tt[Symbol.iterator] || tt["@@iterator"];
                                if (!jt) {
                                    if (Array.isArray(tt) || (jt = X(tt)) || Xr) {
                                        jt && (tt = jt);
                                        var Ec = 0, Kr = function() {};
                                        return {
                                            s: Kr,
                                            n: function() {
                                                return Ec >= tt.length ? {
                                                    done: !0
                                                } : {
                                                    done: !1,
                                                    value: tt[Ec++]
                                                };
                                            },
                                            e: function(kn) {
                                                throw kn;
                                            },
                                            f: Kr
                                        };
                                    }
                                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                                }
                                var Si, zr = !0, gt = !1;
                                return {
                                    s: function() {
                                        jt = jt.call(tt);
                                    },
                                    n: function() {
                                        var kn = jt.next();
                                        return zr = kn.done, kn;
                                    },
                                    e: function(kn) {
                                        gt = !0, Si = kn;
                                    },
                                    f: function() {
                                        try {
                                            zr || jt.return == null || jt.return();
                                        } finally{
                                            if (gt) throw Si;
                                        }
                                    }
                                };
                            }(te);
                            try {
                                for(xe.s(); !(ue = xe.n()).done;)We = We[ue.value];
                            } catch (tt) {
                                xe.e(tt);
                            } finally{
                                xe.f();
                            }
                            return se ? G(We) == "array" ? We.splice(z, 1) : delete We[z] : z !== null ? We[z] = re : Ce = re, v.set(V, "global", "src", Ce), Ce;
                        }, v.deepCopy = function(V, B) {
                            var z, te = G(V), re = B.shift();
                            return te == "array" ? z = Ie(V) : te == "object" && (z = E({}, V)), re !== void 0 && (z[re] = v.deepCopy(V[re], B)), z;
                        }, v;
                    }
                    return h(y, D), R(y);
                }(Un.EventEmitter))();
                Ct.register(_o.handleAction.bind(_o));
                const Vt = _o;
                var $ = function(D) {
                    function y(v) {
                        var M;
                        return p(this, y), (M = f(this, y, [
                            v
                        ])).toggleCollapsed = function() {
                            M.setState({
                                collapsed: !M.state.collapsed
                            }, function() {
                                Vt.set(M.props.rjvId, M.props.namespace, "collapsed", M.state.collapsed);
                            });
                        }, M.getFunctionDisplay = function(U) {
                            var W = M.props;
                            return U ? T().createElement("span", null, M.props.value.toString().slice(9, -1).replace(/\{[\s\S]+/, ""), T().createElement("span", {
                                className: "function-collapsed",
                                style: {
                                    fontWeight: "bold"
                                }
                            }, T().createElement("span", null, "{"), T().createElement("span", ne(W.theme, "ellipsis"), "..."), T().createElement("span", null, "}"))) : M.props.value.toString().slice(9, -1);
                        }, M.state = {
                            collapsed: Vt.get(v.rjvId, v.namespace, "collapsed", !0)
                        }, M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = this.state.collapsed;
                                return T().createElement("div", ne(v.theme, "function"), T().createElement(_e, Object.assign({
                                    type_name: "function"
                                }, v)), T().createElement("span", Object.assign({}, ne(v.theme, "function-value"), {
                                    className: "rjv-function-container",
                                    onClick: this.toggleCollapsed
                                }), this.getFunctionDisplay(M)));
                            }
                        }
                    ]);
                }(T().PureComponent), j = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                return T().createElement("div", ne(this.props.theme, "nan"), "NaN");
                            }
                        }
                    ]);
                }(T().PureComponent), ae = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                return T().createElement("div", ne(this.props.theme, "null"), "NULL");
                            }
                        }
                    ]);
                }(T().PureComponent), Ee = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props;
                                return T().createElement("div", ne(v.theme, "integer"), T().createElement(_e, Object.assign({
                                    type_name: "int"
                                }, v)), this.props.value);
                            }
                        }
                    ]);
                }(T().PureComponent), we = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props;
                                return T().createElement("div", ne(v.theme, "regexp"), T().createElement(_e, Object.assign({
                                    type_name: "regexp"
                                }, v)), this.props.value.toString());
                            }
                        }
                    ]);
                }(T().PureComponent), Et = function(D) {
                    function y(v) {
                        var M;
                        return p(this, y), (M = f(this, y, [
                            v
                        ])).toggleCollapsed = function() {
                            M.setState({
                                collapsed: !M.state.collapsed
                            }, function() {
                                Vt.set(M.props.rjvId, M.props.namespace, "collapsed", M.state.collapsed);
                            });
                        }, M.state = {
                            collapsed: Vt.get(v.rjvId, v.namespace, "collapsed", !0)
                        }, M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.collapseStringsAfterLength, U = v.theme, W = v.value, V = G(M) === "integer", B = {
                                    style: {
                                        cursor: "default"
                                    }
                                };
                                return W = k(W), V && W.length > M && (B.style.cursor = "pointer", this.state.collapsed && (W = T().createElement("span", null, W.substring(0, M), T().createElement("span", ne(U, "ellipsis"), " ...")))), T().createElement("div", ne(U, "string"), T().createElement(_e, Object.assign({
                                    type_name: "string"
                                }, v)), T().createElement("span", Object.assign({
                                    className: "string-value"
                                }, B, {
                                    onClick: this.toggleCollapsed
                                }), '"', W, '"'));
                            }
                        }
                    ]);
                }(T().PureComponent), xt = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                return T().createElement("div", ne(this.props.theme, "undefined"), "undefined");
                            }
                        }
                    ]);
                }(T().PureComponent);
                function Tt() {
                    return Tt = ("TURBOPACK compile-time truthy", 1) ? Object.assign.bind() : ("TURBOPACK unreachable", undefined), Tt.apply(null, arguments);
                }
                const Jn = I.useLayoutEffect;
                var Fn = function(D, y) {
                    typeof D != "function" ? D.current = y : D(y);
                };
                const Bn = function(D, y) {
                    var v = (0, I.useRef)();
                    return (0, I.useCallback)(function(M) {
                        D.current = M, v.current && Fn(v.current, null), v.current = y, y && Fn(y, M);
                    }, [
                        y
                    ]);
                };
                var ur = {
                    "min-height": "0",
                    "max-height": "none",
                    height: "0",
                    visibility: "hidden",
                    overflow: "hidden",
                    position: "absolute",
                    "z-index": "-1000",
                    top: "0",
                    right: "0"
                }, _t = function(D) {
                    Object.keys(ur).forEach(function(y) {
                        D.style.setProperty(y, ur[y], "important");
                    });
                }, Nt = null, _n = function() {}, Wr = [
                    "borderBottomWidth",
                    "borderLeftWidth",
                    "borderRightWidth",
                    "borderTopWidth",
                    "boxSizing",
                    "fontFamily",
                    "fontSize",
                    "fontStyle",
                    "fontWeight",
                    "letterSpacing",
                    "lineHeight",
                    "paddingBottom",
                    "paddingLeft",
                    "paddingRight",
                    "paddingTop",
                    "tabSize",
                    "textIndent",
                    "textRendering",
                    "textTransform",
                    "width",
                    "wordBreak"
                ], qn = !!document.documentElement.currentStyle, Wt = function(D) {
                    var y, v, M = (y = D, v = I.useRef(y), Jn(function() {
                        v.current = y;
                    }), v);
                    (0, I.useLayoutEffect)(function() {
                        var U = function(W) {
                            M.current(W);
                        };
                        return window.addEventListener("resize", U), function() {
                            window.removeEventListener("resize", U);
                        };
                    }, []);
                }, st = function(D, y) {
                    var v = D.cacheMeasurements, M = D.maxRows, U = D.minRows, W = D.onChange, V = W === void 0 ? _n : W, B = D.onHeightChange, z = B === void 0 ? _n : B, te = P(D, [
                        "cacheMeasurements",
                        "maxRows",
                        "minRows",
                        "onChange",
                        "onHeightChange"
                    ]), re = te.value !== void 0, se = (0, I.useRef)(null), ue = Bn(se, y), ie = (0, I.useRef)(0), Ce = (0, I.useRef)(), We = function() {
                        var xe = se.current, tt = v && Ce.current ? Ce.current : function(Kr) {
                            var Si = window.getComputedStyle(Kr);
                            if (Si === null) return null;
                            var zr, gt = (zr = Si, Wr.reduce(function(No, sa) {
                                return No[sa] = zr[sa], No;
                            }, {})), kn = gt.boxSizing;
                            return kn === "" ? null : (qn && kn === "border-box" && (gt.width = parseFloat(gt.width) + parseFloat(gt.borderRightWidth) + parseFloat(gt.borderLeftWidth) + parseFloat(gt.paddingRight) + parseFloat(gt.paddingLeft) + "px"), {
                                sizingStyle: gt,
                                paddingSize: parseFloat(gt.paddingBottom) + parseFloat(gt.paddingTop),
                                borderSize: parseFloat(gt.borderBottomWidth) + parseFloat(gt.borderTopWidth)
                            });
                        }(xe);
                        if (tt) {
                            Ce.current = tt;
                            var Xr = function(Kr, Si, zr, gt) {
                                zr === void 0 && (zr = 1), gt === void 0 && (gt = 1 / 0), Nt || ((Nt = document.createElement("textarea")).setAttribute("tabindex", "-1"), Nt.setAttribute("aria-hidden", "true"), _t(Nt)), Nt.parentNode === null && document.body.appendChild(Nt);
                                var kn = Kr.paddingSize, No = Kr.borderSize, sa = Kr.sizingStyle, ZA = sa.boxSizing;
                                Object.keys(sa).forEach(function(bd) {
                                    var ia = bd;
                                    Nt.style[ia] = sa[ia];
                                }), _t(Nt), Nt.value = Si;
                                var dc = function(bd, ia) {
                                    var QA = bd.scrollHeight;
                                    return ia.sizingStyle.boxSizing === "border-box" ? QA + ia.borderSize : QA - ia.paddingSize;
                                }(Nt, Kr);
                                Nt.value = "x";
                                var Ld = Nt.scrollHeight - kn, yd = Ld * zr;
                                ZA === "border-box" && (yd = yd + kn + No), dc = Math.max(yd, dc);
                                var vd = Ld * gt;
                                return ZA === "border-box" && (vd = vd + kn + No), [
                                    dc = Math.min(vd, dc),
                                    Ld
                                ];
                            }(tt, xe.value || xe.placeholder || "x", U, M), jt = Xr[0], Ec = Xr[1];
                            ie.current !== jt && (ie.current = jt, xe.style.setProperty("height", jt + "px", "important"), z(jt, {
                                rowHeight: Ec
                            }));
                        }
                    };
                    return (0, I.useLayoutEffect)(We), Wt(We), (0, I.createElement)("textarea", Tt({}, te, {
                        onChange: function(xe) {
                            re || We(), V(xe);
                        },
                        ref: ue
                    }));
                };
                const nn = (0, I.forwardRef)(st);
                function Nn(D) {
                    D = D.trim();
                    try {
                        if ((D = JSON.stringify(JSON.parse(D)))[0] === "[") return ht("array", JSON.parse(D));
                        if (D[0] === "{") return ht("object", JSON.parse(D));
                        if (D.match(/\-?\d+\.\d+/) && D.match(/\-?\d+\.\d+/)[0] === D) return ht("float", parseFloat(D));
                        if (D.match(/\-?\d+e-\d+/) && D.match(/\-?\d+e-\d+/)[0] === D) return ht("float", Number(D));
                        if (D.match(/\-?\d+/) && D.match(/\-?\d+/)[0] === D) return ht("integer", parseInt(D));
                        if (D.match(/\-?\d+e\+\d+/) && D.match(/\-?\d+e\+\d+/)[0] === D) return ht("integer", Number(D));
                    } catch  {}
                    switch(D = D.toLowerCase()){
                        case "undefined":
                            return ht("undefined", void 0);
                        case "nan":
                            return ht("nan", NaN);
                        case "null":
                            return ht("null", null);
                        case "true":
                            return ht("boolean", !0);
                        case "false":
                            return ht("boolean", !1);
                        default:
                            if (D = Date.parse(D)) return ht("date", new Date(D));
                    }
                    return ht(!1, null);
                }
                function ht(D, y) {
                    return {
                        type: D,
                        value: y
                    };
                }
                var Cr = [
                    "style"
                ], Zn = [
                    "style"
                ], Ns = [
                    "style"
                ], At = [
                    "style"
                ], In = [
                    "style"
                ], Gn = [
                    "style"
                ], Qn = [
                    "style"
                ], rn = [
                    "style"
                ], gr = [
                    "style"
                ], Lr = [
                    "style"
                ], On = [
                    "style"
                ], $n = [
                    "style"
                ], yr = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, Cr);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 24 24",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("path", {
                                    d: "M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7"
                                })));
                            }
                        }
                    ]);
                }(T().PureComponent), jr = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, Zn);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 24 24",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("path", {
                                    d: "M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z"
                                })));
                            }
                        }
                    ]);
                }(T().PureComponent), Is = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, Ns), W = er(M).style;
                                return T().createElement("span", U, T().createElement("svg", {
                                    fill: W.color,
                                    width: W.height,
                                    height: W.width,
                                    style: W,
                                    viewBox: "0 0 1792 1792"
                                }, T().createElement("path", {
                                    d: "M1344 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"
                                })));
                            }
                        }
                    ]);
                }(T().PureComponent), Id = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, At), W = er(M).style;
                                return T().createElement("span", U, T().createElement("svg", {
                                    fill: W.color,
                                    width: W.height,
                                    height: W.width,
                                    style: W,
                                    viewBox: "0 0 1792 1792"
                                }, T().createElement("path", {
                                    d: "M1344 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"
                                })));
                            }
                        }
                    ]);
                }(T().PureComponent), lc = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, In);
                                return T().createElement("span", U, T().createElement("svg", {
                                    style: E(E({}, er(M).style), {}, {
                                        paddingLeft: "2px",
                                        verticalAlign: "top"
                                    }),
                                    viewBox: "0 0 15 15",
                                    fill: "currentColor"
                                }, T().createElement("path", {
                                    d: "M0 14l6-6-6-6z"
                                })));
                            }
                        }
                    ]);
                }(T().PureComponent), EL = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, Gn);
                                return T().createElement("span", U, T().createElement("svg", {
                                    style: E(E({}, er(M).style), {}, {
                                        paddingLeft: "2px",
                                        verticalAlign: "top"
                                    }),
                                    viewBox: "0 0 15 15",
                                    fill: "currentColor"
                                }, T().createElement("path", {
                                    d: "M0 5l6 6 6-6z"
                                })));
                            }
                        }
                    ]);
                }(T().PureComponent), VA = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, Qn);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 40 40",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("g", null, T().createElement("path", {
                                    d: "m30 35h-25v-22.5h25v7.5h2.5v-12.5c0-1.4-1.1-2.5-2.5-2.5h-7.5c0-2.8-2.2-5-5-5s-5 2.2-5 5h-7.5c-1.4 0-2.5 1.1-2.5 2.5v27.5c0 1.4 1.1 2.5 2.5 2.5h25c1.4 0 2.5-1.1 2.5-2.5v-5h-2.5v5z m-20-27.5h2.5s2.5-1.1 2.5-2.5 1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5 1.3 2.5 2.5 2.5h2.5s2.5 1.1 2.5 2.5h-20c0-1.5 1.1-2.5 2.5-2.5z m-2.5 20h5v-2.5h-5v2.5z m17.5-5v-5l-10 7.5 10 7.5v-5h12.5v-5h-12.5z m-17.5 10h7.5v-2.5h-7.5v2.5z m12.5-17.5h-12.5v2.5h12.5v-2.5z m-7.5 5h-5v2.5h5v-2.5z"
                                }))));
                            }
                        }
                    ]);
                }(T().PureComponent), Od = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, rn);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 40 40",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("g", null, T().createElement("path", {
                                    d: "m28.6 25q0-0.5-0.4-1l-4-4 4-4q0.4-0.5 0.4-1 0-0.6-0.4-1.1l-2-2q-0.4-0.4-1-0.4-0.6 0-1 0.4l-4.1 4.1-4-4.1q-0.4-0.4-1-0.4-0.6 0-1 0.4l-2 2q-0.5 0.5-0.5 1.1 0 0.5 0.5 1l4 4-4 4q-0.5 0.5-0.5 1 0 0.7 0.5 1.1l2 2q0.4 0.4 1 0.4 0.6 0 1-0.4l4-4.1 4.1 4.1q0.4 0.4 1 0.4 0.6 0 1-0.4l2-2q0.4-0.4 0.4-1z m8.7-5q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"
                                }))));
                            }
                        }
                    ]);
                }(T().PureComponent), dL = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, gr);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 40 40",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("g", null, T().createElement("path", {
                                    d: "m30.1 21.4v-2.8q0-0.6-0.4-1t-1-0.5h-5.7v-5.7q0-0.6-0.4-1t-1-0.4h-2.9q-0.6 0-1 0.4t-0.4 1v5.7h-5.7q-0.6 0-1 0.5t-0.5 1v2.8q0 0.6 0.5 1t1 0.5h5.7v5.7q0 0.5 0.4 1t1 0.4h2.9q0.6 0 1-0.4t0.4-1v-5.7h5.7q0.6 0 1-0.5t0.4-1z m7.2-1.4q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"
                                }))));
                            }
                        }
                    ]);
                }(T().PureComponent), WA = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, Lr);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 40 40",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("g", null, T().createElement("path", {
                                    d: "m31.6 21.6h-10v10h-3.2v-10h-10v-3.2h10v-10h3.2v10h10v3.2z"
                                }))));
                            }
                        }
                    ]);
                }(T().PureComponent), fL = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, On);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 40 40",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("g", null, T().createElement("path", {
                                    d: "m19.8 26.4l2.6-2.6-3.4-3.4-2.6 2.6v1.3h2.2v2.1h1.2z m9.8-16q-0.3-0.4-0.7 0l-7.8 7.8q-0.4 0.4 0 0.7t0.7 0l7.8-7.8q0.4-0.4 0-0.7z m1.8 13.2v4.3q0 2.6-1.9 4.5t-4.5 1.9h-18.6q-2.6 0-4.5-1.9t-1.9-4.5v-18.6q0-2.7 1.9-4.6t4.5-1.8h18.6q1.4 0 2.6 0.5 0.3 0.2 0.4 0.5 0.1 0.4-0.2 0.7l-1.1 1.1q-0.3 0.3-0.7 0.1-0.5-0.1-1-0.1h-18.6q-1.4 0-2.5 1.1t-1 2.5v18.6q0 1.4 1 2.5t2.5 1h18.6q1.5 0 2.5-1t1.1-2.5v-2.9q0-0.2 0.2-0.4l1.4-1.5q0.3-0.3 0.8-0.1t0.4 0.6z m-2.1-16.5l6.4 6.5-15 15h-6.4v-6.5z m9.9 3l-2.1 2-6.4-6.4 2.1-2q0.6-0.7 1.5-0.7t1.5 0.7l3.4 3.4q0.6 0.6 0.6 1.5t-0.6 1.5z"
                                }))));
                            }
                        }
                    ]);
                }(T().PureComponent), Cd = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.style, U = w(v, $n);
                                return T().createElement("span", U, T().createElement("svg", Object.assign({}, er(M), {
                                    viewBox: "0 0 40 40",
                                    fill: "currentColor",
                                    preserveAspectRatio: "xMidYMid meet"
                                }), T().createElement("g", null, T().createElement("path", {
                                    d: "m31.7 16.4q0-0.6-0.4-1l-2.1-2.1q-0.4-0.4-1-0.4t-1 0.4l-9.1 9.1-5-5q-0.5-0.4-1-0.4t-1 0.4l-2.1 2q-0.4 0.4-0.4 1 0 0.6 0.4 1l8.1 8.1q0.4 0.4 1 0.4 0.6 0 1-0.4l12.2-12.1q0.4-0.4 0.4-1z m5.6 3.6q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"
                                }))));
                            }
                        }
                    ]);
                }(T().PureComponent);
                function er(D) {
                    return D || (D = {}), {
                        style: E(E({
                            verticalAlign: "middle"
                        }, D), {}, {
                            color: D.color ? D.color : "#000000",
                            height: "1em",
                            width: "1em"
                        })
                    };
                }
                var jA = function(D) {
                    function y(v) {
                        var M;
                        return p(this, y), (M = f(this, y, [
                            v
                        ])).copiedTimer = null, M.copyToClipboardFallback = function(U) {
                            var W = document.createElement("textarea");
                            W.value = U, document.body.appendChild(W), W.select(), document.execCommand("copy"), document.body.removeChild(W);
                        }, M.handleCopy = function() {
                            var U = M.props, W = U.clickCallback, V = U.src, B = U.namespace, z = JSON.stringify(M.clipboardValue(V), null, "  ");
                            navigator.clipboard ? navigator.clipboard.writeText(z).catch(function() {
                                M.copyToClipboardFallback(z);
                            }) : M.copyToClipboardFallback(z), M.copiedTimer = setTimeout(function() {
                                M.setState({
                                    copied: !1
                                });
                            }, 5500), M.setState({
                                copied: !0
                            }, function() {
                                typeof W == "function" && W({
                                    src: V,
                                    namespace: B,
                                    name: B[B.length - 1]
                                });
                            });
                        }, M.getClippyIcon = function() {
                            var U = M.props.theme;
                            return M.state.copied ? T().createElement("span", null, T().createElement(VA, Object.assign({
                                className: "copy-icon"
                            }, ne(U, "copy-icon"))), T().createElement("span", ne(U, "copy-icon-copied"), "✔")) : T().createElement(VA, Object.assign({
                                className: "copy-icon"
                            }, ne(U, "copy-icon")));
                        }, M.clipboardValue = function(U) {
                            switch(G(U)){
                                case "function":
                                case "regexp":
                                    return U.toString();
                                default:
                                    return U;
                            }
                        }, M.state = {
                            copied: !1
                        }, M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "componentWillUnmount",
                            value: function() {
                                this.copiedTimer && (clearTimeout(this.copiedTimer), this.copiedTimer = null);
                            }
                        },
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.theme, U = v.hidden, W = v.rowHovered, V = ne(M, "copy-to-clipboard").style, B = "inline";
                                return U && (B = "none"), T().createElement("span", {
                                    className: "copy-to-clipboard-container",
                                    title: "Copy to clipboard",
                                    style: {
                                        verticalAlign: "top",
                                        display: W ? "inline-block" : "none"
                                    }
                                }, T().createElement("span", {
                                    style: E(E({}, V), {}, {
                                        display: B
                                    }),
                                    onClick: this.handleCopy
                                }, this.getClippyIcon()));
                            }
                        }
                    ]);
                }(T().PureComponent);
                const pL = function(D) {
                    function y(v) {
                        var M;
                        return p(this, y), (M = f(this, y, [
                            v
                        ])).getEditIcon = function() {
                            var U = M.props, W = U.variable, V = U.theme;
                            return T().createElement("div", {
                                className: "click-to-edit",
                                style: {
                                    verticalAlign: "top",
                                    display: M.state.hovered ? "inline-block" : "none"
                                }
                            }, T().createElement(fL, Object.assign({
                                className: "click-to-edit-icon"
                            }, ne(V, "editVarIcon"), {
                                onClick: function() {
                                    M.prepopInput(W);
                                }
                            })));
                        }, M.prepopInput = function(U) {
                            if (M.props.onEdit !== !1) {
                                var W = function(B) {
                                    var z;
                                    switch(G(B)){
                                        case "undefined":
                                            z = "undefined";
                                            break;
                                        case "nan":
                                            z = "NaN";
                                            break;
                                        case "string":
                                            z = B;
                                            break;
                                        case "date":
                                        case "function":
                                        case "regexp":
                                            z = B.toString();
                                            break;
                                        default:
                                            try {
                                                z = JSON.stringify(B, null, "  ");
                                            } catch  {
                                                z = "";
                                            }
                                    }
                                    return z;
                                }(U.value), V = Nn(W);
                                M.setState({
                                    editMode: !0,
                                    editValue: W,
                                    parsedInput: {
                                        type: V.type,
                                        value: V.value
                                    }
                                });
                            }
                        }, M.getRemoveIcon = function() {
                            var U = M.props, W = U.variable, V = U.namespace, B = U.theme, z = U.rjvId;
                            return T().createElement("div", {
                                className: "click-to-remove",
                                style: {
                                    verticalAlign: "top",
                                    display: M.state.hovered ? "inline-block" : "none"
                                }
                            }, T().createElement(Od, Object.assign({
                                className: "click-to-remove-icon"
                            }, ne(B, "removeVarIcon"), {
                                onClick: function() {
                                    Ct.dispatch({
                                        name: "VARIABLE_REMOVED",
                                        rjvId: z,
                                        data: {
                                            name: W.name,
                                            namespace: V,
                                            existing_value: W.value,
                                            variable_removed: !0
                                        }
                                    });
                                }
                            })));
                        }, M.getValue = function(U, W) {
                            var V = !W && U.type, B = M.props;
                            switch(V){
                                case !1:
                                    return M.getEditInput();
                                case "string":
                                    return T().createElement(Et, Object.assign({
                                        value: U.value
                                    }, B));
                                case "integer":
                                    return T().createElement(Ee, Object.assign({
                                        value: U.value
                                    }, B));
                                case "float":
                                    return T().createElement(Ve, Object.assign({
                                        value: U.value
                                    }, B));
                                case "boolean":
                                    return T().createElement(tn, Object.assign({
                                        value: U.value
                                    }, B));
                                case "function":
                                    return T().createElement($, Object.assign({
                                        value: U.value
                                    }, B));
                                case "null":
                                    return T().createElement(ae, B);
                                case "nan":
                                    return T().createElement(j, B);
                                case "undefined":
                                    return T().createElement(xt, B);
                                case "date":
                                    return T().createElement(Oe, Object.assign({
                                        value: U.value
                                    }, B));
                                case "regexp":
                                    return T().createElement(we, Object.assign({
                                        value: U.value
                                    }, B));
                                default:
                                    return T().createElement("div", {
                                        className: "object-value"
                                    }, JSON.stringify(U.value));
                            }
                        }, M.getEditInput = function() {
                            var U = M.props, W = U.keyModifier, V = U.selectOnFocus, B = U.theme, z = M.state.editValue;
                            return T().createElement("div", null, T().createElement(nn, Object.assign({
                                type: "text",
                                ref: function(te) {
                                    te && te[V ? "select" : "focus"]();
                                },
                                value: z,
                                className: "variable-editor",
                                onChange: function(te) {
                                    var re = te.target.value, se = Nn(re);
                                    M.setState({
                                        editValue: re,
                                        parsedInput: {
                                            type: se.type,
                                            value: se.value
                                        }
                                    });
                                },
                                onKeyDown: function(te) {
                                    switch(te.key){
                                        case "Escape":
                                            M.setState({
                                                editMode: !1,
                                                editValue: ""
                                            });
                                            break;
                                        case "Enter":
                                            W(te, "submit") && M.submitEdit(!0);
                                    }
                                    te.stopPropagation();
                                },
                                placeholder: "update this value",
                                minRows: 2
                            }, ne(B, "edit-input"))), T().createElement("div", ne(B, "edit-icon-container"), T().createElement(Od, Object.assign({
                                className: "edit-cancel"
                            }, ne(B, "cancel-icon"), {
                                onClick: function(te) {
                                    te && te.stopPropagation(), M.setState({
                                        editMode: !1,
                                        editValue: ""
                                    });
                                }
                            })), T().createElement(Cd, Object.assign({
                                className: "edit-check string-value"
                            }, ne(B, "check-icon"), {
                                onClick: function(te) {
                                    te && te.stopPropagation(), M.submitEdit();
                                }
                            })), T().createElement("div", null, M.showDetected())));
                        }, M.submitEdit = function(U) {
                            var W = M.props, V = W.variable, B = W.namespace, z = W.rjvId, te = M.state, re = te.editValue, se = te.parsedInput, ue = re;
                            U && se.type && (ue = se.value), M.setState({
                                editMode: !1
                            }), Ct.dispatch({
                                name: "VARIABLE_UPDATED",
                                rjvId: z,
                                data: {
                                    name: V.name,
                                    namespace: B,
                                    existing_value: V.value,
                                    new_value: ue,
                                    variable_removed: !1
                                }
                            });
                        }, M.showDetected = function() {
                            var U = M.props, W = U.theme, V = M.getDetectedInput();
                            if (V) return T().createElement("div", null, T().createElement("div", ne(W, "detected-row"), V, T().createElement(Cd, {
                                className: "edit-check detected",
                                style: E({
                                    verticalAlign: "top",
                                    paddingLeft: "3px"
                                }, ne(W, "check-icon").style),
                                onClick: function(B) {
                                    B && B.stopPropagation(), M.submitEdit(!0);
                                }
                            })));
                        }, M.getDetectedInput = function() {
                            var U = M.state.parsedInput, W = U.type, V = U.value, B = M.props, z = B.theme;
                            if (W !== !1) switch(W.toLowerCase()){
                                case "object":
                                    return T().createElement("span", null, T().createElement("span", {
                                        style: E(E({}, ne(z, "brace").style), {}, {
                                            cursor: "default"
                                        })
                                    }, "{"), T().createElement("span", {
                                        style: E(E({}, ne(z, "ellipsis").style), {}, {
                                            cursor: "default"
                                        })
                                    }, "..."), T().createElement("span", {
                                        style: E(E({}, ne(z, "brace").style), {}, {
                                            cursor: "default"
                                        })
                                    }, "}"));
                                case "array":
                                    return T().createElement("span", null, T().createElement("span", {
                                        style: E(E({}, ne(z, "brace").style), {}, {
                                            cursor: "default"
                                        })
                                    }, "["), T().createElement("span", {
                                        style: E(E({}, ne(z, "ellipsis").style), {}, {
                                            cursor: "default"
                                        })
                                    }, "..."), T().createElement("span", {
                                        style: E(E({}, ne(z, "brace").style), {}, {
                                            cursor: "default"
                                        })
                                    }, "]"));
                                case "string":
                                    return T().createElement(Et, Object.assign({
                                        value: V
                                    }, B));
                                case "integer":
                                    return T().createElement(Ee, Object.assign({
                                        value: V
                                    }, B));
                                case "float":
                                    return T().createElement(Ve, Object.assign({
                                        value: V
                                    }, B));
                                case "boolean":
                                    return T().createElement(tn, Object.assign({
                                        value: V
                                    }, B));
                                case "function":
                                    return T().createElement($, Object.assign({
                                        value: V
                                    }, B));
                                case "null":
                                    return T().createElement(ae, B);
                                case "nan":
                                    return T().createElement(j, B);
                                case "undefined":
                                    return T().createElement(xt, B);
                                case "date":
                                    return T().createElement(Oe, Object.assign({
                                        value: new Date(V)
                                    }, B));
                            }
                        }, M.state = {
                            editMode: !1,
                            editValue: "",
                            hovered: !1,
                            renameKey: !1,
                            parsedInput: {
                                type: !1,
                                value: null
                            }
                        }, M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this, M = this.props, U = M.variable, W = M.singleIndent, V = M.type, B = M.theme, z = M.namespace, te = M.indentWidth, re = M.enableClipboard, se = M.onEdit, ue = M.onDelete, ie = M.onSelect, Ce = M.displayArrayKey, We = M.quotesOnKeys, xe = M.keyModifier, tt = this.state.editMode;
                                return T().createElement("div", Object.assign({}, ne(B, "objectKeyVal", {
                                    paddingLeft: te * W
                                }), {
                                    onMouseEnter: function() {
                                        return v.setState(E(E({}, v.state), {}, {
                                            hovered: !0
                                        }));
                                    },
                                    onMouseLeave: function() {
                                        return v.setState(E(E({}, v.state), {}, {
                                            hovered: !1
                                        }));
                                    },
                                    className: "variable-row",
                                    key: U.name
                                }), V == "array" ? Ce ? T().createElement("span", Object.assign({}, ne(B, "array-key"), {
                                    key: U.name + "_" + z
                                }), U.name, T().createElement("div", ne(B, "colon"), ":")) : null : T().createElement("span", null, T().createElement("span", Object.assign({}, ne(B, "object-name"), {
                                    className: "object-key",
                                    key: U.name + "_" + z
                                }), !!We && T().createElement("span", {
                                    style: {
                                        verticalAlign: "top"
                                    }
                                }, '"'), T().createElement("span", {
                                    style: {
                                        display: "inline-block"
                                    }
                                }, k(U.name)), !!We && T().createElement("span", {
                                    style: {
                                        verticalAlign: "top"
                                    }
                                }, '"')), T().createElement("span", ne(B, "colon"), ":")), T().createElement("div", Object.assign({
                                    className: "variable-value",
                                    onClick: ie === !1 && se === !1 ? null : function(Xr) {
                                        var jt = Ie(z);
                                        xe(Xr, "edit") && se !== !1 ? v.prepopInput(U) : ie !== !1 && (jt.shift(), ie(E(E({}, U), {}, {
                                            namespace: jt
                                        })));
                                    }
                                }, ne(B, "variableValue", {
                                    cursor: ie === !1 ? "default" : "pointer"
                                })), this.getValue(U, tt)), re ? T().createElement(jA, {
                                    rowHovered: this.state.hovered,
                                    hidden: tt,
                                    src: U.value,
                                    clickCallback: re,
                                    theme: B,
                                    namespace: [].concat(Ie(z), [
                                        U.name
                                    ])
                                }) : null, se !== !1 && tt == 0 ? this.getEditIcon() : null, ue !== !1 && tt == 0 ? this.getRemoveIcon() : null);
                            }
                        }
                    ]);
                }(T().PureComponent);
                var XA = function(D) {
                    function y() {
                        var v;
                        p(this, y);
                        for(var M = arguments.length, U = new Array(M), W = 0; W < M; W++)U[W] = arguments[W];
                        return (v = f(this, y, [].concat(U))).getObjectSize = function() {
                            var V = v.props, B = V.size, z = V.theme;
                            if (V.displayObjectSize) return T().createElement("span", Object.assign({
                                className: "object-size"
                            }, ne(z, "object-size")), B, " item", B === 1 ? "" : "s");
                        }, v.getAddAttribute = function(V) {
                            var B = v.props, z = B.theme, te = B.namespace, re = B.name, se = B.src, ue = B.rjvId, ie = B.depth;
                            return T().createElement("span", {
                                className: "click-to-add",
                                style: {
                                    verticalAlign: "top",
                                    display: V ? "inline-block" : "none"
                                }
                            }, T().createElement(dL, Object.assign({
                                className: "click-to-add-icon"
                            }, ne(z, "addVarIcon"), {
                                onClick: function() {
                                    var Ce = {
                                        name: ie > 0 ? re : null,
                                        namespace: te.splice(0, te.length - 1),
                                        existing_value: se,
                                        variable_removed: !1,
                                        key_name: null
                                    };
                                    G(se) === "object" ? Ct.dispatch({
                                        name: "ADD_VARIABLE_KEY_REQUEST",
                                        rjvId: ue,
                                        data: Ce
                                    }) : Ct.dispatch({
                                        name: "VARIABLE_ADDED",
                                        rjvId: ue,
                                        data: E(E({}, Ce), {}, {
                                            new_value: [].concat(Ie(se), [
                                                null
                                            ])
                                        })
                                    });
                                }
                            })));
                        }, v.getRemoveObject = function(V) {
                            var B = v.props, z = B.theme, te = B.namespace, re = B.name, se = B.src, ue = B.rjvId;
                            if (te.length !== 1) return T().createElement("span", {
                                className: "click-to-remove",
                                style: {
                                    display: V ? "inline-block" : "none"
                                }
                            }, T().createElement(Od, Object.assign({
                                className: "click-to-remove-icon"
                            }, ne(z, "removeVarIcon"), {
                                onClick: function() {
                                    Ct.dispatch({
                                        name: "VARIABLE_REMOVED",
                                        rjvId: ue,
                                        data: {
                                            name: re,
                                            namespace: te.splice(0, te.length - 1),
                                            existing_value: se,
                                            variable_removed: !0
                                        }
                                    });
                                }
                            })));
                        }, v.render = function() {
                            var V = v.props, B = V.theme, z = V.onDelete, te = V.onAdd, re = V.enableClipboard, se = V.src, ue = V.namespace, ie = V.rowHovered;
                            return T().createElement("div", Object.assign({}, ne(B, "object-meta-data"), {
                                className: "object-meta-data",
                                onClick: function(Ce) {
                                    Ce.stopPropagation();
                                }
                            }), v.getObjectSize(), re ? T().createElement(jA, {
                                rowHovered: ie,
                                clickCallback: re,
                                src: se,
                                theme: B,
                                namespace: ue
                            }) : null, te !== !1 ? v.getAddAttribute(ie) : null, z !== !1 ? v.getRemoveObject(ie) : null);
                        }, v;
                    }
                    return h(y, D), R(y);
                }(T().PureComponent);
                function KA(D) {
                    var y = D.parent_type, v = D.namespace, M = D.quotesOnKeys, U = D.theme, W = D.jsvRoot, V = D.name, B = D.displayArrayKey, z = D.name ? D.name : "";
                    return !W || V !== !1 && V !== null ? y == "array" ? B ? T().createElement("span", Object.assign({}, ne(U, "array-key"), {
                        key: v
                    }), T().createElement("span", {
                        className: "array-key"
                    }, z), T().createElement("span", ne(U, "colon"), ":")) : T().createElement("span", null) : T().createElement("span", Object.assign({}, ne(U, "object-name"), {
                        key: v
                    }), T().createElement("span", {
                        className: "object-key"
                    }, M && T().createElement("span", {
                        style: {
                            verticalAlign: "top"
                        }
                    }, '"'), T().createElement("span", null, z), M && T().createElement("span", {
                        style: {
                            verticalAlign: "top"
                        }
                    }, '"')), T().createElement("span", ne(U, "colon"), ":")) : T().createElement("span", null);
                }
                function zA(D) {
                    var y = D.theme;
                    switch(D.iconStyle){
                        case "triangle":
                            return T().createElement(EL, Object.assign({}, ne(y, "expanded-icon"), {
                                className: "expanded-icon"
                            }));
                        case "square":
                            return T().createElement(Is, Object.assign({}, ne(y, "expanded-icon"), {
                                className: "expanded-icon"
                            }));
                        default:
                            return T().createElement(yr, Object.assign({}, ne(y, "expanded-icon"), {
                                className: "expanded-icon"
                            }));
                    }
                }
                function JA(D) {
                    var y = D.theme;
                    switch(D.iconStyle){
                        case "triangle":
                            return T().createElement(lc, Object.assign({}, ne(y, "collapsed-icon"), {
                                className: "collapsed-icon"
                            }));
                        case "square":
                            return T().createElement(Id, Object.assign({}, ne(y, "collapsed-icon"), {
                                className: "collapsed-icon"
                            }));
                        default:
                            return T().createElement(jr, Object.assign({}, ne(y, "collapsed-icon"), {
                                className: "collapsed-icon"
                            }));
                    }
                }
                var TL = [
                    "src",
                    "groupArraysAfterLength",
                    "depth",
                    "name",
                    "theme",
                    "jsvRoot",
                    "namespace",
                    "parent_type"
                ], qA = function(D) {
                    function y(v) {
                        var M;
                        return p(this, y), (M = f(this, y, [
                            v
                        ])).toggleCollapsed = function(U) {
                            var W = [];
                            for(var V in M.state.expanded)W.push(M.state.expanded[V]);
                            W[U] = !W[U], M.setState({
                                expanded: W
                            });
                        }, M.state = {
                            expanded: []
                        }, M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "getExpandedIcon",
                            value: function(v) {
                                var M = this.props, U = M.theme, W = M.iconStyle;
                                return this.state.expanded[v] ? T().createElement(zA, {
                                    theme: U,
                                    iconStyle: W
                                }) : T().createElement(JA, {
                                    theme: U,
                                    iconStyle: W
                                });
                            }
                        },
                        {
                            key: "render",
                            value: function() {
                                var v = this, M = this.props, U = M.src, W = M.groupArraysAfterLength, V = M.name, B = M.theme, z = M.jsvRoot, te = M.namespace, re = w(M, TL), se = 0, ue = 5 * this.props.indentWidth;
                                z || (se = 5 * this.props.indentWidth);
                                var ie = W, Ce = Math.ceil(U.length / ie);
                                return T().createElement("div", Object.assign({
                                    className: "object-key-val"
                                }, ne(B, z ? "jsv-root" : "objectKeyVal", {
                                    paddingLeft: se
                                })), T().createElement(KA, this.props), T().createElement("span", null, T().createElement(XA, Object.assign({
                                    size: U.length
                                }, this.props))), Ie(Array(Ce)).map(function(We, xe) {
                                    return T().createElement("div", Object.assign({
                                        key: xe,
                                        className: "object-key-val array-group"
                                    }, ne(B, "objectKeyVal", {
                                        marginLeft: 6,
                                        paddingLeft: ue
                                    })), T().createElement("span", ne(B, "brace-row"), T().createElement("div", Object.assign({
                                        className: "icon-container"
                                    }, ne(B, "icon-container"), {
                                        onClick: function(tt) {
                                            v.toggleCollapsed(xe);
                                        }
                                    }), v.getExpandedIcon(xe)), v.state.expanded[xe] ? T().createElement(cc, Object.assign({
                                        key: V + xe,
                                        depth: 0,
                                        name: !1,
                                        collapsed: !1,
                                        groupArraysAfterLength: ie,
                                        index_offset: xe * ie,
                                        src: U.slice(xe * ie, xe * ie + ie),
                                        namespace: te,
                                        type: "array",
                                        parent_type: "array_group",
                                        theme: B
                                    }, re)) : T().createElement("span", Object.assign({}, ne(B, "brace"), {
                                        onClick: function(tt) {
                                            v.toggleCollapsed(xe);
                                        },
                                        className: "array-group-brace"
                                    }), "[", T().createElement("div", Object.assign({}, ne(B, "array-group-meta-data"), {
                                        className: "array-group-meta-data"
                                    }), T().createElement("span", Object.assign({
                                        className: "object-size"
                                    }, ne(B, "object-size")), xe * ie, " - ", xe * ie + ie > U.length ? U.length : xe * ie + ie)), "]")));
                                }));
                            }
                        }
                    ]);
                }(T().PureComponent), hL = [
                    "depth",
                    "src",
                    "namespace",
                    "name",
                    "type",
                    "parent_type",
                    "theme",
                    "jsvRoot",
                    "iconStyle"
                ], gd = function(D) {
                    function y(v) {
                        var M;
                        p(this, y), (M = f(this, y, [
                            v
                        ])).toggleCollapsed = function() {
                            M.setState({
                                expanded: !M.state.expanded
                            }, function() {
                                Vt.set(M.props.rjvId, M.props.namespace, "expanded", M.state.expanded);
                            });
                        }, M.getObjectContent = function(W, V, B) {
                            return T().createElement("div", {
                                className: "pushed-content object-container"
                            }, T().createElement("div", Object.assign({
                                className: "object-content"
                            }, ne(M.props.theme, "pushed-content")), M.renderObjectContents(V, B)));
                        }, M.getEllipsis = function() {
                            return M.state.size === 0 ? null : T().createElement("div", Object.assign({}, ne(M.props.theme, "ellipsis"), {
                                className: "node-ellipsis",
                                onClick: M.toggleCollapsed
                            }), "...");
                        }, M.getObjectMetaData = function(W) {
                            var V = M.state, B = V.size, z = V.hovered;
                            return T().createElement(XA, Object.assign({
                                rowHovered: z,
                                size: B
                            }, M.props));
                        }, M.renderObjectContents = function(W, V) {
                            var B, z = M.props, te = z.depth, re = z.parent_type, se = z.index_offset, ue = z.groupArraysAfterLength, ie = z.namespace, Ce = M.state.object_type, We = [], xe = Object.keys(W || {});
                            return M.props.sortKeys && Ce !== "array" && (xe = xe.sort()), xe.forEach(function(tt) {
                                if (B = new AL(tt, W[tt]), re === "array_group" && se && (B.name = parseInt(B.name) + se), W.hasOwnProperty(tt)) if (B.type === "object") We.push(T().createElement(cc, Object.assign({
                                    key: B.name,
                                    depth: te + 1,
                                    name: B.name,
                                    src: B.value,
                                    namespace: ie.concat(B.name),
                                    parent_type: Ce
                                }, V)));
                                else if (B.type === "array") {
                                    var Xr = cc;
                                    ue && B.value.length > ue && (Xr = qA), We.push(T().createElement(Xr, Object.assign({
                                        key: B.name,
                                        depth: te + 1,
                                        name: B.name,
                                        src: B.value,
                                        namespace: ie.concat(B.name),
                                        type: "array",
                                        parent_type: Ce
                                    }, V)));
                                } else We.push(T().createElement(pL, Object.assign({
                                    key: B.name + "_" + ie,
                                    variable: B,
                                    singleIndent: 5,
                                    namespace: ie,
                                    type: M.props.type
                                }, V)));
                            }), We;
                        };
                        var U = y.getState(v);
                        return M.state = E(E({}, U), {}, {
                            prevProps: {}
                        }), M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "getBraceStart",
                            value: function(v, M) {
                                var U = this, W = this.props, V = W.src, B = W.theme, z = W.iconStyle;
                                if (W.parent_type === "array_group") return T().createElement("span", null, T().createElement("span", ne(B, "brace"), v === "array" ? "[" : "{"), M ? this.getObjectMetaData(V) : null);
                                var te = M ? zA : JA;
                                return T().createElement("span", null, T().createElement("span", Object.assign({
                                    onClick: function(re) {
                                        U.toggleCollapsed();
                                    }
                                }, ne(B, "brace-row")), T().createElement("div", Object.assign({
                                    className: "icon-container"
                                }, ne(B, "icon-container")), T().createElement(te, {
                                    theme: B,
                                    iconStyle: z
                                })), T().createElement(KA, this.props), T().createElement("span", ne(B, "brace"), v === "array" ? "[" : "{")), M ? this.getObjectMetaData(V) : null);
                            }
                        },
                        {
                            key: "render",
                            value: function() {
                                var v = this, M = this.props, U = M.depth, W = M.src, V = M.parent_type, B = M.theme, z = M.jsvRoot, te = M.iconStyle, re = w(M, hL), se = this.state, ue = se.object_type, ie = se.expanded, Ce = {};
                                return z || V === "array_group" ? V === "array_group" && (Ce.borderLeft = 0, Ce.display = "inline") : Ce.paddingLeft = 5 * this.props.indentWidth, T().createElement("div", Object.assign({
                                    className: "object-key-val",
                                    onMouseEnter: function() {
                                        return v.setState(E(E({}, v.state), {}, {
                                            hovered: !0
                                        }));
                                    },
                                    onMouseLeave: function() {
                                        return v.setState(E(E({}, v.state), {}, {
                                            hovered: !1
                                        }));
                                    }
                                }, ne(B, z ? "jsv-root" : "objectKeyVal", Ce)), this.getBraceStart(ue, ie), ie ? this.getObjectContent(U, W, E({
                                    theme: B,
                                    iconStyle: te
                                }, re)) : this.getEllipsis(), T().createElement("span", {
                                    className: "brace-row"
                                }, T().createElement("span", {
                                    style: E(E({}, ne(B, "brace").style), {}, {
                                        paddingLeft: ie ? "3px" : "0px"
                                    })
                                }, ue === "array" ? "]" : "}"), ie ? null : this.getObjectMetaData(W)));
                            }
                        }
                    ], [
                        {
                            key: "getDerivedStateFromProps",
                            value: function(v, M) {
                                var U = M.prevProps;
                                return v.src !== U.src || v.collapsed !== U.collapsed || v.name !== U.name || v.namespace !== U.namespace || v.rjvId !== U.rjvId ? E(E({}, y.getState(v)), {}, {
                                    prevProps: v
                                }) : null;
                            }
                        }
                    ]);
                }(T().PureComponent);
                gd.getState = function(D) {
                    var y = Object.keys(D.src).length, v = (D.collapsed === !1 || D.collapsed !== !0 && D.collapsed > D.depth) && (!D.shouldCollapse || D.shouldCollapse({
                        name: D.name,
                        src: D.src,
                        type: G(D.src),
                        namespace: D.namespace
                    }) === !1) && y !== 0;
                    return {
                        expanded: Vt.get(D.rjvId, D.namespace, "expanded", v),
                        object_type: D.type === "array" ? "array" : "object",
                        parent_type: D.type === "array" ? "array" : "object",
                        size: y,
                        hovered: !1
                    };
                };
                var AL = R(function D(y, v) {
                    p(this, D), this.name = y, this.value = v, this.type = G(v);
                });
                S(gd);
                const cc = gd;
                var SL = function(D) {
                    function y() {
                        var v;
                        p(this, y);
                        for(var M = arguments.length, U = new Array(M), W = 0; W < M; W++)U[W] = arguments[W];
                        return (v = f(this, y, [].concat(U))).render = function() {
                            var V, B, z, te, re = v.props, se = [
                                re.name
                            ], ue = cc;
                            return typeof re.name != "object" || Array.isArray(re.name) || (se = [
                                ((V = re.name) === null || V === void 0 ? void 0 : V.displayName) || ((B = re.name) === null || B === void 0 ? void 0 : B.name) || ((z = re.name) === null || z === void 0 || (te = z.type) === null || te === void 0 ? void 0 : te.name) || "Anonymous"
                            ]), Array.isArray(re.src) && re.groupArraysAfterLength && re.src.length > re.groupArraysAfterLength && (ue = qA), T().createElement("div", {
                                className: "pretty-json-container object-container"
                            }, T().createElement("div", {
                                className: "object-content"
                            }, T().createElement(ue, Object.assign({
                                namespace: se,
                                depth: 0,
                                jsvRoot: !0
                            }, re))));
                        }, v;
                    }
                    return h(y, D), R(y);
                }(T().PureComponent), RL = function(D) {
                    function y(v) {
                        var M;
                        return p(this, y), (M = f(this, y, [
                            v
                        ])).closeModal = function() {
                            Ct.dispatch({
                                rjvId: M.props.rjvId,
                                name: "RESET"
                            });
                        }, M.submit = function() {
                            M.props.submit(M.state.input);
                        }, M.state = {
                            input: v.input ? v.input : ""
                        }, M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this, M = this.props, U = M.theme, W = M.rjvId, V = M.isValid, B = this.state.input, z = V(B);
                                return T().createElement("div", Object.assign({
                                    className: "key-modal-request"
                                }, ne(U, "key-modal-request"), {
                                    onClick: this.closeModal
                                }), T().createElement("div", Object.assign({}, ne(U, "key-modal"), {
                                    onClick: function(te) {
                                        te.stopPropagation();
                                    }
                                }), T().createElement("div", ne(U, "key-modal-label"), "Key Name:"), T().createElement("div", {
                                    style: {
                                        position: "relative"
                                    }
                                }, T().createElement("input", Object.assign({}, ne(U, "key-modal-input"), {
                                    className: "key-modal-input",
                                    ref: function(te) {
                                        return te && te.focus();
                                    },
                                    spellCheck: !1,
                                    value: B,
                                    placeholder: "...",
                                    onChange: function(te) {
                                        v.setState({
                                            input: te.target.value
                                        });
                                    },
                                    onKeyPress: function(te) {
                                        z && te.key === "Enter" ? v.submit() : te.key === "Escape" && v.closeModal();
                                    }
                                })), z ? T().createElement(Cd, Object.assign({}, ne(U, "key-modal-submit"), {
                                    className: "key-modal-submit",
                                    onClick: function(te) {
                                        return v.submit();
                                    }
                                })) : null), T().createElement("span", ne(U, "key-modal-cancel"), T().createElement(WA, Object.assign({}, ne(U, "key-modal-cancel-icon"), {
                                    className: "key-modal-cancel",
                                    onClick: function() {
                                        Ct.dispatch({
                                            rjvId: W,
                                            name: "RESET"
                                        });
                                    }
                                })))));
                            }
                        }
                    ]);
                }(T().PureComponent), mL = function(D) {
                    function y() {
                        var v;
                        p(this, y);
                        for(var M = arguments.length, U = new Array(M), W = 0; W < M; W++)U[W] = arguments[W];
                        return (v = f(this, y, [].concat(U))).isValid = function(V) {
                            var B = v.props.rjvId, z = Vt.get(B, "action", "new-key-request");
                            return V != "" && Object.keys(z.existing_value).indexOf(V) === -1;
                        }, v.submit = function(V) {
                            var B = v.props.rjvId, z = Vt.get(B, "action", "new-key-request");
                            z.new_value = E({}, z.existing_value), z.new_value[V] = v.props.defaultValue, Ct.dispatch({
                                name: "VARIABLE_ADDED",
                                rjvId: B,
                                data: z
                            });
                        }, v;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.active, U = v.theme, W = v.rjvId;
                                return M ? T().createElement(RL, {
                                    rjvId: W,
                                    theme: U,
                                    isValid: this.isValid,
                                    submit: this.submit
                                }) : null;
                            }
                        }
                    ]);
                }(T().PureComponent), _L = function(D) {
                    function y() {
                        return p(this, y), f(this, y, arguments);
                    }
                    return h(y, D), R(y, [
                        {
                            key: "render",
                            value: function() {
                                var v = this.props, M = v.message, U = v.active, W = v.theme, V = v.rjvId;
                                return U ? T().createElement("div", Object.assign({
                                    className: "validation-failure"
                                }, ne(W, "validation-failure"), {
                                    onClick: function() {
                                        Ct.dispatch({
                                            rjvId: V,
                                            name: "RESET"
                                        });
                                    }
                                }), T().createElement("span", ne(W, "validation-failure-label"), M), T().createElement(WA, ne(W, "validation-failure-clear"))) : null;
                            }
                        }
                    ]);
                }(T().PureComponent), uc = function(D) {
                    function y(v) {
                        var M;
                        return p(this, y), (M = f(this, y, [
                            v
                        ])).rjvId = Date.now().toString(), M.getListeners = function() {
                            return {
                                reset: M.resetState,
                                "variable-update": M.updateSrc,
                                "add-key-request": M.addKeyRequest
                            };
                        }, M.updateSrc = function() {
                            var U, W = Vt.get(M.rjvId, "action", "variable-update"), V = W.name, B = W.namespace, z = W.new_value, te = W.existing_value, re = W.updated_src, se = W.type, ue = M.props, ie = ue.onEdit, Ce = ue.onDelete, We = ue.onAdd, xe = {
                                existing_src: M.state.src,
                                new_value: z,
                                updated_src: re,
                                name: V,
                                namespace: B,
                                existing_value: te
                            };
                            switch(se){
                                case "variable-added":
                                    U = We(xe);
                                    break;
                                case "variable-edited":
                                    U = ie(xe);
                                    break;
                                case "variable-removed":
                                    U = Ce(xe);
                            }
                            U !== !1 ? (Vt.set(M.rjvId, "global", "src", re), M.setState({
                                src: re
                            })) : M.setState({
                                validationFailure: !0
                            });
                        }, M.addKeyRequest = function() {
                            M.setState({
                                addKeyRequest: !0
                            });
                        }, M.resetState = function() {
                            M.setState({
                                validationFailure: !1,
                                addKeyRequest: !1
                            });
                        }, M.state = {
                            addKeyRequest: !1,
                            editKeyRequest: !1,
                            validationFailure: !1,
                            src: y.defaultProps.src,
                            name: y.defaultProps.name,
                            theme: y.defaultProps.theme,
                            validationMessage: y.defaultProps.validationMessage,
                            prevSrc: y.defaultProps.src,
                            prevName: y.defaultProps.name,
                            prevTheme: y.defaultProps.theme
                        }, M;
                    }
                    return h(y, D), R(y, [
                        {
                            key: "componentDidMount",
                            value: function() {
                                Vt.set(this.rjvId, "global", "src", this.state.src);
                                var v = this.getListeners();
                                for(var M in v)Vt.on(M + "-" + this.rjvId, v[M]);
                                this.setState({
                                    addKeyRequest: !1,
                                    editKeyRequest: !1
                                });
                            }
                        },
                        {
                            key: "componentDidUpdate",
                            value: function(v, M) {
                                M.addKeyRequest !== !1 && this.setState({
                                    addKeyRequest: !1
                                }), M.editKeyRequest !== !1 && this.setState({
                                    editKeyRequest: !1
                                }), v.src !== this.state.src && Vt.set(this.rjvId, "global", "src", this.state.src);
                            }
                        },
                        {
                            key: "componentWillUnmount",
                            value: function() {
                                var v = this.getListeners();
                                for(var M in v)Vt.removeListener(M + "-" + this.rjvId, v[M]);
                            }
                        },
                        {
                            key: "render",
                            value: function() {
                                var v = this.state, M = v.validationFailure, U = v.validationMessage, W = v.addKeyRequest, V = v.theme, B = v.src, z = v.name, te = this.props, re = te.style, se = te.defaultValue;
                                return T().createElement("div", {
                                    className: "react-json-view",
                                    style: E(E({}, ne(V, "app-container").style), re)
                                }, T().createElement(_L, {
                                    message: U,
                                    active: M,
                                    theme: V,
                                    rjvId: this.rjvId
                                }), T().createElement(SL, Object.assign({}, this.props, {
                                    src: B,
                                    name: z,
                                    theme: V,
                                    type: G(B),
                                    rjvId: this.rjvId
                                })), T().createElement(mL, {
                                    active: W,
                                    theme: V,
                                    rjvId: this.rjvId,
                                    defaultValue: se
                                }));
                            }
                        }
                    ], [
                        {
                            key: "getDerivedStateFromProps",
                            value: function(v, M) {
                                if (v.src !== M.prevSrc || v.name !== M.prevName || v.theme !== M.prevTheme) {
                                    var U = {
                                        src: v.src,
                                        name: v.name,
                                        theme: v.theme,
                                        validationMessage: v.validationMessage,
                                        prevSrc: v.src,
                                        prevName: v.name,
                                        prevTheme: v.theme
                                    };
                                    return y.validateState(U);
                                }
                                return null;
                            }
                        }
                    ]);
                }(T().PureComponent);
                uc.defaultProps = {
                    src: {},
                    name: "root",
                    theme: "rjv-default",
                    collapsed: !1,
                    collapseStringsAfterLength: !1,
                    shouldCollapse: !1,
                    sortKeys: !1,
                    quotesOnKeys: !0,
                    groupArraysAfterLength: 100,
                    indentWidth: 4,
                    enableClipboard: !0,
                    displayObjectSize: !0,
                    displayDataTypes: !0,
                    onEdit: !1,
                    onDelete: !1,
                    onAdd: !1,
                    onSelect: !1,
                    iconStyle: "triangle",
                    style: {},
                    validationMessage: "Validation Error",
                    defaultValue: null,
                    displayArrayKey: !0,
                    selectOnFocus: !1,
                    keyModifier: function(D) {
                        return D.metaKey || D.ctrlKey;
                    }
                }, uc.validateState = function(D) {
                    var y = {};
                    return G(D.theme) !== "object" || function(v) {
                        var M = [
                            "base00",
                            "base01",
                            "base02",
                            "base03",
                            "base04",
                            "base05",
                            "base06",
                            "base07",
                            "base08",
                            "base09",
                            "base0A",
                            "base0B",
                            "base0C",
                            "base0D",
                            "base0E",
                            "base0F"
                        ];
                        if (G(v) === "object") {
                            for(var U = 0; U < M.length; U++)if (!(M[U] in v)) return !1;
                            return !0;
                        }
                        return !1;
                    }(D.theme) || (console.error("react-json-view error:", "theme prop must be a theme name or valid base-16 theme object.", 'defaulting to "rjv-default" theme'), y.theme = "rjv-default"), G(D.src) !== "object" && G(D.src) !== "array" && (console.error("react-json-view error:", "src property must be a valid json object"), y.name = "ERROR", y.src = {
                        message: "src property must be a valid json object"
                    }), E(E({}, D), y);
                }, S(uc);
                const NL = uc;
            })(), a;
        })());
})(vO);
var QM = vO.exports;
const $M = /* @__PURE__ */ Ts(QM), e4 = ()=>{};
function t4({ src: e, type: t }) {
    return t === "object" ? Object.keys(e).length > 10 : t === "array" ? e.length > 10 : !1;
}
function xa({ data: e, onUpdateData: t = e4, editingEnabled: n = !1, clipboardEnabled: r = !0, displayDataTypes: s = !1, quotesOnKeys: i = !1, name: a = null, collapseStringsAfterLength: o = 80 }) {
    return /* @__PURE__ */ m.jsx($M, {
        theme: "bright",
        displayDataTypes: s,
        quotesOnKeys: i,
        shouldCollapse: t4,
        collapseStringsAfterLength: o,
        name: a,
        src: e,
        enableClipboard: r,
        onEdit: n && ((l)=>{
            if (l.new_value === "error") return !1;
            t(l.updated_src);
        }),
        onDelete: n && ((l)=>{
            if (l.new_value === "error") return !1;
            t(l.updated_src);
        }),
        onAdd: n && ((l)=>{
            if (l.new_value === "error") return !1;
            t(l.updated_src);
        })
    });
}
const n4 = `Sentry.addBreadcrumb({
  category: "auth",
  message: "Authenticated user " + user.email,
  level: "info",
});`;
function r4(e) {
    var t;
    return Array.isArray(e.breadcrumbs) ? e.breadcrumbs : Array.isArray((t = e.breadcrumbs) == null ? void 0 : t.values) ? e.breadcrumbs.values : [];
}
function s4({ event: e }) {
    const t = r4(e).filter((n)=>n.message || n.data);
    return t.length ? /* @__PURE__ */ m.jsx("div", {
        className: "flex-1 px-6 py-4",
        children: /* @__PURE__ */ m.jsx("div", {
            className: "divide-primary-800 grid-cols-2-auto -mx-2 grid space-y-2 divide-y",
            children: t.map((n, r)=>/* @__PURE__ */ m.jsxs(L.Fragment, {
                    children: [
                        /* @__PURE__ */ m.jsxs("div", {
                            className: "flex flex-none flex-col p-2",
                            children: [
                                /* @__PURE__ */ m.jsx("div", {
                                    className: "text-lg font-semibold",
                                    children: n.category || " "
                                }),
                                /* @__PURE__ */ m.jsx("div", {
                                    className: "text-primary-300 text-xs",
                                    children: /* @__PURE__ */ m.jsx(ZM, {
                                        date: n.timestamp,
                                        format: "HH:mm:ss"
                                    })
                                })
                            ]
                        }),
                        n.data ? /* @__PURE__ */ m.jsx(xa, {
                            data: n.data
                        }) : /* @__PURE__ */ m.jsx("pre", {
                            className: he("flex grow items-center whitespace-pre-line p-2 !font-mono", r === 0 ? "!border-t-0" : ""),
                            children: n.message
                        })
                    ]
                }, `${n.timestamp}-${n.category}-${n.type}`))
        })
    }) : /* @__PURE__ */ m.jsxs("div", {
        className: "flex-1 space-y-4 px-6 py-4",
        children: [
            /* @__PURE__ */ m.jsx("div", {
                className: "text-primary-300",
                children: "No breadcrumbs available for this event. Try adding some to make debugging easier."
            }),
            /* @__PURE__ */ m.jsx("pre", {
                className: "whitespace-pre-wrap ",
                children: n4
            })
        ]
    });
}
function bO({ tagKey: e, value: t, flowing: n = !1, maxWidth: r = "400px" }) {
    return t ? /* @__PURE__ */ m.jsxs("div", {
        className: he("border-primary-300 bg-primary-900 divide-x-primary-300 inline-flex divide-x overflow-hidden whitespace-nowrap rounded-full border font-mono text-sm", n && "max-w-full"),
        children: [
            e && /* @__PURE__ */ m.jsx("div", {
                className: "px-2 py-1 font-semibold",
                children: e
            }),
            /* @__PURE__ */ m.jsx("div", {
                title: t,
                className: he("bg-primary-800 truncate px-2 py-1", n ? "max-w-full" : "max-w-none"),
                style: {
                    maxWidth: n ? "100%" : r
                },
                children: t
            })
        ]
    }) : null;
}
function i4({ tags: e }) {
    return /* @__PURE__ */ m.jsx("div", {
        className: "flex flex-row flex-wrap gap-2 pt-2",
        children: Object.keys(e).map((t)=>/* @__PURE__ */ m.jsx(bO, {
                tagKey: t,
                value: e[t]
            }, t))
    });
}
const a4 = `Sentry.setContext("character", {
  name: "Mighty Fighter",
  age: 19,
  attack_type: "melee",
});`, lR = /* @__PURE__ */ m.jsxs("div", {
    className: "space-y-4 px-6 py-4",
    children: [
        /* @__PURE__ */ m.jsx("div", {
            className: "text-primary-300",
            children: "No context available for this event. Try adding some to make debugging easier."
        }),
        /* @__PURE__ */ m.jsx("pre", {
            className: "whitespace-pre-wrap",
            children: a4
        })
    ]
});
function PO({ event: e }) {
    if (!e) return lR;
    const t = {
        request: e.request,
        ...e.contexts
    };
    e.extra && (t.extra = e.extra), e.modules && (t.extra = Object.assign(t.extra || {}, {
        modules: e.modules
    }));
    const n = Object.entries(t).filter((s)=>s[1]), { tags: r } = e;
    return n.length === 0 && !r ? lR : /* @__PURE__ */ m.jsxs("div", {
        className: "space-y-4 px-6 py-4",
        children: [
            r && /* @__PURE__ */ m.jsxs("div", {
                className: "pb-4",
                children: [
                    /* @__PURE__ */ m.jsx("h2", {
                        className: "font-bold uppercase",
                        children: "Tags"
                    }),
                    /* @__PURE__ */ m.jsx(i4, {
                        tags: r
                    })
                ]
            }),
            /* @__PURE__ */ m.jsx("div", {
                className: "space-y-6",
                children: n.map(([s, i])=>/* @__PURE__ */ m.jsxs("div", {
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "font-bold uppercase",
                                children: s
                            }),
                            /* @__PURE__ */ m.jsx(Je, {
                                className: "w-full",
                                children: /* @__PURE__ */ m.jsx(Je.Body, {
                                    children: Object.entries(i).map(([a, o])=>/* @__PURE__ */ m.jsxs("tr", {
                                            children: [
                                                /* @__PURE__ */ m.jsx("th", {
                                                    className: "text-primary-300 w-1/12 py-0.5 pr-4 text-left font-mono font-normal",
                                                    children: /* @__PURE__ */ m.jsx("div", {
                                                        className: "w-full truncate",
                                                        children: a
                                                    })
                                                }),
                                                /* @__PURE__ */ m.jsx("td", {
                                                    className: "py-0.5",
                                                    children: typeof o != "object" || !o ? /* @__PURE__ */ m.jsx("pre", {
                                                        className: "text-primary-300 whitespace-nowrap font-mono",
                                                        children: JSON.stringify(o)
                                                    }) : /* @__PURE__ */ m.jsx(xa, {
                                                        data: o
                                                    }, `${s}-${a}`)
                                                })
                                            ]
                                        }, `${s}-${a}`))
                                })
                            })
                        ]
                    }, s))
            })
        ]
    });
}
function o4(e) {
    return /* @__PURE__ */ m.jsx(XM, {
        event: e
    });
}
function l4() {
    var i;
    const { eventId: e } = qi(), t = mt((a)=>a.getEventById);
    if (!e) return /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 p-6",
        children: "Unknown event id"
    });
    const n = t(e);
    if (!n) return /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 p-6",
        children: "Event not found."
    });
    const r = [
        Tn("details", "Details"),
        Tn("breadcrumbs", "Breadcrumbs"),
        Tn("contexts", "Context")
    ], s = (i = n.contexts) == null ? void 0 : i.trace;
    return /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsxs("div", {
                className: "bg-primary-950 flex items-center gap-x-2 px-6 py-4",
                children: [
                    /* @__PURE__ */ m.jsx(Js, {
                        event: n,
                        className: "rounded-md"
                    }),
                    /* @__PURE__ */ m.jsx("h1", {
                        className: "max-w-full flex-1 truncate text-2xl",
                        children: o4(n)
                    }),
                    s && /* @__PURE__ */ m.jsxs("div", {
                        className: "text-primary-300 font-mono",
                        children: [
                            /* @__PURE__ */ m.jsxs("div", {
                                children: [
                                    "T:",
                                    " ",
                                    /* @__PURE__ */ m.jsx(Dn, {
                                        className: "cursor-pointer underline",
                                        to: `/traces/${s.trace_id}`,
                                        children: s.trace_id
                                    })
                                ]
                            }),
                            /* @__PURE__ */ m.jsxs("div", {
                                children: [
                                    "S:",
                                    " ",
                                    /* @__PURE__ */ m.jsx(Dn, {
                                        className: "cursor-pointer underline",
                                        to: `/traces/${s.trace_id}/spans/${s.span_id}`,
                                        children: s.span_id
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            /* @__PURE__ */ m.jsx(HE, {
                tabs: r,
                nested: !0
            }),
            /* @__PURE__ */ m.jsxs("div", {
                className: "flex min-h-0 flex-1 flex-col overflow-y-auto overflow-x-hidden",
                children: [
                    /* @__PURE__ */ m.jsxs(Rs, {
                        children: [
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "breadcrumbs",
                                element: /* @__PURE__ */ m.jsx(s4, {
                                    event: n
                                })
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "contexts",
                                element: /* @__PURE__ */ m.jsx(PO, {
                                    event: n
                                })
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "*",
                                element: /* @__PURE__ */ m.jsx(zM, {
                                    event: n
                                })
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsx($N, {})
                ]
            })
        ]
    });
}
function Jh(e) {
    return /* @__PURE__ */ m.jsx("span", {
        className: "bg-primary-800 inline-flex items-center rounded-md px-1.5 py-0.5 text-xs font-medium",
        ...e
    });
}
function QE(e) {
    return /* @__PURE__ */ m.jsx("div", {
        className: "divide-primary-900 border-primary-900 bg-primary-950 flex min-h-0 flex-1 flex-col divide-y overflow-y-auto border-y",
        ...e
    });
}
var MO = {
    exports: {}
};
(function(e, t) {
    (function(n, r) {
        e.exports = r();
    })(at, function() {
        return function(n, r, s) {
            n = n || {};
            var i = r.prototype, a = {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            };
            function o(c, u, E, p) {
                return i.fromToBase(c, u, E, p);
            }
            s.en.relativeTime = a, i.fromToBase = function(c, u, E, p, A) {
                for(var R, C, O, d = E.$locale().relativeTime || a, f = n.thresholds || [
                    {
                        l: "s",
                        r: 44,
                        d: "second"
                    },
                    {
                        l: "m",
                        r: 89
                    },
                    {
                        l: "mm",
                        r: 44,
                        d: "minute"
                    },
                    {
                        l: "h",
                        r: 89
                    },
                    {
                        l: "hh",
                        r: 21,
                        d: "hour"
                    },
                    {
                        l: "d",
                        r: 35
                    },
                    {
                        l: "dd",
                        r: 25,
                        d: "day"
                    },
                    {
                        l: "M",
                        r: 45
                    },
                    {
                        l: "MM",
                        r: 10,
                        d: "month"
                    },
                    {
                        l: "y",
                        r: 17
                    },
                    {
                        l: "yy",
                        d: "year"
                    }
                ], _ = f.length, h = 0; h < _; h += 1){
                    var I = f[h];
                    I.d && (R = p ? s(c).diff(E, I.d, !0) : E.diff(c, I.d, !0));
                    var T = (n.rounding || Math.round)(Math.abs(R));
                    if (O = R > 0, T <= I.r || !I.r) {
                        T <= 1 && h > 0 && (I = f[h - 1]);
                        var N = d[I.l];
                        A && (T = A("" + T)), C = typeof N == "string" ? N.replace("%d", T) : N(T, u, I.l, O);
                        break;
                    }
                }
                if (u) return C;
                var g = O ? d.future : d.past;
                return typeof g == "function" ? g(C) : g.replace("%s", C);
            }, i.to = function(c, u) {
                return o(c, u, this, !0);
            }, i.from = function(c, u) {
                return o(c, u, this);
            };
            var l = function(c) {
                return c.$u ? s.utc() : s();
            };
            i.toNow = function(c) {
                return this.to(l(this), c);
            }, i.fromNow = function(c) {
                return this.from(l(this), c);
            };
        };
    });
})(MO);
var c4 = MO.exports;
const u4 = /* @__PURE__ */ Ts(c4);
var E4 = typeof window < "u" ? L.useLayoutEffect : L.useEffect;
function d4(e, t) {
    const n = L.useRef(e);
    E4(()=>{
        n.current = e;
    }, [
        e
    ]), L.useEffect({
        "d4.useEffect": ()=>{
            const r = setTimeout({
                "d4.useEffect.r": ()=>{
                    n.current();
                }
            }["d4.useEffect.r"], t);
            return ({
                "d4.useEffect": ()=>{
                    clearTimeout(r);
                }
            })["d4.useEffect"];
        }
    }["d4.useEffect"], [
        t
    ]);
}
Wi.extend(u4);
function $E({ date: e, ...t }) {
    const [n, r] = L.useState(e ? Wi(e).fromNow() : null);
    return d4(()=>{
        e || r(null), r(Wi(e).fromNow());
    }, 5e3), e ? /* @__PURE__ */ m.jsx("time", {
        dateTime: e instanceof Date ? e.toISOString() : `${e}`,
        ...t,
        children: n
    }) : null;
}
const jl = Ou.createContext({
    events: [],
    setEvents: ()=>{}
});
function f4(e, t) {
    if (Array.isArray(t.e)) {
        if (t.action === "RESET") return t.e;
    } else if (t.action === "APPEND") return [
        t.e,
        ...e
    ];
    return e;
}
const ed = ({ children: e })=>{
    const t = mt((a)=>a.getEvents), n = mt((a)=>a.subscribe), [r, s] = L.useReducer(f4, t());
    L.useEffect({
        "ed.useEffect": ()=>n("event", {
                "ed.useEffect": (a)=>{
                    s({
                        action: "APPEND",
                        e: a
                    });
                }
            }["ed.useEffect"])
    }["ed.useEffect"], []);
    const i = {
        events: r,
        setEvents: s
    };
    return /* @__PURE__ */ m.jsx(jl.Provider, {
        value: i,
        children: e
    });
}, td = (e)=>{
    L.useContext(jl);
    const t = mt((r)=>r.getEvents), n = mt((r)=>r.getEventsByTrace);
    return e ? n(e) : t();
};
function oi(e) {
    const t = mt.getState().localTraceIds;
    return t.has(e) ? !0 : t.size > 0 ? !1 : null;
}
function DO() {
    const e = mt.getState().getTraces;
    return e().filter((t)=>oi(t.trace_id) !== !1);
}
const Cl = (e = "")=>e.substring(0, 8);
function qh({ itemCount: e, ...t }) {
    return /* @__PURE__ */ m.jsxs("button", {
        className: "bg-primary-900 hover:bg-primary-800 text-primary-200 flex w-full cursor-pointer items-center gap-x-4 px-6 py-2 text-sm",
        ...t,
        children: [
            /* @__PURE__ */ m.jsxs("strong", {
                children: [
                    e.toLocaleString(),
                    " ",
                    e !== 1 ? "items were" : "item was",
                    " hidden from different sessions."
                ]
            }),
            /* @__PURE__ */ m.jsx("span", {
                className: "hover:bg-primary-900 border-primary-500 rounded border px-1.5 py-0.5",
                children: "Reveal"
            })
        ]
    });
}
function wO({ traceId: e }) {
    const t = td(e), n = ZE(), r = t.filter(qa), [s, i] = L.useState(!n.experiments["sentry:focus-local-events"]), a = s ? r : r.filter((l)=>{
        var c, u, E, p;
        return ((u = (c = l.contexts) == null ? void 0 : c.trace) != null && u.trace_id ? oi((p = (E = l.contexts) == null ? void 0 : E.trace) == null ? void 0 : p.trace_id) : null) !== !1;
    }), o = r.length - a.length;
    return r.length !== 0 ? /* @__PURE__ */ m.jsxs(QE, {
        children: [
            o > 0 && /* @__PURE__ */ m.jsx(qh, {
                itemCount: o,
                onClick: ()=>{
                    i(!0);
                }
            }),
            a.map((l)=>{
                var u, E;
                const c = (E = (u = l.contexts) == null ? void 0 : u.trace) == null ? void 0 : E.trace_id;
                return /* @__PURE__ */ m.jsxs(Dn, {
                    className: "hover:bg-primary-900 flex cursor-pointer items-center gap-x-4 px-6 py-2",
                    to: `/errors/${l.event_id}/details`,
                    children: [
                        /* @__PURE__ */ m.jsx(Js, {
                            event: l,
                            className: "text-primary-300 rounded-md"
                        }),
                        /* @__PURE__ */ m.jsxs("div", {
                            className: "text-primary-300 flex w-48 flex-col truncate font-mono text-sm",
                            children: [
                                /* @__PURE__ */ m.jsxs("div", {
                                    className: "flex items-center gap-x-2",
                                    children: [
                                        /* @__PURE__ */ m.jsx("div", {
                                            children: Cl(l.event_id)
                                        }),
                                        c && oi(c) ? /* @__PURE__ */ m.jsx(Jh, {
                                            title: "This event is part of your local session.",
                                            children: "Local"
                                        }) : null
                                    ]
                                }),
                                /* @__PURE__ */ m.jsx("span", {}),
                                /* @__PURE__ */ m.jsx($E, {
                                    date: l.timestamp
                                })
                            ]
                        }),
                        /* @__PURE__ */ m.jsx("div", {
                            className: "flex-1",
                            children: /* @__PURE__ */ m.jsx(KM, {
                                event: l
                            })
                        })
                    ]
                }, l.event_id);
            })
        ]
    }) : /* @__PURE__ */ m.jsx("div", {
        className: "text-primary-300 p-6",
        children: "Looks like there's no events recorded matching this query. 🤔"
    });
}
function p4() {
    return /* @__PURE__ */ m.jsx(ed, {
        children: /* @__PURE__ */ m.jsxs(Rs, {
            children: [
                /* @__PURE__ */ m.jsx(ze, {
                    path: "/",
                    element: /* @__PURE__ */ m.jsx(wO, {})
                }),
                /* @__PURE__ */ m.jsx(ze, {
                    path: "/:eventId/*",
                    element: /* @__PURE__ */ m.jsx(l4, {})
                })
            ]
        })
    });
}
function Zh() {
    L.useContext(jl);
    const { getTraces: e } = mt(), t = e(), n = DO();
    return {
        allTraces: t,
        localTraces: n
    };
}
function cR(e, t) {
    for (const n of t.spans.values())e.push(n);
    return e;
}
function uR(e, t) {
    return e + t.spans.size;
}
const Qh = ()=>{
    const { allTraces: e, localTraces: t } = Zh(), n = e.reduce(cR, []), r = t.reduce(cR, []);
    return {
        allSpans: n,
        localSpans: r
    };
}, T4 = ()=>{
    const { allTraces: e, localTraces: t } = Zh();
    return {
        allSpans: e.reduce(uR, 0),
        localSpans: t.reduce(uR, 0)
    };
}, h4 = ()=>{
    L.useContext(jl);
    const t = mt((r)=>r.getEnvelopes)().sort((r, s)=>{
        const i = r.envelope[0].sent_at, a = s.envelope[0].sent_at;
        return i < a ? 1 : i > a ? -1 : 0;
    }), n = t.filter(({ envelope: r })=>{
        var i, a;
        const s = (a = (i = r[0]) == null ? void 0 : i.trace) == null ? void 0 : a.trace_id;
        return s ? oi(s) !== !1 : !0;
    });
    return {
        allEnvelopes: t,
        localEnvelopes: n
    };
};
function pf(e) {
    try {
        return JSON.parse(new TextDecoder().decode(e));
    } catch (t) {
        return Pe(t), {};
    }
}
function A4(e) {
    try {
        return new TextDecoder().decode(e);
    } catch (t) {
        return Pe(t), null;
    }
}
function xO(e) {
    const t = co(), n = Ss();
    return ()=>n.key === "default" ? t(e, {
            replace: !0
        }) : t(-1);
}
function UO({ title: e, subtitle: t, backto: n }) {
    const r = xO(n);
    return /* @__PURE__ */ m.jsxs("div", {
        className: "border-b-primary-400 mb-4 flex border-b pb-4",
        children: [
            /* @__PURE__ */ m.jsxs("div", {
                className: "flex-1",
                children: [
                    /* @__PURE__ */ m.jsx("h2", {
                        className: "text-primary-300 text-xl",
                        children: e
                    }),
                    t && /* @__PURE__ */ m.jsx("h3", {
                        className: "font-mono",
                        children: t
                    })
                ]
            }),
            /* @__PURE__ */ m.jsx("button", {
                className: "hover:bg-primary-900 -my-1 flex cursor-pointer items-center justify-center rounded px-6 py-1 font-mono text-2xl",
                onClick: r,
                children: "✕"
            })
        ]
    });
}
function FO(e) {
    const t = xO(e.backto);
    return /* @__PURE__ */ m.jsx("div", {
        className: "fixed bottom-0 left-0 right-0 top-0 z-10 bg-black bg-opacity-30",
        onClick: t,
        children: /* @__PURE__ */ m.jsx("div", {
            onClick: (n)=>n.stopPropagation(),
            className: "spotlight-sidepanel border-l-primary-400 from-primary-900 to-primary-950 fixed bottom-0 left-1/4 right-0 top-0 z-20 flex h-full flex-col overflow-auto border-l bg-gradient-to-br to-20% px-6 py-4",
            ...e
        })
    });
}
function S4({ data: e }) {
    const [t, n] = L.useState(!1), { envelope: r, rawEnvelope: s } = e, i = r[0], a = r[1], o = {
        ...s,
        data: typeof s.data == "string" ? s.data : A4(s.data)
    }, l = URL.createObjectURL(new Blob([
        s.data
    ], {
        type: s.contentType
    })), c = `${i.event_id}-${s.contentType}.bin`;
    return /* @__PURE__ */ m.jsxs(FO, {
        backto: "/insights/envelopes",
        children: [
            /* @__PURE__ */ m.jsx(UO, {
                title: "Envelope Details",
                subtitle: /* @__PURE__ */ m.jsxs(m.Fragment, {
                    children: [
                        "Event Id ",
                        /* @__PURE__ */ m.jsx("span", {
                            className: "text-primary-500",
                            children: "—"
                        }),
                        " ",
                        /* @__PURE__ */ m.jsx("a", {
                            href: l,
                            download: c,
                            children: String(i.event_id)
                        })
                    ]
                }),
                backto: "/insights/envelopes"
            }),
            /* @__PURE__ */ m.jsxs("label", {
                htmlFor: "json-toggle",
                className: "mb-8 flex cursor-pointer items-center",
                children: [
                    /* @__PURE__ */ m.jsxs("div", {
                        className: "relative flex h-4 items-center gap-2",
                        children: [
                            /* @__PURE__ */ m.jsx("input", {
                                id: "json-toggle",
                                type: "checkbox",
                                className: "sr-only",
                                onChange: ()=>n((u)=>!u),
                                checked: t
                            }),
                            /* @__PURE__ */ m.jsx("div", {
                                className: "bg-primary-400 h-4 w-10 rounded-full shadow-inner"
                            }),
                            /* @__PURE__ */ m.jsx("div", {
                                className: "dot absolute -left-1 -top-1 h-6 w-6 rounded-full bg-white shadow transition"
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsx("span", {
                        className: "ml-2",
                        children: "Show Raw Data"
                    })
                ]
            }),
            t ? /* @__PURE__ */ m.jsx("div", {
                className: "flex-1 overflow-y-auto",
                children: /* @__PURE__ */ m.jsx(xa, {
                    data: o
                })
            }) : /* @__PURE__ */ m.jsxs("div", {
                className: "flex flex-col gap-6 space-y-6",
                children: [
                    /* @__PURE__ */ m.jsxs("div", {
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "mb-4 text-xl font-semibold",
                                children: "Header"
                            }),
                            /* @__PURE__ */ m.jsx(xa, {
                                data: i
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsxs("div", {
                        className: "flex flex-col gap-2",
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "mb-2 text-xl font-semibold",
                                children: "Items"
                            }),
                            a.map((u, E)=>{
                                var p;
                                return /* @__PURE__ */ m.jsx(xa, {
                                    data: u
                                }, `${E}-${(p = u[0]) == null ? void 0 : p.type}`);
                            })
                        ]
                    })
                ]
            })
        ]
    });
}
function ER({ showAll: e }) {
    const { eventId: t } = qi(), { allEnvelopes: n, localEnvelopes: r } = h4(), { getEnvelopes: s } = mt(), i = t && s().find(({ envelope: a })=>a[0].event_id === t) || null;
    return n != null && n.length ? /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsx(QE, {
                children: /* @__PURE__ */ m.jsx("div", {
                    className: "flex flex-col",
                    children: (e ? n : r).map(({ envelope: a })=>{
                        var E, p;
                        const o = a[0], l = o.event_id, { trace_id: c } = (o == null ? void 0 : o.trace) || {}, u = a[1].length > 0 ? a[1][0] : null;
                        return typeof l != "string" ? null : /* @__PURE__ */ m.jsx(Dn, {
                            to: `/insights/envelopes/${o.event_id}`,
                            children: /* @__PURE__ */ m.jsxs("div", {
                                className: he("hover:bg-primary-900 border-b-primary-900 flex cursor-pointer items-center gap-4 border-b px-6 py-2 transition-all", t === l ? "bg-primary-900" : ""),
                                children: [
                                    /* @__PURE__ */ m.jsx(Js, {
                                        className: "rounded-md",
                                        platform: qE(((E = o.sdk) == null ? void 0 : E.name) || "unknown")
                                    }),
                                    /* @__PURE__ */ m.jsxs("div", {
                                        className: "text-primary-300 flex flex-[0.25] flex-col truncate font-mono text-sm",
                                        children: [
                                            /* @__PURE__ */ m.jsx("h2", {
                                                className: "text-primary-50 text-xs",
                                                children: "Event Id"
                                            }),
                                            /* @__PURE__ */ m.jsxs("div", {
                                                className: "flex items-center gap-x-2",
                                                children: [
                                                    /* @__PURE__ */ m.jsx("div", {
                                                        children: Cl(l)
                                                    }),
                                                    c && oi(c) ? /* @__PURE__ */ m.jsx(Jh, {
                                                        title: "This trace is part of your local session.",
                                                        children: "Local"
                                                    }) : null
                                                ]
                                            })
                                        ]
                                    }),
                                    /* @__PURE__ */ m.jsxs("div", {
                                        className: "text-primary-300 flex flex-[0.25] flex-col truncate font-mono text-sm",
                                        children: [
                                            /* @__PURE__ */ m.jsx("h2", {
                                                className: "text-primary-50 text-xs",
                                                children: "Type"
                                            }),
                                            (p = u == null ? void 0 : u[0]) != null && p.type ? u[0].type : "-"
                                        ]
                                    }),
                                    /* @__PURE__ */ m.jsxs("div", {
                                        className: "text-primary-300 flex flex-[0.25] flex-col truncate font-mono text-sm",
                                        children: [
                                            /* @__PURE__ */ m.jsx("h2", {
                                                className: "text-primary-50 text-xs",
                                                children: "Received"
                                            }),
                                            o.sent_at ? /* @__PURE__ */ m.jsx($E, {
                                                date: o.sent_at
                                            }) : "-"
                                        ]
                                    })
                                ]
                            })
                        }, l);
                    })
                })
            }),
            i && /* @__PURE__ */ m.jsx(S4, {
                data: i
            })
        ]
    }) : /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 px-6 py-4",
        children: "No Envelopes found."
    });
}
function R4(e) {
    return /* @__PURE__ */ m.jsxs(Rs, {
        children: [
            /* @__PURE__ */ m.jsx(ze, {
                path: "/:eventId",
                element: /* @__PURE__ */ m.jsx(ER, {
                    ...e
                })
            }),
            /* @__PURE__ */ m.jsx(ze, {
                path: "/",
                element: /* @__PURE__ */ m.jsx(ER, {
                    ...e
                })
            })
        ]
    });
}
const Xl = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        fill: "currentColor",
        width: 24,
        height: 24,
        viewBox: "0 0 24 24",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("path", {
        d: "M17,14 C17.8092996,14 18.2680938,14.9010044 17.836059,15.5493995 L17.7682213,15.6401844 L12.7682213,21.6401844 C12.3950792,22.0879549 11.7283228,22.1178063 11.3160321,21.7297385 L11.2317787,21.6401844 L6.23177872,15.6401844 C5.71367776,15.0184632 6.11213562,14.0891988 6.88682851,14.0060047 L7,14 L17,14 Z M11.2317787,2.3598156 C11.6049208,1.91204508 12.2716772,1.88219371 12.6839679,2.2702615 L12.7682213,2.3598156 L17.7682213,8.3598156 C18.2863222,8.98153675 17.8878644,9.91080124 17.1131715,9.99399528 L17,10 L7,10 C6.19070043,10 5.73190618,9.09899556 6.16394105,8.45060047 L6.23177872,8.3598156 L11.2317787,2.3598156 Z"
    })), Kl = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        fill: "currentColor",
        width: 24,
        height: 24,
        viewBox: "-96 0 512 512",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("path", {
        xmlns: "http://www.w3.org/2000/svg",
        d: "M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z"
    })), BO = /^db(?:\.[A-Za-z]+)*$/, Ur = {
    functionName: "FUNCTION_NAME",
    totalTime: "TOTAL_TIME",
    samples: "SAMPLES",
    traces: "TRACES"
}, m4 = [
    {
        id: "name",
        title: "Function Name",
        sortKey: Ur.functionName,
        primary: !0
    },
    {
        id: "totalTime",
        title: "Total Time",
        sortKey: Ur.totalTime
    },
    {
        id: "samples",
        title: "Samples",
        sortKey: Ur.samples
    },
    {
        id: "traces",
        title: "Traces",
        sortKey: Ur.traces
    }
], Fr = {
    avgDuration: "AVG_DURATION",
    totalTime: "TOTAL_TIME",
    description: "DESC",
    avgEncodedSize: "AVG_ENCODED_SIZE"
}, _4 = [
    {
        id: "description",
        title: "Resource Description",
        sortKey: Fr.description,
        primary: !0
    },
    {
        id: "avgDuration",
        title: "Avg Duration",
        sortKey: Fr.avgDuration
    },
    {
        id: "totalTime",
        title: "Total Time",
        sortKey: Fr.totalTime
    },
    {
        id: "avgEncodedSize",
        title: "Avg Encoded Size",
        sortKey: Fr.avgEncodedSize
    }
], qs = {
    queryDesc: "QUERY_DESCRIPTION",
    totalTime: "TOTAL_TIME",
    avgDuration: "AVG_DURATION"
}, N4 = [
    {
        id: "queryDesc",
        title: "Query Description",
        sortKey: qs.queryDesc,
        primary: !0
    },
    {
        id: "avgDuration",
        title: "Avg Duration",
        sortKey: qs.avgDuration
    },
    {
        id: "totalTime",
        title: "Total Time",
        sortKey: qs.totalTime
    }
], Zs = {
    foundIn: "FOUND_IN",
    spanId: "SPAN_ID",
    totalTime: "TOTAL_TIME"
}, I4 = [
    {
        id: "foundIn",
        title: "Found In",
        sortKey: Zs.foundIn,
        primary: !0
    },
    {
        id: "spanId",
        title: "Span Id",
        sortKey: Zs.spanId
    },
    {
        id: "totalTime",
        title: "Total Time",
        sortKey: Zs.totalTime
    }
], ln = {
    pages: "Pages",
    lcp: "LCP",
    fcp: "FCP",
    fid: "FID",
    cls: "CLS",
    ttfb: "TTFB",
    score: "PERFORMANCE_TOTAL_SCORE"
}, O4 = [
    {
        id: "pages",
        title: "Pages",
        sortKey: ln.pages,
        primary: !0
    },
    {
        id: "lcp",
        title: "LCP",
        sortKey: ln.lcp
    },
    {
        id: "fcp",
        title: "FCP",
        sortKey: ln.fcp
    },
    {
        id: "fid",
        title: "FID",
        sortKey: ln.fid
    },
    {
        id: "cls",
        title: "CLS",
        sortKey: ln.cls
    },
    {
        id: "ttfb",
        title: "TTFB",
        sortKey: ln.ttfb
    },
    {
        id: "score",
        title: "Perf Score",
        sortKey: ln.score
    }
], GO = {
    profiles: [
        {
            name: "Chrome",
            scoreComponents: [
                {
                    measurement: "fcp",
                    weight: 0.15,
                    p10: 900,
                    p50: 1600,
                    optional: !1
                },
                {
                    measurement: "lcp",
                    weight: 0.3,
                    p10: 1200,
                    p50: 2400,
                    optional: !1
                },
                {
                    measurement: "fid",
                    weight: 0.3,
                    p10: 100,
                    p50: 300,
                    optional: !0
                },
                {
                    measurement: "cls",
                    weight: 0.15,
                    p10: 0.1,
                    p50: 0.25,
                    optional: !1
                },
                {
                    measurement: "ttfb",
                    weight: 0.1,
                    p10: 200,
                    p50: 400,
                    optional: !1
                }
            ],
            condition: {
                op: "eq",
                name: "event.contexts.browser.name",
                value: "Chrome"
            }
        }
    ]
};
function zl({ defaultSortType: e = "", defaultAsc: t = !1 }) {
    const [n, r] = L.useState({
        active: e,
        asc: t
    });
    return {
        toggleSortOrder: (i)=>r((a)=>a.active === i ? {
                    active: i,
                    asc: !a.asc
                } : {
                    active: i,
                    asc: !1
                }),
        sort: n,
        setSort: r
    };
}
const kO = {
    315576e5: "yr",
    26298e5: "mo",
    6048e5: "wk",
    864e5: "d",
    36e5: "hr",
    6e4: "min",
    1e3: "s"
}, C4 = Object.keys(kO).map(Number).sort((e, t)=>t - e);
function HO(e) {
    if (e > 1e3) return "text-red-400";
    if (e > 500) return "text-orange-400";
    if (e > 100) return "text-yellow-400";
}
function dR(e, t = 2) {
    return e.toFixed(t).replace(/\.00$/, "");
}
function vt(e) {
    for (const t of C4)if (e >= t) return `${dR(e / t)}${kO[t]}`;
    return `${dR(e)}ms`;
}
function YO(e) {
    return vt(e.timestamp - e.start_timestamp);
}
function $h({ value: e, maxValue: t, title: n, children: r, className: s }) {
    const i = t !== 0 ? Math.round(e / t * 100) : 100;
    return /* @__PURE__ */ m.jsxs("div", {
        title: n,
        className: he("relative truncate text-left text-sm font-medium", s),
        children: [
            r,
            /* @__PURE__ */ m.jsx("div", {
                className: he("bg-primary-800 h-1 w-full overflow-hidden rounded-full", r ? "mt-1" : ""),
                children: /* @__PURE__ */ m.jsx("div", {
                    className: "h-full bg-lime-500",
                    style: {
                        width: `${i}%`
                    }
                })
            })
        ]
    });
}
const fR = {
    [Ur.functionName]: (e, t)=>e.name < t.name ? -1 : e.name > t.name ? 1 : 0,
    [Ur.totalTime]: (e, t)=>e.totalTime - t.totalTime,
    [Ur.samples]: (e, t)=>e.samples - t.samples,
    [Ur.traces]: (e, t)=>e.traceIds.size - t.traceIds.size
};
function g4() {
    const { sort: e, toggleSortOrder: t } = zl({
        defaultSortType: Ur.totalTime
    }), n = L.useMemo({
        "g4.useMemo[n]": ()=>{
            const s = mt.getState().getAggregateCallData(), i = fR[e.active] || fR[Ur.totalTime];
            return s.sort({
                "g4.useMemo[n]": (a, o)=>e.asc ? i(a, o) : i(o, a)
            }["g4.useMemo[n]"]);
        }
    }["g4.useMemo[n]"], [
        e
    ]);
    if (!n.length) return /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 px-6 py-4",
        children: "No profiles found."
    });
    const r = Math.max(...n.map((s)=>s.totalTime));
    return /* @__PURE__ */ m.jsxs(Je, {
        variant: "detail",
        children: [
            /* @__PURE__ */ m.jsx(Je.Header, {
                children: /* @__PURE__ */ m.jsx("tr", {
                    children: m4.map((s)=>/* @__PURE__ */ m.jsx("th", {
                            scope: "col",
                            className: he("text-primary-100 px-6 py-3.5 text-sm font-semibold", s.primary ? "w-2/5" : "w-[15%]"),
                            children: /* @__PURE__ */ m.jsxs("div", {
                                className: he("flex cursor-pointer select-none items-center gap-1", s.primary ? "justify-start" : "justify-end"),
                                onClick: ()=>t(s.sortKey),
                                children: [
                                    s.title,
                                    e.active === s.sortKey ? /* @__PURE__ */ m.jsx(Kl, {
                                        width: 12,
                                        height: 12,
                                        className: he("fill-primary-300", e.asc ? "-translate-y-0.5 rotate-0" : "translate-y-0.5 rotate-180")
                                    }) : /* @__PURE__ */ m.jsx(Xl, {
                                        width: 12,
                                        height: 12,
                                        className: "stroke-primary-300"
                                    })
                                ]
                            })
                        }, s.id))
                })
            }),
            /* @__PURE__ */ m.jsx(Je.Body, {
                children: n.map((s)=>/* @__PURE__ */ m.jsxs("tr", {
                        className: "hover:bg-primary-900",
                        children: [
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-2/5 whitespace-nowrap px-6 py-4",
                                children: /* @__PURE__ */ m.jsx($h, {
                                    value: s.totalTime,
                                    maxValue: r,
                                    title: s.name,
                                    className: "text-lime-500",
                                    children: s.name.split("@")[1].split(":", 1)[0]
                                })
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: /* @__PURE__ */ m.jsx("span", {
                                    className: HO(s.totalTime),
                                    children: vt(s.totalTime)
                                })
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: s.samples
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: s.traceIds.size
                            })
                        ]
                    }, `${s.name}`))
            })
        ]
    });
}
const L4 = ({ query: e, spanData: t })=>{
    const r = t.filter((a)=>a.description === e).map((a)=>a.timestamp - a.start_timestamp), s = r.reduce((a, o)=>a + o, 0);
    return {
        avgDuration: s / r.length,
        totalTime: s,
        description: e
    };
}, pR = {
    [qs.queryDesc]: (e, t)=>e.description < t.description ? -1 : e.description > t.description ? 1 : 0,
    [qs.avgDuration]: (e, t)=>e.avgDuration - t.avgDuration,
    [qs.totalTime]: (e, t)=>e.totalTime - t.totalTime
}, y4 = ({ showAll: e })=>{
    const { allSpans: t, localSpans: n } = Qh(), { sort: r, toggleSortOrder: s } = zl({
        defaultSortType: qs.totalTime
    }), i = L.useMemo({
        "y4.useMemo[i]": ()=>{
            const o = pR[r.active] || pR[qs.totalTime], c = (e ? t : n).filter({
                "y4.useMemo[i].c": (E)=>BO.test(E.op || "")
            }["y4.useMemo[i].c"]), u = new Set(c.map({
                "y4.useMemo[i]": (E)=>String(E == null ? void 0 : E.description).trim()
            }["y4.useMemo[i]"]));
            return u.delete(""), [
                ...u
            ].map({
                "y4.useMemo[i]": (E)=>L4({
                        query: E,
                        spanData: c
                    })
            }["y4.useMemo[i]"]).sort({
                "y4.useMemo[i]": (E, p)=>r.asc ? o(E, p) : o(p, E)
            }["y4.useMemo[i]"]);
        }
    }["y4.useMemo[i]"], [
        t,
        n,
        e,
        r
    ]);
    if (!(i != null && i.length)) return /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 px-6 py-4",
        children: "No Database queries found. Add integration in Sentry initialization to track Database queries."
    });
    const a = Math.max(...i.map((o)=>o.totalTime));
    return /* @__PURE__ */ m.jsxs(Je, {
        variant: "detail",
        children: [
            /* @__PURE__ */ m.jsx(Je.Header, {
                children: /* @__PURE__ */ m.jsx("tr", {
                    children: N4.map((o)=>/* @__PURE__ */ m.jsx("th", {
                            scope: "col",
                            className: he("text-primary-100 select-none px-6 py-3.5 text-sm font-semibold", o.primary ? "w-2/5" : "w-[15%]"),
                            children: /* @__PURE__ */ m.jsxs("div", {
                                className: he("flex cursor-pointer items-center gap-1", o.primary ? "justify-start" : "justify-end"),
                                onClick: ()=>s(o.sortKey),
                                children: [
                                    o.title,
                                    r.active === o.sortKey ? /* @__PURE__ */ m.jsx(Kl, {
                                        width: 12,
                                        height: 12,
                                        className: he("fill-primary-300", r.asc ? "-translate-y-0.5 rotate-0" : "translate-y-0.5 rotate-180")
                                    }) : /* @__PURE__ */ m.jsx(Xl, {
                                        width: 12,
                                        height: 12,
                                        className: "stroke-primary-300"
                                    })
                                ]
                            })
                        }, o.id))
                })
            }),
            /* @__PURE__ */ m.jsx(Je.Body, {
                children: i.map((o)=>/* @__PURE__ */ m.jsxs("tr", {
                        className: "hover:bg-primary-900",
                        children: [
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-2/5 truncate whitespace-nowrap px-6 py-4 text-left text-sm font-medium",
                                children: /* @__PURE__ */ m.jsx($h, {
                                    value: o.totalTime,
                                    maxValue: a,
                                    title: o.description,
                                    children: /* @__PURE__ */ m.jsx(Dn, {
                                        className: "truncate hover:underline",
                                        to: `/insights/queries/${btoa(o.description)}`,
                                        children: o.description
                                    })
                                })
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: vt(o.avgDuration)
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: vt(o.totalTime)
                            })
                        ]
                    }, o.description))
            })
        ]
    });
}, VO = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: 16,
        height: 16,
        fill: "currentColor",
        className: "bi bi-chevron-down",
        viewBox: "0 0 16 16",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("path", {
        fillRule: "evenodd",
        d: "M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"
    }));
function WO({ crumbs: e }) {
    return /* @__PURE__ */ m.jsx("div", {
        className: "flex items-center gap-1 px-6 py-4",
        children: e.map((t, n)=>{
            const r = n === e.length - 1;
            return /* @__PURE__ */ m.jsxs("div", {
                className: "flex items-center gap-1",
                children: [
                    n > 0 && /* @__PURE__ */ m.jsx(VO, {
                        width: 12,
                        height: 12,
                        className: "stroke-primary-300 -rotate-90"
                    }),
                    t.link && t.to ? /* @__PURE__ */ m.jsx(Dn, {
                        className: he(r ? "text-primary-200" : "text-primary-300", "hover:text-primary-100 truncate text-sm hover:underline"),
                        to: t.to,
                        children: t.label
                    }) : /* @__PURE__ */ m.jsx("span", {
                        className: he(r ? "text-primary-200" : "text-primary-300", "truncate text-sm"),
                        children: t.label
                    })
                ]
            }, t.id);
        })
    });
}
const TR = {
    [Zs.foundIn]: (e, t)=>{
        const n = e.trace_id || "", r = t.trace_id || "";
        return n < r ? -1 : n > r ? 1 : 0;
    },
    [Zs.spanId]: (e, t)=>e.span_id < t.span_id ? -1 : e.span_id > t.span_id ? 1 : 0,
    [Zs.totalTime]: (e, t)=>e.timestamp - e.start_timestamp - (t.timestamp - t.start_timestamp)
}, v4 = ({ showAll: e })=>{
    const { allSpans: t, localSpans: n } = Qh(), { type: r } = qi(), { sort: s, toggleSortOrder: i } = zl({
        defaultSortType: Zs.totalTime
    }), a = r && atob(r), o = L.useMemo({
        "v4.useMemo[o]": ()=>{
            if (!a) return [];
            const c = e ? t : n, u = TR[s.active] || TR[Zs.totalTime];
            return c.filter({
                "v4.useMemo[o]": (E)=>E.description === a
            }["v4.useMemo[o]"]).sort({
                "v4.useMemo[o]": (E, p)=>s.asc ? u(E, p) : u(p, E)
            }["v4.useMemo[o]"]);
        }
    }["v4.useMemo[o]"], [
        t,
        n,
        e,
        s,
        a
    ]);
    if (!o || !o.length) return /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 px-6 py-4",
        children: "Query not found."
    });
    const l = Math.max(...o.map((c)=>c.timestamp - c.start_timestamp));
    return /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsx(WO, {
                crumbs: [
                    {
                        id: "queries",
                        label: "Queries",
                        link: !0,
                        to: "/insights/queries"
                    },
                    {
                        id: "querySummary",
                        label: "Query Summary",
                        link: !1
                    }
                ]
            }),
            /* @__PURE__ */ m.jsx("div", {
                className: "border-b-primary-700 bg-primary-950 flex items-center gap-x-2 border-b px-6 py-4",
                children: /* @__PURE__ */ m.jsx("h1", {
                    className: "flex w-full flex-1 items-center text-xl",
                    children: a
                })
            }),
            /* @__PURE__ */ m.jsxs(Je, {
                variant: "detail",
                children: [
                    /* @__PURE__ */ m.jsx(Je.Header, {
                        children: /* @__PURE__ */ m.jsx("tr", {
                            children: I4.map((c)=>/* @__PURE__ */ m.jsx("th", {
                                    scope: "col",
                                    className: he("text-primary-100 px-6 py-3.5 text-sm font-semibold", c.primary ? "w-2/5" : "w-[15%]"),
                                    children: /* @__PURE__ */ m.jsxs("div", {
                                        className: he("flex cursor-pointer select-none items-center gap-1", c.primary ? "justify-start" : "justify-end"),
                                        onClick: ()=>i(c.sortKey),
                                        children: [
                                            c.title,
                                            s.active === c.sortKey ? /* @__PURE__ */ m.jsx(Kl, {
                                                width: 12,
                                                height: 12,
                                                className: he("fill-primary-300", s.asc ? "-translate-y-0.5 rotate-0" : "translate-y-0.5 rotate-180")
                                            }) : /* @__PURE__ */ m.jsx(Xl, {
                                                width: 12,
                                                height: 12,
                                                className: "stroke-primary-300"
                                            })
                                        ]
                                    })
                                }, c.id))
                        })
                    }),
                    /* @__PURE__ */ m.jsx(Je.Body, {
                        children: o.map((c)=>/* @__PURE__ */ m.jsxs("tr", {
                                className: "hover:bg-primary-900",
                                children: [
                                    /* @__PURE__ */ m.jsx("td", {
                                        className: "text-primary-200 w-2/5 truncate whitespace-nowrap px-6 py-4 text-left text-sm font-medium",
                                        children: /* @__PURE__ */ m.jsx($h, {
                                            value: c.timestamp - c.start_timestamp,
                                            maxValue: l,
                                            title: c.trace_id,
                                            children: /* @__PURE__ */ m.jsx(Dn, {
                                                className: "truncate hover:underline",
                                                to: `/traces/${c.trace_id}`,
                                                children: Cl(c.trace_id)
                                            })
                                        })
                                    }),
                                    /* @__PURE__ */ m.jsx("td", {
                                        className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                        children: /* @__PURE__ */ m.jsx(Dn, {
                                            className: "truncate hover:underline",
                                            to: `/traces/${c.trace_id}/spans/${c.span_id}`,
                                            children: Cl(c.span_id)
                                        })
                                    }),
                                    /* @__PURE__ */ m.jsx("td", {
                                        className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                        children: vt(c.timestamp - c.start_timestamp)
                                    })
                                ]
                            }, c.span_id))
                    })
                ]
            })
        ]
    });
}, b4 = (e)=>{
    switch(e){
        case "top":
            return "bottom-full left-1/2 transform -translate-x-1/2 mb-2";
        case "bottom":
            return "top-full left-1/2 transform -translate-x-1/2 mt-2";
        case "left":
            return "top-1/2 right-full transform -translate-y-1/2 mr-2";
        default:
            return "top-1/2 left-full transform -translate-y-1/2 ml-2";
    }
}, P4 = ({ content: e, position: t = "right", children: n })=>{
    const [r, s] = L.useState(!1), i = ()=>{
        s(!0);
    }, a = ()=>{
        s(!1);
    };
    return /* @__PURE__ */ m.jsxs("div", {
        className: "relative inline-block max-w-full",
        onMouseEnter: i,
        onMouseLeave: a,
        children: [
            n,
            r && /* @__PURE__ */ m.jsx("div", {
                className: he("absolute z-10", b4(t)),
                children: e
            })
        ]
    });
};
function jO(e, t = 2) {
    if (e == 0) return "0 B";
    const n = 1024, r = t, s = [
        "B",
        "KB",
        "MB",
        "GB",
        "TB",
        "PB",
        "EB",
        "ZB",
        "YB"
    ], i = Math.floor(Math.log(e) / Math.log(n));
    return parseFloat((e / Math.pow(n, i)).toFixed(r)) + " " + s[i];
}
const M4 = ({ resource: e, spanData: t })=>{
    const n = t.filter((a)=>a.description === e), r = n.reduce((a, o)=>a + (o.timestamp - o.start_timestamp), 0), s = r / n.length, i = n.reduce((a, o)=>{
        var c;
        const l = (c = o.data) == null ? void 0 : c["http.response_content_length"];
        return typeof l == "number" ? a + l : a;
    }, 0) / n.length;
    return {
        avgDuration: s,
        totalTime: r,
        description: e,
        avgEncodedSize: i,
        similarResources: n
    };
}, D4 = (e, t)=>{
    if (t.type) return e.filter((n)=>n.description === t.type);
    if (t.regex) {
        const n = new RegExp(t.regex);
        return e.filter((r)=>n.test(r.op || ""));
    }
    return [];
}, hR = {
    [Fr.description]: (e, t)=>e.description < t.description ? -1 : e.description > t.description ? 1 : 0,
    [Fr.avgEncodedSize]: (e, t)=>e.avgEncodedSize - t.avgEncodedSize,
    [Fr.avgDuration]: (e, t)=>e.avgDuration - t.avgDuration,
    [Fr.totalTime]: (e, t)=>e.totalTime - t.totalTime
}, w4 = ({ showAll: e })=>{
    const { allSpans: t, localSpans: n } = Qh(), { sort: r, toggleSortOrder: s } = zl({
        defaultSortType: Fr.totalTime
    }), i = L.useMemo({
        "w4.useMemo[i]": ()=>{
            const a = D4(e ? t : n, {
                regex: /resource\.[A-Za-z]+/
            }), o = new Set(a.map({
                "w4.useMemo[i]": (u)=>String(u == null ? void 0 : u.description).trim()
            }["w4.useMemo[i]"]));
            o.delete("");
            const l = [
                ...o
            ], c = hR[r.active] || hR[Fr.totalTime];
            return l.map({
                "w4.useMemo[i]": (u)=>M4({
                        resource: u,
                        spanData: a
                    })
            }["w4.useMemo[i]"]).sort({
                "w4.useMemo[i]": (u, E)=>r.asc ? c(u, E) : c(E, u)
            }["w4.useMemo[i]"]);
        }
    }["w4.useMemo[i]"], [
        r,
        e,
        t,
        n
    ]);
    return i != null && i.length ? /* @__PURE__ */ m.jsxs(Je, {
        variant: "detail",
        children: [
            /* @__PURE__ */ m.jsx(Je.Header, {
                children: /* @__PURE__ */ m.jsx("tr", {
                    children: _4.map((a)=>/* @__PURE__ */ m.jsx("th", {
                            scope: "col",
                            className: he("text-primary-100 px-6 py-3.5 text-sm font-semibold", a.primary ? "w-2/5" : "w-[15%]"),
                            children: /* @__PURE__ */ m.jsxs("div", {
                                className: he("flex cursor-pointer select-none items-center gap-1", a.primary ? "justify-start" : "justify-end"),
                                onClick: ()=>s(a.sortKey),
                                children: [
                                    a.title,
                                    r.active === a.sortKey ? /* @__PURE__ */ m.jsx(Kl, {
                                        width: 12,
                                        height: 12,
                                        className: he("fill-primary-300", r.asc ? "-translate-y-0.5 rotate-0" : "translate-y-0.5 rotate-180")
                                    }) : /* @__PURE__ */ m.jsx(Xl, {
                                        width: 12,
                                        height: 12,
                                        className: "stroke-primary-300"
                                    })
                                ]
                            })
                        }, a.id))
                })
            }),
            /* @__PURE__ */ m.jsx(Je.Body, {
                children: i.map((a)=>{
                    var o;
                    return /* @__PURE__ */ m.jsxs("tr", {
                        className: "hover:bg-primary-900",
                        children: [
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 relative w-2/5 whitespace-nowrap px-6 py-4 text-left text-sm font-medium",
                                children: /* @__PURE__ */ m.jsx(P4, {
                                    position: "right",
                                    content: a.similarResources[0].op === "resource.img" && ((o = a.description) == null ? void 0 : o.indexOf("/")) === 0 && /* @__PURE__ */ m.jsxs("div", {
                                        className: "bg-primary-800 cursor-pointer rounded-lg p-4 shadow-md",
                                        children: [
                                            /* @__PURE__ */ m.jsx("h2", {
                                                className: "mb-2 font-bold",
                                                children: "Preview"
                                            }),
                                            /* @__PURE__ */ m.jsx("img", {
                                                src: a.description,
                                                className: "inline-block max-h-[150px] max-w-[150px] rounded p-1",
                                                alt: "preview"
                                            })
                                        ]
                                    }),
                                    children: /* @__PURE__ */ m.jsx("div", {
                                        className: "truncate",
                                        children: a.description
                                    })
                                })
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: vt(a.avgDuration)
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: vt(a.totalTime)
                            }),
                            /* @__PURE__ */ m.jsx("td", {
                                className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                children: jO(a.avgEncodedSize)
                            })
                        ]
                    }, a.description);
                })
            })
        ]
    }) : /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 px-6 py-4",
        children: "No Resource found."
    });
}, x4 = ()=>(L.useContext(jl), mt((e)=>e.getSdks()));
function U4() {
    const e = x4();
    return /* @__PURE__ */ m.jsx(m.Fragment, {
        children: e.length !== 0 ? /* @__PURE__ */ m.jsx(QE, {
            children: e.map((t)=>/* @__PURE__ */ m.jsxs("div", {
                    className: "flex items-center gap-x-4 px-6 py-2",
                    children: [
                        /* @__PURE__ */ m.jsx(Js, {
                            className: "rounded-md",
                            platform: qE(t.name)
                        }),
                        /* @__PURE__ */ m.jsxs("div", {
                            className: "text-primary-300 flex flex-col truncate font-mono text-sm",
                            children: [
                                /* @__PURE__ */ m.jsx("div", {
                                    children: t.name
                                }),
                                /* @__PURE__ */ m.jsx("div", {
                                    children: t.version
                                }),
                                /* @__PURE__ */ m.jsx($E, {
                                    date: t.lastSeen
                                })
                            ]
                        })
                    ]
                }, `${t.name}-${t.version}`))
        }) : /* @__PURE__ */ m.jsx("div", {
            className: "text-primary-300 px-6 py-4",
            children: "Looks like there's no SDKs that have reported yet. 🤔"
        })
    });
}
function F4() {
    return /* @__PURE__ */ m.jsx(ed, {
        children: /* @__PURE__ */ m.jsx(Rs, {
            children: /* @__PURE__ */ m.jsx(ze, {
                path: "/",
                element: /* @__PURE__ */ m.jsx(U4, {})
            })
        })
    });
}
const XO = Math.sqrt(2);
function B4(e) {
    const t = 0.254829592, n = -0.284496736, r = 1.421413741, s = -1.453152027, i = 1.061405429, a = 0.3275911, o = e < 0 ? -1 : 1, l = Math.abs(e), c = 1 / (1 + a * l), u = 1 - ((((i * c + s) * c + r) * c + n) * c + t) * c * Math.exp(-l * l);
    return o * u;
}
function G4(e, t) {
    return Math.abs(Math.log(e) - Math.log(t)) / (XO * 0.9061938024368232);
}
function k4(e, t, n) {
    return 0.5 * (1 - B4((Math.log(e) - Math.log(n)) / (XO * G4(n, t))));
}
function KO(e, t) {
    if (t) for (const n of t.profiles){
        const r = e.measurements;
        if (r) {
            let s = !1, i = 0, a = 0;
            for (const o of n.scoreComponents)o.optional && !Object.prototype.hasOwnProperty.call(r, o.measurement) || (a += o.weight);
            if (Math.abs(a) < Number.EPSILON) break;
            for (const o of n.scoreComponents){
                let l = 0;
                if (Object.prototype.hasOwnProperty.call(r, o.measurement)) {
                    l = o.weight / a;
                    const c = r[o.measurement].value, u = k4(Math.max(0, c), o.p10, o.p50), E = u * l;
                    i += E, s = !0, r[`score.${o.measurement}`] = {
                        value: u,
                        unit: "ratio"
                    };
                } else r[`score.${o.measurement}`] = {
                    value: 0,
                    unit: "ratio"
                };
                r[`score.weight.${o.measurement}`] = {
                    value: l,
                    unit: "ratio"
                };
            }
            s && !Object.prototype.hasOwnProperty.call(r, "score.total") && (r["score.total"] = {
                value: i,
                unit: "ratio"
            });
            break;
        }
    }
}
function H4(e, t, n, r, s, i, a, o) {
    const l = e / 2 + r + o, c = {
        x: t + e / 2 - i / 2,
        y: n + e / 2 + a / 2
    }, u = Object.values(s).reduce((w, G)=>w + G, 0), E = -90, p = (w)=>w / u * 360, [A, R, C, O, d] = [
        s.lcp,
        s.fcp,
        s.fid,
        s.cls,
        s.ttfb
    ].map(p), f = c.x + l * Math.cos((E + A / 2) * Math.PI / 180), _ = c.y + l * Math.sin((E + A / 2) * Math.PI / 180), h = c.x + l * Math.cos((E + A + R / 2) * Math.PI / 180), I = c.y + l * Math.sin((E + A + R / 2) * Math.PI / 180), T = c.x + l * Math.cos((E + A + R + C / 2) * Math.PI / 180), N = c.y + l * Math.sin((E + A + R + C / 2) * Math.PI / 180), g = c.x + l * Math.cos((E + A + R + C + O / 2) * Math.PI / 180), b = c.y + l * Math.sin((E + A + R + C + O / 2) * Math.PI / 180), S = c.x - 12 + l * Math.cos((E + A + R + C + O + d / 2) * Math.PI / 180), P = c.y + l * Math.sin((E + A + R + C + O + d / 2) * Math.PI / 180);
    return {
        lcpX: f,
        lcpY: _,
        fcpX: h,
        fcpY: I,
        fidX: T,
        fidY: N,
        clsX: g,
        clsY: b,
        ttfbX: S,
        ttfbY: P
    };
}
const AR = {
    [ln.pages]: (e, t)=>e.transaction && t.transaction && e.transaction < t.transaction ? -1 : e.transaction && t.transaction && e.transaction > t.transaction ? 1 : 0,
    [ln.lcp]: (e, t)=>e.measurements["score.lcp"].value - t.measurements["score.lcp"].value,
    [ln.fid]: (e, t)=>e.measurements["score.fid"].value - t.measurements["score.fid"].value,
    [ln.fcp]: (e, t)=>e.measurements["score.fcp"].value - t.measurements["score.fcp"].value,
    [ln.cls]: (e, t)=>e.measurements["score.cls"].value - t.measurements["score.cls"].value,
    [ln.ttfb]: (e, t)=>e.measurements["score.ttfb"].value - t.measurements["score.ttfb"].value,
    [ln.score]: (e, t)=>e.measurements["score.total"].value - t.measurements["score.total"].value
}, Y4 = ()=>{
    const e = td(), t = co(), { sort: n, toggleSortOrder: r } = zl({
        defaultSortType: ln.score
    }), s = L.useMemo({
        "Y4.useMemo[s]": ()=>{
            const i = AR[n.active] || AR[ln.score];
            return e.filter({
                "Y4.useMemo[s]": (a)=>{
                    var o, l;
                    return a.measurements && ((l = (o = a == null ? void 0 : a.contexts) == null ? void 0 : o.trace) == null ? void 0 : l.op) === "pageload";
                }
            }["Y4.useMemo[s]"]).map({
                "Y4.useMemo[s]": (a)=>{
                    const o = {
                        ...a
                    };
                    return KO(o, GO), o;
                }
            }["Y4.useMemo[s]"]).sort({
                "Y4.useMemo[s]": (a, o)=>n.asc ? i(a, o) : i(o, a)
            }["Y4.useMemo[s]"]);
        }
    }["Y4.useMemo[s]"], [
        e,
        n
    ]);
    return s != null && s.length ? /* @__PURE__ */ m.jsx(m.Fragment, {
        children: /* @__PURE__ */ m.jsxs(Je, {
            variant: "detail",
            children: [
                /* @__PURE__ */ m.jsx(Je.Header, {
                    children: /* @__PURE__ */ m.jsx("tr", {
                        children: O4.map((i)=>/* @__PURE__ */ m.jsx("th", {
                                scope: "col",
                                className: he("text-primary-100 px-6 py-3.5 text-sm font-semibold", i.primary ? "w-2/5" : "w-[15%]"),
                                children: /* @__PURE__ */ m.jsxs("div", {
                                    className: he("flex cursor-pointer select-none items-center gap-1", i.primary ? "justify-start" : "justify-end"),
                                    onClick: ()=>r(i.sortKey),
                                    children: [
                                        i.title,
                                        n.active === i.sortKey ? /* @__PURE__ */ m.jsx(Kl, {
                                            width: 12,
                                            height: 12,
                                            className: he("fill-primary-300", n.asc ? "-translate-y-0.5 rotate-0" : "translate-y-0.5 rotate-180")
                                        }) : /* @__PURE__ */ m.jsx(Xl, {
                                            width: 12,
                                            height: 12,
                                            className: "stroke-primary-300"
                                        })
                                    ]
                                })
                            }, i.id))
                    })
                }),
                /* @__PURE__ */ m.jsx(Je.Body, {
                    children: s.map((i)=>{
                        var a, o, l, c, u, E;
                        return /* @__PURE__ */ m.jsxs("tr", {
                            className: "hover:bg-primary-900 cursor-pointer",
                            onClick: ()=>t(`/insights/webvitals/${i.event_id}`),
                            children: [
                                /* @__PURE__ */ m.jsx("td", {
                                    className: "text-primary-200 w-2/5 truncate whitespace-nowrap px-6 py-4 text-left text-sm font-medium",
                                    children: i.transaction
                                }),
                                /* @__PURE__ */ m.jsx("td", {
                                    className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                    children: (a = i.measurements) != null && a.lcp ? vt(i.measurements.lcp.value) : "-"
                                }),
                                /* @__PURE__ */ m.jsx("td", {
                                    className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                    children: (o = i.measurements) != null && o.fcp ? vt(i.measurements.fcp.value) : "-"
                                }),
                                /* @__PURE__ */ m.jsx("td", {
                                    className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                    children: (l = i.measurements) != null && l.fid ? vt(i.measurements.fid.value) : "-"
                                }),
                                /* @__PURE__ */ m.jsx("td", {
                                    className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                    children: (c = i.measurements) != null && c.cls ? i.measurements.cls.value : "-"
                                }),
                                /* @__PURE__ */ m.jsx("td", {
                                    className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                    children: (u = i.measurements) != null && u.ttfb ? vt(i.measurements.ttfb.value) : "-"
                                }),
                                /* @__PURE__ */ m.jsx("td", {
                                    className: "text-primary-200 w-[15%] whitespace-nowrap px-6 py-4 text-right text-sm font-medium",
                                    children: (E = i.measurements["score.total"]) != null && E.value ? Math.trunc(i.measurements["score.total"].value * 100) : "-"
                                })
                            ]
                        }, i.event_id);
                    })
                })
            ]
        })
    }) : /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 px-6 py-4",
        children: "No Measurements found."
    });
}, V4 = -90, W4 = 1;
function j4({ values: e, maxValues: t, size: n = 20, barWidth: r = 3, text: s, textCss: i, segmentColors: a, backgroundColors: o, progressEndcaps: l, onHoverActions: c, onBlur: u, ...E }) {
    const p = n / 2, A = n / 4, R = n / 2 - r / 2, C = 2 * Math.PI * R, O = L.useMemo({
        "j4.useMemo[O]": ()=>{
            const d = t.reduce({
                "j4.useMemo[O].d": (_, h)=>_ + h
            }["j4.useMemo[O].d"], 0);
            let f = V4;
            return t.flatMap({
                "j4.useMemo[O]": (_, h)=>{
                    const I = Math.min(Math.max(e[h], 0), _), T = e.length > 1 ? W4 : 0, N = (1 - Math.max(_ - T, 0) / d) * C, g = (1 - Math.max(I - T, 0) / d) * C, b = f;
                    f += 360 * _ / d;
                    const S = R + r / 2, P = `${S}-${o[h]}-${a[h]}`;
                    return [
                        /* @__PURE__ */ m.jsx("circle", {
                            strokeDashoffset: N,
                            r: R,
                            cx: S,
                            cy: S,
                            onMouseOver: {
                                "j4.useMemo[O]": ()=>c == null ? void 0 : c[h]()
                            }["j4.useMemo[O]"],
                            onFocus: {
                                "j4.useMemo[O]": ()=>c == null ? void 0 : c[h]()
                            }["j4.useMemo[O]"],
                            onMouseLeave: {
                                "j4.useMemo[O]": ()=>u == null ? void 0 : u()
                            }["j4.useMemo[O]"],
                            onBlur: {
                                "j4.useMemo[O]": ()=>u == null ? void 0 : u()
                            }["j4.useMemo[O]"],
                            className: he(o[h]),
                            style: {
                                fill: "none",
                                strokeWidth: r,
                                strokeDasharray: `${C} ${C}`,
                                transform: `rotate(${b}deg)`,
                                transformOrigin: "50% 50%",
                                transition: "stroke 300ms"
                            }
                        }, `ring-bg-${P}`),
                        /* @__PURE__ */ m.jsx("circle", {
                            strokeDashoffset: g,
                            strokeLinecap: l,
                            r: R,
                            cx: S,
                            cy: S,
                            onMouseOver: {
                                "j4.useMemo[O]": ()=>c == null ? void 0 : c[h]()
                            }["j4.useMemo[O]"],
                            onFocus: {
                                "j4.useMemo[O]": ()=>c == null ? void 0 : c[h]()
                            }["j4.useMemo[O]"],
                            onMouseLeave: {
                                "j4.useMemo[O]": ()=>u == null ? void 0 : u()
                            }["j4.useMemo[O]"],
                            onBlur: {
                                "j4.useMemo[O]": ()=>u == null ? void 0 : u()
                            }["j4.useMemo[O]"],
                            className: he(a[h]),
                            style: {
                                fill: "none",
                                strokeWidth: r,
                                strokeDasharray: `${C} ${C}`,
                                transform: `rotate(${b}deg)`,
                                transformOrigin: "50% 50%",
                                transition: "stroke 300ms, stroke-dashoffset 300ms"
                            }
                        }, `ring-bar-${P}`)
                    ];
                }
            }["j4.useMemo[O]"]);
        }
    }["j4.useMemo[O]"], [
        o,
        r,
        C,
        t,
        c,
        u,
        l,
        R,
        a,
        e
    ]);
    return /* @__PURE__ */ m.jsxs("svg", {
        className: "relative",
        role: "img",
        height: R * 2 + r,
        width: R * 2 + r,
        ...E,
        children: [
            /* @__PURE__ */ m.jsx("title", {
                children: "Web Vitals Breakdown"
            }),
            O,
            /* @__PURE__ */ m.jsx("foreignObject", {
                height: p,
                width: p,
                x: A,
                y: A,
                children: s !== void 0 ? /* @__PURE__ */ m.jsx("div", {
                    className: he("text-primary-100 flex h-full w-full items-center justify-center text-xl font-bold", i),
                    children: s
                }) : null
            })
        ]
    });
}
class lT extends Error {
}
function X4(e, { signal: t }) {
    return new Promise((n, r)=>{
        t.aborted && r(new lT());
        const s = ()=>{
            r(new lT());
        }, i = new IntersectionObserver((a)=>{
            for (const o of a){
                const l = o.boundingClientRect;
                n(l), t.removeEventListener("abort", s);
            }
            i.disconnect();
        });
        t.addEventListener("abort", s), i.observe(e);
    });
}
function K4({ elem: e, onPositionChange: t, onMouseEnter: n, onMouseMove: r, onMouseLeave: s, ...i }) {
    const a = L.useRef(new AbortController()), o = L.useCallback({
        "K4.useCallback[o]": async (c)=>{
            if (!e.current) {
                t(void 0);
                return;
            }
            try {
                const u = await X4(e.current, {
                    signal: a.current.signal
                });
                t({
                    height: u.height,
                    left: Math.min(c.clientX - u.left, u.width),
                    top: Math.min(c.clientY - u.top, u.height),
                    width: u.width
                });
            } catch (u) {
                if (u instanceof lT) return;
            }
        }
    }["K4.useCallback[o]"], [
        t,
        a,
        e
    ]), l = L.useCallback({
        "K4.useCallback[l]": ()=>{
            a.current && (a.current.abort(), a.current = new AbortController()), t(void 0);
        }
    }["K4.useCallback[l]"], [
        t,
        a
    ]);
    return {
        ...i,
        onMouseEnter: (c)=>{
            o(c), n == null || n(c);
        },
        onMouseMove: (c)=>{
            var u;
            (u = e.current) != null && u.contains(c.target) && (o(c), r == null || r(c));
        },
        onMouseLeave: (c)=>{
            l(), s == null || s(c);
        }
    };
}
function Po({ webVital: e, coordinates: t, labelCoordinates: n = {} }) {
    var i, a;
    const r = ((i = n == null ? void 0 : n[e]) == null ? void 0 : i.x) ?? 0, s = ((a = n == null ? void 0 : n[e]) == null ? void 0 : a.y) ?? 0;
    return /* @__PURE__ */ m.jsx("text", {
        className: "fill-primary-200 stroke-primary-200 uppercase",
        x: t.x + r,
        y: t.y + s,
        children: e
    });
}
const z4 = ({ metricScore: e, metricWeights: t, totalScore: n, size: r = 200, barWidth: s = 25, left: i = 40, top: a = 25, labelWidthPadding: o = 28, labelHeightPadding: l = 14, radiusPadding: c = 4 })=>{
    const [u, E] = L.useState(null), [p, A] = L.useState({
        x: 0,
        y: 0
    }), R = L.useRef(null), C = K4({
        elem: R,
        onPositionChange: (S)=>{
            if (S) {
                const { left: P, top: w } = S;
                A({
                    x: P,
                    y: w
                });
            }
        }
    }), { lcpX: O, lcpY: d, fcpX: f, fcpY: _, fidX: h, fidY: I, clsX: T, clsY: N, ttfbX: g, ttfbY: b } = H4(r, i, a, s, t, o, l, c);
    return /* @__PURE__ */ m.jsxs("div", {
        ref: R,
        ...C,
        children: [
            u && /* @__PURE__ */ m.jsxs("div", {
                className: he("bg-primary-900 border-primary-400 absolute flex w-40 items-center justify-between rounded-lg border p-3 shadow-lg"),
                style: {
                    transform: `translate3d(${p.x - 100}px, ${p.y - 74}px, 0px)`
                },
                children: [
                    /* @__PURE__ */ m.jsx("span", {
                        className: "text-primary-200",
                        children: `${u.toUpperCase()} Score:`
                    }),
                    /* @__PURE__ */ m.jsx("span", {
                        className: "text-primary-200 font-semibold",
                        children: e[`${u}Score`]
                    })
                ]
            }),
            /* @__PURE__ */ m.jsxs("svg", {
                height: r + 3 * a,
                width: r + 3 * i,
                children: [
                    /* @__PURE__ */ m.jsxs(m.Fragment, {
                        children: [
                            t.lcp > 0 && /* @__PURE__ */ m.jsx(Po, {
                                webVital: "lcp",
                                coordinates: {
                                    x: O,
                                    y: d
                                }
                            }),
                            t.fcp > 0 && /* @__PURE__ */ m.jsx(Po, {
                                webVital: "fcp",
                                coordinates: {
                                    x: f,
                                    y: _
                                }
                            }),
                            t.fid > 0 && /* @__PURE__ */ m.jsx(Po, {
                                webVital: "fid",
                                coordinates: {
                                    x: h,
                                    y: I
                                }
                            }),
                            t.cls > 0 && /* @__PURE__ */ m.jsx(Po, {
                                webVital: "cls",
                                coordinates: {
                                    x: T,
                                    y: N
                                }
                            }),
                            t.ttfb > 0 && /* @__PURE__ */ m.jsx(Po, {
                                webVital: "ttfb",
                                coordinates: {
                                    x: g,
                                    y: b
                                }
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsx(j4, {
                        values: [
                            (e.lcpScore ?? 0) * t.lcp * 0.01,
                            (e.fcpScore ?? 0) * t.fcp * 0.01,
                            (e.fidScore ?? 0) * t.fid * 0.01,
                            (e.clsScore ?? 0) * t.cls * 0.01,
                            (e.ttfbScore ?? 0) * t.ttfb * 0.01
                        ],
                        maxValues: [
                            t.lcp,
                            t.fcp,
                            t.fid,
                            t.cls,
                            t.ttfb
                        ],
                        text: n,
                        size: r,
                        barWidth: s,
                        segmentColors: [
                            "stroke-primary-300",
                            "stroke-primary-400",
                            "stroke-primary-500",
                            "stroke-primary-600",
                            "stroke-primary-700"
                        ],
                        backgroundColors: [
                            "stroke-gray-400",
                            "stroke-gray-400",
                            "stroke-gray-400",
                            "stroke-gray-400",
                            "stroke-gray-400"
                        ],
                        x: i,
                        y: a,
                        onHoverActions: [
                            ()=>E("lcp"),
                            ()=>E("fcp"),
                            ()=>E("fid"),
                            ()=>E("cls"),
                            ()=>E("ttfb")
                        ],
                        onBlur: ()=>E(null)
                    })
                ]
            })
        ]
    });
}, J4 = ()=>{
    var r, s, i, a, o;
    const e = td(), { page: t } = qi(), n = [];
    if (e.filter((l)=>l.event_id === t).map((l)=>{
        const c = {
            ...l
        };
        KO(c, GO), n.push(c);
    }), t && n.length) {
        const l = {
            fcpScore: Math.trunc(n[0].measurements["score.fcp"].value * 100),
            lcpScore: Math.trunc(n[0].measurements["score.lcp"].value * 100),
            fidScore: Math.trunc(n[0].measurements["score.fid"].value * 100),
            clsScore: Math.trunc(n[0].measurements["score.cls"].value * 100),
            ttfbScore: Math.trunc(n[0].measurements["score.ttfb"].value * 100)
        }, c = {
            fcp: Math.trunc(n[0].measurements["score.weight.fcp"].value * 100),
            lcp: Math.trunc(n[0].measurements["score.weight.lcp"].value * 100),
            fid: Math.trunc(n[0].measurements["score.weight.fid"].value * 100),
            cls: Math.trunc(n[0].measurements["score.weight.cls"].value * 100),
            ttfb: Math.trunc(n[0].measurements["score.weight.ttfb"].value * 100)
        }, u = Math.trunc(n[0].measurements["score.total"].value * 100), E = [
            {
                id: "fcpScore",
                description: "First Contentful Paint",
                label: "FCP",
                score: (r = n[0].measurements) != null && r.fcp ? vt(n[0].measurements.fcp.value) : "-"
            },
            {
                id: "lcpScore",
                description: "Largest Contentful Paint",
                label: "LCP",
                score: (s = n[0].measurements) != null && s.lcp ? vt(n[0].measurements.lcp.value) : "-"
            },
            {
                id: "fidScore",
                description: "First Input Delay",
                label: "FID",
                score: (i = n[0].measurements) != null && i.fid ? vt(n[0].measurements.fid.value) : "-"
            },
            {
                id: "clsScore",
                description: "Cumulative Layout Shift",
                label: "CLS",
                score: (a = n[0].measurements) != null && a.cls ? vt(n[0].measurements.cls.value) : "-"
            },
            {
                id: "ttfbScore",
                description: "Time to First Byte",
                label: "TTFB",
                score: (o = n[0].measurements) != null && o.ttfb ? vt(n[0].measurements.ttfb.value) : "-"
            }
        ];
        return /* @__PURE__ */ m.jsxs(m.Fragment, {
            children: [
                /* @__PURE__ */ m.jsx(WO, {
                    crumbs: [
                        {
                            id: "webVitals",
                            label: "Web Vitals",
                            link: !0,
                            to: "/insights/webvitals"
                        },
                        {
                            id: "performanceSummary",
                            label: "Performance Summary",
                            link: !1
                        }
                    ]
                }),
                /* @__PURE__ */ m.jsxs("div", {
                    className: "w-full px-6",
                    children: [
                        /* @__PURE__ */ m.jsx("div", {
                            className: "flex w-full items-center justify-center p-6",
                            children: /* @__PURE__ */ m.jsx(z4, {
                                totalScore: u,
                                metricWeights: c,
                                metricScore: l
                            })
                        }),
                        /* @__PURE__ */ m.jsx("div", {
                            className: "flex w-full flex-wrap justify-center gap-2",
                            children: E.map((p)=>/* @__PURE__ */ m.jsxs("div", {
                                    className: "bg-primary-900 border-primary-400 flex w-80 flex-col items-center gap-4 rounded-lg border p-2 shadow-lg",
                                    children: [
                                        /* @__PURE__ */ m.jsx("span", {
                                            className: "text-primary-300 text-base font-semibold",
                                            children: p.label
                                        }),
                                        /* @__PURE__ */ m.jsx("span", {
                                            className: "text-primary-300 text-sm font-light",
                                            children: p.description
                                        }),
                                        /* @__PURE__ */ m.jsx("h2", {
                                            className: "text-primary-300 text-lg font-bold",
                                            children: p.score ?? "-"
                                        })
                                    ]
                                }, p.id))
                        })
                    ]
                })
            ]
        });
    }
    return /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 px-6 py-4",
        children: "No measurement found."
    });
};
function q4() {
    const e = ZE(), { allSpans: t, localSpans: n } = T4(), [r, s] = L.useState(!e.experiments["sentry:focus-local-events"]), i = t - n, a = [
        Tn("queries", "Queries"),
        Tn("webvitals", "Web Vitals"),
        Tn("resources", "Resources"),
        Tn("profiles", "Profiles"),
        Tn("envelopes", "Envelopes"),
        Tn("sdks", "SDKs")
    ];
    return /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            !r && i > 0 && /* @__PURE__ */ m.jsx(qh, {
                itemCount: i,
                onClick: ()=>{
                    s(!0);
                }
            }),
            /* @__PURE__ */ m.jsx(HE, {
                tabs: a,
                nested: !0
            }),
            /* @__PURE__ */ m.jsxs("div", {
                className: "flex min-h-0 flex-1 flex-col overflow-y-auto overflow-x-hidden",
                children: [
                    /* @__PURE__ */ m.jsxs(Rs, {
                        children: [
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "queries/:type",
                                element: /* @__PURE__ */ m.jsx(v4, {
                                    showAll: r
                                })
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "resources",
                                element: /* @__PURE__ */ m.jsx(w4, {
                                    showAll: r
                                })
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "webvitals",
                                element: /* @__PURE__ */ m.jsx(Y4, {})
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "webvitals/:page",
                                element: /* @__PURE__ */ m.jsx(J4, {})
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "envelopes/*",
                                element: /* @__PURE__ */ m.jsx(R4, {
                                    showAll: r
                                })
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "sdks/*",
                                element: /* @__PURE__ */ m.jsx(F4, {})
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "queries",
                                element: /* @__PURE__ */ m.jsx(y4, {
                                    showAll: r
                                })
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "*",
                                element: /* @__PURE__ */ m.jsx(QN, {
                                    to: "/insights/queries",
                                    replace: !0
                                })
                            }),
                            /* @__PURE__ */ m.jsx(ze, {
                                path: "profiles",
                                element: /* @__PURE__ */ m.jsx(g4, {})
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsx($N, {})
                ]
            })
        ]
    });
}
function Z4() {
    return /* @__PURE__ */ m.jsx(ed, {
        children: /* @__PURE__ */ m.jsx(Rs, {
            children: /* @__PURE__ */ m.jsx(ze, {
                path: "/*",
                element: /* @__PURE__ */ m.jsx(q4, {})
            })
        })
    });
}
const ce = Le;
let cT = 0;
function zO() {
    return cT > 0;
}
function Q4() {
    cT++, setTimeout(()=>{
        cT--;
    });
}
function Za(e, t = {}) {
    function n(s) {
        return typeof s == "function";
    }
    if (!n(e)) return e;
    try {
        const s = e.__sentry_wrapped__;
        if (s) return typeof s == "function" ? s : e;
        if (Gh(e)) return e;
    } catch  {
        return e;
    }
    const r = function(...s) {
        try {
            const i = s.map((a)=>Za(a, t));
            return e.apply(this, i);
        } catch (i) {
            throw Q4(), Hh((a)=>{
                a.addEventProcessor((o)=>(t.mechanism && (Jp(o, void 0), Ka(o, t.mechanism)), o.extra = {
                        ...o.extra,
                        arguments: s
                    }, o)), qI(i);
            }), i;
        }
    };
    try {
        for(const s in e)Object.prototype.hasOwnProperty.call(e, s) && (r[s] = e[s]);
    } catch  {}
    _I(r, e), cr(e, "__sentry_wrapped__", r);
    try {
        Object.getOwnPropertyDescriptor(r, "name").configurable && Object.defineProperty(r, "name", {
            get () {
                return e.name;
            }
        });
    } catch  {}
    return r;
}
const Ge = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
function eA(e, t) {
    const n = tA(e, t), r = {
        type: rD(t),
        value: sD(t)
    };
    return n.length && (r.stacktrace = {
        frames: n
    }), r.type === void 0 && r.value === "" && (r.value = "Unrecoverable error caught"), r;
}
function $4(e, t, n, r) {
    const s = ye(), i = s && s.getOptions().normalizeDepth, a = cD(t), o = {
        __serialized__: YI(t, i)
    };
    if (a) return {
        exception: {
            values: [
                eA(e, a)
            ]
        },
        extra: o
    };
    const l = {
        exception: {
            values: [
                {
                    type: WE(t) ? t.constructor.name : r ? "UnhandledRejection" : "Error",
                    value: oD(t, {
                        isUnhandledRejection: r
                    })
                }
            ]
        },
        extra: o
    };
    if (n) {
        const c = tA(e, n);
        c.length && (l.exception.values[0].stacktrace = {
            frames: c
        });
    }
    return l;
}
function Tf(e, t) {
    return {
        exception: {
            values: [
                eA(e, t)
            ]
        }
    };
}
function tA(e, t) {
    const n = t.stacktrace || t.stack || "", r = tD(t), s = nD(t);
    try {
        return e(n, r, s);
    } catch  {}
    return [];
}
const eD = /Minified React error #\d+;/i;
function tD(e) {
    return e && eD.test(e.message) ? 1 : 0;
}
function nD(e) {
    return typeof e.framesToPop == "number" ? e.framesToPop : 0;
}
function JO(e) {
    return typeof WebAssembly < "u" && typeof WebAssembly.Exception < "u" ? e instanceof WebAssembly.Exception : !1;
}
function rD(e) {
    const t = e && e.name;
    return !t && JO(e) ? e.message && Array.isArray(e.message) && e.message.length == 2 ? e.message[0] : "WebAssembly.Exception" : t;
}
function sD(e) {
    const t = e && e.message;
    return t ? t.error && typeof t.error.message == "string" ? t.error.message : JO(e) && Array.isArray(e.message) && e.message.length == 2 ? e.message[1] : t : "No error message";
}
function iD(e, t, n, r) {
    const s = n && n.syntheticException || void 0, i = nA(e, t, s, r);
    return Ka(i), i.level = "error", n && n.event_id && (i.event_id = n.event_id), fs(i);
}
function aD(e, t, n = "info", r, s) {
    const i = r && r.syntheticException || void 0, a = uT(e, t, i, s);
    return a.level = n, r && r.event_id && (a.event_id = r.event_id), fs(a);
}
function nA(e, t, n, r, s) {
    let i;
    if (AI(t) && t.error) return Tf(e, t.error);
    if (mS(t) || D5(t)) {
        const a = t;
        if ("stack" in t) i = Tf(e, t);
        else {
            const o = a.name || (mS(a) ? "DOMError" : "DOMException"), l = a.message ? `${o}: ${a.message}` : o;
            i = uT(e, l, n, r), Jp(i, l);
        }
        return "code" in a && (i.tags = {
            ...i.tags,
            "DOMException.code": `${a.code}`
        }), i;
    }
    return Uh(t) ? Tf(e, t) : Xa(t) || WE(t) ? (i = $4(e, t, n, s), Ka(i, {
        synthetic: !0
    }), i) : (i = uT(e, t, n, r), Jp(i, `${t}`), Ka(i, {
        synthetic: !0
    }), i);
}
function uT(e, t, n, r) {
    const s = {};
    if (r && n) {
        const i = tA(e, n);
        i.length && (s.exception = {
            values: [
                {
                    value: t,
                    stacktrace: {
                        frames: i
                    }
                }
            ]
        }), Ka(s, {
            synthetic: !0
        });
    }
    if (Fh(t)) {
        const { __sentry_template_string__: i, __sentry_template_values__: a } = t;
        return s.logentry = {
            message: i,
            params: a
        }, s;
    }
    return s.message = t, s;
}
function oD(e, { isUnhandledRejection: t }) {
    const n = H5(e), r = t ? "promise rejection" : "exception";
    return AI(e) ? `Event \`ErrorEvent\` captured as ${r} with message \`${e.message}\`` : WE(e) ? `Event \`${lD(e)}\` (type=${e.type}) captured as ${r}` : `Object captured as ${r} with keys: ${n}`;
}
function lD(e) {
    try {
        const t = Object.getPrototypeOf(e);
        return t ? t.constructor.name : void 0;
    } catch  {}
}
function cD(e) {
    for(const t in e)if (Object.prototype.hasOwnProperty.call(e, t)) {
        const n = e[t];
        if (n instanceof Error) return n;
    }
}
function uD(e, { metadata: t, tunnel: n, dsn: r }) {
    const s = {
        event_id: e.event_id,
        sent_at: /* @__PURE__ */ new Date().toISOString(),
        ...t && t.sdk && {
            sdk: {
                name: t.sdk.name,
                version: t.sdk.version
            }
        },
        ...!!n && !!r && {
            dsn: Vl(r)
        }
    }, i = ED(e);
    return ea(s, [
        i
    ]);
}
function ED(e) {
    return [
        {
            type: "user_report"
        },
        e
    ];
}
class dD extends yb {
    /**
   * Creates a new Browser SDK instance.
   *
   * @param options Configuration options for this SDK.
   */ constructor(t){
        const n = {
            // We default this to true, as it is the safer scenario
            parentSpanIsAlwaysRootSpan: !0,
            ...t
        }, r = ce.SENTRY_SDK_SOURCE || bP();
        oO(n, "browser", [
            "browser"
        ], r), super(n), n.sendClientReports && ce.document && ce.document.addEventListener("visibilitychange", ()=>{
            ce.document.visibilityState === "hidden" && this._flushOutcomes();
        });
    }
    /**
   * @inheritDoc
   */ eventFromException(t, n) {
        return iD(this._options.stackParser, t, n, this._options.attachStacktrace);
    }
    /**
   * @inheritDoc
   */ eventFromMessage(t, n = "info", r) {
        return aD(this._options.stackParser, t, n, r, this._options.attachStacktrace);
    }
    /**
   * Sends user feedback to Sentry.
   *
   * @deprecated Use `captureFeedback` instead.
   */ captureUserFeedback(t) {
        if (!this._isEnabled()) {
            Ge && q.warn("SDK not enabled, will not capture user feedback.");
            return;
        }
        const n = uD(t, {
            metadata: this.getSdkMetadata(),
            dsn: this.getDsn(),
            tunnel: this.getOptions().tunnel
        });
        this.sendEnvelope(n);
    }
    /**
   * @inheritDoc
   */ _prepareEvent(t, n, r) {
        return t.platform = t.platform || "javascript", super._prepareEvent(t, n, r);
    }
}
const rA = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__, fD = (e, t)=>e > t[1] ? "poor" : e > t[0] ? "needs-improvement" : "good", po = (e, t, n, r)=>{
    let s, i;
    return (a)=>{
        t.value >= 0 && (a || r) && (i = t.value - (s || 0), (i || s === void 0) && (s = t.value, t.delta = i, t.rating = fD(t.value, n), e(t)));
    };
}, fe = Le, pD = ()=>`v4-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`, Jl = (e = !0)=>{
    const t = fe.performance && fe.performance.getEntriesByType && fe.performance.getEntriesByType("navigation")[0];
    if (// sentry-specific change:
    // We don't want to check for responseStart for our own use of `getNavigationEntry`
    !e || t && t.responseStart > 0 && t.responseStart < performance.now()) return t;
}, ql = ()=>{
    const e = Jl();
    return e && e.activationStart || 0;
}, To = (e, t)=>{
    const n = Jl();
    let r = "navigate";
    return n && (fe.document && fe.document.prerendering || ql() > 0 ? r = "prerender" : fe.document && fe.document.wasDiscarded ? r = "restore" : n.type && (r = n.type.replace(/_/g, "-"))), {
        name: e,
        value: typeof t > "u" ? -1 : t,
        rating: "good",
        // If needed, will be updated when reported. `const` to keep the type from widening to `string`.
        delta: 0,
        entries: [],
        id: pD(),
        navigationType: r
    };
}, ta = (e, t, n)=>{
    try {
        if (PerformanceObserver.supportedEntryTypes.includes(e)) {
            const r = new PerformanceObserver((s)=>{
                Promise.resolve().then(()=>{
                    t(s.getEntries());
                });
            });
            return r.observe(Object.assign({
                type: e,
                buffered: !0
            }, n || {})), r;
        }
    } catch  {}
}, ho = (e)=>{
    const t = (n)=>{
        (n.type === "pagehide" || fe.document && fe.document.visibilityState === "hidden") && e(n);
    };
    fe.document && (addEventListener("visibilitychange", t, !0), addEventListener("pagehide", t, !0));
}, nd = (e)=>{
    let t = !1;
    return ()=>{
        t || (e(), t = !0);
    };
};
let Zo = -1;
const TD = ()=>fe.document.visibilityState === "hidden" && !fe.document.prerendering ? 0 : 1 / 0, iE = (e)=>{
    fe.document.visibilityState === "hidden" && Zo > -1 && (Zo = e.type === "visibilitychange" ? e.timeStamp : 0, AD());
}, hD = ()=>{
    addEventListener("visibilitychange", iE, !0), addEventListener("prerenderingchange", iE, !0);
}, AD = ()=>{
    removeEventListener("visibilitychange", iE, !0), removeEventListener("prerenderingchange", iE, !0);
}, rd = ()=>(fe.document && Zo < 0 && (Zo = TD(), hD()), {
        get firstHiddenTime () {
            return Zo;
        }
    }), Zl = (e)=>{
    fe.document && fe.document.prerendering ? addEventListener("prerenderingchange", ()=>e(), !0) : e();
}, SD = [
    1800,
    3e3
], RD = (e, t = {})=>{
    Zl(()=>{
        const n = rd(), r = To("FCP");
        let s;
        const a = ta("paint", (o)=>{
            o.forEach((l)=>{
                l.name === "first-contentful-paint" && (a.disconnect(), l.startTime < n.firstHiddenTime && (r.value = Math.max(l.startTime - ql(), 0), r.entries.push(l), s(!0)));
            });
        });
        a && (s = po(e, r, SD, t.reportAllChanges));
    });
}, mD = [
    0.1,
    0.25
], _D = (e, t = {})=>{
    RD(nd(()=>{
        const n = To("CLS", 0);
        let r, s = 0, i = [];
        const a = (l)=>{
            l.forEach((c)=>{
                if (!c.hadRecentInput) {
                    const u = i[0], E = i[i.length - 1];
                    s && u && E && c.startTime - E.startTime < 1e3 && c.startTime - u.startTime < 5e3 ? (s += c.value, i.push(c)) : (s = c.value, i = [
                        c
                    ]);
                }
            }), s > n.value && (n.value = s, n.entries = i, r());
        }, o = ta("layout-shift", a);
        o && (r = po(e, n, mD, t.reportAllChanges), ho(()=>{
            a(o.takeRecords()), r(!0);
        }), setTimeout(r, 0));
    }));
}, ND = [
    100,
    300
], ID = (e, t = {})=>{
    Zl(()=>{
        const n = rd(), r = To("FID");
        let s;
        const i = (l)=>{
            l.startTime < n.firstHiddenTime && (r.value = l.processingStart - l.startTime, r.entries.push(l), s(!0));
        }, a = (l)=>{
            l.forEach(i);
        }, o = ta("first-input", a);
        s = po(e, r, ND, t.reportAllChanges), o && ho(nd(()=>{
            a(o.takeRecords()), o.disconnect();
        }));
    });
};
let qO = 0, hf = 1 / 0, Fc = 0;
const OD = (e)=>{
    e.forEach((t)=>{
        t.interactionId && (hf = Math.min(hf, t.interactionId), Fc = Math.max(Fc, t.interactionId), qO = Fc ? (Fc - hf) / 7 + 1 : 0);
    });
};
let ET;
const CD = ()=>ET ? qO : performance.interactionCount || 0, gD = ()=>{
    "interactionCount" in performance || ET || (ET = ta("event", OD, {
        type: "event",
        buffered: !0,
        durationThreshold: 0
    }));
}, Zr = [], Af = /* @__PURE__ */ new Map(), LD = 40;
let yD = 0;
const vD = ()=>CD() - yD, bD = ()=>{
    const e = Math.min(Zr.length - 1, Math.floor(vD() / 50));
    return Zr[e];
}, Sf = 10, PD = [], MD = (e)=>{
    if (PD.forEach((r)=>r(e)), !(e.interactionId || e.entryType === "first-input")) return;
    const t = Zr[Zr.length - 1], n = Af.get(e.interactionId);
    if (n || Zr.length < Sf || t && e.duration > t.latency) {
        if (n) e.duration > n.latency ? (n.entries = [
            e
        ], n.latency = e.duration) : e.duration === n.latency && e.startTime === (n.entries[0] && n.entries[0].startTime) && n.entries.push(e);
        else {
            const r = {
                id: e.interactionId,
                latency: e.duration,
                entries: [
                    e
                ]
            };
            Af.set(r.id, r), Zr.push(r);
        }
        Zr.sort((r, s)=>s.latency - r.latency), Zr.length > Sf && Zr.splice(Sf).forEach((r)=>Af.delete(r.id));
    }
}, ZO = (e)=>{
    const t = fe.requestIdleCallback || fe.setTimeout;
    let n = -1;
    return e = nd(e), fe.document && fe.document.visibilityState === "hidden" ? e() : (n = t(e), ho(e)), n;
}, DD = [
    200,
    500
], wD = (e, t = {})=>{
    "PerformanceEventTiming" in fe && "interactionId" in PerformanceEventTiming.prototype && Zl(()=>{
        gD();
        const n = To("INP");
        let r;
        const s = (a)=>{
            ZO(()=>{
                a.forEach(MD);
                const o = bD();
                o && o.latency !== n.value && (n.value = o.latency, n.entries = o.entries, r());
            });
        }, i = ta("event", s, {
            // Event Timing entries have their durations rounded to the nearest 8ms,
            // so a duration of 40ms would be any event that spans 2.5 or more frames
            // at 60Hz. This threshold is chosen to strike a balance between usefulness
            // and performance. Running this callback for any interaction that spans
            // just one or two frames is likely not worth the insight that could be
            // gained.
            durationThreshold: t.durationThreshold != null ? t.durationThreshold : LD
        });
        r = po(e, n, DD, t.reportAllChanges), i && (i.observe({
            type: "first-input",
            buffered: !0
        }), ho(()=>{
            s(i.takeRecords()), r(!0);
        }));
    });
}, xD = [
    2500,
    4e3
], SR = {}, UD = (e, t = {})=>{
    Zl(()=>{
        const n = rd(), r = To("LCP");
        let s;
        const i = (o)=>{
            t.reportAllChanges || (o = o.slice(-1)), o.forEach((l)=>{
                l.startTime < n.firstHiddenTime && (r.value = Math.max(l.startTime - ql(), 0), r.entries = [
                    l
                ], s());
            });
        }, a = ta("largest-contentful-paint", i);
        if (a) {
            s = po(e, r, xD, t.reportAllChanges);
            const o = nd(()=>{
                SR[r.id] || (i(a.takeRecords()), a.disconnect(), SR[r.id] = !0, s(!0));
            });
            [
                "keydown",
                "click"
            ].forEach((l)=>{
                fe.document && addEventListener(l, ()=>ZO(o), {
                    once: !0,
                    capture: !0
                });
            }), ho(o);
        }
    });
}, FD = [
    800,
    1800
], dT = (e)=>{
    fe.document && fe.document.prerendering ? Zl(()=>dT(e)) : fe.document && fe.document.readyState !== "complete" ? addEventListener("load", ()=>dT(e), !0) : setTimeout(e, 0);
}, BD = (e, t = {})=>{
    const n = To("TTFB"), r = po(e, n, FD, t.reportAllChanges);
    dT(()=>{
        const s = Jl();
        s && (n.value = Math.max(s.responseStart - ql(), 0), n.entries = [
            s
        ], r(!0));
    });
}, Qo = {}, aE = {};
let QO, $O, eC, tC, nC;
function sA(e, t = !1) {
    return Ql("cls", e, kD, QO, t);
}
function rC(e, t = !1) {
    return Ql("lcp", e, YD, eC, t);
}
function sC(e) {
    return Ql("fid", e, HD, $O);
}
function GD(e) {
    return Ql("ttfb", e, VD, tC);
}
function iC(e) {
    return Ql("inp", e, WD, nC);
}
function Qa(e, t) {
    return aC(e, t), aE[e] || (jD(e), aE[e] = !0), oC(e, t);
}
function Ao(e, t) {
    const n = Qo[e];
    if (!(!n || !n.length)) for (const r of n)try {
        r(t);
    } catch (s) {
        rA && q.error(`Error while triggering instrumentation handler.
Type: ${e}
Name: ${us(r)}
Error:`, s);
    }
}
function kD() {
    return _D((e)=>{
        Ao("cls", {
            metric: e
        }), QO = e;
    }, // We want the callback to be called whenever the CLS value updates.
    // By default, the callback is only called when the tab goes to the background.
    {
        reportAllChanges: !0
    });
}
function HD() {
    return ID((e)=>{
        Ao("fid", {
            metric: e
        }), $O = e;
    });
}
function YD() {
    return UD((e)=>{
        Ao("lcp", {
            metric: e
        }), eC = e;
    }, // We want the callback to be called whenever the LCP value updates.
    // By default, the callback is only called when the tab goes to the background.
    {
        reportAllChanges: !0
    });
}
function VD() {
    return BD((e)=>{
        Ao("ttfb", {
            metric: e
        }), tC = e;
    });
}
function WD() {
    return wD((e)=>{
        Ao("inp", {
            metric: e
        }), nC = e;
    });
}
function Ql(e, t, n, r, s = !1) {
    aC(e, t);
    let i;
    return aE[e] || (i = n(), aE[e] = !0), r && t({
        metric: r
    }), oC(e, t, s ? i : void 0);
}
function jD(e) {
    const t = {};
    e === "event" && (t.durationThreshold = 0), ta(e, (n)=>{
        Ao(e, {
            entries: n
        });
    }, t);
}
function aC(e, t) {
    Qo[e] = Qo[e] || [], Qo[e].push(t);
}
function oC(e, t, n) {
    return ()=>{
        n && n();
        const r = Qo[e];
        if (!r) return;
        const s = r.indexOf(t);
        s !== -1 && r.splice(s, 1);
    };
}
function XD(e) {
    return "duration" in e;
}
function Rf(e) {
    return typeof e == "number" && isFinite(e);
}
function ps(e, t, n, { ...r }) {
    const s = Me(e).start_timestamp;
    return s && s > t && typeof e.updateStartTime == "function" && e.updateStartTime(t), jI(e, ()=>{
        const i = Wl({
            startTime: t,
            ...r
        });
        return i && i.end(n), i;
    });
}
function lC(e) {
    const t = ye();
    if (!t) return;
    const { name: n, transaction: r, attributes: s, startTime: i } = e, { release: a, environment: o } = t.getOptions(), l = t.getIntegrationByName("Replay"), c = l && l.getReplayId(), u = qe(), E = u.getUser(), p = E !== void 0 ? E.email || E.id || E.ip_address : void 0;
    let A;
    try {
        A = u.getScopeData().contexts.profile.profile_id;
    } catch  {}
    const R = {
        release: a,
        environment: o,
        user: p || void 0,
        profile_id: A || void 0,
        replay_id: c || void 0,
        transaction: r,
        // Web vital score calculation relies on the user agent to account for different
        // browsers setting different thresholds for what is considered a good/meh/bad value.
        // For example: Chrome vs. Chrome Mobile
        "user_agent.original": fe.navigator && fe.navigator.userAgent,
        ...s
    };
    return Wl({
        name: n,
        attributes: R,
        startTime: i,
        experimental: {
            standalone: !0
        }
    });
}
function iA() {
    return fe && fe.addEventListener && fe.performance;
}
function Rt(e) {
    return e / 1e3;
}
function KD() {
    let e = 0, t, n;
    if (!JD()) return;
    let r = !1;
    function s() {
        r || (r = !0, n && zD(e, t, n), i());
    }
    const i = sA(({ metric: a })=>{
        const o = a.entries[a.entries.length - 1];
        o && (e = a.value, t = o);
    }, !0);
    ho(()=>{
        s();
    }), setTimeout(()=>{
        const a = ye();
        if (!a) return;
        const o = a.on("startNavigationSpan", ()=>{
            s(), o && o();
        }), l = wt(), c = l && Mt(l), u = c && Me(c);
        u && u.op === "pageload" && (n = c.spanContext().spanId);
    }, 0);
}
function zD(e, t, n) {
    rA && q.log(`Sending CLS span (${e})`);
    const r = Rt(($t || 0) + (t && t.startTime || 0)), s = qe().getScopeData().transactionName, i = t ? ds(t.sources[0] && t.sources[0].node) : "Layout shift", a = Pt({
        [Dt]: "auto.http.browser.cls",
        [si]: "ui.webvital.cls",
        [Yh]: t && t.duration || 0,
        // attach the pageload span id to the CLS span so that we can link them in the UI
        "sentry.pageload.span_id": n
    }), o = lC({
        name: i,
        transaction: s,
        attributes: a,
        startTime: r
    });
    o && (o.addEvent("cls", {
        [KE]: "",
        [zE]: e
    }), o.end(r));
}
function JD() {
    try {
        return PerformanceObserver.supportedEntryTypes.includes("layout-shift");
    } catch  {
        return !1;
    }
}
const qD = 2147483647;
let RR = 0, Jt = {}, gn, $o;
function ZD({ recordClsStandaloneSpans: e }) {
    const t = iA();
    if (t && $t) {
        t.mark && fe.performance.mark("sentry-tracing-init");
        const n = r6(), r = n6(), s = s6(), i = e ? KD() : t6();
        return ()=>{
            n(), r(), s(), i && i();
        };
    }
    return ()=>{};
}
function QD() {
    Qa("longtask", ({ entries: e })=>{
        const t = wt();
        if (!t) return;
        const { op: n, start_timestamp: r } = Me(t);
        for (const s of e){
            const i = Rt($t + s.startTime), a = Rt(s.duration);
            n === "navigation" && r && i < r || ps(t, i, i + a, {
                name: "Main UI thread blocked",
                op: "ui.long-task",
                attributes: {
                    [Dt]: "auto.ui.browser.metrics"
                }
            });
        }
    });
}
function $D() {
    new PerformanceObserver((t)=>{
        const n = wt();
        if (n) for (const r of t.getEntries()){
            if (!r.scripts[0]) continue;
            const s = Rt($t + r.startTime), { start_timestamp: i, op: a } = Me(n);
            if (a === "navigation" && i && s < i) continue;
            const o = Rt(r.duration), l = {
                [Dt]: "auto.ui.browser.metrics"
            }, c = r.scripts[0], { invoker: u, invokerType: E, sourceURL: p, sourceFunctionName: A, sourceCharPosition: R } = c;
            l["browser.script.invoker"] = u, l["browser.script.invoker_type"] = E, p && (l["code.filepath"] = p), A && (l["code.function"] = A), R !== -1 && (l["browser.script.source_char_position"] = R), ps(n, s, s + o, {
                name: "Main UI thread blocked",
                op: "ui.long-animation-frame",
                attributes: l
            });
        }
    }).observe({
        type: "long-animation-frame",
        buffered: !0
    });
}
function e6() {
    Qa("event", ({ entries: e })=>{
        const t = wt();
        if (t) {
            for (const n of e)if (n.name === "click") {
                const r = Rt($t + n.startTime), s = Rt(n.duration), i = {
                    name: ds(n.target),
                    op: `ui.interaction.${n.name}`,
                    startTime: r,
                    attributes: {
                        [Dt]: "auto.ui.browser.metrics"
                    }
                }, a = mI(n.target);
                a && (i.attributes["ui.component_name"] = a), ps(t, r, r + s, i);
            }
        }
    });
}
function t6() {
    return sA(({ metric: e })=>{
        const t = e.entries[e.entries.length - 1];
        t && (Jt.cls = {
            value: e.value,
            unit: ""
        }, $o = t);
    }, !0);
}
function n6() {
    return rC(({ metric: e })=>{
        const t = e.entries[e.entries.length - 1];
        t && (Jt.lcp = {
            value: e.value,
            unit: "millisecond"
        }, gn = t);
    }, !0);
}
function r6() {
    return sC(({ metric: e })=>{
        const t = e.entries[e.entries.length - 1];
        if (!t) return;
        const n = Rt($t), r = Rt(t.startTime);
        Jt.fid = {
            value: e.value,
            unit: "millisecond"
        }, Jt["mark.fid"] = {
            value: n + r,
            unit: "second"
        };
    });
}
function s6() {
    return GD(({ metric: e })=>{
        e.entries[e.entries.length - 1] && (Jt.ttfb = {
            value: e.value,
            unit: "millisecond"
        });
    });
}
function i6(e, t) {
    const n = iA();
    if (!n || !n.getEntries || !$t) return;
    const r = Rt($t), s = n.getEntries(), { op: i, start_timestamp: a } = Me(e);
    if (s.slice(RR).forEach((o)=>{
        const l = Rt(o.startTime), c = Rt(// Inexplicably, Chrome sometimes emits a negative duration. We need to work around this.
        // There is a SO post attempting to explain this, but it leaves one with open questions: https://stackoverflow.com/questions/23191918/peformance-getentries-and-negative-duration-display
        // The way we clamp the value is probably not accurate, since we have observed this happen for things that may take a while to load, like for example the replay worker.
        // TODO: Investigate why this happens and how to properly mitigate. For now, this is a workaround to prevent transactions being dropped due to negative duration spans.
        Math.max(0, o.duration));
        if (!(i === "navigation" && a && r + l < a)) switch(o.entryType){
            case "navigation":
                {
                    o6(e, o, r);
                    break;
                }
            case "mark":
            case "paint":
            case "measure":
                {
                    a6(e, o, l, c, r);
                    const u = rd(), E = o.startTime < u.firstHiddenTime;
                    o.name === "first-paint" && E && (Jt.fp = {
                        value: o.startTime,
                        unit: "millisecond"
                    }), o.name === "first-contentful-paint" && E && (Jt.fcp = {
                        value: o.startTime,
                        unit: "millisecond"
                    });
                    break;
                }
            case "resource":
                {
                    u6(e, o, o.name, l, c, r);
                    break;
                }
        }
    }), RR = Math.max(s.length - 1, 0), E6(e), i === "pageload") {
        f6(Jt);
        const o = Jt["mark.fid"];
        o && Jt.fid && (ps(e, o.value, o.value + Rt(Jt.fid.value), {
            name: "first input delay",
            op: "ui.action",
            attributes: {
                [Dt]: "auto.ui.browser.metrics"
            }
        }), delete Jt["mark.fid"]), (!("fcp" in Jt) || !t.recordClsOnPageloadSpan) && delete Jt.cls, Object.entries(Jt).forEach(([l, c])=>{
            X3(l, c.value, c.unit);
        }), e.setAttribute("performance.timeOrigin", r), e.setAttribute("performance.activationStart", ql()), d6(e);
    }
    gn = void 0, $o = void 0, Jt = {};
}
function a6(e, t, n, r, s) {
    const i = Jl(!1), a = Rt(i ? i.requestStart : 0), o = s + Math.max(n, a), l = s + n, c = l + r, u = {
        [Dt]: "auto.resource.browser.metrics"
    };
    return o !== l && (u["sentry.browser.measure_happened_before_request"] = !0, u["sentry.browser.measure_start_time"] = o), ps(e, o, c, {
        name: t.name,
        op: t.entryType,
        attributes: u
    }), o;
}
function o6(e, t, n) {
    [
        "unloadEvent",
        "redirect",
        "domContentLoadedEvent",
        "loadEvent",
        "connect"
    ].forEach((r)=>{
        Bc(e, t, r, n);
    }), Bc(e, t, "secureConnection", n, "TLS/SSL"), Bc(e, t, "fetch", n, "cache"), Bc(e, t, "domainLookup", n, "DNS"), c6(e, t, n);
}
function Bc(e, t, n, r, s = n) {
    const i = l6(n), a = t[i], o = t[`${n}Start`];
    !o || !a || ps(e, r + Rt(o), r + Rt(a), {
        op: `browser.${s}`,
        name: t.name,
        attributes: {
            [Dt]: "auto.ui.browser.metrics"
        }
    });
}
function l6(e) {
    return e === "secureConnection" ? "connectEnd" : e === "fetch" ? "domainLookupStart" : `${e}End`;
}
function c6(e, t, n) {
    const r = n + Rt(t.requestStart), s = n + Rt(t.responseEnd), i = n + Rt(t.responseStart);
    t.responseEnd && (ps(e, r, s, {
        op: "browser.request",
        name: t.name,
        attributes: {
            [Dt]: "auto.ui.browser.metrics"
        }
    }), ps(e, i, s, {
        op: "browser.response",
        name: t.name,
        attributes: {
            [Dt]: "auto.ui.browser.metrics"
        }
    }));
}
function u6(e, t, n, r, s, i) {
    if (t.initiatorType === "xmlhttprequest" || t.initiatorType === "fetch") return;
    const a = Ui(n), o = {
        [Dt]: "auto.resource.browser.metrics"
    };
    mf(o, t, "transferSize", "http.response_transfer_size"), mf(o, t, "encodedBodySize", "http.response_content_length"), mf(o, t, "decodedBodySize", "http.decoded_response_content_length");
    const l = t.deliveryType;
    l != null && (o["http.response_delivery_type"] = l);
    const c = t.renderBlockingStatus;
    c && (o["resource.render_blocking_status"] = c), a.protocol && (o["url.scheme"] = a.protocol.split(":").pop()), a.host && (o["server.address"] = a.host), o["url.same_origin"] = n.includes(fe.location.origin);
    const u = i + r, E = u + s;
    ps(e, u, E, {
        name: n.replace(fe.location.origin, ""),
        op: t.initiatorType ? `resource.${t.initiatorType}` : "resource.other",
        attributes: o
    });
}
function E6(e) {
    const t = fe.navigator;
    if (!t) return;
    const n = t.connection;
    n && (n.effectiveType && e.setAttribute("effectiveConnectionType", n.effectiveType), n.type && e.setAttribute("connectionType", n.type), Rf(n.rtt) && (Jt["connection.rtt"] = {
        value: n.rtt,
        unit: "millisecond"
    })), Rf(t.deviceMemory) && e.setAttribute("deviceMemory", `${t.deviceMemory} GB`), Rf(t.hardwareConcurrency) && e.setAttribute("hardwareConcurrency", String(t.hardwareConcurrency));
}
function d6(e) {
    gn && (gn.element && e.setAttribute("lcp.element", ds(gn.element)), gn.id && e.setAttribute("lcp.id", gn.id), gn.url && e.setAttribute("lcp.url", gn.url.trim().slice(0, 200)), gn.loadTime != null && e.setAttribute("lcp.loadTime", gn.loadTime), gn.renderTime != null && e.setAttribute("lcp.renderTime", gn.renderTime), e.setAttribute("lcp.size", gn.size)), $o && $o.sources && $o.sources.forEach((t, n)=>e.setAttribute(`cls.source.${n + 1}`, ds(t.node)));
}
function mf(e, t, n, r) {
    const s = t[n];
    s != null && s < qD && (e[r] = s);
}
function f6(e) {
    const t = Jl(!1);
    if (!t) return;
    const { responseStart: n, requestStart: r } = t;
    r <= n && (e["ttfb.requestTime"] = {
        value: n - r,
        unit: "millisecond"
    });
}
const p6 = 1e3;
let mR, fT, pT;
function cC(e) {
    const t = "dom";
    pi(t, e), Ti(t, T6);
}
function T6() {
    if (!fe.document) return;
    const e = ar.bind(null, "dom"), t = _R(e, !0);
    fe.document.addEventListener("click", t, !1), fe.document.addEventListener("keypress", t, !1), [
        "EventTarget",
        "Node"
    ].forEach((n)=>{
        const s = fe[n], i = s && s.prototype;
        !i || !i.hasOwnProperty || !i.hasOwnProperty("addEventListener") || (vn(i, "addEventListener", function(a) {
            return function(o, l, c) {
                if (o === "click" || o == "keypress") try {
                    const u = this.__sentry_instrumentation_handlers__ = this.__sentry_instrumentation_handlers__ || {}, E = u[o] = u[o] || {
                        refCount: 0
                    };
                    if (!E.handler) {
                        const p = _R(e);
                        E.handler = p, a.call(this, o, p, c);
                    }
                    E.refCount++;
                } catch  {}
                return a.call(this, o, l, c);
            };
        }), vn(i, "removeEventListener", function(a) {
            return function(o, l, c) {
                if (o === "click" || o == "keypress") try {
                    const u = this.__sentry_instrumentation_handlers__ || {}, E = u[o];
                    E && (E.refCount--, E.refCount <= 0 && (a.call(this, o, E.handler, c), E.handler = void 0, delete u[o]), Object.keys(u).length === 0 && delete this.__sentry_instrumentation_handlers__);
                } catch  {}
                return a.call(this, o, l, c);
            };
        }));
    });
}
function h6(e) {
    if (e.type !== fT) return !1;
    try {
        if (!e.target || e.target._sentryId !== pT) return !1;
    } catch  {}
    return !0;
}
function A6(e, t) {
    return e !== "keypress" ? !1 : !t || !t.tagName ? !0 : !(t.tagName === "INPUT" || t.tagName === "TEXTAREA" || t.isContentEditable);
}
function _R(e, t = !1) {
    return (n)=>{
        if (!n || n._sentryCaptured) return;
        const r = S6(n);
        if (A6(n.type, r)) return;
        cr(n, "_sentryCaptured", !0), r && !r._sentryId && cr(r, "_sentryId", Sn());
        const s = n.type === "keypress" ? "input" : n.type;
        h6(n) || (e({
            event: n,
            name: s,
            global: t
        }), fT = n.type, pT = r ? r._sentryId : void 0), clearTimeout(mR), mR = fe.setTimeout(()=>{
            pT = void 0, fT = void 0;
        }, p6);
    };
}
function S6(e) {
    try {
        return e.target;
    } catch  {
        return null;
    }
}
let Gc;
function sd(e) {
    const t = "history";
    pi(t, e), Ti(t, R6);
}
function R6() {
    if (!DP()) return;
    const e = fe.onpopstate;
    fe.onpopstate = function(...n) {
        const r = fe.location.href, s = Gc;
        if (Gc = r, ar("history", {
            from: s,
            to: r
        }), e) try {
            return e.apply(this, n);
        } catch  {}
    };
    function t(n) {
        return function(...r) {
            const s = r.length > 2 ? r[2] : void 0;
            if (s) {
                const i = Gc, a = String(s);
                Gc = a, ar("history", {
                    from: i,
                    to: a
                });
            }
            return n.apply(this, r);
        };
    }
    vn(fe.history, "pushState", t), vn(fe.history, "replaceState", t);
}
const Tu = {};
function aA(e) {
    const t = Tu[e];
    if (t) return t;
    let n = fe[e];
    if (iT(n)) return Tu[e] = n.bind(fe);
    const r = fe.document;
    if (r && typeof r.createElement == "function") try {
        const s = r.createElement("iframe");
        s.hidden = !0, r.head.appendChild(s);
        const i = s.contentWindow;
        i && i[e] && (n = i[e]), r.head.removeChild(s);
    } catch (s) {
        rA && q.warn(`Could not create sandbox iframe for ${e} check, bailing to window.${e}: `, s);
    }
    return n && (Tu[e] = n.bind(fe));
}
function NR(e) {
    Tu[e] = void 0;
}
function $a(...e) {
    return aA("setTimeout")(...e);
}
const Li = "__sentry_xhr_v3__";
function uC(e) {
    const t = "xhr";
    pi(t, e), Ti(t, m6);
}
function m6() {
    if (!fe.XMLHttpRequest) return;
    const e = XMLHttpRequest.prototype;
    e.open = new Proxy(e.open, {
        apply (t, n, r) {
            const s = new Error(), i = kt() * 1e3, a = rs(r[0]) ? r[0].toUpperCase() : void 0, o = _6(r[1]);
            if (!a || !o) return t.apply(n, r);
            n[Li] = {
                method: a,
                url: o,
                request_headers: {}
            }, a === "POST" && o.match(/sentry_key/) && (n.__sentry_own_request__ = !0);
            const l = ()=>{
                const c = n[Li];
                if (c && n.readyState === 4) {
                    try {
                        c.status_code = n.status;
                    } catch  {}
                    const u = {
                        endTimestamp: kt() * 1e3,
                        startTimestamp: i,
                        xhr: n,
                        virtualError: s
                    };
                    ar("xhr", u);
                }
            };
            return "onreadystatechange" in n && typeof n.onreadystatechange == "function" ? n.onreadystatechange = new Proxy(n.onreadystatechange, {
                apply (c, u, E) {
                    return l(), c.apply(u, E);
                }
            }) : n.addEventListener("readystatechange", l), n.setRequestHeader = new Proxy(n.setRequestHeader, {
                apply (c, u, E) {
                    const [p, A] = E, R = u[Li];
                    return R && rs(p) && rs(A) && (R.request_headers[p.toLowerCase()] = A), c.apply(u, E);
                }
            }), t.apply(n, r);
        }
    }), e.send = new Proxy(e.send, {
        apply (t, n, r) {
            const s = n[Li];
            if (!s) return t.apply(n, r);
            r[0] !== void 0 && (s.body = r[0]);
            const i = {
                startTimestamp: kt() * 1e3,
                xhr: n
            };
            return ar("xhr", i), t.apply(n, r);
        }
    });
}
function _6(e) {
    if (rs(e)) return e;
    try {
        return e.toString();
    } catch  {}
}
const _f = [], hu = /* @__PURE__ */ new Map();
function N6() {
    if (iA() && $t) {
        const t = I6();
        return ()=>{
            t();
        };
    }
    return ()=>{};
}
const IR = {
    click: "click",
    pointerdown: "click",
    pointerup: "click",
    mousedown: "click",
    mouseup: "click",
    touchstart: "click",
    touchend: "click",
    mouseover: "hover",
    mouseout: "hover",
    mouseenter: "hover",
    mouseleave: "hover",
    pointerover: "hover",
    pointerout: "hover",
    pointerenter: "hover",
    pointerleave: "hover",
    dragstart: "drag",
    dragend: "drag",
    drag: "drag",
    dragenter: "drag",
    dragleave: "drag",
    dragover: "drag",
    drop: "drag",
    keydown: "press",
    keyup: "press",
    keypress: "press",
    input: "press"
};
function I6() {
    return iC(({ metric: e })=>{
        if (e.value == null) return;
        const t = e.entries.find((R)=>R.duration === e.value && IR[R.name]);
        if (!t) return;
        const { interactionId: n } = t, r = IR[t.name], s = Rt($t + t.startTime), i = Rt(e.value), a = wt(), o = a ? Mt(a) : void 0, c = (n != null ? hu.get(n) : void 0) || o, u = c ? Me(c).description : qe().getScopeData().transactionName, E = ds(t.target), p = Pt({
            [Dt]: "auto.http.browser.inp",
            [si]: `ui.interaction.${r}`,
            [Yh]: t.duration
        }), A = lC({
            name: E,
            transaction: u,
            attributes: p,
            startTime: s
        });
        A && (A.addEvent("inp", {
            [KE]: "millisecond",
            [zE]: e.value
        }), A.end(s + i));
    });
}
function O6(e) {
    const t = ({ entries: n })=>{
        const r = wt(), s = r && Mt(r);
        n.forEach((i)=>{
            if (!XD(i) || !s) return;
            const a = i.interactionId;
            if (a != null && !hu.has(a)) {
                if (_f.length > 10) {
                    const o = _f.shift();
                    hu.delete(o);
                }
                _f.push(a), hu.set(a, s);
            }
        });
    };
    Qa("event", t), Qa("first-input", t);
}
function oA(e, t = aA("fetch")) {
    let n = 0, r = 0;
    function s(i) {
        const a = i.body.length;
        n += a, r++;
        const o = {
            body: i.body,
            method: "POST",
            referrerPolicy: "origin",
            headers: e.headers,
            // Outgoing requests are usually cancelled when navigating to a different page, causing a "TypeError: Failed to
            // fetch" error and sending a "network_error" client-outcome - in Chrome, the request status shows "(cancelled)".
            // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're
            // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).
            // Gotchas:
            // - `keepalive` isn't supported by Firefox
            // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):
            //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.
            //   We will therefore only activate the flag when we're below that limit.
            // There is also a limit of requests that can be open at the same time, so we also limit this to 15
            // See https://github.com/getsentry/sentry-javascript/pull/7553 for details
            keepalive: n <= 6e4 && r < 15,
            ...e.fetchOptions
        };
        if (!t) return NR("fetch"), $u("No fetch implementation available");
        try {
            return t(e.url, o).then((l)=>(n -= a, r--, {
                    statusCode: l.status,
                    headers: {
                        "x-sentry-rate-limits": l.headers.get("X-Sentry-Rate-Limits"),
                        "retry-after": l.headers.get("Retry-After")
                    }
                }));
        } catch (l) {
            return NR("fetch"), n -= a, r--, $u(l);
        }
    }
    return Fb(e, s);
}
const C6 = 30, g6 = 50;
function TT(e, t, n, r) {
    const s = {
        filename: e,
        function: t === "<anonymous>" ? Yi : t,
        in_app: !0
    };
    return n !== void 0 && (s.lineno = n), r !== void 0 && (s.colno = r), s;
}
const L6 = /^\s*at (\S+?)(?::(\d+))(?::(\d+))\s*$/i, y6 = /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, v6 = /\((\S*)(?::(\d+))(?::(\d+))\)/, b6 = (e)=>{
    const t = L6.exec(e);
    if (t) {
        const [, r, s, i] = t;
        return TT(r, Yi, +s, +i);
    }
    const n = y6.exec(e);
    if (n) {
        if (n[2] && n[2].indexOf("eval") === 0) {
            const a = v6.exec(n[2]);
            a && (n[2] = a[1], n[3] = a[2], n[4] = a[3]);
        }
        const [s, i] = EC(n[1] || Yi, n[2]);
        return TT(i, s, n[3] ? +n[3] : void 0, n[4] ? +n[4] : void 0);
    }
}, P6 = [
    C6,
    b6
], M6 = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i, D6 = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i, w6 = (e)=>{
    const t = M6.exec(e);
    if (t) {
        if (t[3] && t[3].indexOf(" > eval") > -1) {
            const i = D6.exec(t[3]);
            i && (t[1] = t[1] || "eval", t[3] = i[1], t[4] = i[2], t[5] = "");
        }
        let r = t[3], s = t[1] || Yi;
        return [s, r] = EC(s, r), TT(r, s, t[4] ? +t[4] : void 0, t[5] ? +t[5] : void 0);
    }
}, x6 = [
    g6,
    w6
], U6 = [
    P6,
    x6
], F6 = fI(...U6), EC = (e, t)=>{
    const n = e.indexOf("safari-extension") !== -1, r = e.indexOf("safari-web-extension") !== -1;
    return n || r ? [
        e.indexOf("@") !== -1 ? e.split("@")[0] : Yi,
        n ? `safari-extension:${t}` : `safari-web-extension:${t}`
    ] : [
        e,
        t
    ];
}, kc = 1024, B6 = "Breadcrumbs", G6 = (e = {})=>{
    const t = {
        console: !0,
        dom: !0,
        fetch: !0,
        history: !0,
        sentry: !0,
        xhr: !0,
        ...e
    };
    return {
        name: B6,
        setup (n) {
            t.console && uP(V6(n)), t.dom && cC(Y6(n, t.dom)), t.xhr && uC(W6(n)), t.fetch && pO(j6(n)), t.history && sd(X6(n)), t.sentry && n.on("beforeSendEvent", H6(n));
        }
    };
}, k6 = G6;
function H6(e) {
    return function(n) {
        ye() === e && ai({
            category: `sentry.${n.type === "transaction" ? "transaction" : "event"}`,
            event_id: n.event_id,
            level: n.level,
            message: ys(n)
        }, {
            event: n
        });
    };
}
function Y6(e, t) {
    return function(r) {
        if (ye() !== e) return;
        let s, i, a = typeof t == "object" ? t.serializeAttribute : void 0, o = typeof t == "object" && typeof t.maxStringLength == "number" ? t.maxStringLength : void 0;
        o && o > kc && (Ge && q.warn(`\`dom.maxStringLength\` cannot exceed ${kc}, but a value of ${o} was configured. Sentry will use ${kc} instead.`), o = kc), typeof a == "string" && (a = [
            a
        ]);
        try {
            const c = r.event, u = K6(c) ? c.target : c;
            s = ds(u, {
                keyAttrs: a,
                maxStringLength: o
            }), i = mI(u);
        } catch  {
            s = "<unknown>";
        }
        if (s.length === 0) return;
        const l = {
            category: `ui.${r.name}`,
            message: s
        };
        i && (l.data = {
            "ui.component_name": i
        }), ai(l, {
            event: r.event,
            name: r.name,
            global: r.global
        });
    };
}
function V6(e) {
    return function(n) {
        if (ye() !== e) return;
        const r = {
            category: "console",
            data: {
                arguments: n.args,
                logger: "console"
            },
            level: cO(n.level),
            message: _S(n.args, " ")
        };
        if (n.level === "assert") if (n.args[0] === !1) r.message = `Assertion failed: ${_S(n.args.slice(1), " ") || "console.assert"}`, r.data.arguments = n.args.slice(1);
        else return;
        ai(r, {
            input: n.args,
            level: n.level
        });
    };
}
function W6(e) {
    return function(n) {
        if (ye() !== e) return;
        const { startTimestamp: r, endTimestamp: s } = n, i = n.xhr[Li];
        if (!r || !s || !i) return;
        const { method: a, url: o, status_code: l, body: c } = i, u = {
            method: a,
            url: o,
            status_code: l
        }, E = {
            xhr: n.xhr,
            input: c,
            startTimestamp: r,
            endTimestamp: s
        }, p = dO(l);
        ai({
            category: "xhr",
            data: u,
            type: "http",
            level: p
        }, E);
    };
}
function j6(e) {
    return function(n) {
        if (ye() !== e) return;
        const { startTimestamp: r, endTimestamp: s } = n;
        if (s && !(n.fetchData.url.match(/sentry_key/) && n.fetchData.method === "POST")) if (n.error) {
            const i = n.fetchData, a = {
                data: n.error,
                input: n.args,
                startTimestamp: r,
                endTimestamp: s
            };
            ai({
                category: "fetch",
                data: i,
                level: "error",
                type: "http"
            }, a);
        } else {
            const i = n.response, a = {
                ...n.fetchData,
                status_code: i && i.status
            }, o = {
                input: n.args,
                response: i,
                startTimestamp: r,
                endTimestamp: s
            }, l = dO(a.status_code);
            ai({
                category: "fetch",
                data: a,
                type: "http",
                level: l
            }, o);
        }
    };
}
function X6(e) {
    return function(n) {
        if (ye() !== e) return;
        let r = n.from, s = n.to;
        const i = Ui(ce.location.href);
        let a = r ? Ui(r) : void 0;
        const o = Ui(s);
        (!a || !a.path) && (a = i), i.protocol === o.protocol && i.host === o.host && (s = o.relative), i.protocol === a.protocol && i.host === a.host && (r = a.relative), ai({
            category: "navigation",
            data: {
                from: r,
                to: s
            }
        });
    };
}
function K6(e) {
    return !!e && !!e.target;
}
const z6 = [
    "EventTarget",
    "Window",
    "Node",
    "ApplicationCache",
    "AudioTrackList",
    "BroadcastChannel",
    "ChannelMergerNode",
    "CryptoOperation",
    "EventSource",
    "FileReader",
    "HTMLUnknownElement",
    "IDBDatabase",
    "IDBRequest",
    "IDBTransaction",
    "KeyOperation",
    "MediaController",
    "MessagePort",
    "ModalWindow",
    "Notification",
    "SVGElementInstance",
    "Screen",
    "SharedWorker",
    "TextTrack",
    "TextTrackCue",
    "TextTrackList",
    "WebSocket",
    "WebSocketWorker",
    "Worker",
    "XMLHttpRequest",
    "XMLHttpRequestEventTarget",
    "XMLHttpRequestUpload"
], J6 = "BrowserApiErrors", q6 = (e = {})=>{
    const t = {
        XMLHttpRequest: !0,
        eventTarget: !0,
        requestAnimationFrame: !0,
        setInterval: !0,
        setTimeout: !0,
        ...e
    };
    return {
        name: J6,
        // TODO: This currently only works for the first client this is setup
        // We may want to adjust this to check for client etc.
        setupOnce () {
            t.setTimeout && vn(ce, "setTimeout", CR), t.setInterval && vn(ce, "setInterval", CR), t.requestAnimationFrame && vn(ce, "requestAnimationFrame", Q6), t.XMLHttpRequest && "XMLHttpRequest" in ce && vn(XMLHttpRequest.prototype, "send", $6);
            const n = t.eventTarget;
            n && (Array.isArray(n) ? n : z6).forEach(ew);
        }
    };
}, Z6 = q6;
function CR(e) {
    return function(...t) {
        const n = t[0];
        return t[0] = Za(n, {
            mechanism: {
                data: {
                    function: us(e)
                },
                handled: !1,
                type: "instrument"
            }
        }), e.apply(this, t);
    };
}
function Q6(e) {
    return function(t) {
        return e.apply(this, [
            Za(t, {
                mechanism: {
                    data: {
                        function: "requestAnimationFrame",
                        handler: us(e)
                    },
                    handled: !1,
                    type: "instrument"
                }
            })
        ]);
    };
}
function $6(e) {
    return function(...t) {
        const n = this;
        return [
            "onload",
            "onerror",
            "onprogress",
            "onreadystatechange"
        ].forEach((s)=>{
            s in n && typeof n[s] == "function" && vn(n, s, function(i) {
                const a = {
                    mechanism: {
                        data: {
                            function: s,
                            handler: us(i)
                        },
                        handled: !1,
                        type: "instrument"
                    }
                }, o = Gh(i);
                return o && (a.mechanism.data.handler = us(o)), Za(i, a);
            });
        }), e.apply(this, t);
    };
}
function ew(e) {
    const n = ce[e], r = n && n.prototype;
    !r || !r.hasOwnProperty || !r.hasOwnProperty("addEventListener") || (vn(r, "addEventListener", function(s) {
        return function(i, a, o) {
            try {
                tw(a) && (a.handleEvent = Za(a.handleEvent, {
                    mechanism: {
                        data: {
                            function: "handleEvent",
                            handler: us(a),
                            target: e
                        },
                        handled: !1,
                        type: "instrument"
                    }
                }));
            } catch  {}
            return s.apply(this, [
                i,
                Za(a, {
                    mechanism: {
                        data: {
                            function: "addEventListener",
                            handler: us(a),
                            target: e
                        },
                        handled: !1,
                        type: "instrument"
                    }
                }),
                o
            ]);
        };
    }), vn(r, "removeEventListener", function(s) {
        return function(i, a, o) {
            try {
                const l = a.__sentry_wrapped__;
                l && s.call(this, i, l, o);
            } catch  {}
            return s.call(this, i, a, o);
        };
    }));
}
function tw(e) {
    return typeof e.handleEvent == "function";
}
const nw = ()=>({
        name: "BrowserSession",
        setupOnce () {
            if (typeof ce.document > "u") {
                Ge && q.warn("Using the `browserSessionIntegration` in non-browser environments is not supported.");
                return;
            }
            YS({
                ignoreDuration: !0
            }), VS(), sd(({ from: e, to: t })=>{
                e !== void 0 && e !== t && (YS({
                    ignoreDuration: !0
                }), VS());
            });
        }
    }), rw = "GlobalHandlers", sw = (e = {})=>{
    const t = {
        onerror: !0,
        onunhandledrejection: !0,
        ...e
    };
    return {
        name: rw,
        setupOnce () {
            Error.stackTraceLimit = 50;
        },
        setup (n) {
            t.onerror && (aw(n), gR("onerror")), t.onunhandledrejection && (ow(n), gR("onunhandledrejection"));
        }
    };
}, iw = sw;
function aw(e) {
    pI((t)=>{
        const { stackParser: n, attachStacktrace: r } = dC();
        if (ye() !== e || zO()) return;
        const { msg: s, url: i, line: a, column: o, error: l } = t, c = uw(nA(n, l || s, void 0, r, !1), i, a, o);
        c.level = "error", ZI(c, {
            originalException: l,
            mechanism: {
                handled: !1,
                type: "onerror"
            }
        });
    });
}
function ow(e) {
    TI((t)=>{
        const { stackParser: n, attachStacktrace: r } = dC();
        if (ye() !== e || zO()) return;
        const s = lw(t), i = Bh(s) ? cw(s) : nA(n, s, void 0, r, !0);
        i.level = "error", ZI(i, {
            originalException: s,
            mechanism: {
                handled: !1,
                type: "onunhandledrejection"
            }
        });
    });
}
function lw(e) {
    if (Bh(e)) return e;
    try {
        if ("reason" in e) return e.reason;
        if ("detail" in e && "reason" in e.detail) return e.detail.reason;
    } catch  {}
    return e;
}
function cw(e) {
    return {
        exception: {
            values: [
                {
                    type: "UnhandledRejection",
                    // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)
                    value: `Non-Error promise rejection captured with value: ${String(e)}`
                }
            ]
        }
    };
}
function uw(e, t, n, r) {
    const s = e.exception = e.exception || {}, i = s.values = s.values || [], a = i[0] = i[0] || {}, o = a.stacktrace = a.stacktrace || {}, l = o.frames = o.frames || [], c = r, u = n, E = rs(t) && t.length > 0 ? t : RI();
    return l.length === 0 && l.push({
        colno: c,
        filename: E,
        function: Yi,
        in_app: !0,
        lineno: u
    }), e;
}
function gR(e) {
    Ge && q.log(`Global Handler attached: ${e}`);
}
function dC() {
    const e = ye();
    return e && e.getOptions() || {
        stackParser: ()=>[],
        attachStacktrace: !1
    };
}
const Ew = ()=>({
        name: "HttpContext",
        preprocessEvent (e) {
            if (!ce.navigator && !ce.location && !ce.document) return;
            const t = e.request && e.request.url || ce.location && ce.location.href, { referrer: n } = ce.document || {}, { userAgent: r } = ce.navigator || {}, s = {
                ...e.request && e.request.headers,
                ...n && {
                    Referer: n
                },
                ...r && {
                    "User-Agent": r
                }
            }, i = {
                ...e.request,
                ...t && {
                    url: t
                },
                headers: s
            };
            e.request = i;
        }
    }), dw = "cause", fw = 5, pw = "LinkedErrors", Tw = (e = {})=>{
    const t = e.limit || fw, n = e.key || dw;
    return {
        name: pw,
        preprocessEvent (r, s, i) {
            const a = i.getOptions();
            lP(// This differs from the LinkedErrors integration in core by using a different exceptionFromError function
            eA, a.stackParser, a.maxValueLength, n, t, r, s);
        }
    };
}, hw = Tw;
function Aw(e) {
    const t = [
        Zb(),
        Kb(),
        Z6(),
        k6(),
        iw(),
        hw(),
        pP(),
        Ew()
    ];
    return e.autoSessionTracking !== !1 && t.push(nw()), t;
}
function Sw(e = {}) {
    const t = {
        defaultIntegrations: Aw(e),
        release: typeof __SENTRY_RELEASE__ == "string" ? __SENTRY_RELEASE__ : ce.SENTRY_RELEASE && ce.SENTRY_RELEASE.id ? ce.SENTRY_RELEASE.id : void 0,
        autoSessionTracking: !0,
        sendClientReports: !0
    };
    return e.defaultIntegrations == null && delete e.defaultIntegrations, {
        ...t,
        ...e
    };
}
function Rw() {
    const e = typeof ce.window < "u" && ce;
    if (!e) return !1;
    const t = e.chrome ? "chrome" : "browser", n = e[t], r = n && n.runtime && n.runtime.id, s = ce.location && ce.location.href || "", i = [
        "chrome-extension:",
        "moz-extension:",
        "ms-browser-extension:",
        "safari-web-extension:"
    ], a = !!r && ce === ce.top && i.some((l)=>s.startsWith(`${l}//`)), o = typeof e.nw < "u";
    return !!r && !a && !o;
}
function mw(e = {}) {
    const t = Sw(e);
    if (!t.skipBrowserExtensionCheck && Rw()) {
        fi(()=>{
            console.error("[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/");
        });
        return;
    }
    Ge && (fO() || q.warn("No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill."));
    const n = {
        ...t,
        stackParser: v5(t.stackParser || F6),
        integrations: Cb(t),
        transport: t.transport || oA
    };
    return Pb(dD, n);
}
const Qe = Le, lA = "sentryReplaySession", _w = "replay_event", cA = "Unable to send Replay", Nw = 3e5, Iw = 9e5, Ow = 5e3, Cw = 5500, gw = 6e4, Lw = 5e3, yw = 3, LR = 15e4, Hc = 5e3, vw = 3e3, bw = 300, uA = 2e7, Pw = 4999, Mw = 15e3, yR = 36e5;
function hT(e, t) {
    return e ?? t();
}
function gl(e) {
    let t, n = e[0], r = 1;
    for(; r < e.length;){
        const s = e[r], i = e[r + 1];
        if (r += 2, (s === "optionalAccess" || s === "optionalCall") && n == null) return;
        s === "access" || s === "optionalAccess" ? (t = n, n = i(n)) : (s === "call" || s === "optionalCall") && (n = i((...a)=>n.call(t, ...a)), t = void 0);
    }
    return n;
}
var yt;
(function(e) {
    e[e.Document = 0] = "Document", e[e.DocumentType = 1] = "DocumentType", e[e.Element = 2] = "Element", e[e.Text = 3] = "Text", e[e.CDATA = 4] = "CDATA", e[e.Comment = 5] = "Comment";
})(yt || (yt = {}));
function Dw(e) {
    return e.nodeType === e.ELEMENT_NODE;
}
function el(e) {
    const t = gl([
        e,
        "optionalAccess",
        (n)=>n.host
    ]);
    return gl([
        t,
        "optionalAccess",
        (n)=>n.shadowRoot
    ]) === e;
}
function tl(e) {
    return Object.prototype.toString.call(e) === "[object ShadowRoot]";
}
function ww(e) {
    return e.includes(" background-clip: text;") && !e.includes(" -webkit-background-clip: text;") && (e = e.replace(/\sbackground-clip:\s*text;/g, " -webkit-background-clip: text; background-clip: text;")), e;
}
function xw(e) {
    const { cssText: t } = e;
    if (t.split('"').length < 3) return t;
    const n = [
        "@import",
        `url(${JSON.stringify(e.href)})`
    ];
    return e.layerName === "" ? n.push("layer") : e.layerName && n.push(`layer(${e.layerName})`), e.supportsText && n.push(`supports(${e.supportsText})`), e.media.length && n.push(e.media.mediaText), n.join(" ") + ";";
}
function oE(e) {
    try {
        const t = e.rules || e.cssRules;
        return t ? ww(Array.from(t, fC).join("")) : null;
    } catch  {
        return null;
    }
}
function Uw(e) {
    let t = "";
    for(let n = 0; n < e.style.length; n++){
        const r = e.style, s = r[n], i = r.getPropertyPriority(s);
        t += `${s}:${r.getPropertyValue(s)}${i ? " !important" : ""};`;
    }
    return `${e.selectorText} { ${t} }`;
}
function fC(e) {
    let t;
    if (Bw(e)) try {
        t = oE(e.styleSheet) || xw(e);
    } catch  {}
    else if (Gw(e)) {
        let n = e.cssText;
        const r = e.selectorText.includes(":"), s = typeof e.style.all == "string" && e.style.all;
        if (s && (n = Uw(e)), r && (n = Fw(n)), r || s) return n;
    }
    return t || e.cssText;
}
function Fw(e) {
    const t = /(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm;
    return e.replace(t, "$1\\$2");
}
function Bw(e) {
    return "styleSheet" in e;
}
function Gw(e) {
    return "selectorText" in e;
}
class pC {
    constructor(){
        this.idNodeMap = /* @__PURE__ */ new Map(), this.nodeMetaMap = /* @__PURE__ */ new WeakMap();
    }
    getId(t) {
        if (!t) return -1;
        const n = gl([
            this,
            "access",
            (r)=>r.getMeta,
            "call",
            (r)=>r(t),
            "optionalAccess",
            (r)=>r.id
        ]);
        return hT(n, ()=>-1);
    }
    getNode(t) {
        return this.idNodeMap.get(t) || null;
    }
    getIds() {
        return Array.from(this.idNodeMap.keys());
    }
    getMeta(t) {
        return this.nodeMetaMap.get(t) || null;
    }
    removeNodeFromMap(t) {
        const n = this.getId(t);
        this.idNodeMap.delete(n), t.childNodes && t.childNodes.forEach((r)=>this.removeNodeFromMap(r));
    }
    has(t) {
        return this.idNodeMap.has(t);
    }
    hasNode(t) {
        return this.nodeMetaMap.has(t);
    }
    add(t, n) {
        const r = n.id;
        this.idNodeMap.set(r, t), this.nodeMetaMap.set(t, n);
    }
    replace(t, n) {
        const r = this.getNode(t);
        if (r) {
            const s = this.nodeMetaMap.get(r);
            s && this.nodeMetaMap.set(n, s);
        }
        this.idNodeMap.set(t, n);
    }
    reset() {
        this.idNodeMap = /* @__PURE__ */ new Map(), this.nodeMetaMap = /* @__PURE__ */ new WeakMap();
    }
}
function kw() {
    return new pC();
}
function id({ maskInputOptions: e, tagName: t, type: n }) {
    return t === "OPTION" && (t = "SELECT"), !!(e[t.toLowerCase()] || n && e[n] || n === "password" || t === "INPUT" && !n && e.text);
}
function Ll({ isMasked: e, element: t, value: n, maskInputFn: r }) {
    let s = n || "";
    return e ? (r && (s = r(s, t)), "*".repeat(s.length)) : s;
}
function eo(e) {
    return e.toLowerCase();
}
function AT(e) {
    return e.toUpperCase();
}
const vR = "__rrweb_original__";
function Hw(e) {
    const t = e.getContext("2d");
    if (!t) return !0;
    const n = 50;
    for(let r = 0; r < e.width; r += n)for(let s = 0; s < e.height; s += n){
        const i = t.getImageData, a = vR in i ? i[vR] : i;
        if (new Uint32Array(a.call(t, r, s, Math.min(n, e.width - r), Math.min(n, e.height - s)).data.buffer).some((l)=>l !== 0)) return !1;
    }
    return !0;
}
function EA(e) {
    const t = e.type;
    return e.hasAttribute("data-rr-is-password") ? "password" : t ? eo(t) : null;
}
function lE(e, t, n) {
    return t === "INPUT" && (n === "radio" || n === "checkbox") ? e.getAttribute("value") || "" : e.value;
}
function TC(e, t) {
    let n;
    try {
        n = new URL(e, hT(t, ()=>window.location.href));
    } catch  {
        return null;
    }
    const r = /\.([0-9a-z]+)(?:$)/i, s = n.pathname.match(r);
    return hT(gl([
        s,
        "optionalAccess",
        (i)=>i[1]
    ]), ()=>null);
}
const bR = {};
function hC(e) {
    const t = bR[e];
    if (t) return t;
    const n = window.document;
    let r = window[e];
    if (n && typeof n.createElement == "function") try {
        const s = n.createElement("iframe");
        s.hidden = !0, n.head.appendChild(s);
        const i = s.contentWindow;
        i && i[e] && (r = i[e]), n.head.removeChild(s);
    } catch  {}
    return bR[e] = r.bind(window);
}
function ST(...e) {
    return hC("setTimeout")(...e);
}
function AC(...e) {
    return hC("clearTimeout")(...e);
}
function SC(e) {
    try {
        return e.contentDocument;
    } catch  {}
}
let Yw = 1;
const Vw = new RegExp("[^a-z0-9-_:]"), yl = -2;
function dA() {
    return Yw++;
}
function Ww(e) {
    if (e instanceof HTMLFormElement) return "form";
    const t = eo(e.tagName);
    return Vw.test(t) ? "div" : t;
}
function jw(e) {
    let t = "";
    return e.indexOf("//") > -1 ? t = e.split("/").slice(0, 3).join("/") : t = e.split("/")[0], t = t.split("?")[0], t;
}
let oa, PR;
const Xw = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm, Kw = /^(?:[a-z+]+:)?\/\//i, zw = /^www\..*/i, Jw = /^(data:)([^,]*),(.*)/i;
function cE(e, t) {
    return (e || "").replace(Xw, (n, r, s, i, a, o)=>{
        const l = s || a || o, c = r || i || "";
        if (!l) return n;
        if (Kw.test(l) || zw.test(l)) return `url(${c}${l}${c})`;
        if (Jw.test(l)) return `url(${c}${l}${c})`;
        if (l[0] === "/") return `url(${c}${jw(t) + l}${c})`;
        const u = t.split("/"), E = l.split("/");
        u.pop();
        for (const p of E)p !== "." && (p === ".." ? u.pop() : u.push(p));
        return `url(${c}${u.join("/")}${c})`;
    });
}
const qw = /^[^ \t\n\r\u000c]+/, Zw = /^[, \t\n\r\u000c]+/;
function Qw(e, t) {
    if (t.trim() === "") return t;
    let n = 0;
    function r(i) {
        let a;
        const o = i.exec(t.substring(n));
        return o ? (a = o[0], n += a.length, a) : "";
    }
    const s = [];
    for(; r(Zw), !(n >= t.length);){
        let i = r(qw);
        if (i.slice(-1) === ",") i = Ia(e, i.substring(0, i.length - 1)), s.push(i);
        else {
            let a = "";
            i = Ia(e, i);
            let o = !1;
            for(;;){
                const l = t.charAt(n);
                if (l === "") {
                    s.push((i + a).trim());
                    break;
                } else if (o) l === ")" && (o = !1);
                else if (l === ",") {
                    n += 1, s.push((i + a).trim());
                    break;
                } else l === "(" && (o = !0);
                a += l, n += 1;
            }
        }
    }
    return s.join(", ");
}
const MR = /* @__PURE__ */ new WeakMap();
function Ia(e, t) {
    return !t || t.trim() === "" ? t : ad(e, t);
}
function $w(e) {
    return !!(e.tagName === "svg" || e.ownerSVGElement);
}
function ad(e, t) {
    let n = MR.get(e);
    if (n || (n = e.createElement("a"), MR.set(e, n)), !t) t = "";
    else if (t.startsWith("blob:") || t.startsWith("data:")) return t;
    return n.setAttribute("href", t), n.href;
}
function RC(e, t, n, r, s, i) {
    return r && (n === "src" || n === "href" && !(t === "use" && r[0] === "#") || n === "xlink:href" && r[0] !== "#" || n === "background" && (t === "table" || t === "td" || t === "th") ? Ia(e, r) : n === "srcset" ? Qw(e, r) : n === "style" ? cE(r, ad(e)) : t === "object" && n === "data" ? Ia(e, r) : typeof i == "function" ? i(n, r, s) : r);
}
function mC(e, t, n) {
    return (e === "video" || e === "audio") && t === "autoplay";
}
function e8(e, t, n, r) {
    try {
        if (r && e.matches(r)) return !1;
        if (typeof t == "string") {
            if (e.classList.contains(t)) return !0;
        } else for(let s = e.classList.length; s--;){
            const i = e.classList[s];
            if (t.test(i)) return !0;
        }
        if (n) return e.matches(n);
    } catch  {}
    return !1;
}
function t8(e, t) {
    for(let n = e.classList.length; n--;){
        const r = e.classList[n];
        if (t.test(r)) return !0;
    }
    return !1;
}
function yi(e, t, n = 1 / 0, r = 0) {
    return !e || e.nodeType !== e.ELEMENT_NODE || r > n ? -1 : t(e) ? r : yi(e.parentNode, t, n, r + 1);
}
function Oa(e, t) {
    return (n)=>{
        const r = n;
        if (r === null) return !1;
        try {
            if (e) {
                if (typeof e == "string") {
                    if (r.matches(`.${e}`)) return !0;
                } else if (t8(r, e)) return !0;
            }
            return !!(t && r.matches(t));
        } catch  {
            return !1;
        }
    };
}
function to(e, t, n, r, s, i) {
    try {
        const a = e.nodeType === e.ELEMENT_NODE ? e : e.parentElement;
        if (a === null) return !1;
        if (a.tagName === "INPUT") {
            const c = a.getAttribute("autocomplete");
            if ([
                "current-password",
                "new-password",
                "cc-number",
                "cc-exp",
                "cc-exp-month",
                "cc-exp-year",
                "cc-csc"
            ].includes(c)) return !0;
        }
        let o = -1, l = -1;
        if (i) {
            if (l = yi(a, Oa(r, s)), l < 0) return !0;
            o = yi(a, Oa(t, n), l >= 0 ? l : 1 / 0);
        } else {
            if (o = yi(a, Oa(t, n)), o < 0) return !1;
            l = yi(a, Oa(r, s), o >= 0 ? o : 1 / 0);
        }
        return o >= 0 ? l >= 0 ? o <= l : !0 : l >= 0 ? !1 : !!i;
    } catch  {}
    return !!i;
}
function n8(e, t, n) {
    const r = e.contentWindow;
    if (!r) return;
    let s = !1, i;
    try {
        i = r.document.readyState;
    } catch  {
        return;
    }
    if (i !== "complete") {
        const o = ST(()=>{
            s || (t(), s = !0);
        }, n);
        e.addEventListener("load", ()=>{
            AC(o), s = !0, t();
        });
        return;
    }
    const a = "about:blank";
    if (r.location.href !== a || e.src === a || e.src === "") return ST(t, 0), e.addEventListener("load", t);
    e.addEventListener("load", t);
}
function r8(e, t, n) {
    let r = !1, s;
    try {
        s = e.sheet;
    } catch  {
        return;
    }
    if (s) return;
    const i = ST(()=>{
        r || (t(), r = !0);
    }, n);
    e.addEventListener("load", ()=>{
        AC(i), r = !0, t();
    });
}
function s8(e, t) {
    const { doc: n, mirror: r, blockClass: s, blockSelector: i, unblockSelector: a, maskAllText: o, maskAttributeFn: l, maskTextClass: c, unmaskTextClass: u, maskTextSelector: E, unmaskTextSelector: p, inlineStylesheet: A, maskInputOptions: R = {}, maskTextFn: C, maskInputFn: O, dataURLOptions: d = {}, inlineImages: f, recordCanvas: _, keepIframeSrcFn: h, newlyAddedElement: I = !1 } = t, T = i8(n, r);
    switch(e.nodeType){
        case e.DOCUMENT_NODE:
            return e.compatMode !== "CSS1Compat" ? {
                type: yt.Document,
                childNodes: [],
                compatMode: e.compatMode
            } : {
                type: yt.Document,
                childNodes: []
            };
        case e.DOCUMENT_TYPE_NODE:
            return {
                type: yt.DocumentType,
                name: e.name,
                publicId: e.publicId,
                systemId: e.systemId,
                rootId: T
            };
        case e.ELEMENT_NODE:
            return o8(e, {
                doc: n,
                blockClass: s,
                blockSelector: i,
                unblockSelector: a,
                inlineStylesheet: A,
                maskAttributeFn: l,
                maskInputOptions: R,
                maskInputFn: O,
                dataURLOptions: d,
                inlineImages: f,
                recordCanvas: _,
                keepIframeSrcFn: h,
                newlyAddedElement: I,
                rootId: T,
                maskTextClass: c,
                unmaskTextClass: u,
                maskTextSelector: E,
                unmaskTextSelector: p
            });
        case e.TEXT_NODE:
            return a8(e, {
                doc: n,
                maskAllText: o,
                maskTextClass: c,
                unmaskTextClass: u,
                maskTextSelector: E,
                unmaskTextSelector: p,
                maskTextFn: C,
                maskInputOptions: R,
                maskInputFn: O,
                rootId: T
            });
        case e.CDATA_SECTION_NODE:
            return {
                type: yt.CDATA,
                textContent: "",
                rootId: T
            };
        case e.COMMENT_NODE:
            return {
                type: yt.Comment,
                textContent: e.textContent || "",
                rootId: T
            };
        default:
            return !1;
    }
}
function i8(e, t) {
    if (!t.hasNode(e)) return;
    const n = t.getId(e);
    return n === 1 ? void 0 : n;
}
function a8(e, t) {
    const { maskAllText: n, maskTextClass: r, unmaskTextClass: s, maskTextSelector: i, unmaskTextSelector: a, maskTextFn: o, maskInputOptions: l, maskInputFn: c, rootId: u } = t, E = e.parentNode && e.parentNode.tagName;
    let p = e.textContent;
    const A = E === "STYLE" ? !0 : void 0, R = E === "SCRIPT" ? !0 : void 0, C = E === "TEXTAREA" ? !0 : void 0;
    if (A && p) {
        try {
            e.nextSibling || e.previousSibling || gl([
                e,
                "access",
                (d)=>d.parentNode,
                "access",
                (d)=>d.sheet,
                "optionalAccess",
                (d)=>d.cssRules
            ]) && (p = oE(e.parentNode.sheet));
        } catch (d) {
            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${d}`, e);
        }
        p = cE(p, ad(t.doc));
    }
    R && (p = "SCRIPT_PLACEHOLDER");
    const O = to(e, r, i, s, a, n);
    if (!A && !R && !C && p && O && (p = o ? o(p, e.parentElement) : p.replace(/[\S]/g, "*")), C && p && (l.textarea || O) && (p = c ? c(p, e.parentNode) : p.replace(/[\S]/g, "*")), E === "OPTION" && p) {
        const d = id({
            type: null,
            tagName: E,
            maskInputOptions: l
        });
        p = Ll({
            isMasked: to(e, r, i, s, a, d),
            element: e,
            value: p,
            maskInputFn: c
        });
    }
    return {
        type: yt.Text,
        textContent: p || "",
        isStyle: A,
        rootId: u
    };
}
function o8(e, t) {
    const { doc: n, blockClass: r, blockSelector: s, unblockSelector: i, inlineStylesheet: a, maskInputOptions: o = {}, maskAttributeFn: l, maskInputFn: c, dataURLOptions: u = {}, inlineImages: E, recordCanvas: p, keepIframeSrcFn: A, newlyAddedElement: R = !1, rootId: C, maskTextClass: O, unmaskTextClass: d, maskTextSelector: f, unmaskTextSelector: _ } = t, h = e8(e, r, s, i), I = Ww(e);
    let T = {};
    const N = e.attributes.length;
    for(let b = 0; b < N; b++){
        const S = e.attributes[b];
        S.name && !mC(I, S.name) && (T[S.name] = RC(n, I, eo(S.name), S.value, e, l));
    }
    if (I === "link" && a) {
        const b = Array.from(n.styleSheets).find((P)=>P.href === e.href);
        let S = null;
        b && (S = oE(b)), S && (T.rel = null, T.href = null, T.crossorigin = null, T._cssText = cE(S, b.href));
    }
    if (I === "style" && e.sheet && !(e.innerText || e.textContent || "").trim().length) {
        const b = oE(e.sheet);
        b && (T._cssText = cE(b, ad(n)));
    }
    if (I === "input" || I === "textarea" || I === "select" || I === "option") {
        const b = e, S = EA(b), P = lE(b, AT(I), S), w = b.checked;
        if (S !== "submit" && S !== "button" && P) {
            const G = to(b, O, f, d, _, id({
                type: S,
                tagName: AT(I),
                maskInputOptions: o
            }));
            T.value = Ll({
                isMasked: G,
                element: b,
                value: P,
                maskInputFn: c
            });
        }
        w && (T.checked = w);
    }
    if (I === "option" && (e.selected && !o.select ? T.selected = !0 : delete T.selected), I === "canvas" && p) {
        if (e.__context === "2d") Hw(e) || (T.rr_dataURL = e.toDataURL(u.type, u.quality));
        else if (!("__context" in e)) {
            const b = e.toDataURL(u.type, u.quality), S = n.createElement("canvas");
            S.width = e.width, S.height = e.height;
            const P = S.toDataURL(u.type, u.quality);
            b !== P && (T.rr_dataURL = b);
        }
    }
    if (I === "img" && E) {
        oa || (oa = n.createElement("canvas"), PR = oa.getContext("2d"));
        const b = e, S = b.currentSrc || b.getAttribute("src") || "<unknown-src>", P = b.crossOrigin, w = ()=>{
            b.removeEventListener("load", w);
            try {
                oa.width = b.naturalWidth, oa.height = b.naturalHeight, PR.drawImage(b, 0, 0), T.rr_dataURL = oa.toDataURL(u.type, u.quality);
            } catch (G) {
                if (b.crossOrigin !== "anonymous") {
                    b.crossOrigin = "anonymous", b.complete && b.naturalWidth !== 0 ? w() : b.addEventListener("load", w);
                    return;
                } else console.warn(`Cannot inline img src=${S}! Error: ${G}`);
            }
            b.crossOrigin === "anonymous" && (P ? T.crossOrigin = P : b.removeAttribute("crossorigin"));
        };
        b.complete && b.naturalWidth !== 0 ? w() : b.addEventListener("load", w);
    }
    if ((I === "audio" || I === "video") && (T.rr_mediaState = e.paused ? "paused" : "played", T.rr_mediaCurrentTime = e.currentTime), R || (e.scrollLeft && (T.rr_scrollLeft = e.scrollLeft), e.scrollTop && (T.rr_scrollTop = e.scrollTop)), h) {
        const { width: b, height: S } = e.getBoundingClientRect();
        T = {
            class: T.class,
            rr_width: `${b}px`,
            rr_height: `${S}px`
        };
    }
    I === "iframe" && !A(T.src) && (!h && !SC(e) && (T.rr_src = T.src), delete T.src);
    let g;
    try {
        customElements.get(I) && (g = !0);
    } catch  {}
    return {
        type: yt.Element,
        tagName: I,
        attributes: T,
        childNodes: [],
        isSVG: $w(e) || void 0,
        needBlock: h,
        rootId: C,
        isCustom: g
    };
}
function Ze(e) {
    return e == null ? "" : e.toLowerCase();
}
function l8(e, t) {
    if (t.comment && e.type === yt.Comment) return !0;
    if (e.type === yt.Element) {
        if (t.script && (e.tagName === "script" || e.tagName === "link" && (e.attributes.rel === "preload" || e.attributes.rel === "modulepreload") || e.tagName === "link" && e.attributes.rel === "prefetch" && typeof e.attributes.href == "string" && TC(e.attributes.href) === "js")) return !0;
        if (t.headFavicon && (e.tagName === "link" && e.attributes.rel === "shortcut icon" || e.tagName === "meta" && (Ze(e.attributes.name).match(/^msapplication-tile(image|color)$/) || Ze(e.attributes.name) === "application-name" || Ze(e.attributes.rel) === "icon" || Ze(e.attributes.rel) === "apple-touch-icon" || Ze(e.attributes.rel) === "shortcut icon"))) return !0;
        if (e.tagName === "meta") {
            if (t.headMetaDescKeywords && Ze(e.attributes.name).match(/^description|keywords$/)) return !0;
            if (t.headMetaSocial && (Ze(e.attributes.property).match(/^(og|twitter|fb):/) || Ze(e.attributes.name).match(/^(og|twitter):/) || Ze(e.attributes.name) === "pinterest")) return !0;
            if (t.headMetaRobots && (Ze(e.attributes.name) === "robots" || Ze(e.attributes.name) === "googlebot" || Ze(e.attributes.name) === "bingbot")) return !0;
            if (t.headMetaHttpEquiv && e.attributes["http-equiv"] !== void 0) return !0;
            if (t.headMetaAuthorship && (Ze(e.attributes.name) === "author" || Ze(e.attributes.name) === "generator" || Ze(e.attributes.name) === "framework" || Ze(e.attributes.name) === "publisher" || Ze(e.attributes.name) === "progid" || Ze(e.attributes.property).match(/^article:/) || Ze(e.attributes.property).match(/^product:/))) return !0;
            if (t.headMetaVerification && (Ze(e.attributes.name) === "google-site-verification" || Ze(e.attributes.name) === "yandex-verification" || Ze(e.attributes.name) === "csrf-token" || Ze(e.attributes.name) === "p:domain_verify" || Ze(e.attributes.name) === "verify-v1" || Ze(e.attributes.name) === "verification" || Ze(e.attributes.name) === "shopify-checkout-api-token")) return !0;
        }
    }
    return !1;
}
function Ca(e, t) {
    const { doc: n, mirror: r, blockClass: s, blockSelector: i, unblockSelector: a, maskAllText: o, maskTextClass: l, unmaskTextClass: c, maskTextSelector: u, unmaskTextSelector: E, skipChild: p = !1, inlineStylesheet: A = !0, maskInputOptions: R = {}, maskAttributeFn: C, maskTextFn: O, maskInputFn: d, slimDOMOptions: f, dataURLOptions: _ = {}, inlineImages: h = !1, recordCanvas: I = !1, onSerialize: T, onIframeLoad: N, iframeLoadTimeout: g = 5e3, onStylesheetLoad: b, stylesheetLoadTimeout: S = 5e3, keepIframeSrcFn: P = ()=>!1, newlyAddedElement: w = !1 } = t;
    let { preserveWhiteSpace: G = !0 } = t;
    const k = s8(e, {
        doc: n,
        mirror: r,
        blockClass: s,
        blockSelector: i,
        maskAllText: o,
        unblockSelector: a,
        maskTextClass: l,
        unmaskTextClass: c,
        maskTextSelector: u,
        unmaskTextSelector: E,
        inlineStylesheet: A,
        maskInputOptions: R,
        maskAttributeFn: C,
        maskTextFn: O,
        maskInputFn: d,
        dataURLOptions: _,
        inlineImages: h,
        recordCanvas: I,
        keepIframeSrcFn: P,
        newlyAddedElement: w
    });
    if (!k) return console.warn(e, "not serialized"), null;
    let Y;
    r.hasNode(e) ? Y = r.getId(e) : l8(k, f) || !G && k.type === yt.Text && !k.isStyle && !k.textContent.replace(/^\s+|\s+$/gm, "").length ? Y = yl : Y = dA();
    const H = Object.assign(k, {
        id: Y
    });
    if (r.add(e, H), Y === yl) return null;
    T && T(e);
    let F = !p;
    if (H.type === yt.Element) {
        F = F && !H.needBlock, delete H.needBlock;
        const x = e.shadowRoot;
        x && tl(x) && (H.isShadowHost = !0);
    }
    if ((H.type === yt.Document || H.type === yt.Element) && F) {
        f.headWhitespace && H.type === yt.Element && H.tagName === "head" && (G = !1);
        const x = {
            doc: n,
            mirror: r,
            blockClass: s,
            blockSelector: i,
            maskAllText: o,
            unblockSelector: a,
            maskTextClass: l,
            unmaskTextClass: c,
            maskTextSelector: u,
            unmaskTextSelector: E,
            skipChild: p,
            inlineStylesheet: A,
            maskInputOptions: R,
            maskAttributeFn: C,
            maskTextFn: O,
            maskInputFn: d,
            slimDOMOptions: f,
            dataURLOptions: _,
            inlineImages: h,
            recordCanvas: I,
            preserveWhiteSpace: G,
            onSerialize: T,
            onIframeLoad: N,
            iframeLoadTimeout: g,
            onStylesheetLoad: b,
            stylesheetLoadTimeout: S,
            keepIframeSrcFn: P
        };
        for (const X of Array.from(e.childNodes)){
            const J = Ca(X, x);
            J && H.childNodes.push(J);
        }
        if (Dw(e) && e.shadowRoot) for (const X of Array.from(e.shadowRoot.childNodes)){
            const J = Ca(X, x);
            J && (tl(e.shadowRoot) && (J.isShadow = !0), H.childNodes.push(J));
        }
    }
    return e.parentNode && el(e.parentNode) && tl(e.parentNode) && (H.isShadow = !0), H.type === yt.Element && H.tagName === "iframe" && n8(e, ()=>{
        const x = SC(e);
        if (x && N) {
            const X = Ca(x, {
                doc: x,
                mirror: r,
                blockClass: s,
                blockSelector: i,
                unblockSelector: a,
                maskAllText: o,
                maskTextClass: l,
                unmaskTextClass: c,
                maskTextSelector: u,
                unmaskTextSelector: E,
                skipChild: !1,
                inlineStylesheet: A,
                maskInputOptions: R,
                maskAttributeFn: C,
                maskTextFn: O,
                maskInputFn: d,
                slimDOMOptions: f,
                dataURLOptions: _,
                inlineImages: h,
                recordCanvas: I,
                preserveWhiteSpace: G,
                onSerialize: T,
                onIframeLoad: N,
                iframeLoadTimeout: g,
                onStylesheetLoad: b,
                stylesheetLoadTimeout: S,
                keepIframeSrcFn: P
            });
            X && N(e, X);
        }
    }, g), H.type === yt.Element && H.tagName === "link" && typeof H.attributes.rel == "string" && (H.attributes.rel === "stylesheet" || H.attributes.rel === "preload" && typeof H.attributes.href == "string" && TC(H.attributes.href) === "css") && r8(e, ()=>{
        if (b) {
            const x = Ca(e, {
                doc: n,
                mirror: r,
                blockClass: s,
                blockSelector: i,
                unblockSelector: a,
                maskAllText: o,
                maskTextClass: l,
                unmaskTextClass: c,
                maskTextSelector: u,
                unmaskTextSelector: E,
                skipChild: !1,
                inlineStylesheet: A,
                maskInputOptions: R,
                maskAttributeFn: C,
                maskTextFn: O,
                maskInputFn: d,
                slimDOMOptions: f,
                dataURLOptions: _,
                inlineImages: h,
                recordCanvas: I,
                preserveWhiteSpace: G,
                onSerialize: T,
                onIframeLoad: N,
                iframeLoadTimeout: g,
                onStylesheetLoad: b,
                stylesheetLoadTimeout: S,
                keepIframeSrcFn: P
            });
            x && b(e, x);
        }
    }, S), H;
}
function c8(e, t) {
    const { mirror: n = new pC(), blockClass: r = "rr-block", blockSelector: s = null, unblockSelector: i = null, maskAllText: a = !1, maskTextClass: o = "rr-mask", unmaskTextClass: l = null, maskTextSelector: c = null, unmaskTextSelector: u = null, inlineStylesheet: E = !0, inlineImages: p = !1, recordCanvas: A = !1, maskAllInputs: R = !1, maskAttributeFn: C, maskTextFn: O, maskInputFn: d, slimDOM: f = !1, dataURLOptions: _, preserveWhiteSpace: h, onSerialize: I, onIframeLoad: T, iframeLoadTimeout: N, onStylesheetLoad: g, stylesheetLoadTimeout: b, keepIframeSrcFn: S = ()=>!1 } = t || {};
    return Ca(e, {
        doc: e,
        mirror: n,
        blockClass: r,
        blockSelector: s,
        unblockSelector: i,
        maskAllText: a,
        maskTextClass: o,
        unmaskTextClass: l,
        maskTextSelector: c,
        unmaskTextSelector: u,
        skipChild: !1,
        inlineStylesheet: E,
        maskInputOptions: R === !0 ? {
            color: !0,
            date: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0,
            textarea: !0,
            select: !0
        } : R === !1 ? {} : R,
        maskAttributeFn: C,
        maskTextFn: O,
        maskInputFn: d,
        slimDOMOptions: f === !0 || f === "all" ? {
            script: !0,
            comment: !0,
            headFavicon: !0,
            headWhitespace: !0,
            headMetaDescKeywords: f === "all",
            headMetaSocial: !0,
            headMetaRobots: !0,
            headMetaHttpEquiv: !0,
            headMetaAuthorship: !0,
            headMetaVerification: !0
        } : f === !1 ? {} : f,
        dataURLOptions: _,
        inlineImages: p,
        recordCanvas: A,
        preserveWhiteSpace: h,
        onSerialize: I,
        onIframeLoad: T,
        iframeLoadTimeout: N,
        onStylesheetLoad: g,
        stylesheetLoadTimeout: b,
        keepIframeSrcFn: S,
        newlyAddedElement: !1
    });
}
function vs(e) {
    let t, n = e[0], r = 1;
    for(; r < e.length;){
        const s = e[r], i = e[r + 1];
        if (r += 2, (s === "optionalAccess" || s === "optionalCall") && n == null) return;
        s === "access" || s === "optionalAccess" ? (t = n, n = i(n)) : (s === "call" || s === "optionalCall") && (n = i((...a)=>n.call(t, ...a)), t = void 0);
    }
    return n;
}
function hn(e, t, n = document) {
    const r = {
        capture: !0,
        passive: !0
    };
    return n.addEventListener(e, t, r), ()=>n.removeEventListener(e, t, r);
}
const ua = `Please stop import mirror directly. Instead of that,\r
now you can use replayer.getMirror() to access the mirror instance of a replayer,\r
or you can use record.mirror to access the mirror instance during recording.`;
let DR = {
    map: {},
    getId () {
        return console.error(ua), -1;
    },
    getNode () {
        return console.error(ua), null;
    },
    removeNodeFromMap () {
        console.error(ua);
    },
    has () {
        return console.error(ua), !1;
    },
    reset () {
        console.error(ua);
    }
};
typeof window < "u" && window.Proxy && window.Reflect && (DR = new Proxy(DR, {
    get (e, t, n) {
        return t === "map" && console.error(ua), Reflect.get(e, t, n);
    }
}));
function vl(e, t, n = {}) {
    let r = null, s = 0;
    return function(...i) {
        const a = Date.now();
        !s && n.leading === !1 && (s = a);
        const o = t - (a - s), l = this;
        o <= 0 || o > t ? (r && (h8(r), r = null), s = a, e.apply(l, i)) : !r && n.trailing !== !1 && (r = od(()=>{
            s = n.leading === !1 ? 0 : Date.now(), r = null, e.apply(l, i);
        }, o));
    };
}
function _C(e, t, n, r, s = window) {
    const i = s.Object.getOwnPropertyDescriptor(e, t);
    return s.Object.defineProperty(e, t, r ? n : {
        set (a) {
            od(()=>{
                n.set.call(this, a);
            }, 0), i && i.set && i.set.call(this, a);
        }
    }), ()=>_C(e, t, i || {}, !0);
}
function fA(e, t, n) {
    try {
        if (!(t in e)) return ()=>{};
        const r = e[t], s = n(r);
        return typeof s == "function" && (s.prototype = s.prototype || {}, Object.defineProperties(s, {
            __rrweb_original__: {
                enumerable: !1,
                value: r
            }
        })), e[t] = s, ()=>{
            e[t] = r;
        };
    } catch  {
        return ()=>{};
    }
}
let uE = Date.now;
/[1-9][0-9]{12}/.test(Date.now().toString()) || (uE = ()=>/* @__PURE__ */ new Date().getTime());
function NC(e) {
    const t = e.document;
    return {
        left: t.scrollingElement ? t.scrollingElement.scrollLeft : e.pageXOffset !== void 0 ? e.pageXOffset : vs([
            t,
            "optionalAccess",
            (n)=>n.documentElement,
            "access",
            (n)=>n.scrollLeft
        ]) || vs([
            t,
            "optionalAccess",
            (n)=>n.body,
            "optionalAccess",
            (n)=>n.parentElement,
            "optionalAccess",
            (n)=>n.scrollLeft
        ]) || vs([
            t,
            "optionalAccess",
            (n)=>n.body,
            "optionalAccess",
            (n)=>n.scrollLeft
        ]) || 0,
        top: t.scrollingElement ? t.scrollingElement.scrollTop : e.pageYOffset !== void 0 ? e.pageYOffset : vs([
            t,
            "optionalAccess",
            (n)=>n.documentElement,
            "access",
            (n)=>n.scrollTop
        ]) || vs([
            t,
            "optionalAccess",
            (n)=>n.body,
            "optionalAccess",
            (n)=>n.parentElement,
            "optionalAccess",
            (n)=>n.scrollTop
        ]) || vs([
            t,
            "optionalAccess",
            (n)=>n.body,
            "optionalAccess",
            (n)=>n.scrollTop
        ]) || 0
    };
}
function IC() {
    return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight;
}
function OC() {
    return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth;
}
function CC(e) {
    return e ? e.nodeType === e.ELEMENT_NODE ? e : e.parentElement : null;
}
function Yn(e, t, n, r, s) {
    if (!e) return !1;
    const i = CC(e);
    if (!i) return !1;
    const a = Oa(t, n);
    if (!s) {
        const c = r && i.matches(r);
        return a(i) && !c;
    }
    const o = yi(i, a);
    let l = -1;
    return o < 0 ? !1 : (r && (l = yi(i, Oa(null, r))), o > -1 && l < 0 ? !0 : o < l);
}
function u8(e, t) {
    return t.getId(e) !== -1;
}
function Nf(e, t) {
    return t.getId(e) === yl;
}
function gC(e, t) {
    if (el(e)) return !1;
    const n = t.getId(e);
    return t.has(n) ? e.parentNode && e.parentNode.nodeType === e.DOCUMENT_NODE ? !1 : e.parentNode ? gC(e.parentNode, t) : !0 : !0;
}
function RT(e) {
    return !!e.changedTouches;
}
function E8(e = window) {
    "NodeList" in e && !e.NodeList.prototype.forEach && (e.NodeList.prototype.forEach = Array.prototype.forEach), "DOMTokenList" in e && !e.DOMTokenList.prototype.forEach && (e.DOMTokenList.prototype.forEach = Array.prototype.forEach), Node.prototype.contains || (Node.prototype.contains = (...t)=>{
        let n = t[0];
        if (!(0 in t)) throw new TypeError("1 argument is required");
        do if (this === n) return !0;
        while (n = n && n.parentNode)
        return !1;
    });
}
function LC(e, t) {
    return !!(e.nodeName === "IFRAME" && t.getMeta(e));
}
function yC(e, t) {
    return !!(e.nodeName === "LINK" && e.nodeType === e.ELEMENT_NODE && e.getAttribute && e.getAttribute("rel") === "stylesheet" && t.getMeta(e));
}
function mT(e) {
    return !!vs([
        e,
        "optionalAccess",
        (t)=>t.shadowRoot
    ]);
}
class d8 {
    constructor(){
        this.id = 1, this.styleIDMap = /* @__PURE__ */ new WeakMap(), this.idStyleMap = /* @__PURE__ */ new Map();
    }
    getId(t) {
        return wP(this.styleIDMap.get(t), ()=>-1);
    }
    has(t) {
        return this.styleIDMap.has(t);
    }
    add(t, n) {
        if (this.has(t)) return this.getId(t);
        let r;
        return n === void 0 ? r = this.id++ : r = n, this.styleIDMap.set(t, r), this.idStyleMap.set(r, t), r;
    }
    getStyle(t) {
        return this.idStyleMap.get(t) || null;
    }
    reset() {
        this.styleIDMap = /* @__PURE__ */ new WeakMap(), this.idStyleMap = /* @__PURE__ */ new Map(), this.id = 1;
    }
    generateId() {
        return this.id++;
    }
}
function vC(e) {
    let t = null;
    return vs([
        e,
        "access",
        (n)=>n.getRootNode,
        "optionalCall",
        (n)=>n(),
        "optionalAccess",
        (n)=>n.nodeType
    ]) === Node.DOCUMENT_FRAGMENT_NODE && e.getRootNode().host && (t = e.getRootNode().host), t;
}
function f8(e) {
    let t = e, n;
    for(; n = vC(t);)t = n;
    return t;
}
function p8(e) {
    const t = e.ownerDocument;
    if (!t) return !1;
    const n = f8(e);
    return t.contains(n);
}
function bC(e) {
    const t = e.ownerDocument;
    return t ? t.contains(e) || p8(e) : !1;
}
const wR = {};
function pA(e) {
    const t = wR[e];
    if (t) return t;
    const n = window.document;
    let r = window[e];
    if (n && typeof n.createElement == "function") try {
        const s = n.createElement("iframe");
        s.hidden = !0, n.head.appendChild(s);
        const i = s.contentWindow;
        i && i[e] && (r = i[e]), n.head.removeChild(s);
    } catch  {}
    return wR[e] = r.bind(window);
}
function T8(...e) {
    return pA("requestAnimationFrame")(...e);
}
function od(...e) {
    return pA("setTimeout")(...e);
}
function h8(...e) {
    return pA("clearTimeout")(...e);
}
var ge = /* @__PURE__ */ ((e)=>(e[e.DomContentLoaded = 0] = "DomContentLoaded", e[e.Load = 1] = "Load", e[e.FullSnapshot = 2] = "FullSnapshot", e[e.IncrementalSnapshot = 3] = "IncrementalSnapshot", e[e.Meta = 4] = "Meta", e[e.Custom = 5] = "Custom", e[e.Plugin = 6] = "Plugin", e))(ge || {}), Re = /* @__PURE__ */ ((e)=>(e[e.Mutation = 0] = "Mutation", e[e.MouseMove = 1] = "MouseMove", e[e.MouseInteraction = 2] = "MouseInteraction", e[e.Scroll = 3] = "Scroll", e[e.ViewportResize = 4] = "ViewportResize", e[e.Input = 5] = "Input", e[e.TouchMove = 6] = "TouchMove", e[e.MediaInteraction = 7] = "MediaInteraction", e[e.StyleSheetRule = 8] = "StyleSheetRule", e[e.CanvasMutation = 9] = "CanvasMutation", e[e.Font = 10] = "Font", e[e.Log = 11] = "Log", e[e.Drag = 12] = "Drag", e[e.StyleDeclaration = 13] = "StyleDeclaration", e[e.Selection = 14] = "Selection", e[e.AdoptedStyleSheet = 15] = "AdoptedStyleSheet", e[e.CustomElement = 16] = "CustomElement", e))(Re || {}), fn = /* @__PURE__ */ ((e)=>(e[e.MouseUp = 0] = "MouseUp", e[e.MouseDown = 1] = "MouseDown", e[e.Click = 2] = "Click", e[e.ContextMenu = 3] = "ContextMenu", e[e.DblClick = 4] = "DblClick", e[e.Focus = 5] = "Focus", e[e.Blur = 6] = "Blur", e[e.TouchStart = 7] = "TouchStart", e[e.TouchMove_Departed = 8] = "TouchMove_Departed", e[e.TouchEnd = 9] = "TouchEnd", e[e.TouchCancel = 10] = "TouchCancel", e))(fn || {}), Cs = /* @__PURE__ */ ((e)=>(e[e.Mouse = 0] = "Mouse", e[e.Pen = 1] = "Pen", e[e.Touch = 2] = "Touch", e))(Cs || {}), xR;
(function(e) {
    e[e.Document = 0] = "Document", e[e.DocumentType = 1] = "DocumentType", e[e.Element = 2] = "Element", e[e.Text = 3] = "Text", e[e.CDATA = 4] = "CDATA", e[e.Comment = 5] = "Comment";
})(xR || (xR = {}));
var UR;
(function(e) {
    e[e.PLACEHOLDER = 0] = "PLACEHOLDER", e[e.ELEMENT_NODE = 1] = "ELEMENT_NODE", e[e.ATTRIBUTE_NODE = 2] = "ATTRIBUTE_NODE", e[e.TEXT_NODE = 3] = "TEXT_NODE", e[e.CDATA_SECTION_NODE = 4] = "CDATA_SECTION_NODE", e[e.ENTITY_REFERENCE_NODE = 5] = "ENTITY_REFERENCE_NODE", e[e.ENTITY_NODE = 6] = "ENTITY_NODE", e[e.PROCESSING_INSTRUCTION_NODE = 7] = "PROCESSING_INSTRUCTION_NODE", e[e.COMMENT_NODE = 8] = "COMMENT_NODE", e[e.DOCUMENT_NODE = 9] = "DOCUMENT_NODE", e[e.DOCUMENT_TYPE_NODE = 10] = "DOCUMENT_TYPE_NODE", e[e.DOCUMENT_FRAGMENT_NODE = 11] = "DOCUMENT_FRAGMENT_NODE";
})(UR || (UR = {}));
function TA(e) {
    try {
        return e.contentDocument;
    } catch  {}
}
function A8(e) {
    try {
        return e.contentWindow;
    } catch  {}
}
function S8(e) {
    let t, n = e[0], r = 1;
    for(; r < e.length;){
        const s = e[r], i = e[r + 1];
        if (r += 2, (s === "optionalAccess" || s === "optionalCall") && n == null) return;
        s === "access" || s === "optionalAccess" ? (t = n, n = i(n)) : (s === "call" || s === "optionalCall") && (n = i((...a)=>n.call(t, ...a)), t = void 0);
    }
    return n;
}
function FR(e) {
    return "__ln" in e;
}
class R8 {
    constructor(){
        this.length = 0, this.head = null, this.tail = null;
    }
    get(t) {
        if (t >= this.length) throw new Error("Position outside of list range");
        let n = this.head;
        for(let r = 0; r < t; r++)n = S8([
            n,
            "optionalAccess",
            (s)=>s.next
        ]) || null;
        return n;
    }
    addNode(t) {
        const n = {
            value: t,
            previous: null,
            next: null
        };
        if (t.__ln = n, t.previousSibling && FR(t.previousSibling)) {
            const r = t.previousSibling.__ln.next;
            n.next = r, n.previous = t.previousSibling.__ln, t.previousSibling.__ln.next = n, r && (r.previous = n);
        } else if (t.nextSibling && FR(t.nextSibling) && t.nextSibling.__ln.previous) {
            const r = t.nextSibling.__ln.previous;
            n.previous = r, n.next = t.nextSibling.__ln, t.nextSibling.__ln.previous = n, r && (r.next = n);
        } else this.head && (this.head.previous = n), n.next = this.head, this.head = n;
        n.next === null && (this.tail = n), this.length++;
    }
    removeNode(t) {
        const n = t.__ln;
        this.head && (n.previous ? (n.previous.next = n.next, n.next ? n.next.previous = n.previous : this.tail = n.previous) : (this.head = n.next, this.head ? this.head.previous = null : this.tail = null), t.__ln && delete t.__ln, this.length--);
    }
}
const BR = (e, t)=>`${e}@${t}`;
class m8 {
    constructor(){
        this.frozen = !1, this.locked = !1, this.texts = [], this.attributes = [], this.attributeMap = /* @__PURE__ */ new WeakMap(), this.removes = [], this.mapRemoves = [], this.movedMap = {}, this.addedSet = /* @__PURE__ */ new Set(), this.movedSet = /* @__PURE__ */ new Set(), this.droppedSet = /* @__PURE__ */ new Set(), this.processMutations = (t)=>{
            t.forEach(this.processMutation), this.emit();
        }, this.emit = ()=>{
            if (this.frozen || this.locked) return;
            const t = [], n = /* @__PURE__ */ new Set(), r = new R8(), s = (l)=>{
                let c = l, u = yl;
                for(; u === yl;)c = c && c.nextSibling, u = c && this.mirror.getId(c);
                return u;
            }, i = (l)=>{
                if (!l.parentNode || !bC(l)) return;
                const c = el(l.parentNode) ? this.mirror.getId(vC(l)) : this.mirror.getId(l.parentNode), u = s(l);
                if (c === -1 || u === -1) return r.addNode(l);
                const E = Ca(l, {
                    doc: this.doc,
                    mirror: this.mirror,
                    blockClass: this.blockClass,
                    blockSelector: this.blockSelector,
                    maskAllText: this.maskAllText,
                    unblockSelector: this.unblockSelector,
                    maskTextClass: this.maskTextClass,
                    unmaskTextClass: this.unmaskTextClass,
                    maskTextSelector: this.maskTextSelector,
                    unmaskTextSelector: this.unmaskTextSelector,
                    skipChild: !0,
                    newlyAddedElement: !0,
                    inlineStylesheet: this.inlineStylesheet,
                    maskInputOptions: this.maskInputOptions,
                    maskAttributeFn: this.maskAttributeFn,
                    maskTextFn: this.maskTextFn,
                    maskInputFn: this.maskInputFn,
                    slimDOMOptions: this.slimDOMOptions,
                    dataURLOptions: this.dataURLOptions,
                    recordCanvas: this.recordCanvas,
                    inlineImages: this.inlineImages,
                    onSerialize: (p)=>{
                        LC(p, this.mirror) && !Yn(p, this.blockClass, this.blockSelector, this.unblockSelector, !1) && this.iframeManager.addIframe(p), yC(p, this.mirror) && this.stylesheetManager.trackLinkElement(p), mT(l) && this.shadowDomManager.addShadowRoot(l.shadowRoot, this.doc);
                    },
                    onIframeLoad: (p, A)=>{
                        Yn(p, this.blockClass, this.blockSelector, this.unblockSelector, !1) || (this.iframeManager.attachIframe(p, A), p.contentWindow && this.canvasManager.addWindow(p.contentWindow), this.shadowDomManager.observeAttachShadow(p));
                    },
                    onStylesheetLoad: (p, A)=>{
                        this.stylesheetManager.attachLinkElement(p, A);
                    }
                });
                E && (t.push({
                    parentId: c,
                    nextId: u,
                    node: E
                }), n.add(E.id));
            };
            for(; this.mapRemoves.length;)this.mirror.removeNodeFromMap(this.mapRemoves.shift());
            for (const l of this.movedSet)GR(this.removes, l, this.mirror) && !this.movedSet.has(l.parentNode) || i(l);
            for (const l of this.addedSet)!kR(this.droppedSet, l) && !GR(this.removes, l, this.mirror) || kR(this.movedSet, l) ? i(l) : this.droppedSet.add(l);
            let a = null;
            for(; r.length;){
                let l = null;
                if (a) {
                    const c = this.mirror.getId(a.value.parentNode), u = s(a.value);
                    c !== -1 && u !== -1 && (l = a);
                }
                if (!l) {
                    let c = r.tail;
                    for(; c;){
                        const u = c;
                        if (c = c.previous, u) {
                            const E = this.mirror.getId(u.value.parentNode);
                            if (s(u.value) === -1) continue;
                            if (E !== -1) {
                                l = u;
                                break;
                            } else {
                                const A = u.value;
                                if (A.parentNode && A.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
                                    const R = A.parentNode.host;
                                    if (this.mirror.getId(R) !== -1) {
                                        l = u;
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                if (!l) {
                    for(; r.head;)r.removeNode(r.head.value);
                    break;
                }
                a = l.previous, r.removeNode(l.value), i(l.value);
            }
            const o = {
                texts: this.texts.map((l)=>({
                        id: this.mirror.getId(l.node),
                        value: l.value
                    })).filter((l)=>!n.has(l.id)).filter((l)=>this.mirror.has(l.id)),
                attributes: this.attributes.map((l)=>{
                    const { attributes: c } = l;
                    if (typeof c.style == "string") {
                        const u = JSON.stringify(l.styleDiff), E = JSON.stringify(l._unchangedStyles);
                        u.length < c.style.length && (u + E).split("var(").length === c.style.split("var(").length && (c.style = l.styleDiff);
                    }
                    return {
                        id: this.mirror.getId(l.node),
                        attributes: c
                    };
                }).filter((l)=>!n.has(l.id)).filter((l)=>this.mirror.has(l.id)),
                removes: this.removes,
                adds: t
            };
            !o.texts.length && !o.attributes.length && !o.removes.length && !o.adds.length || (this.texts = [], this.attributes = [], this.attributeMap = /* @__PURE__ */ new WeakMap(), this.removes = [], this.addedSet = /* @__PURE__ */ new Set(), this.movedSet = /* @__PURE__ */ new Set(), this.droppedSet = /* @__PURE__ */ new Set(), this.movedMap = {}, this.mutationCb(o));
        }, this.processMutation = (t)=>{
            if (!Nf(t.target, this.mirror)) switch(t.type){
                case "characterData":
                    {
                        const n = t.target.textContent;
                        !Yn(t.target, this.blockClass, this.blockSelector, this.unblockSelector, !1) && n !== t.oldValue && this.texts.push({
                            value: to(t.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && n ? this.maskTextFn ? this.maskTextFn(n, CC(t.target)) : n.replace(/[\S]/g, "*") : n,
                            node: t.target
                        });
                        break;
                    }
                case "attributes":
                    {
                        const n = t.target;
                        let r = t.attributeName, s = t.target.getAttribute(r);
                        if (r === "value") {
                            const a = EA(n), o = n.tagName;
                            s = lE(n, o, a);
                            const l = id({
                                maskInputOptions: this.maskInputOptions,
                                tagName: o,
                                type: a
                            }), c = to(t.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, l);
                            s = Ll({
                                isMasked: c,
                                element: n,
                                value: s,
                                maskInputFn: this.maskInputFn
                            });
                        }
                        if (Yn(t.target, this.blockClass, this.blockSelector, this.unblockSelector, !1) || s === t.oldValue) return;
                        let i = this.attributeMap.get(t.target);
                        if (n.tagName === "IFRAME" && r === "src" && !this.keepIframeSrcFn(s)) if (!TA(n)) r = "rr_src";
                        else return;
                        if (i || (i = {
                            node: t.target,
                            attributes: {},
                            styleDiff: {},
                            _unchangedStyles: {}
                        }, this.attributes.push(i), this.attributeMap.set(t.target, i)), r === "type" && n.tagName === "INPUT" && (t.oldValue || "").toLowerCase() === "password" && n.setAttribute("data-rr-is-password", "true"), !mC(n.tagName, r) && (i.attributes[r] = RC(this.doc, eo(n.tagName), eo(r), s, n, this.maskAttributeFn), r === "style")) {
                            if (!this.unattachedDoc) try {
                                this.unattachedDoc = document.implementation.createHTMLDocument();
                            } catch  {
                                this.unattachedDoc = this.doc;
                            }
                            const a = this.unattachedDoc.createElement("span");
                            t.oldValue && a.setAttribute("style", t.oldValue);
                            for (const o of Array.from(n.style)){
                                const l = n.style.getPropertyValue(o), c = n.style.getPropertyPriority(o);
                                l !== a.style.getPropertyValue(o) || c !== a.style.getPropertyPriority(o) ? c === "" ? i.styleDiff[o] = l : i.styleDiff[o] = [
                                    l,
                                    c
                                ] : i._unchangedStyles[o] = [
                                    l,
                                    c
                                ];
                            }
                            for (const o of Array.from(a.style))n.style.getPropertyValue(o) === "" && (i.styleDiff[o] = !1);
                        }
                        break;
                    }
                case "childList":
                    {
                        if (Yn(t.target, this.blockClass, this.blockSelector, this.unblockSelector, !0)) return;
                        t.addedNodes.forEach((n)=>this.genAdds(n, t.target)), t.removedNodes.forEach((n)=>{
                            const r = this.mirror.getId(n), s = el(t.target) ? this.mirror.getId(t.target.host) : this.mirror.getId(t.target);
                            Yn(t.target, this.blockClass, this.blockSelector, this.unblockSelector, !1) || Nf(n, this.mirror) || !u8(n, this.mirror) || (this.addedSet.has(n) ? (_T(this.addedSet, n), this.droppedSet.add(n)) : this.addedSet.has(t.target) && r === -1 || gC(t.target, this.mirror) || (this.movedSet.has(n) && this.movedMap[BR(r, s)] ? _T(this.movedSet, n) : this.removes.push({
                                parentId: s,
                                id: r,
                                isShadow: el(t.target) && tl(t.target) ? !0 : void 0
                            })), this.mapRemoves.push(n));
                        });
                        break;
                    }
            }
        }, this.genAdds = (t, n)=>{
            if (!this.processedNodeManager.inOtherBuffer(t, this) && !(this.addedSet.has(t) || this.movedSet.has(t))) {
                if (this.mirror.hasNode(t)) {
                    if (Nf(t, this.mirror)) return;
                    this.movedSet.add(t);
                    let r = null;
                    n && this.mirror.hasNode(n) && (r = this.mirror.getId(n)), r && r !== -1 && (this.movedMap[BR(this.mirror.getId(t), r)] = !0);
                } else this.addedSet.add(t), this.droppedSet.delete(t);
                Yn(t, this.blockClass, this.blockSelector, this.unblockSelector, !1) || (t.childNodes.forEach((r)=>this.genAdds(r)), mT(t) && t.shadowRoot.childNodes.forEach((r)=>{
                    this.processedNodeManager.add(r, this), this.genAdds(r, t);
                }));
            }
        };
    }
    init(t) {
        [
            "mutationCb",
            "blockClass",
            "blockSelector",
            "unblockSelector",
            "maskAllText",
            "maskTextClass",
            "unmaskTextClass",
            "maskTextSelector",
            "unmaskTextSelector",
            "inlineStylesheet",
            "maskInputOptions",
            "maskAttributeFn",
            "maskTextFn",
            "maskInputFn",
            "keepIframeSrcFn",
            "recordCanvas",
            "inlineImages",
            "slimDOMOptions",
            "dataURLOptions",
            "doc",
            "mirror",
            "iframeManager",
            "stylesheetManager",
            "shadowDomManager",
            "canvasManager",
            "processedNodeManager"
        ].forEach((n)=>{
            this[n] = t[n];
        });
    }
    freeze() {
        this.frozen = !0, this.canvasManager.freeze();
    }
    unfreeze() {
        this.frozen = !1, this.canvasManager.unfreeze(), this.emit();
    }
    isFrozen() {
        return this.frozen;
    }
    lock() {
        this.locked = !0, this.canvasManager.lock();
    }
    unlock() {
        this.locked = !1, this.canvasManager.unlock(), this.emit();
    }
    reset() {
        this.shadowDomManager.reset(), this.canvasManager.reset();
    }
}
function _T(e, t) {
    e.delete(t), t.childNodes.forEach((n)=>_T(e, n));
}
function GR(e, t, n) {
    return e.length === 0 ? !1 : _8(e, t, n);
}
function _8(e, t, n) {
    let r = t.parentNode;
    for(; r;){
        const s = n.getId(r);
        if (e.some((i)=>i.id === s)) return !0;
        r = r.parentNode;
    }
    return !1;
}
function kR(e, t) {
    return e.size === 0 ? !1 : PC(e, t);
}
function PC(e, t) {
    const { parentNode: n } = t;
    return n ? e.has(n) ? !0 : PC(e, n) : !1;
}
let nl;
function N8(e) {
    nl = e;
}
function I8() {
    nl = void 0;
}
const Ue = (e)=>nl ? (...n)=>{
        try {
            return e(...n);
        } catch (r) {
            if (nl && nl(r) === !0) return ()=>{};
            throw r;
        }
    } : e;
function Ar(e) {
    let t, n = e[0], r = 1;
    for(; r < e.length;){
        const s = e[r], i = e[r + 1];
        if (r += 2, (s === "optionalAccess" || s === "optionalCall") && n == null) return;
        s === "access" || s === "optionalAccess" ? (t = n, n = i(n)) : (s === "call" || s === "optionalCall") && (n = i((...a)=>n.call(t, ...a)), t = void 0);
    }
    return n;
}
const ga = [];
function $l(e) {
    try {
        if ("composedPath" in e) {
            const t = e.composedPath();
            if (t.length) return t[0];
        } else if ("path" in e && e.path.length) return e.path[0];
    } catch  {}
    return e && e.target;
}
function MC(e, t) {
    const n = new m8();
    ga.push(n), n.init(e);
    let r = window.MutationObserver || window.__rrMutationObserver;
    const s = Ar([
        window,
        "optionalAccess",
        (a)=>a.Zone,
        "optionalAccess",
        (a)=>a.__symbol__,
        "optionalCall",
        (a)=>a("MutationObserver")
    ]);
    s && window[s] && (r = window[s]);
    const i = new r(Ue((a)=>{
        e.onMutation && e.onMutation(a) === !1 || n.processMutations.bind(n)(a);
    }));
    return i.observe(t, {
        attributes: !0,
        attributeOldValue: !0,
        characterData: !0,
        characterDataOldValue: !0,
        childList: !0,
        subtree: !0
    }), i;
}
function O8({ mousemoveCb: e, sampling: t, doc: n, mirror: r }) {
    if (t.mousemove === !1) return ()=>{};
    const s = typeof t.mousemove == "number" ? t.mousemove : 50, i = typeof t.mousemoveCallback == "number" ? t.mousemoveCallback : 500;
    let a = [], o;
    const l = vl(Ue((E)=>{
        const p = Date.now() - o;
        e(a.map((A)=>(A.timeOffset -= p, A)), E), a = [], o = null;
    }), i), c = Ue(vl(Ue((E)=>{
        const p = $l(E), { clientX: A, clientY: R } = RT(E) ? E.changedTouches[0] : E;
        o || (o = uE()), a.push({
            x: A,
            y: R,
            id: r.getId(p),
            timeOffset: uE() - o
        }), l(typeof DragEvent < "u" && E instanceof DragEvent ? Re.Drag : E instanceof MouseEvent ? Re.MouseMove : Re.TouchMove);
    }), s, {
        trailing: !1
    })), u = [
        hn("mousemove", c, n),
        hn("touchmove", c, n),
        hn("drag", c, n)
    ];
    return Ue(()=>{
        u.forEach((E)=>E());
    });
}
function C8({ mouseInteractionCb: e, doc: t, mirror: n, blockClass: r, blockSelector: s, unblockSelector: i, sampling: a }) {
    if (a.mouseInteraction === !1) return ()=>{};
    const o = a.mouseInteraction === !0 || a.mouseInteraction === void 0 ? {} : a.mouseInteraction, l = [];
    let c = null;
    const u = (E)=>(p)=>{
            const A = $l(p);
            if (Yn(A, r, s, i, !0)) return;
            let R = null, C = E;
            if ("pointerType" in p) {
                switch(p.pointerType){
                    case "mouse":
                        R = Cs.Mouse;
                        break;
                    case "touch":
                        R = Cs.Touch;
                        break;
                    case "pen":
                        R = Cs.Pen;
                        break;
                }
                R === Cs.Touch && (fn[E] === fn.MouseDown ? C = "TouchStart" : fn[E] === fn.MouseUp && (C = "TouchEnd"));
            } else RT(p) && (R = Cs.Touch);
            R !== null ? (c = R, (C.startsWith("Touch") && R === Cs.Touch || C.startsWith("Mouse") && R === Cs.Mouse) && (R = null)) : fn[E] === fn.Click && (R = c, c = null);
            const O = RT(p) ? p.changedTouches[0] : p;
            if (!O) return;
            const d = n.getId(A), { clientX: f, clientY: _ } = O;
            Ue(e)({
                type: fn[C],
                id: d,
                x: f,
                y: _,
                ...R !== null && {
                    pointerType: R
                }
            });
        };
    return Object.keys(fn).filter((E)=>Number.isNaN(Number(E)) && !E.endsWith("_Departed") && o[E] !== !1).forEach((E)=>{
        let p = eo(E);
        const A = u(E);
        if (window.PointerEvent) switch(fn[E]){
            case fn.MouseDown:
            case fn.MouseUp:
                p = p.replace("mouse", "pointer");
                break;
            case fn.TouchStart:
            case fn.TouchEnd:
                return;
        }
        l.push(hn(p, A, t));
    }), Ue(()=>{
        l.forEach((E)=>E());
    });
}
function DC({ scrollCb: e, doc: t, mirror: n, blockClass: r, blockSelector: s, unblockSelector: i, sampling: a }) {
    const o = Ue(vl(Ue((l)=>{
        const c = $l(l);
        if (!c || Yn(c, r, s, i, !0)) return;
        const u = n.getId(c);
        if (c === t && t.defaultView) {
            const E = NC(t.defaultView);
            e({
                id: u,
                x: E.left,
                y: E.top
            });
        } else e({
            id: u,
            x: c.scrollLeft,
            y: c.scrollTop
        });
    }), a.scroll || 100));
    return hn("scroll", o, t);
}
function g8({ viewportResizeCb: e }, { win: t }) {
    let n = -1, r = -1;
    const s = Ue(vl(Ue(()=>{
        const i = IC(), a = OC();
        (n !== i || r !== a) && (e({
            width: Number(a),
            height: Number(i)
        }), n = i, r = a);
    }), 200));
    return hn("resize", s, t);
}
const L8 = [
    "INPUT",
    "TEXTAREA",
    "SELECT"
], HR = /* @__PURE__ */ new WeakMap();
function y8({ inputCb: e, doc: t, mirror: n, blockClass: r, blockSelector: s, unblockSelector: i, ignoreClass: a, ignoreSelector: o, maskInputOptions: l, maskInputFn: c, sampling: u, userTriggeredOnInput: E, maskTextClass: p, unmaskTextClass: A, maskTextSelector: R, unmaskTextSelector: C }) {
    function O(N) {
        let g = $l(N);
        const b = N.isTrusted, S = g && AT(g.tagName);
        if (S === "OPTION" && (g = g.parentElement), !g || !S || L8.indexOf(S) < 0 || Yn(g, r, s, i, !0)) return;
        const P = g;
        if (P.classList.contains(a) || o && P.matches(o)) return;
        const w = EA(g);
        let G = lE(P, S, w), k = !1;
        const Y = id({
            maskInputOptions: l,
            tagName: S,
            type: w
        }), H = to(g, p, R, A, C, Y);
        (w === "radio" || w === "checkbox") && (k = g.checked), G = Ll({
            isMasked: H,
            element: g,
            value: G,
            maskInputFn: c
        }), d(g, E ? {
            text: G,
            isChecked: k,
            userTriggered: b
        } : {
            text: G,
            isChecked: k
        });
        const F = g.name;
        w === "radio" && F && k && t.querySelectorAll(`input[type="radio"][name="${F}"]`).forEach((x)=>{
            if (x !== g) {
                const X = Ll({
                    isMasked: H,
                    element: x,
                    value: lE(x, S, w),
                    maskInputFn: c
                });
                d(x, E ? {
                    text: X,
                    isChecked: !k,
                    userTriggered: !1
                } : {
                    text: X,
                    isChecked: !k
                });
            }
        });
    }
    function d(N, g) {
        const b = HR.get(N);
        if (!b || b.text !== g.text || b.isChecked !== g.isChecked) {
            HR.set(N, g);
            const S = n.getId(N);
            Ue(e)({
                ...g,
                id: S
            });
        }
    }
    const _ = (u.input === "last" ? [
        "change"
    ] : [
        "input",
        "change"
    ]).map((N)=>hn(N, Ue(O), t)), h = t.defaultView;
    if (!h) return ()=>{
        _.forEach((N)=>N());
    };
    const I = h.Object.getOwnPropertyDescriptor(h.HTMLInputElement.prototype, "value"), T = [
        [
            h.HTMLInputElement.prototype,
            "value"
        ],
        [
            h.HTMLInputElement.prototype,
            "checked"
        ],
        [
            h.HTMLSelectElement.prototype,
            "value"
        ],
        [
            h.HTMLTextAreaElement.prototype,
            "value"
        ],
        [
            h.HTMLSelectElement.prototype,
            "selectedIndex"
        ],
        [
            h.HTMLOptionElement.prototype,
            "selected"
        ]
    ];
    return I && I.set && _.push(...T.map((N)=>_C(N[0], N[1], {
            set () {
                Ue(O)({
                    target: this,
                    isTrusted: !1
                });
            }
        }, !1, h))), Ue(()=>{
        _.forEach((N)=>N());
    });
}
function EE(e) {
    const t = [];
    function n(r, s) {
        if (Yc("CSSGroupingRule") && r.parentRule instanceof CSSGroupingRule || Yc("CSSMediaRule") && r.parentRule instanceof CSSMediaRule || Yc("CSSSupportsRule") && r.parentRule instanceof CSSSupportsRule || Yc("CSSConditionRule") && r.parentRule instanceof CSSConditionRule) {
            const a = Array.from(r.parentRule.cssRules).indexOf(r);
            s.unshift(a);
        } else if (r.parentStyleSheet) {
            const a = Array.from(r.parentStyleSheet.cssRules).indexOf(r);
            s.unshift(a);
        }
        return s;
    }
    return n(e, t);
}
function bs(e, t, n) {
    let r, s;
    return e ? (e.ownerNode ? r = t.getId(e.ownerNode) : s = n.getId(e), {
        styleId: s,
        id: r
    }) : {};
}
function v8({ styleSheetRuleCb: e, mirror: t, stylesheetManager: n }, { win: r }) {
    if (!r.CSSStyleSheet || !r.CSSStyleSheet.prototype) return ()=>{};
    const s = r.CSSStyleSheet.prototype.insertRule;
    r.CSSStyleSheet.prototype.insertRule = new Proxy(s, {
        apply: Ue((u, E, p)=>{
            const [A, R] = p, { id: C, styleId: O } = bs(E, t, n.styleMirror);
            return (C && C !== -1 || O && O !== -1) && e({
                id: C,
                styleId: O,
                adds: [
                    {
                        rule: A,
                        index: R
                    }
                ]
            }), u.apply(E, p);
        })
    });
    const i = r.CSSStyleSheet.prototype.deleteRule;
    r.CSSStyleSheet.prototype.deleteRule = new Proxy(i, {
        apply: Ue((u, E, p)=>{
            const [A] = p, { id: R, styleId: C } = bs(E, t, n.styleMirror);
            return (R && R !== -1 || C && C !== -1) && e({
                id: R,
                styleId: C,
                removes: [
                    {
                        index: A
                    }
                ]
            }), u.apply(E, p);
        })
    });
    let a;
    r.CSSStyleSheet.prototype.replace && (a = r.CSSStyleSheet.prototype.replace, r.CSSStyleSheet.prototype.replace = new Proxy(a, {
        apply: Ue((u, E, p)=>{
            const [A] = p, { id: R, styleId: C } = bs(E, t, n.styleMirror);
            return (R && R !== -1 || C && C !== -1) && e({
                id: R,
                styleId: C,
                replace: A
            }), u.apply(E, p);
        })
    }));
    let o;
    r.CSSStyleSheet.prototype.replaceSync && (o = r.CSSStyleSheet.prototype.replaceSync, r.CSSStyleSheet.prototype.replaceSync = new Proxy(o, {
        apply: Ue((u, E, p)=>{
            const [A] = p, { id: R, styleId: C } = bs(E, t, n.styleMirror);
            return (R && R !== -1 || C && C !== -1) && e({
                id: R,
                styleId: C,
                replaceSync: A
            }), u.apply(E, p);
        })
    }));
    const l = {};
    Vc("CSSGroupingRule") ? l.CSSGroupingRule = r.CSSGroupingRule : (Vc("CSSMediaRule") && (l.CSSMediaRule = r.CSSMediaRule), Vc("CSSConditionRule") && (l.CSSConditionRule = r.CSSConditionRule), Vc("CSSSupportsRule") && (l.CSSSupportsRule = r.CSSSupportsRule));
    const c = {};
    return Object.entries(l).forEach(([u, E])=>{
        c[u] = {
            insertRule: E.prototype.insertRule,
            deleteRule: E.prototype.deleteRule
        }, E.prototype.insertRule = new Proxy(c[u].insertRule, {
            apply: Ue((p, A, R)=>{
                const [C, O] = R, { id: d, styleId: f } = bs(A.parentStyleSheet, t, n.styleMirror);
                return (d && d !== -1 || f && f !== -1) && e({
                    id: d,
                    styleId: f,
                    adds: [
                        {
                            rule: C,
                            index: [
                                ...EE(A),
                                O || 0
                            ]
                        }
                    ]
                }), p.apply(A, R);
            })
        }), E.prototype.deleteRule = new Proxy(c[u].deleteRule, {
            apply: Ue((p, A, R)=>{
                const [C] = R, { id: O, styleId: d } = bs(A.parentStyleSheet, t, n.styleMirror);
                return (O && O !== -1 || d && d !== -1) && e({
                    id: O,
                    styleId: d,
                    removes: [
                        {
                            index: [
                                ...EE(A),
                                C
                            ]
                        }
                    ]
                }), p.apply(A, R);
            })
        });
    }), Ue(()=>{
        r.CSSStyleSheet.prototype.insertRule = s, r.CSSStyleSheet.prototype.deleteRule = i, a && (r.CSSStyleSheet.prototype.replace = a), o && (r.CSSStyleSheet.prototype.replaceSync = o), Object.entries(l).forEach(([u, E])=>{
            E.prototype.insertRule = c[u].insertRule, E.prototype.deleteRule = c[u].deleteRule;
        });
    });
}
function wC({ mirror: e, stylesheetManager: t }, n) {
    let r = null;
    n.nodeName === "#document" ? r = e.getId(n) : r = e.getId(n.host);
    const s = n.nodeName === "#document" ? Ar([
        n,
        "access",
        (a)=>a.defaultView,
        "optionalAccess",
        (a)=>a.Document
    ]) : Ar([
        n,
        "access",
        (a)=>a.ownerDocument,
        "optionalAccess",
        (a)=>a.defaultView,
        "optionalAccess",
        (a)=>a.ShadowRoot
    ]), i = Ar([
        s,
        "optionalAccess",
        (a)=>a.prototype
    ]) ? Object.getOwnPropertyDescriptor(Ar([
        s,
        "optionalAccess",
        (a)=>a.prototype
    ]), "adoptedStyleSheets") : void 0;
    return r === null || r === -1 || !s || !i ? ()=>{} : (Object.defineProperty(n, "adoptedStyleSheets", {
        configurable: i.configurable,
        enumerable: i.enumerable,
        get () {
            return Ar([
                i,
                "access",
                (a)=>a.get,
                "optionalAccess",
                (a)=>a.call,
                "call",
                (a)=>a(this)
            ]);
        },
        set (a) {
            const o = Ar([
                i,
                "access",
                (l)=>l.set,
                "optionalAccess",
                (l)=>l.call,
                "call",
                (l)=>l(this, a)
            ]);
            if (r !== null && r !== -1) try {
                t.adoptStyleSheets(a, r);
            } catch  {}
            return o;
        }
    }), Ue(()=>{
        Object.defineProperty(n, "adoptedStyleSheets", {
            configurable: i.configurable,
            enumerable: i.enumerable,
            get: i.get,
            set: i.set
        });
    }));
}
function b8({ styleDeclarationCb: e, mirror: t, ignoreCSSAttributes: n, stylesheetManager: r }, { win: s }) {
    const i = s.CSSStyleDeclaration.prototype.setProperty;
    s.CSSStyleDeclaration.prototype.setProperty = new Proxy(i, {
        apply: Ue((o, l, c)=>{
            const [u, E, p] = c;
            if (n.has(u)) return i.apply(l, [
                u,
                E,
                p
            ]);
            const { id: A, styleId: R } = bs(Ar([
                l,
                "access",
                (C)=>C.parentRule,
                "optionalAccess",
                (C)=>C.parentStyleSheet
            ]), t, r.styleMirror);
            return (A && A !== -1 || R && R !== -1) && e({
                id: A,
                styleId: R,
                set: {
                    property: u,
                    value: E,
                    priority: p
                },
                index: EE(l.parentRule)
            }), o.apply(l, c);
        })
    });
    const a = s.CSSStyleDeclaration.prototype.removeProperty;
    return s.CSSStyleDeclaration.prototype.removeProperty = new Proxy(a, {
        apply: Ue((o, l, c)=>{
            const [u] = c;
            if (n.has(u)) return a.apply(l, [
                u
            ]);
            const { id: E, styleId: p } = bs(Ar([
                l,
                "access",
                (A)=>A.parentRule,
                "optionalAccess",
                (A)=>A.parentStyleSheet
            ]), t, r.styleMirror);
            return (E && E !== -1 || p && p !== -1) && e({
                id: E,
                styleId: p,
                remove: {
                    property: u
                },
                index: EE(l.parentRule)
            }), o.apply(l, c);
        })
    }), Ue(()=>{
        s.CSSStyleDeclaration.prototype.setProperty = i, s.CSSStyleDeclaration.prototype.removeProperty = a;
    });
}
function P8({ mediaInteractionCb: e, blockClass: t, blockSelector: n, unblockSelector: r, mirror: s, sampling: i, doc: a }) {
    const o = Ue((c)=>vl(Ue((u)=>{
            const E = $l(u);
            if (!E || Yn(E, t, n, r, !0)) return;
            const { currentTime: p, volume: A, muted: R, playbackRate: C } = E;
            e({
                type: c,
                id: s.getId(E),
                currentTime: p,
                volume: A,
                muted: R,
                playbackRate: C
            });
        }), i.media || 500)), l = [
        hn("play", o(0), a),
        hn("pause", o(1), a),
        hn("seeked", o(2), a),
        hn("volumechange", o(3), a),
        hn("ratechange", o(4), a)
    ];
    return Ue(()=>{
        l.forEach((c)=>c());
    });
}
function M8({ fontCb: e, doc: t }) {
    const n = t.defaultView;
    if (!n) return ()=>{};
    const r = [], s = /* @__PURE__ */ new WeakMap(), i = n.FontFace;
    n.FontFace = function(l, c, u) {
        const E = new i(l, c, u);
        return s.set(E, {
            family: l,
            buffer: typeof c != "string",
            descriptors: u,
            fontSource: typeof c == "string" ? c : JSON.stringify(Array.from(new Uint8Array(c)))
        }), E;
    };
    const a = fA(t.fonts, "add", function(o) {
        return function(l) {
            return od(Ue(()=>{
                const c = s.get(l);
                c && (e(c), s.delete(l));
            }), 0), o.apply(this, [
                l
            ]);
        };
    });
    return r.push(()=>{
        n.FontFace = i;
    }), r.push(a), Ue(()=>{
        r.forEach((o)=>o());
    });
}
function D8(e) {
    const { doc: t, mirror: n, blockClass: r, blockSelector: s, unblockSelector: i, selectionCb: a } = e;
    let o = !0;
    const l = Ue(()=>{
        const c = t.getSelection();
        if (!c || o && Ar([
            c,
            "optionalAccess",
            (p)=>p.isCollapsed
        ])) return;
        o = c.isCollapsed || !1;
        const u = [], E = c.rangeCount || 0;
        for(let p = 0; p < E; p++){
            const A = c.getRangeAt(p), { startContainer: R, startOffset: C, endContainer: O, endOffset: d } = A;
            Yn(R, r, s, i, !0) || Yn(O, r, s, i, !0) || u.push({
                start: n.getId(R),
                startOffset: C,
                end: n.getId(O),
                endOffset: d
            });
        }
        a({
            ranges: u
        });
    });
    return l(), hn("selectionchange", l);
}
function w8({ doc: e, customElementCb: t }) {
    const n = e.defaultView;
    return !n || !n.customElements ? ()=>{} : fA(n.customElements, "define", function(s) {
        return function(i, a, o) {
            try {
                t({
                    define: {
                        name: i
                    }
                });
            } catch  {}
            return s.apply(this, [
                i,
                a,
                o
            ]);
        };
    });
}
function x8(e, t = {}) {
    const n = e.doc.defaultView;
    if (!n) return ()=>{};
    let r;
    e.recordDOM && (r = MC(e, e.doc));
    const s = O8(e), i = C8(e), a = DC(e), o = g8(e, {
        win: n
    }), l = y8(e), c = P8(e);
    let u = ()=>{}, E = ()=>{}, p = ()=>{}, A = ()=>{};
    e.recordDOM && (u = v8(e, {
        win: n
    }), E = wC(e, e.doc), p = b8(e, {
        win: n
    }), e.collectFonts && (A = M8(e)));
    const R = D8(e), C = w8(e), O = [];
    for (const d of e.plugins)O.push(d.observer(d.callback, n, d.options));
    return Ue(()=>{
        ga.forEach((d)=>d.reset()), Ar([
            r,
            "optionalAccess",
            (d)=>d.disconnect,
            "call",
            (d)=>d()
        ]), s(), i(), a(), o(), l(), c(), u(), E(), p(), A(), R(), C(), O.forEach((d)=>d());
    });
}
function Yc(e) {
    return typeof window[e] < "u";
}
function Vc(e) {
    return !!(typeof window[e] < "u" && window[e].prototype && "insertRule" in window[e].prototype && "deleteRule" in window[e].prototype);
}
class NT {
    constructor(t){
        this.generateIdFn = t, this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap(), this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap();
    }
    getId(t, n, r, s) {
        const i = r || this.getIdToRemoteIdMap(t), a = s || this.getRemoteIdToIdMap(t);
        let o = i.get(n);
        return o || (o = this.generateIdFn(), i.set(n, o), a.set(o, n)), o;
    }
    getIds(t, n) {
        const r = this.getIdToRemoteIdMap(t), s = this.getRemoteIdToIdMap(t);
        return n.map((i)=>this.getId(t, i, r, s));
    }
    getRemoteId(t, n, r) {
        const s = r || this.getRemoteIdToIdMap(t);
        if (typeof n != "number") return n;
        const i = s.get(n);
        return i || -1;
    }
    getRemoteIds(t, n) {
        const r = this.getRemoteIdToIdMap(t);
        return n.map((s)=>this.getRemoteId(t, s, r));
    }
    reset(t) {
        if (!t) {
            this.iframeIdToRemoteIdMap = /* @__PURE__ */ new WeakMap(), this.iframeRemoteIdToIdMap = /* @__PURE__ */ new WeakMap();
            return;
        }
        this.iframeIdToRemoteIdMap.delete(t), this.iframeRemoteIdToIdMap.delete(t);
    }
    getIdToRemoteIdMap(t) {
        let n = this.iframeIdToRemoteIdMap.get(t);
        return n || (n = /* @__PURE__ */ new Map(), this.iframeIdToRemoteIdMap.set(t, n)), n;
    }
    getRemoteIdToIdMap(t) {
        let n = this.iframeRemoteIdToIdMap.get(t);
        return n || (n = /* @__PURE__ */ new Map(), this.iframeRemoteIdToIdMap.set(t, n)), n;
    }
}
function YR(e) {
    let t, n = e[0], r = 1;
    for(; r < e.length;){
        const s = e[r], i = e[r + 1];
        if (r += 2, (s === "optionalAccess" || s === "optionalCall") && n == null) return;
        s === "access" || s === "optionalAccess" ? (t = n, n = i(n)) : (s === "call" || s === "optionalCall") && (n = i((...a)=>n.call(t, ...a)), t = void 0);
    }
    return n;
}
class U8 {
    constructor(){
        this.crossOriginIframeMirror = new NT(dA), this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap();
    }
    addIframe() {}
    addLoadListener() {}
    attachIframe() {}
}
class F8 {
    constructor(t){
        this.iframes = /* @__PURE__ */ new WeakMap(), this.crossOriginIframeMap = /* @__PURE__ */ new WeakMap(), this.crossOriginIframeMirror = new NT(dA), this.crossOriginIframeRootIdMap = /* @__PURE__ */ new WeakMap(), this.mutationCb = t.mutationCb, this.wrappedEmit = t.wrappedEmit, this.stylesheetManager = t.stylesheetManager, this.recordCrossOriginIframes = t.recordCrossOriginIframes, this.crossOriginIframeStyleMirror = new NT(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror)), this.mirror = t.mirror, this.recordCrossOriginIframes && window.addEventListener("message", this.handleMessage.bind(this));
    }
    addIframe(t) {
        this.iframes.set(t, !0), t.contentWindow && this.crossOriginIframeMap.set(t.contentWindow, t);
    }
    addLoadListener(t) {
        this.loadListener = t;
    }
    attachIframe(t, n) {
        this.mutationCb({
            adds: [
                {
                    parentId: this.mirror.getId(t),
                    nextId: null,
                    node: n
                }
            ],
            removes: [],
            texts: [],
            attributes: [],
            isAttachIframe: !0
        }), YR([
            this,
            "access",
            (s)=>s.loadListener,
            "optionalCall",
            (s)=>s(t)
        ]);
        const r = TA(t);
        r && r.adoptedStyleSheets && r.adoptedStyleSheets.length > 0 && this.stylesheetManager.adoptStyleSheets(r.adoptedStyleSheets, this.mirror.getId(r));
    }
    handleMessage(t) {
        const n = t;
        if (n.data.type !== "rrweb" || n.origin !== n.data.origin || !t.source) return;
        const s = this.crossOriginIframeMap.get(t.source);
        if (!s) return;
        const i = this.transformCrossOriginEvent(s, n.data.event);
        i && this.wrappedEmit(i, n.data.isCheckout);
    }
    transformCrossOriginEvent(t, n) {
        switch(n.type){
            case ge.FullSnapshot:
                {
                    this.crossOriginIframeMirror.reset(t), this.crossOriginIframeStyleMirror.reset(t), this.replaceIdOnNode(n.data.node, t);
                    const r = n.data.node.id;
                    return this.crossOriginIframeRootIdMap.set(t, r), this.patchRootIdOnNode(n.data.node, r), {
                        timestamp: n.timestamp,
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.Mutation,
                            adds: [
                                {
                                    parentId: this.mirror.getId(t),
                                    nextId: null,
                                    node: n.data.node
                                }
                            ],
                            removes: [],
                            texts: [],
                            attributes: [],
                            isAttachIframe: !0
                        }
                    };
                }
            case ge.Meta:
            case ge.Load:
            case ge.DomContentLoaded:
                return !1;
            case ge.Plugin:
                return n;
            case ge.Custom:
                return this.replaceIds(n.data.payload, t, [
                    "id",
                    "parentId",
                    "previousId",
                    "nextId"
                ]), n;
            case ge.IncrementalSnapshot:
                switch(n.data.source){
                    case Re.Mutation:
                        return n.data.adds.forEach((r)=>{
                            this.replaceIds(r, t, [
                                "parentId",
                                "nextId",
                                "previousId"
                            ]), this.replaceIdOnNode(r.node, t);
                            const s = this.crossOriginIframeRootIdMap.get(t);
                            s && this.patchRootIdOnNode(r.node, s);
                        }), n.data.removes.forEach((r)=>{
                            this.replaceIds(r, t, [
                                "parentId",
                                "id"
                            ]);
                        }), n.data.attributes.forEach((r)=>{
                            this.replaceIds(r, t, [
                                "id"
                            ]);
                        }), n.data.texts.forEach((r)=>{
                            this.replaceIds(r, t, [
                                "id"
                            ]);
                        }), n;
                    case Re.Drag:
                    case Re.TouchMove:
                    case Re.MouseMove:
                        return n.data.positions.forEach((r)=>{
                            this.replaceIds(r, t, [
                                "id"
                            ]);
                        }), n;
                    case Re.ViewportResize:
                        return !1;
                    case Re.MediaInteraction:
                    case Re.MouseInteraction:
                    case Re.Scroll:
                    case Re.CanvasMutation:
                    case Re.Input:
                        return this.replaceIds(n.data, t, [
                            "id"
                        ]), n;
                    case Re.StyleSheetRule:
                    case Re.StyleDeclaration:
                        return this.replaceIds(n.data, t, [
                            "id"
                        ]), this.replaceStyleIds(n.data, t, [
                            "styleId"
                        ]), n;
                    case Re.Font:
                        return n;
                    case Re.Selection:
                        return n.data.ranges.forEach((r)=>{
                            this.replaceIds(r, t, [
                                "start",
                                "end"
                            ]);
                        }), n;
                    case Re.AdoptedStyleSheet:
                        return this.replaceIds(n.data, t, [
                            "id"
                        ]), this.replaceStyleIds(n.data, t, [
                            "styleIds"
                        ]), YR([
                            n,
                            "access",
                            (r)=>r.data,
                            "access",
                            (r)=>r.styles,
                            "optionalAccess",
                            (r)=>r.forEach,
                            "call",
                            (r)=>r((s)=>{
                                    this.replaceStyleIds(s, t, [
                                        "styleId"
                                    ]);
                                })
                        ]), n;
                }
        }
        return !1;
    }
    replace(t, n, r, s) {
        for (const i of s)!Array.isArray(n[i]) && typeof n[i] != "number" || (Array.isArray(n[i]) ? n[i] = t.getIds(r, n[i]) : n[i] = t.getId(r, n[i]));
        return n;
    }
    replaceIds(t, n, r) {
        return this.replace(this.crossOriginIframeMirror, t, n, r);
    }
    replaceStyleIds(t, n, r) {
        return this.replace(this.crossOriginIframeStyleMirror, t, n, r);
    }
    replaceIdOnNode(t, n) {
        this.replaceIds(t, n, [
            "id",
            "rootId"
        ]), "childNodes" in t && t.childNodes.forEach((r)=>{
            this.replaceIdOnNode(r, n);
        });
    }
    patchRootIdOnNode(t, n) {
        t.type !== yt.Document && !t.rootId && (t.rootId = n), "childNodes" in t && t.childNodes.forEach((r)=>{
            this.patchRootIdOnNode(r, n);
        });
    }
}
class B8 {
    init() {}
    addShadowRoot() {}
    observeAttachShadow() {}
    reset() {}
}
class G8 {
    constructor(t){
        this.shadowDoms = /* @__PURE__ */ new WeakSet(), this.restoreHandlers = [], this.mutationCb = t.mutationCb, this.scrollCb = t.scrollCb, this.bypassOptions = t.bypassOptions, this.mirror = t.mirror, this.init();
    }
    init() {
        this.reset(), this.patchAttachShadow(Element, document);
    }
    addShadowRoot(t, n) {
        if (!tl(t) || this.shadowDoms.has(t)) return;
        this.shadowDoms.add(t), this.bypassOptions.canvasManager.addShadowRoot(t);
        const r = MC({
            ...this.bypassOptions,
            doc: n,
            mutationCb: this.mutationCb,
            mirror: this.mirror,
            shadowDomManager: this
        }, t);
        this.restoreHandlers.push(()=>r.disconnect()), this.restoreHandlers.push(DC({
            ...this.bypassOptions,
            scrollCb: this.scrollCb,
            doc: t,
            mirror: this.mirror
        })), od(()=>{
            t.adoptedStyleSheets && t.adoptedStyleSheets.length > 0 && this.bypassOptions.stylesheetManager.adoptStyleSheets(t.adoptedStyleSheets, this.mirror.getId(t.host)), this.restoreHandlers.push(wC({
                mirror: this.mirror,
                stylesheetManager: this.bypassOptions.stylesheetManager
            }, t));
        }, 0);
    }
    observeAttachShadow(t) {
        const n = TA(t), r = A8(t);
        !n || !r || this.patchAttachShadow(r.Element, n);
    }
    patchAttachShadow(t, n) {
        const r = this;
        this.restoreHandlers.push(fA(t.prototype, "attachShadow", function(s) {
            return function(i) {
                const a = s.call(this, i);
                return this.shadowRoot && bC(this) && r.addShadowRoot(this.shadowRoot, n), a;
            };
        }));
    }
    reset() {
        this.restoreHandlers.forEach((t)=>{
            try {
                t();
            } catch  {}
        }), this.restoreHandlers = [], this.shadowDoms = /* @__PURE__ */ new WeakSet(), this.bypassOptions.canvasManager.resetShadowRoots();
    }
}
class VR {
    reset() {}
    freeze() {}
    unfreeze() {}
    lock() {}
    unlock() {}
    snapshot() {}
    addWindow() {}
    addShadowRoot() {}
    resetShadowRoots() {}
}
class k8 {
    constructor(t){
        this.trackedLinkElements = /* @__PURE__ */ new WeakSet(), this.styleMirror = new d8(), this.mutationCb = t.mutationCb, this.adoptedStyleSheetCb = t.adoptedStyleSheetCb;
    }
    attachLinkElement(t, n) {
        "_cssText" in n.attributes && this.mutationCb({
            adds: [],
            removes: [],
            texts: [],
            attributes: [
                {
                    id: n.id,
                    attributes: n.attributes
                }
            ]
        }), this.trackLinkElement(t);
    }
    trackLinkElement(t) {
        this.trackedLinkElements.has(t) || (this.trackedLinkElements.add(t), this.trackStylesheetInLinkElement(t));
    }
    adoptStyleSheets(t, n) {
        if (t.length === 0) return;
        const r = {
            id: n,
            styleIds: []
        }, s = [];
        for (const i of t){
            let a;
            this.styleMirror.has(i) ? a = this.styleMirror.getId(i) : (a = this.styleMirror.add(i), s.push({
                styleId: a,
                rules: Array.from(i.rules || CSSRule, (o, l)=>({
                        rule: fC(o),
                        index: l
                    }))
            })), r.styleIds.push(a);
        }
        s.length > 0 && (r.styles = s), this.adoptedStyleSheetCb(r);
    }
    reset() {
        this.styleMirror.reset(), this.trackedLinkElements = /* @__PURE__ */ new WeakSet();
    }
    trackStylesheetInLinkElement(t) {}
}
class H8 {
    constructor(){
        this.nodeMap = /* @__PURE__ */ new WeakMap(), this.active = !1;
    }
    inOtherBuffer(t, n) {
        const r = this.nodeMap.get(t);
        return r && Array.from(r).some((s)=>s !== n);
    }
    add(t, n) {
        this.active || (this.active = !0, T8(()=>{
            this.nodeMap = /* @__PURE__ */ new WeakMap(), this.active = !1;
        })), this.nodeMap.set(t, (this.nodeMap.get(t) || /* @__PURE__ */ new Set()).add(n));
    }
    destroy() {}
}
let dt, dE;
try {
    if (Array.from([
        1
    ], (e)=>e * 2)[0] !== 2) {
        const e = document.createElement("iframe");
        document.body.appendChild(e), Array.from = pu([
            e,
            "access",
            (t)=>t.contentWindow,
            "optionalAccess",
            (t)=>t.Array,
            "access",
            (t)=>t.from
        ]) || Array.from, document.body.removeChild(e);
    }
} catch (e) {
    console.debug("Unable to override Array.from", e);
}
const dr = kw();
function ss(e = {}) {
    const { emit: t, checkoutEveryNms: n, checkoutEveryNth: r, blockClass: s = "rr-block", blockSelector: i = null, unblockSelector: a = null, ignoreClass: o = "rr-ignore", ignoreSelector: l = null, maskAllText: c = !1, maskTextClass: u = "rr-mask", unmaskTextClass: E = null, maskTextSelector: p = null, unmaskTextSelector: A = null, inlineStylesheet: R = !0, maskAllInputs: C, maskInputOptions: O, slimDOMOptions: d, maskAttributeFn: f, maskInputFn: _, maskTextFn: h, maxCanvasSize: I = null, packFn: T, sampling: N = {}, dataURLOptions: g = {}, mousemoveWait: b, recordDOM: S = !0, recordCanvas: P = !1, recordCrossOriginIframes: w = !1, recordAfter: G = e.recordAfter === "DOMContentLoaded" ? e.recordAfter : "load", userTriggeredOnInput: k = !1, collectFonts: Y = !1, inlineImages: H = !1, plugins: F, keepIframeSrcFn: x = ()=>!1, ignoreCSSAttributes: X = /* @__PURE__ */ new Set([]), errorHandler: J, onMutation: le, getCanvasManager: pe } = e;
    N8(J);
    const ve = w ? window.parent === window : !0;
    let be = !1;
    if (!ve) try {
        window.parent.document && (be = !1);
    } catch  {
        be = !0;
    }
    if (ve && !t) throw new Error("emit function is required");
    if (!ve && !be) return ()=>{};
    b !== void 0 && N.mousemove === void 0 && (N.mousemove = b), dr.reset();
    const Xe = C === !0 ? {
        color: !0,
        date: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0,
        textarea: !0,
        select: !0,
        radio: !0,
        checkbox: !0
    } : O !== void 0 ? O : {}, et = d === !0 || d === "all" ? {
        script: !0,
        comment: !0,
        headFavicon: !0,
        headWhitespace: !0,
        headMetaSocial: !0,
        headMetaRobots: !0,
        headMetaHttpEquiv: !0,
        headMetaVerification: !0,
        headMetaAuthorship: d === "all",
        headMetaDescKeywords: d === "all"
    } : d || {};
    E8();
    let Be, en = 0;
    const Ht = (_e)=>{
        for (const tn of F || [])tn.eventProcessor && (_e = tn.eventProcessor(_e));
        return T && !be && (_e = T(_e)), _e;
    };
    dt = (_e, tn)=>{
        const Oe = _e;
        if (Oe.timestamp = uE(), pu([
            ga,
            "access",
            (Ve)=>Ve[0],
            "optionalAccess",
            (Ve)=>Ve.isFrozen,
            "call",
            (Ve)=>Ve()
        ]) && Oe.type !== ge.FullSnapshot && !(Oe.type === ge.IncrementalSnapshot && Oe.data.source === Re.Mutation) && ga.forEach((Ve)=>Ve.unfreeze()), ve) pu([
            t,
            "optionalCall",
            (Ve)=>Ve(Ht(Oe), tn)
        ]);
        else if (be) {
            const Ve = {
                type: "rrweb",
                event: Ht(Oe),
                origin: window.location.origin,
                isCheckout: tn
            };
            window.parent.postMessage(Ve, "*");
        }
        if (Oe.type === ge.FullSnapshot) Be = Oe, en = 0;
        else if (Oe.type === ge.IncrementalSnapshot) {
            if (Oe.data.source === Re.Mutation && Oe.data.isAttachIframe) return;
            en++;
            const Ve = r && en >= r, Ie = n && Be && Oe.timestamp - Be.timestamp > n;
            (Ve || Ie) && ne(!0);
        }
    };
    const Ke = (_e)=>{
        dt({
            type: ge.IncrementalSnapshot,
            data: {
                source: Re.Mutation,
                ..._e
            }
        });
    }, ut = (_e)=>dt({
            type: ge.IncrementalSnapshot,
            data: {
                source: Re.Scroll,
                ..._e
            }
        }), Yt = (_e)=>dt({
            type: ge.IncrementalSnapshot,
            data: {
                source: Re.CanvasMutation,
                ..._e
            }
        }), Or = (_e)=>dt({
            type: ge.IncrementalSnapshot,
            data: {
                source: Re.AdoptedStyleSheet,
                ..._e
            }
        }), En = new k8({
        mutationCb: Ke,
        adoptedStyleSheetCb: Or
    }), xn = typeof __RRWEB_EXCLUDE_IFRAME__ == "boolean" && __RRWEB_EXCLUDE_IFRAME__ ? new U8() : new F8({
        mirror: dr,
        mutationCb: Ke,
        stylesheetManager: En,
        recordCrossOriginIframes: w,
        wrappedEmit: dt
    });
    for (const _e of F || [])_e.getMirror && _e.getMirror({
        nodeMirror: dr,
        crossOriginIframeMirror: xn.crossOriginIframeMirror,
        crossOriginIframeStyleMirror: xn.crossOriginIframeStyleMirror
    });
    const _s = new H8(), Ai = V8(pe, {
        mirror: dr,
        win: window,
        mutationCb: (_e)=>dt({
                type: ge.IncrementalSnapshot,
                data: {
                    source: Re.CanvasMutation,
                    ..._e
                }
            }),
        recordCanvas: P,
        blockClass: s,
        blockSelector: i,
        unblockSelector: a,
        maxCanvasSize: I,
        sampling: N.canvas,
        dataURLOptions: g,
        errorHandler: J
    }), Vr = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ == "boolean" && __RRWEB_EXCLUDE_SHADOW_DOM__ ? new B8() : new G8({
        mutationCb: Ke,
        scrollCb: ut,
        bypassOptions: {
            onMutation: le,
            blockClass: s,
            blockSelector: i,
            unblockSelector: a,
            maskAllText: c,
            maskTextClass: u,
            unmaskTextClass: E,
            maskTextSelector: p,
            unmaskTextSelector: A,
            inlineStylesheet: R,
            maskInputOptions: Xe,
            dataURLOptions: g,
            maskAttributeFn: f,
            maskTextFn: h,
            maskInputFn: _,
            recordCanvas: P,
            inlineImages: H,
            sampling: N,
            slimDOMOptions: et,
            iframeManager: xn,
            stylesheetManager: En,
            canvasManager: Ai,
            keepIframeSrcFn: x,
            processedNodeManager: _s
        },
        mirror: dr
    }), ne = (_e = !1)=>{
        if (!S) return;
        dt({
            type: ge.Meta,
            data: {
                href: window.location.href,
                width: OC(),
                height: IC()
            }
        }, _e), En.reset(), Vr.init(), ga.forEach((Oe)=>Oe.lock());
        const tn = c8(document, {
            mirror: dr,
            blockClass: s,
            blockSelector: i,
            unblockSelector: a,
            maskAllText: c,
            maskTextClass: u,
            unmaskTextClass: E,
            maskTextSelector: p,
            unmaskTextSelector: A,
            inlineStylesheet: R,
            maskAllInputs: Xe,
            maskAttributeFn: f,
            maskInputFn: _,
            maskTextFn: h,
            slimDOM: et,
            dataURLOptions: g,
            recordCanvas: P,
            inlineImages: H,
            onSerialize: (Oe)=>{
                LC(Oe, dr) && xn.addIframe(Oe), yC(Oe, dr) && En.trackLinkElement(Oe), mT(Oe) && Vr.addShadowRoot(Oe.shadowRoot, document);
            },
            onIframeLoad: (Oe, Ve)=>{
                xn.attachIframe(Oe, Ve), Oe.contentWindow && Ai.addWindow(Oe.contentWindow), Vr.observeAttachShadow(Oe);
            },
            onStylesheetLoad: (Oe, Ve)=>{
                En.attachLinkElement(Oe, Ve);
            },
            keepIframeSrcFn: x
        });
        if (!tn) return console.warn("Failed to snapshot the document");
        dt({
            type: ge.FullSnapshot,
            data: {
                node: tn,
                initialOffset: NC(window)
            }
        }), ga.forEach((Oe)=>Oe.unlock()), document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0 && En.adoptStyleSheets(document.adoptedStyleSheets, dr.getId(document));
    };
    dE = ne;
    try {
        const _e = [], tn = (Ve)=>Ue(x8)({
                onMutation: le,
                mutationCb: Ke,
                mousemoveCb: (Ie, Un)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Un,
                            positions: Ie
                        }
                    }),
                mouseInteractionCb: (Ie)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.MouseInteraction,
                            ...Ie
                        }
                    }),
                scrollCb: ut,
                viewportResizeCb: (Ie)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.ViewportResize,
                            ...Ie
                        }
                    }),
                inputCb: (Ie)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.Input,
                            ...Ie
                        }
                    }),
                mediaInteractionCb: (Ie)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.MediaInteraction,
                            ...Ie
                        }
                    }),
                styleSheetRuleCb: (Ie)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.StyleSheetRule,
                            ...Ie
                        }
                    }),
                styleDeclarationCb: (Ie)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.StyleDeclaration,
                            ...Ie
                        }
                    }),
                canvasMutationCb: Yt,
                fontCb: (Ie)=>dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.Font,
                            ...Ie
                        }
                    }),
                selectionCb: (Ie)=>{
                    dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.Selection,
                            ...Ie
                        }
                    });
                },
                customElementCb: (Ie)=>{
                    dt({
                        type: ge.IncrementalSnapshot,
                        data: {
                            source: Re.CustomElement,
                            ...Ie
                        }
                    });
                },
                blockClass: s,
                ignoreClass: o,
                ignoreSelector: l,
                maskAllText: c,
                maskTextClass: u,
                unmaskTextClass: E,
                maskTextSelector: p,
                unmaskTextSelector: A,
                maskInputOptions: Xe,
                inlineStylesheet: R,
                sampling: N,
                recordDOM: S,
                recordCanvas: P,
                inlineImages: H,
                userTriggeredOnInput: k,
                collectFonts: Y,
                doc: Ve,
                maskAttributeFn: f,
                maskInputFn: _,
                maskTextFn: h,
                keepIframeSrcFn: x,
                blockSelector: i,
                unblockSelector: a,
                slimDOMOptions: et,
                dataURLOptions: g,
                mirror: dr,
                iframeManager: xn,
                stylesheetManager: En,
                shadowDomManager: Vr,
                processedNodeManager: _s,
                canvasManager: Ai,
                ignoreCSSAttributes: X,
                plugins: pu([
                    F,
                    "optionalAccess",
                    (Ie)=>Ie.filter,
                    "call",
                    (Ie)=>Ie((Un)=>Un.observer),
                    "optionalAccess",
                    (Ie)=>Ie.map,
                    "call",
                    (Ie)=>Ie((Un)=>({
                                observer: Un.observer,
                                options: Un.options,
                                callback: (Ct)=>dt({
                                        type: ge.Plugin,
                                        data: {
                                            plugin: Un.name,
                                            payload: Ct
                                        }
                                    })
                            }))
                ]) || []
            }, {});
        xn.addLoadListener((Ve)=>{
            try {
                _e.push(tn(Ve.contentDocument));
            } catch (Ie) {
                console.warn(Ie);
            }
        });
        const Oe = ()=>{
            ne(), _e.push(tn(document));
        };
        return document.readyState === "interactive" || document.readyState === "complete" ? Oe() : (_e.push(hn("DOMContentLoaded", ()=>{
            dt({
                type: ge.DomContentLoaded,
                data: {}
            }), G === "DOMContentLoaded" && Oe();
        })), _e.push(hn("load", ()=>{
            dt({
                type: ge.Load,
                data: {}
            }), G === "load" && Oe();
        }, window))), ()=>{
            _e.forEach((Ve)=>Ve()), _s.destroy(), dE = void 0, I8();
        };
    } catch (_e) {
        console.warn(_e);
    }
}
function Y8(e) {
    if (!dE) throw new Error("please take full snapshot after start recording");
    dE(e);
}
ss.mirror = dr;
ss.takeFullSnapshot = Y8;
function V8(e, t) {
    try {
        return e ? e(t) : new VR();
    } catch  {
        return console.warn("Unable to initialize CanvasManager"), new VR();
    }
}
const W8 = 3, j8 = 5;
function hA(e) {
    return e > 9999999999 ? e : e * 1e3;
}
function If(e) {
    return e > 9999999999 ? e / 1e3 : e;
}
function ec(e, t) {
    t.category !== "sentry.transaction" && ([
        "ui.click",
        "ui.input"
    ].includes(t.category) ? e.triggerUserActivity() : e.checkAndHandleExpiredSession(), e.addUpdate(()=>(e.throttledAddEvent({
            type: ge.Custom,
            // TODO: We were converting from ms to seconds for breadcrumbs, spans,
            // but maybe we should just keep them as milliseconds
            timestamp: (t.timestamp || 0) * 1e3,
            data: {
                tag: "breadcrumb",
                // normalize to max. 10 depth and 1_000 properties per object
                payload: Tr(t, 10, 1e3)
            }
        }), t.category === "console")));
}
const X8 = "button,a";
function xC(e) {
    return e.closest(X8) || e;
}
function UC(e) {
    const t = FC(e);
    return !t || !(t instanceof Element) ? t : xC(t);
}
function FC(e) {
    return K8(e) ? e.target : e;
}
function K8(e) {
    return typeof e == "object" && !!e && "target" in e;
}
let Ps;
function z8(e) {
    return Ps || (Ps = [], J8()), Ps.push(e), ()=>{
        const t = Ps ? Ps.indexOf(e) : -1;
        t > -1 && Ps.splice(t, 1);
    };
}
function J8() {
    vn(Qe, "open", function(e) {
        return function(...t) {
            if (Ps) try {
                Ps.forEach((n)=>n());
            } catch  {}
            return e.apply(Qe, t);
        };
    });
}
const q8 = /* @__PURE__ */ new Set([
    Re.Mutation,
    Re.StyleSheetRule,
    Re.StyleDeclaration,
    Re.AdoptedStyleSheet,
    Re.CanvasMutation,
    Re.Selection,
    Re.MediaInteraction
]);
function Z8(e, t, n) {
    e.handleClick(t, n);
}
class Q8 {
    // protected for testing
    constructor(t, n, r = ec){
        this._lastMutation = 0, this._lastScroll = 0, this._clicks = [], this._timeout = n.timeout / 1e3, this._threshold = n.threshold / 1e3, this._scrollTimeout = n.scrollTimeout / 1e3, this._replay = t, this._ignoreSelector = n.ignoreSelector, this._addBreadcrumbEvent = r;
    }
    /** Register click detection handlers on mutation or scroll. */ addListeners() {
        const t = z8(()=>{
            this._lastMutation = WR();
        });
        this._teardown = ()=>{
            t(), this._clicks = [], this._lastMutation = 0, this._lastScroll = 0;
        };
    }
    /** Clean up listeners. */ removeListeners() {
        this._teardown && this._teardown(), this._checkClickTimeout && clearTimeout(this._checkClickTimeout);
    }
    /** @inheritDoc */ handleClick(t, n) {
        if (ex(n, this._ignoreSelector) || !tx(t)) return;
        const r = {
            timestamp: If(t.timestamp),
            clickBreadcrumb: t,
            // Set this to 0 so we know it originates from the click breadcrumb
            clickCount: 0,
            node: n
        };
        this._clicks.some((s)=>s.node === r.node && Math.abs(s.timestamp - r.timestamp) < 1) || (this._clicks.push(r), this._clicks.length === 1 && this._scheduleCheckClicks());
    }
    /** @inheritDoc */ registerMutation(t = Date.now()) {
        this._lastMutation = If(t);
    }
    /** @inheritDoc */ registerScroll(t = Date.now()) {
        this._lastScroll = If(t);
    }
    /** @inheritDoc */ registerClick(t) {
        const n = xC(t);
        this._handleMultiClick(n);
    }
    /** Count multiple clicks on elements. */ _handleMultiClick(t) {
        this._getClicks(t).forEach((n)=>{
            n.clickCount++;
        });
    }
    /** Get all pending clicks for a given node. */ _getClicks(t) {
        return this._clicks.filter((n)=>n.node === t);
    }
    /** Check the clicks that happened. */ _checkClicks() {
        const t = [], n = WR();
        this._clicks.forEach((r)=>{
            !r.mutationAfter && this._lastMutation && (r.mutationAfter = r.timestamp <= this._lastMutation ? this._lastMutation - r.timestamp : void 0), !r.scrollAfter && this._lastScroll && (r.scrollAfter = r.timestamp <= this._lastScroll ? this._lastScroll - r.timestamp : void 0), r.timestamp + this._timeout <= n && t.push(r);
        });
        for (const r of t){
            const s = this._clicks.indexOf(r);
            s > -1 && (this._generateBreadcrumbs(r), this._clicks.splice(s, 1));
        }
        this._clicks.length && this._scheduleCheckClicks();
    }
    /** Generate matching breadcrumb(s) for the click. */ _generateBreadcrumbs(t) {
        const n = this._replay, r = t.scrollAfter && t.scrollAfter <= this._scrollTimeout, s = t.mutationAfter && t.mutationAfter <= this._threshold, i = !r && !s, { clickCount: a, clickBreadcrumb: o } = t;
        if (i) {
            const l = Math.min(t.mutationAfter || this._timeout, this._timeout) * 1e3, c = l < this._timeout * 1e3 ? "mutation" : "timeout", u = {
                type: "default",
                message: o.message,
                timestamp: o.timestamp,
                category: "ui.slowClickDetected",
                data: {
                    ...o.data,
                    url: Qe.location.href,
                    route: n.getCurrentRoute(),
                    timeAfterClickMs: l,
                    endReason: c,
                    // If clickCount === 0, it means multiClick was not correctly captured here
                    // - we still want to send 1 in this case
                    clickCount: a || 1
                }
            };
            this._addBreadcrumbEvent(n, u);
            return;
        }
        if (a > 1) {
            const l = {
                type: "default",
                message: o.message,
                timestamp: o.timestamp,
                category: "ui.multiClick",
                data: {
                    ...o.data,
                    url: Qe.location.href,
                    route: n.getCurrentRoute(),
                    clickCount: a,
                    metric: !0
                }
            };
            this._addBreadcrumbEvent(n, l);
        }
    }
    /** Schedule to check current clicks. */ _scheduleCheckClicks() {
        this._checkClickTimeout && clearTimeout(this._checkClickTimeout), this._checkClickTimeout = $a(()=>this._checkClicks(), 1e3);
    }
}
const $8 = [
    "A",
    "BUTTON",
    "INPUT"
];
function ex(e, t) {
    return !!(!$8.includes(e.tagName) || e.tagName === "INPUT" && ![
        "submit",
        "button"
    ].includes(e.getAttribute("type") || "") || e.tagName === "A" && (e.hasAttribute("download") || e.hasAttribute("target") && e.getAttribute("target") !== "_self") || t && e.matches(t));
}
function tx(e) {
    return !!(e.data && typeof e.data.nodeId == "number" && e.timestamp);
}
function WR() {
    return Date.now() / 1e3;
}
function nx(e, t) {
    try {
        if (!rx(t)) return;
        const { source: n } = t.data;
        if (q8.has(n) && e.registerMutation(t.timestamp), n === Re.Scroll && e.registerScroll(t.timestamp), sx(t)) {
            const { type: r, id: s } = t.data, i = ss.mirror.getNode(s);
            i instanceof HTMLElement && r === fn.Click && e.registerClick(i);
        }
    } catch  {}
}
function rx(e) {
    return e.type === W8;
}
function sx(e) {
    return e.data.source === Re.MouseInteraction;
}
function Br(e) {
    return {
        timestamp: Date.now() / 1e3,
        type: "default",
        ...e
    };
}
var fE;
(function(e) {
    e[e.Document = 0] = "Document", e[e.DocumentType = 1] = "DocumentType", e[e.Element = 2] = "Element", e[e.Text = 3] = "Text", e[e.CDATA = 4] = "CDATA", e[e.Comment = 5] = "Comment";
})(fE || (fE = {}));
const ix = /* @__PURE__ */ new Set([
    "id",
    "class",
    "aria-label",
    "role",
    "name",
    "alt",
    "title",
    "data-test-id",
    "data-testid",
    "disabled",
    "aria-disabled",
    "data-sentry-component"
]);
function ax(e) {
    const t = {};
    !e["data-sentry-component"] && e["data-sentry-element"] && (e["data-sentry-component"] = e["data-sentry-element"]);
    for(const n in e)if (ix.has(n)) {
        let r = n;
        (n === "data-testid" || n === "data-test-id") && (r = "testId"), t[r] = e[n];
    }
    return t;
}
const ox = (e)=>(t)=>{
        if (!e.isEnabled()) return;
        const n = lx(t);
        if (!n) return;
        const r = t.name === "click", s = r ? t.event : void 0;
        r && e.clickDetector && s && s.target && !s.altKey && !s.metaKey && !s.ctrlKey && !s.shiftKey && Z8(e.clickDetector, n, UC(t.event)), ec(e, n);
    };
function BC(e, t) {
    const n = ss.mirror.getId(e), r = n && ss.mirror.getNode(n), s = r && ss.mirror.getMeta(r), i = s && ux(s) ? s : null;
    return {
        message: t,
        data: i ? {
            nodeId: n,
            node: {
                id: n,
                tagName: i.tagName,
                textContent: Array.from(i.childNodes).map((a)=>a.type === fE.Text && a.textContent).filter(Boolean).map((a)=>a.trim()).join(""),
                attributes: ax(i.attributes)
            }
        } : {}
    };
}
function lx(e) {
    const { target: t, message: n } = cx(e);
    return Br({
        category: `ui.${e.name}`,
        ...BC(t, n)
    });
}
function cx(e) {
    const t = e.name === "click";
    let n, r = null;
    try {
        r = t ? UC(e.event) : FC(e.event), n = ds(r, {
            maxStringLength: 200
        }) || "<unknown>";
    } catch  {
        n = "<unknown>";
    }
    return {
        target: r,
        message: n
    };
}
function ux(e) {
    return e.type === fE.Element;
}
function Ex(e, t) {
    if (!e.isEnabled()) return;
    e.updateUserActivity();
    const n = dx(t);
    n && ec(e, n);
}
function dx(e) {
    const { metaKey: t, shiftKey: n, ctrlKey: r, altKey: s, key: i, target: a } = e;
    if (!a || fx(a) || !i) return null;
    const o = t || r || s, l = i.length === 1;
    if (!o && l) return null;
    const c = ds(a, {
        maxStringLength: 200
    }) || "<unknown>", u = BC(a, c);
    return Br({
        category: "ui.keyDown",
        message: c,
        data: {
            ...u.data,
            metaKey: t,
            shiftKey: n,
            ctrlKey: r,
            altKey: s,
            key: i
        }
    });
}
function fx(e) {
    return e.tagName === "INPUT" || e.tagName === "TEXTAREA" || e.isContentEditable;
}
const px = {
    // @ts-expect-error TODO: entry type does not fit the create* functions entry type
    resource: Rx,
    paint: Ax,
    // @ts-expect-error TODO: entry type does not fit the create* functions entry type
    navigation: Sx
};
function Wc(e, t) {
    return ({ metric: n })=>void t.replayPerformanceEntries.push(e(n));
}
function Tx(e) {
    return e.map(hx).filter(Boolean);
}
function hx(e) {
    const t = px[e.entryType];
    return t ? t(e) : null;
}
function no(e) {
    return (($t || Qe.performance.timeOrigin) + e) / 1e3;
}
function Ax(e) {
    const { duration: t, entryType: n, name: r, startTime: s } = e, i = no(s);
    return {
        type: n,
        name: r,
        start: i,
        end: i + t,
        data: void 0
    };
}
function Sx(e) {
    const { entryType: t, name: n, decodedBodySize: r, duration: s, domComplete: i, encodedBodySize: a, domContentLoadedEventStart: o, domContentLoadedEventEnd: l, domInteractive: c, loadEventStart: u, loadEventEnd: E, redirectCount: p, startTime: A, transferSize: R, type: C } = e;
    return s === 0 ? null : {
        type: `${t}.${C}`,
        start: no(A),
        end: no(i),
        name: n,
        data: {
            size: R,
            decodedBodySize: r,
            encodedBodySize: a,
            duration: s,
            domInteractive: c,
            domContentLoadedEventStart: o,
            domContentLoadedEventEnd: l,
            loadEventStart: u,
            loadEventEnd: E,
            domComplete: i,
            redirectCount: p
        }
    };
}
function Rx(e) {
    const { entryType: t, initiatorType: n, name: r, responseEnd: s, startTime: i, decodedBodySize: a, encodedBodySize: o, responseStatus: l, transferSize: c } = e;
    return [
        "fetch",
        "xmlhttprequest"
    ].includes(n) ? null : {
        type: `${t}.${n}`,
        start: no(i),
        end: no(s),
        name: r,
        data: {
            size: c,
            statusCode: l,
            decodedBodySize: a,
            encodedBodySize: o
        }
    };
}
function mx(e) {
    const t = e.entries[e.entries.length - 1], n = t && t.element ? [
        t.element
    ] : void 0;
    return ld(e, "largest-contentful-paint", n);
}
function _x(e) {
    return e.sources !== void 0;
}
function Nx(e) {
    const t = [], n = [];
    for (const r of e.entries)if (_x(r)) {
        const s = [];
        for (const i of r.sources)if (i.node) {
            n.push(i.node);
            const a = ss.mirror.getId(i.node);
            a && s.push(a);
        }
        t.push({
            value: r.value,
            nodeIds: s.length ? s : void 0
        });
    }
    return ld(e, "cumulative-layout-shift", n, t);
}
function Ix(e) {
    const t = e.entries[e.entries.length - 1], n = t && t.target ? [
        t.target
    ] : void 0;
    return ld(e, "first-input-delay", n);
}
function Ox(e) {
    const t = e.entries[e.entries.length - 1], n = t && t.target ? [
        t.target
    ] : void 0;
    return ld(e, "interaction-to-next-paint", n);
}
function ld(e, t, n, r) {
    const s = e.value, i = e.rating, a = no(s);
    return {
        type: "web-vital",
        name: t,
        start: a,
        end: a,
        data: {
            value: s,
            size: s,
            rating: i,
            nodeIds: n ? n.map((o)=>ss.mirror.getId(o)) : void 0,
            attributions: r
        }
    };
}
function Cx(e) {
    function t(s) {
        e.performanceEntries.includes(s) || e.performanceEntries.push(s);
    }
    function n({ entries: s }) {
        s.forEach(t);
    }
    const r = [];
    return [
        "navigation",
        "paint",
        "resource"
    ].forEach((s)=>{
        r.push(Qa(s, n));
    }), r.push(rC(Wc(mx, e)), sA(Wc(Nx, e)), sC(Wc(Ix, e)), iC(Wc(Ox, e))), ()=>{
        r.forEach((s)=>s());
    };
}
const Te = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__, gx = 'var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},_=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},x=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=A(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},A=function(t,n,r){return-1==t.s?Math.max(A(t.l,n,r+1),A(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},U=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=x(f,15),M=b.t,E=b.l,A=x(h,15),U=A.t,C=A.l,F=D(M),I=F.c,S=F.n,L=D(U),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=x(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,U)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(U,C,0),R=U;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){_(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;_(r,m,Q[et]),m+=R[et],et>3&&(_(r,m,rt>>5&8191),m+=i[et])}else _(r,m,N[rt]),m+=P[rt]}return _(r,m,N[256]),m+P[256]},C=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=C[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,_=c.p||new n(32768),x=c.h||new n(z+1),A=Math.ceil(o/3),D=2*A,T=function(t){return(a[t]^a[t+1]<<A^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=x[H];if(_[J]=K,x[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=U(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-_[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=_[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=U(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=x,c.p=_,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if("function"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J="undefined"!=typeof TextEncoder&&new TextEncoder,K="undefined"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(J)return J.encode(n);for(var e=n.length,i=new t(n.length+(n.length>>1)),a=0,s=function(t){i[a++]=t},o=0;o<e;++o){if(a+5>i.length){var f=new t(a+8+(e-o<<1));f.set(i),i=f}var h=n.charCodeAt(o);h<128||r?s(h):h<2048?(s(192|h>>6),s(128|63&h)):h>55295&&h<57344?(s(240|(h=65536+(1047552&h)|1023&n.charCodeAt(++o))>>18),s(128|h>>12&63),s(128|h>>6&63),s(128|63&h)):(s(224|h>>12),s(128|h>>6&63),s(128|63&h))}return b(i,0,a)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const n=this._hasEvents?",":"";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push("]",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push("[")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener("message",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&"function"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});';
function Lx() {
    const e = new Blob([
        gx
    ]);
    return URL.createObjectURL(e);
}
const jR = [
    "info",
    "warn",
    "error",
    "log"
], Au = "[Replay] ";
function Of(e, t = "info") {
    ai({
        category: "console",
        data: {
            logger: "replay"
        },
        level: t,
        message: `${Au}${e}`
    }, {
        level: t
    });
}
function yx() {
    let e = !1, t = !1;
    const n = {
        exception: ()=>{},
        infoTick: ()=>{},
        setConfig: (r)=>{
            e = r.captureExceptions, t = r.traceInternals;
        }
    };
    return Te ? (jR.forEach((r)=>{
        n[r] = (...s)=>{
            q[r](Au, ...s), t && Of(s.join(""), cO(r));
        };
    }), n.exception = (r, ...s)=>{
        s.length && n.error && n.error(...s), q.error(Au, r), e ? qI(r) : t && Of(r, "error");
    }, n.infoTick = (...r)=>{
        q.info(Au, ...r), t && setTimeout(()=>Of(r[0]), 0);
    }) : jR.forEach((r)=>{
        n[r] = ()=>{};
    }), n;
}
const Ae = yx();
class AA extends Error {
    constructor(){
        super(`Event buffer exceeded maximum size of ${uA}.`);
    }
}
class GC {
    /** All the events that are buffered to be sent. */ /** @inheritdoc */ /** @inheritdoc */ constructor(){
        this.events = [], this._totalSize = 0, this.hasCheckout = !1, this.waitForCheckout = !1;
    }
    /** @inheritdoc */ get hasEvents() {
        return this.events.length > 0;
    }
    /** @inheritdoc */ get type() {
        return "sync";
    }
    /** @inheritdoc */ destroy() {
        this.events = [];
    }
    /** @inheritdoc */ async addEvent(t) {
        const n = JSON.stringify(t).length;
        if (this._totalSize += n, this._totalSize > uA) throw new AA();
        this.events.push(t);
    }
    /** @inheritdoc */ finish() {
        return new Promise((t)=>{
            const n = this.events;
            this.clear(), t(JSON.stringify(n));
        });
    }
    /** @inheritdoc */ clear() {
        this.events = [], this._totalSize = 0, this.hasCheckout = !1;
    }
    /** @inheritdoc */ getEarliestTimestamp() {
        const t = this.events.map((n)=>n.timestamp).sort()[0];
        return t ? hA(t) : null;
    }
}
class vx {
    constructor(t){
        this._worker = t, this._id = 0;
    }
    /**
   * Ensure the worker is ready (or not).
   * This will either resolve when the worker is ready, or reject if an error occurred.
   */ ensureReady() {
        return this._ensureReadyPromise ? this._ensureReadyPromise : (this._ensureReadyPromise = new Promise((t, n)=>{
            this._worker.addEventListener("message", ({ data: r })=>{
                r.success ? t() : n();
            }, {
                once: !0
            }), this._worker.addEventListener("error", (r)=>{
                n(r);
            }, {
                once: !0
            });
        }), this._ensureReadyPromise);
    }
    /**
   * Destroy the worker.
   */ destroy() {
        Te && Ae.info("Destroying compression worker"), this._worker.terminate();
    }
    /**
   * Post message to worker and wait for response before resolving promise.
   */ postMessage(t, n) {
        const r = this._getAndIncrementId();
        return new Promise((s, i)=>{
            const a = ({ data: o })=>{
                const l = o;
                if (l.method === t && l.id === r) {
                    if (this._worker.removeEventListener("message", a), !l.success) {
                        Te && Ae.error("Error in compression worker: ", l.response), i(new Error("Error in compression worker"));
                        return;
                    }
                    s(l.response);
                }
            };
            this._worker.addEventListener("message", a), this._worker.postMessage({
                id: r,
                method: t,
                arg: n
            });
        });
    }
    /** Get the current ID and increment it for the next call. */ _getAndIncrementId() {
        return this._id++;
    }
}
class bx {
    /** @inheritdoc */ /** @inheritdoc */ constructor(t){
        this._worker = new vx(t), this._earliestTimestamp = null, this._totalSize = 0, this.hasCheckout = !1, this.waitForCheckout = !1;
    }
    /** @inheritdoc */ get hasEvents() {
        return !!this._earliestTimestamp;
    }
    /** @inheritdoc */ get type() {
        return "worker";
    }
    /**
   * Ensure the worker is ready (or not).
   * This will either resolve when the worker is ready, or reject if an error occurred.
   */ ensureReady() {
        return this._worker.ensureReady();
    }
    /**
   * Destroy the event buffer.
   */ destroy() {
        this._worker.destroy();
    }
    /**
   * Add an event to the event buffer.
   *
   * Returns true if event was successfully received and processed by worker.
   */ addEvent(t) {
        const n = hA(t.timestamp);
        (!this._earliestTimestamp || n < this._earliestTimestamp) && (this._earliestTimestamp = n);
        const r = JSON.stringify(t);
        return this._totalSize += r.length, this._totalSize > uA ? Promise.reject(new AA()) : this._sendEventToWorker(r);
    }
    /**
   * Finish the event buffer and return the compressed data.
   */ finish() {
        return this._finishRequest();
    }
    /** @inheritdoc */ clear() {
        this._earliestTimestamp = null, this._totalSize = 0, this.hasCheckout = !1, this._worker.postMessage("clear").then(null, (t)=>{
            Te && Ae.exception(t, 'Sending "clear" message to worker failed', t);
        });
    }
    /** @inheritdoc */ getEarliestTimestamp() {
        return this._earliestTimestamp;
    }
    /**
   * Send the event to the worker.
   */ _sendEventToWorker(t) {
        return this._worker.postMessage("addEvent", t);
    }
    /**
   * Finish the request and return the compressed data from the worker.
   */ async _finishRequest() {
        const t = await this._worker.postMessage("finish");
        return this._earliestTimestamp = null, this._totalSize = 0, t;
    }
}
class Px {
    constructor(t){
        this._fallback = new GC(), this._compression = new bx(t), this._used = this._fallback, this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();
    }
    /** @inheritdoc */ get waitForCheckout() {
        return this._used.waitForCheckout;
    }
    /** @inheritdoc */ get type() {
        return this._used.type;
    }
    /** @inheritDoc */ get hasEvents() {
        return this._used.hasEvents;
    }
    /** @inheritdoc */ get hasCheckout() {
        return this._used.hasCheckout;
    }
    /** @inheritdoc */ set hasCheckout(t) {
        this._used.hasCheckout = t;
    }
    /** @inheritdoc */ // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures
    set waitForCheckout(t) {
        this._used.waitForCheckout = t;
    }
    /** @inheritDoc */ destroy() {
        this._fallback.destroy(), this._compression.destroy();
    }
    /** @inheritdoc */ clear() {
        return this._used.clear();
    }
    /** @inheritdoc */ getEarliestTimestamp() {
        return this._used.getEarliestTimestamp();
    }
    /**
   * Add an event to the event buffer.
   *
   * Returns true if event was successfully added.
   */ addEvent(t) {
        return this._used.addEvent(t);
    }
    /** @inheritDoc */ async finish() {
        return await this.ensureWorkerIsLoaded(), this._used.finish();
    }
    /** Ensure the worker has loaded. */ ensureWorkerIsLoaded() {
        return this._ensureWorkerIsLoadedPromise;
    }
    /** Actually check if the worker has been loaded. */ async _ensureWorkerIsLoaded() {
        try {
            await this._compression.ensureReady();
        } catch (t) {
            Te && Ae.exception(t, "Failed to load the compression worker, falling back to simple buffer");
            return;
        }
        await this._switchToCompressionWorker();
    }
    /** Switch the used buffer to the compression worker. */ async _switchToCompressionWorker() {
        const { events: t, hasCheckout: n, waitForCheckout: r } = this._fallback, s = [];
        for (const i of t)s.push(this._compression.addEvent(i));
        this._compression.hasCheckout = n, this._compression.waitForCheckout = r, this._used = this._compression;
        try {
            await Promise.all(s), this._fallback.clear();
        } catch (i) {
            Te && Ae.exception(i, "Failed to add events when switching buffers.");
        }
    }
}
function Mx({ useCompression: e, workerUrl: t }) {
    if (e && // eslint-disable-next-line no-restricted-globals
    window.Worker) {
        const n = Dx(t);
        if (n) return n;
    }
    return Te && Ae.info("Using simple buffer"), new GC();
}
function Dx(e) {
    try {
        const t = e || wx();
        if (!t) return;
        Te && Ae.info(`Using compression worker${e ? ` from ${e}` : ""}`);
        const n = new Worker(t);
        return new Px(n);
    } catch (t) {
        Te && Ae.exception(t, "Failed to create compression worker");
    }
}
function wx() {
    return typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ > "u" || !__SENTRY_EXCLUDE_REPLAY_WORKER__ ? Lx() : "";
}
function SA() {
    try {
        return "sessionStorage" in Qe && !!Qe.sessionStorage;
    } catch  {
        return !1;
    }
}
function xx(e) {
    Ux(), e.session = void 0;
}
function Ux() {
    if (SA()) try {
        Qe.sessionStorage.removeItem(lA);
    } catch  {}
}
function kC(e) {
    return e === void 0 ? !1 : Math.random() < e;
}
function HC(e) {
    const t = Date.now(), n = e.id || Sn(), r = e.started || t, s = e.lastActivity || t, i = e.segmentId || 0, a = e.sampled, o = e.previousSessionId;
    return {
        id: n,
        started: r,
        lastActivity: s,
        segmentId: i,
        sampled: a,
        previousSessionId: o
    };
}
function RA(e) {
    if (SA()) try {
        Qe.sessionStorage.setItem(lA, JSON.stringify(e));
    } catch  {}
}
function Fx(e, t) {
    return kC(e) ? "session" : t ? "buffer" : !1;
}
function XR({ sessionSampleRate: e, allowBuffering: t, stickySession: n = !1 }, { previousSessionId: r } = {}) {
    const s = Fx(e, t), i = HC({
        sampled: s,
        previousSessionId: r
    });
    return n && RA(i), i;
}
function Bx() {
    if (!SA()) return null;
    try {
        const e = Qe.sessionStorage.getItem(lA);
        if (!e) return null;
        const t = JSON.parse(e);
        return Te && Ae.infoTick("Loading existing session"), HC(t);
    } catch  {
        return null;
    }
}
function IT(e, t, n = +/* @__PURE__ */ new Date()) {
    return e === null || t === void 0 || t < 0 ? !0 : t === 0 ? !1 : e + t <= n;
}
function YC(e, { maxReplayDuration: t, sessionIdleExpire: n, targetTime: r = Date.now() }) {
    return(// First, check that maximum session length has not been exceeded
    IT(e.started, t, r) || // check that the idle timeout has not been exceeded (i.e. user has
    // performed an action within the last `sessionIdleExpire` ms)
    IT(e.lastActivity, n, r));
}
function VC(e, { sessionIdleExpire: t, maxReplayDuration: n }) {
    return !(!YC(e, {
        sessionIdleExpire: t,
        maxReplayDuration: n
    }) || e.sampled === "buffer" && e.segmentId === 0);
}
function Cf({ sessionIdleExpire: e, maxReplayDuration: t, previousSessionId: n }, r) {
    const s = r.stickySession && Bx();
    return s ? VC(s, {
        sessionIdleExpire: e,
        maxReplayDuration: t
    }) ? (Te && Ae.infoTick("Session in sessionStorage is expired, creating new one..."), XR(r, {
        previousSessionId: s.id
    })) : s : (Te && Ae.infoTick("Creating new session"), XR(r, {
        previousSessionId: n
    }));
}
function Gx(e) {
    return e.type === ge.Custom;
}
function mA(e, t, n) {
    return jC(e, t) ? (WC(e, t, n), !0) : !1;
}
function kx(e, t, n) {
    return jC(e, t) ? WC(e, t, n) : Promise.resolve(null);
}
async function WC(e, t, n) {
    const { eventBuffer: r } = e;
    if (!r || r.waitForCheckout && !n) return null;
    const s = e.recordingMode === "buffer";
    try {
        n && s && r.clear(), n && (r.hasCheckout = !0, r.waitForCheckout = !1);
        const i = e.getOptions(), a = Hx(t, i.beforeAddRecordingEvent);
        return a ? await r.addEvent(a) : void 0;
    } catch (i) {
        const a = i && i instanceof AA, o = a ? "addEventSizeExceeded" : "addEvent";
        if (a && s) return r.clear(), r.waitForCheckout = !0, null;
        e.handleException(i), await e.stop({
            reason: o
        });
        const l = ye();
        l && l.recordDroppedEvent("internal_sdk_error", "replay");
    }
}
function jC(e, t) {
    if (!e.eventBuffer || e.isPaused() || !e.isEnabled()) return !1;
    const n = hA(t.timestamp);
    return n + e.timeouts.sessionIdlePause < Date.now() ? !1 : n > e.getContext().initialTimestamp + e.getOptions().maxReplayDuration ? (Te && Ae.infoTick(`Skipping event with timestamp ${n} because it is after maxReplayDuration`), !1) : !0;
}
function Hx(e, t) {
    try {
        if (typeof t == "function" && Gx(e)) return t(e);
    } catch (n) {
        return Te && Ae.exception(n, "An error occurred in the `beforeAddRecordingEvent` callback, skipping the event..."), null;
    }
    return e;
}
function _A(e) {
    return !e.type;
}
function OT(e) {
    return e.type === "transaction";
}
function Yx(e) {
    return e.type === "replay_event";
}
function KR(e) {
    return e.type === "feedback";
}
function Vx(e) {
    return (t, n)=>{
        if (!e.isEnabled() || !_A(t) && !OT(t)) return;
        const r = n && n.statusCode;
        if (!(!r || r < 200 || r >= 300)) {
            if (OT(t)) {
                Wx(e, t);
                return;
            }
            jx(e, t);
        }
    };
}
function Wx(e, t) {
    const n = e.getContext();
    t.contexts && t.contexts.trace && t.contexts.trace.trace_id && n.traceIds.size < 100 && n.traceIds.add(t.contexts.trace.trace_id);
}
function jx(e, t) {
    const n = e.getContext();
    if (t.event_id && n.errorIds.size < 100 && n.errorIds.add(t.event_id), e.recordingMode !== "buffer" || !t.tags || !t.tags.replayId) return;
    const { beforeErrorSampling: r } = e.getOptions();
    typeof r == "function" && !r(t) || $a(async ()=>{
        try {
            await e.sendBufferedReplayOrFlush();
        } catch (s) {
            e.handleException(s);
        }
    });
}
function Xx(e) {
    return (t)=>{
        !e.isEnabled() || !_A(t) || Kx(e, t);
    };
}
function Kx(e, t) {
    const n = t.exception && t.exception.values && t.exception.values[0] && t.exception.values[0].value;
    if (typeof n == "string" && // Only matches errors in production builds of react-dom
    // Example https://reactjs.org/docs/error-decoder.html?invariant=423
    // With newer React versions, the messages changed to a different website https://react.dev/errors/418
    (n.match(/(reactjs\.org\/docs\/error-decoder\.html\?invariant=|react\.dev\/errors\/)(418|419|422|423|425)/) || // Development builds of react-dom
    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.
    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.
    n.match(/(does not match server-rendered HTML|Hydration failed because)/i))) {
        const r = Br({
            category: "replay.hydrate-error",
            data: {
                url: RI()
            }
        });
        ec(e, r);
    }
}
function zx(e) {
    const t = ye();
    t && t.on("beforeAddBreadcrumb", (n)=>Jx(e, n));
}
function Jx(e, t) {
    if (!e.isEnabled() || !XC(t)) return;
    const n = qx(t);
    n && ec(e, n);
}
function qx(e) {
    return !XC(e) || [
        // fetch & xhr are handled separately,in handleNetworkBreadcrumbs
        "fetch",
        "xhr",
        // These two are breadcrumbs for emitted sentry events, we don't care about them
        "sentry.event",
        "sentry.transaction"
    ].includes(e.category) || // We capture UI breadcrumbs separately
    e.category.startsWith("ui.") ? null : e.category === "console" ? Zx(e) : Br(e);
}
function Zx(e) {
    const t = e.data && e.data.arguments;
    if (!Array.isArray(t) || t.length === 0) return Br(e);
    let n = !1;
    const r = t.map((s)=>{
        if (!s) return s;
        if (typeof s == "string") return s.length > Hc ? (n = !0, `${s.slice(0, Hc)}…`) : s;
        if (typeof s == "object") try {
            const i = Tr(s, 7);
            return JSON.stringify(i).length > Hc ? (n = !0, `${JSON.stringify(i, null, 2).slice(0, Hc)}…`) : i;
        } catch  {}
        return s;
    });
    return Br({
        ...e,
        data: {
            ...e.data,
            arguments: r,
            ...n ? {
                _meta: {
                    warnings: [
                        "CONSOLE_ARG_TRUNCATED"
                    ]
                }
            } : {}
        }
    });
}
function XC(e) {
    return !!e.category;
}
function Qx(e, t) {
    return e.type || !e.exception || !e.exception.values || !e.exception.values.length ? !1 : !!(t.originalException && t.originalException.__rrweb__);
}
function KC() {
    const e = qe().getPropagationContext().dsc;
    e && delete e.replay_id;
    const t = wt();
    if (t) {
        const n = $i(t);
        delete n.replay_id;
    }
}
function $x(e, t) {
    e.triggerUserActivity(), e.addUpdate(()=>t.timestamp ? (e.throttledAddEvent({
            type: ge.Custom,
            timestamp: t.timestamp * 1e3,
            data: {
                tag: "breadcrumb",
                payload: {
                    timestamp: t.timestamp,
                    type: "default",
                    category: "sentry.feedback",
                    data: {
                        feedbackId: t.event_id
                    }
                }
            }
        }), !1) : !0);
}
function e7(e, t) {
    return e.recordingMode !== "buffer" || t.message === cA || !t.exception || t.type ? !1 : kC(e.getOptions().errorSampleRate);
}
function t7(e) {
    return Object.assign((t, n)=>!e.isEnabled() || e.isPaused() ? t : Yx(t) ? (delete t.breadcrumbs, t) : !_A(t) && !OT(t) && !KR(t) ? t : e.checkAndHandleExpiredSession() ? KR(t) ? (e.flush(), t.contexts.feedback.replay_id = e.getSessionId(), $x(e, t), t) : Qx(t, n) && !e.getOptions()._experiments.captureExceptions ? (Te && Ae.log("Ignoring error from rrweb internals", t), null) : ((e7(e, t) || e.recordingMode === "session") && (t.tags = {
            ...t.tags,
            replayId: e.getSessionId()
        }), t) : (KC(), t), {
        id: "Replay"
    });
}
function cd(e, t) {
    return t.map(({ type: n, start: r, end: s, name: i, data: a })=>{
        const o = e.throttledAddEvent({
            type: ge.Custom,
            timestamp: r,
            data: {
                tag: "performanceSpan",
                payload: {
                    op: n,
                    description: i,
                    startTimestamp: r,
                    endTimestamp: s,
                    data: a
                }
            }
        });
        return typeof o == "string" ? Promise.resolve(null) : o;
    });
}
function n7(e) {
    const { from: t, to: n } = e, r = Date.now() / 1e3;
    return {
        type: "navigation.push",
        start: r,
        end: r,
        name: n,
        data: {
            previous: t
        }
    };
}
function r7(e) {
    return (t)=>{
        if (!e.isEnabled()) return;
        const n = n7(t);
        n !== null && (e.getContext().urls.push(n.name), e.triggerUserActivity(), e.addUpdate(()=>(cd(e, [
                n
            ]), !1)));
    };
}
function s7(e, t) {
    return Te && e.getOptions()._experiments.traceInternals ? !1 : kb(t, ye());
}
function zC(e, t) {
    e.isEnabled() && t !== null && (s7(e, t.name) || e.addUpdate(()=>(cd(e, [
            t
        ]), !0)));
}
function ud(e) {
    if (!e) return;
    const t = new TextEncoder();
    try {
        if (typeof e == "string") return t.encode(e).length;
        if (e instanceof URLSearchParams) return t.encode(e.toString()).length;
        if (e instanceof FormData) {
            const n = QC(e);
            return t.encode(n).length;
        }
        if (e instanceof Blob) return e.size;
        if (e instanceof ArrayBuffer) return e.byteLength;
    } catch  {}
}
function JC(e) {
    if (!e) return;
    const t = parseInt(e, 10);
    return isNaN(t) ? void 0 : t;
}
function qC(e) {
    try {
        if (typeof e == "string") return [
            e
        ];
        if (e instanceof URLSearchParams) return [
            e.toString()
        ];
        if (e instanceof FormData) return [
            QC(e)
        ];
        if (!e) return [
            void 0
        ];
    } catch (t) {
        return Te && Ae.exception(t, "Failed to serialize body", e), [
            void 0,
            "BODY_PARSE_ERROR"
        ];
    }
    return Te && Ae.info("Skipping network body because of body type", e), [
        void 0,
        "UNPARSEABLE_BODY_TYPE"
    ];
}
function pE(e, t) {
    if (!e) return {
        headers: {},
        size: void 0,
        _meta: {
            warnings: [
                t
            ]
        }
    };
    const n = {
        ...e._meta
    }, r = n.warnings || [];
    return n.warnings = [
        ...r,
        t
    ], e._meta = n, e;
}
function ZC(e, t) {
    if (!t) return null;
    const { startTimestamp: n, endTimestamp: r, url: s, method: i, statusCode: a, request: o, response: l } = t;
    return {
        type: e,
        start: n / 1e3,
        end: r / 1e3,
        name: s,
        data: Pt({
            method: i,
            statusCode: a,
            request: o,
            response: l
        })
    };
}
function bl(e) {
    return {
        headers: {},
        size: e,
        _meta: {
            warnings: [
                "URL_SKIPPED"
            ]
        }
    };
}
function Qs(e, t, n) {
    if (!t && Object.keys(e).length === 0) return;
    if (!t) return {
        headers: e
    };
    if (!n) return {
        headers: e,
        size: t
    };
    const r = {
        headers: e,
        size: t
    }, { body: s, warnings: i } = i7(n);
    return r.body = s, i && i.length > 0 && (r._meta = {
        warnings: i
    }), r;
}
function CT(e, t) {
    return Object.entries(e).reduce((n, [r, s])=>{
        const i = r.toLowerCase();
        return t.includes(i) && e[r] && (n[i] = s), n;
    }, {});
}
function QC(e) {
    return new URLSearchParams(e).toString();
}
function i7(e) {
    if (!e || typeof e != "string") return {
        body: e
    };
    const t = e.length > LR, n = a7(e);
    if (t) {
        const r = e.slice(0, LR);
        return n ? {
            body: r,
            warnings: [
                "MAYBE_JSON_TRUNCATED"
            ]
        } : {
            body: `${r}…`,
            warnings: [
                "TEXT_TRUNCATED"
            ]
        };
    }
    if (n) try {
        return {
            body: JSON.parse(e)
        };
    } catch  {}
    return {
        body: e
    };
}
function a7(e) {
    const t = e[0], n = e[e.length - 1];
    return t === "[" && n === "]" || t === "{" && n === "}";
}
function TE(e, t) {
    const n = o7(e);
    return zs(n, t);
}
function o7(e, t = Qe.document.baseURI) {
    if (e.startsWith("http://") || e.startsWith("https://") || e.startsWith(Qe.location.origin)) return e;
    const n = new URL(e, t);
    if (n.origin !== new URL(t).origin) return e;
    const r = n.href;
    return !e.endsWith("/") && r.endsWith("/") ? r.slice(0, -1) : r;
}
async function l7(e, t, n) {
    try {
        const r = await u7(e, t, n), s = ZC("resource.fetch", r);
        zC(n.replay, s);
    } catch (r) {
        Te && Ae.exception(r, "Failed to capture fetch breadcrumb");
    }
}
function c7(e, t) {
    const { input: n, response: r } = t, s = n ? $C(n) : void 0, i = ud(s), a = r ? JC(r.headers.get("content-length")) : void 0;
    i !== void 0 && (e.data.request_body_size = i), a !== void 0 && (e.data.response_body_size = a);
}
async function u7(e, t, n) {
    const r = Date.now(), { startTimestamp: s = r, endTimestamp: i = r } = t, { url: a, method: o, status_code: l = 0, request_body_size: c, response_body_size: u } = e.data, E = TE(a, n.networkDetailAllowUrls) && !TE(a, n.networkDetailDenyUrls), p = E ? E7(n, t.input, c) : bl(c), A = await d7(E, n, t.response, u);
    return {
        startTimestamp: s,
        endTimestamp: i,
        url: a,
        method: o,
        statusCode: l,
        request: p,
        response: A
    };
}
function E7({ networkCaptureBodies: e, networkRequestHeaders: t }, n, r) {
    const s = n ? T7(n, t) : {};
    if (!e) return Qs(s, r, void 0);
    const i = $C(n), [a, o] = qC(i), l = Qs(s, r, a);
    return o ? pE(l, o) : l;
}
async function d7(e, { networkCaptureBodies: t, networkResponseHeaders: n }, r, s) {
    if (!e && s !== void 0) return bl(s);
    const i = r ? eg(r.headers, n) : {};
    if (!r || !t && s !== void 0) return Qs(i, s, void 0);
    const [a, o] = await p7(r), l = f7(a, {
        networkCaptureBodies: t,
        responseBodySize: s,
        captureDetails: e,
        headers: i
    });
    return o ? pE(l, o) : l;
}
function f7(e, { networkCaptureBodies: t, responseBodySize: n, captureDetails: r, headers: s }) {
    try {
        const i = e && e.length && n === void 0 ? ud(e) : n;
        return r ? t ? Qs(s, i, e) : Qs(s, i, void 0) : bl(i);
    } catch (i) {
        return Te && Ae.exception(i, "Failed to serialize response body"), Qs(s, n, void 0);
    }
}
async function p7(e) {
    const t = h7(e);
    if (!t) return [
        void 0,
        "BODY_PARSE_ERROR"
    ];
    try {
        return [
            await A7(t)
        ];
    } catch (n) {
        return n instanceof Error && n.message.indexOf("Timeout") > -1 ? (Te && Ae.warn("Parsing text body from response timed out"), [
            void 0,
            "BODY_PARSE_TIMEOUT"
        ]) : (Te && Ae.exception(n, "Failed to get text body from response"), [
            void 0,
            "BODY_PARSE_ERROR"
        ]);
    }
}
function $C(e = []) {
    if (!(e.length !== 2 || typeof e[1] != "object")) return e[1].body;
}
function eg(e, t) {
    const n = {};
    return t.forEach((r)=>{
        e.get(r) && (n[r] = e.get(r));
    }), n;
}
function T7(e, t) {
    return e.length === 1 && typeof e[0] != "string" ? zR(e[0], t) : e.length === 2 ? zR(e[1], t) : {};
}
function zR(e, t) {
    if (!e) return {};
    const n = e.headers;
    return n ? n instanceof Headers ? eg(n, t) : Array.isArray(n) ? {} : CT(n, t) : {};
}
function h7(e) {
    try {
        return e.clone();
    } catch (t) {
        Te && Ae.exception(t, "Failed to clone response body");
    }
}
function A7(e) {
    return new Promise((t, n)=>{
        const r = $a(()=>n(new Error("Timeout while trying to read response body")), 500);
        S7(e).then((s)=>t(s), (s)=>n(s)).finally(()=>clearTimeout(r));
    });
}
async function S7(e) {
    return await e.text();
}
async function R7(e, t, n) {
    try {
        const r = _7(e, t, n), s = ZC("resource.xhr", r);
        zC(n.replay, s);
    } catch (r) {
        Te && Ae.exception(r, "Failed to capture xhr breadcrumb");
    }
}
function m7(e, t) {
    const { xhr: n, input: r } = t;
    if (!n) return;
    const s = ud(r), i = n.getResponseHeader("content-length") ? JC(n.getResponseHeader("content-length")) : C7(n.response, n.responseType);
    s !== void 0 && (e.data.request_body_size = s), i !== void 0 && (e.data.response_body_size = i);
}
function _7(e, t, n) {
    const r = Date.now(), { startTimestamp: s = r, endTimestamp: i = r, input: a, xhr: o } = t, { url: l, method: c, status_code: u = 0, request_body_size: E, response_body_size: p } = e.data;
    if (!l) return null;
    if (!o || !TE(l, n.networkDetailAllowUrls) || TE(l, n.networkDetailDenyUrls)) {
        const T = bl(E), N = bl(p);
        return {
            startTimestamp: s,
            endTimestamp: i,
            url: l,
            method: c,
            statusCode: u,
            request: T,
            response: N
        };
    }
    const A = o[Li], R = A ? CT(A.request_headers, n.networkRequestHeaders) : {}, C = CT(N7(o), n.networkResponseHeaders), [O, d] = n.networkCaptureBodies ? qC(a) : [
        void 0
    ], [f, _] = n.networkCaptureBodies ? I7(o) : [
        void 0
    ], h = Qs(R, E, O), I = Qs(C, p, f);
    return {
        startTimestamp: s,
        endTimestamp: i,
        url: l,
        method: c,
        statusCode: u,
        request: d ? pE(h, d) : h,
        response: _ ? pE(I, _) : I
    };
}
function N7(e) {
    const t = e.getAllResponseHeaders();
    return t ? t.split(`\r
`).reduce((n, r)=>{
        const [s, i] = r.split(": ");
        return i && (n[s.toLowerCase()] = i), n;
    }, {}) : {};
}
function I7(e) {
    const t = [];
    try {
        return [
            e.responseText
        ];
    } catch (n) {
        t.push(n);
    }
    try {
        return O7(e.response, e.responseType);
    } catch (n) {
        t.push(n);
    }
    return Te && Ae.warn("Failed to get xhr response body", ...t), [
        void 0
    ];
}
function O7(e, t) {
    try {
        if (typeof e == "string") return [
            e
        ];
        if (e instanceof Document) return [
            e.body.outerHTML
        ];
        if (t === "json" && e && typeof e == "object") return [
            JSON.stringify(e)
        ];
        if (!e) return [
            void 0
        ];
    } catch (n) {
        return Te && Ae.exception(n, "Failed to serialize body", e), [
            void 0,
            "BODY_PARSE_ERROR"
        ];
    }
    return Te && Ae.info("Skipping network body because of body type", e), [
        void 0,
        "UNPARSEABLE_BODY_TYPE"
    ];
}
function C7(e, t) {
    try {
        const n = t === "json" && e && typeof e == "object" ? JSON.stringify(e) : e;
        return ud(n);
    } catch  {
        return;
    }
}
function g7(e) {
    const t = ye();
    try {
        const { networkDetailAllowUrls: n, networkDetailDenyUrls: r, networkCaptureBodies: s, networkRequestHeaders: i, networkResponseHeaders: a } = e.getOptions(), o = {
            replay: e,
            networkDetailAllowUrls: n,
            networkDetailDenyUrls: r,
            networkCaptureBodies: s,
            networkRequestHeaders: i,
            networkResponseHeaders: a
        };
        t && t.on("beforeAddBreadcrumb", (l, c)=>L7(o, l, c));
    } catch  {}
}
function L7(e, t, n) {
    if (t.data) try {
        y7(t) && b7(n) && (m7(t, n), R7(t, n, e)), v7(t) && P7(n) && (c7(t, n), l7(t, n, e));
    } catch (r) {
        Te && Ae.exception(r, "Error when enriching network breadcrumb");
    }
}
function y7(e) {
    return e.category === "xhr";
}
function v7(e) {
    return e.category === "fetch";
}
function b7(e) {
    return e && e.xhr;
}
function P7(e) {
    return e && e.response;
}
function M7(e) {
    const t = ye();
    cC(ox(e)), sd(r7(e)), zx(e), g7(e);
    const n = t7(e);
    Sb(n), t && (t.on("beforeSendEvent", Xx(e)), t.on("afterSendEvent", Vx(e)), t.on("createDsc", (r)=>{
        const s = e.getSessionId();
        s && e.isEnabled() && e.recordingMode === "session" && e.checkAndHandleExpiredSession() && (r.replay_id = s);
    }), t.on("spanStart", (r)=>{
        e.lastActiveSpan = r;
    }), t.on("spanEnd", (r)=>{
        e.lastActiveSpan = r;
    }), t.on("beforeSendFeedback", (r, s)=>{
        const i = e.getSessionId();
        s && s.includeReplay && e.isEnabled() && i && r.contexts && r.contexts.feedback && (r.contexts.feedback.replay_id = i);
    }));
}
async function D7(e) {
    try {
        return Promise.all(cd(e, [
            // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)
            w7(Qe.performance.memory)
        ]));
    } catch  {
        return [];
    }
}
function w7(e) {
    const { jsHeapSizeLimit: t, totalJSHeapSize: n, usedJSHeapSize: r } = e, s = Date.now() / 1e3;
    return {
        type: "memory",
        name: "memory",
        start: s,
        end: s,
        data: {
            memory: {
                jsHeapSizeLimit: t,
                totalJSHeapSize: n,
                usedJSHeapSize: r
            }
        }
    };
}
function x7(e, t, n) {
    let r, s, i;
    const a = n && n.maxWait ? Math.max(n.maxWait, t) : 0;
    function o() {
        return l(), r = e(), r;
    }
    function l() {
        s !== void 0 && clearTimeout(s), i !== void 0 && clearTimeout(i), s = i = void 0;
    }
    function c() {
        return s !== void 0 || i !== void 0 ? o() : r;
    }
    function u() {
        return s && clearTimeout(s), s = $a(o, t), a && i === void 0 && (i = $a(o, a)), r;
    }
    return u.cancel = l, u.flush = c, u;
}
const Ri = Le.navigator;
function U7() {
    return /iPhone|iPad|iPod/i.test(Ri && Ri.userAgent || "") || /Macintosh/i.test(Ri && Ri.userAgent || "") && Ri && Ri.maxTouchPoints && Ri.maxTouchPoints > 1 ? {
        sampling: {
            mousemove: !1
        }
    } : {};
}
function F7(e) {
    let t = !1;
    return (n, r)=>{
        if (!e.checkAndHandleExpiredSession()) {
            Te && Ae.warn("Received replay event after session expired.");
            return;
        }
        const s = r || !t;
        t = !0, e.clickDetector && nx(e.clickDetector, n), e.addUpdate(()=>{
            if (e.recordingMode === "buffer" && s && e.setInitialState(), !mA(e, n, s)) return !0;
            if (!s) return !1;
            const i = e.session;
            if (G7(e, s), e.recordingMode === "buffer" && i && e.eventBuffer) {
                const a = e.eventBuffer.getEarliestTimestamp();
                a && (Te && Ae.info(`Updating session start time to earliest event in buffer to ${new Date(a)}`), i.started = a, e.getOptions().stickySession && RA(i));
            }
            return i && i.previousSessionId || e.recordingMode === "session" && e.flush(), !0;
        });
    };
}
function B7(e) {
    const t = e.getOptions();
    return {
        type: ge.Custom,
        timestamp: Date.now(),
        data: {
            tag: "options",
            payload: {
                shouldRecordCanvas: e.isRecordingCanvas(),
                sessionSampleRate: t.sessionSampleRate,
                errorSampleRate: t.errorSampleRate,
                useCompressionOption: t.useCompression,
                blockAllMedia: t.blockAllMedia,
                maskAllText: t.maskAllText,
                maskAllInputs: t.maskAllInputs,
                useCompression: e.eventBuffer ? e.eventBuffer.type === "worker" : !1,
                networkDetailHasUrls: t.networkDetailAllowUrls.length > 0,
                networkCaptureBodies: t.networkCaptureBodies,
                networkRequestHasHeaders: t.networkRequestHeaders.length > 0,
                networkResponseHasHeaders: t.networkResponseHeaders.length > 0
            }
        }
    };
}
function G7(e, t) {
    !t || !e.session || e.session.segmentId !== 0 || mA(e, B7(e), !1);
}
function k7(e, t, n, r) {
    return ea(VI(e, Wh(e), r, n), [
        [
            {
                type: "replay_event"
            },
            e
        ],
        [
            {
                type: "replay_recording",
                // If string then we need to encode to UTF8, otherwise will have
                // wrong size. TextEncoder has similar browser support to
                // MutationObserver, although it does not accept IE11.
                length: typeof t == "string" ? new TextEncoder().encode(t).length : t.length
            },
            t
        ]
    ]);
}
function H7({ recordingData: e, headers: t }) {
    let n;
    const r = `${JSON.stringify(t)}
`;
    if (typeof e == "string") n = `${r}${e}`;
    else {
        const i = new TextEncoder().encode(r);
        n = new Uint8Array(i.length + e.length), n.set(i), n.set(e, i.length);
    }
    return n;
}
async function Y7({ client: e, scope: t, replayId: n, event: r }) {
    const s = typeof e._integrations == "object" && e._integrations !== null && !Array.isArray(e._integrations) ? Object.keys(e._integrations) : void 0, i = {
        event_id: n,
        integrations: s
    };
    e.emit("preprocessEvent", r, i);
    const a = await JI(e.getOptions(), r, i, t, e, Ir());
    if (!a) return null;
    a.platform = a.platform || "javascript";
    const o = e.getSdkMetadata(), { name: l, version: c } = o && o.sdk || {};
    return a.sdk = {
        ...a.sdk,
        name: l || "sentry.javascript.unknown",
        version: c || "0.0.0"
    }, a;
}
async function V7({ recordingData: e, replayId: t, segmentId: n, eventContext: r, timestamp: s, session: i }) {
    const a = H7({
        recordingData: e,
        headers: {
            segment_id: n
        }
    }), { urls: o, errorIds: l, traceIds: c, initialTimestamp: u } = r, E = ye(), p = qe(), A = E && E.getTransport(), R = E && E.getDsn();
    if (!E || !A || !R || !i.sampled) return fs({});
    const C = {
        type: _w,
        replay_start_timestamp: u / 1e3,
        timestamp: s / 1e3,
        error_ids: l,
        trace_ids: c,
        urls: o,
        replay_id: t,
        segment_id: n,
        replay_type: i.sampled
    }, O = await Y7({
        scope: p,
        client: E,
        replayId: t,
        event: C
    });
    if (!O) return E.recordDroppedEvent("event_processor", "replay", C), Te && Ae.info("An event processor returned `null`, will not send event."), fs({});
    delete O.sdkProcessingMetadata;
    const d = k7(O, a, R, E.getOptions().tunnel);
    let f;
    try {
        f = await A.send(d);
    } catch (h) {
        const I = new Error(cA);
        try {
            I.cause = h;
        } catch  {}
        throw I;
    }
    if (typeof f.statusCode == "number" && (f.statusCode < 200 || f.statusCode >= 300)) throw new tg(f.statusCode);
    const _ = aO({}, f);
    if (iO(_, "replay")) throw new NA(_);
    return f;
}
class tg extends Error {
    constructor(t){
        super(`Transport returned status code ${t}`);
    }
}
class NA extends Error {
    constructor(t){
        super("Rate limit hit"), this.rateLimits = t;
    }
}
async function ng(e, t = {
    count: 0,
    interval: Lw
}) {
    const { recordingData: n, onError: r } = e;
    if (n.length) try {
        return await V7(e), !0;
    } catch (s) {
        if (s instanceof tg || s instanceof NA) throw s;
        if (QI("Replays", {
            _retryCount: t.count
        }), r && r(s), t.count >= yw) {
            const i = new Error(`${cA} - max retries exceeded`);
            try {
                i.cause = s;
            } catch  {}
            throw i;
        }
        return t.interval *= ++t.count, new Promise((i, a)=>{
            $a(async ()=>{
                try {
                    await ng(e, t), i(!0);
                } catch (o) {
                    a(o);
                }
            }, t.interval);
        });
    }
}
const rg = "__THROTTLED", W7 = "__SKIPPED";
function j7(e, t, n) {
    const r = /* @__PURE__ */ new Map(), s = (o)=>{
        const l = o - n;
        r.forEach((c, u)=>{
            u < l && r.delete(u);
        });
    }, i = ()=>[
            ...r.values()
        ].reduce((o, l)=>o + l, 0);
    let a = !1;
    return (...o)=>{
        const l = Math.floor(Date.now() / 1e3);
        if (s(l), i() >= t) {
            const u = a;
            return a = !0, u ? W7 : rg;
        }
        a = !1;
        const c = r.get(l) || 0;
        return r.set(l, c + 1), e(...o);
    };
}
class Ms {
    /**
   * Recording can happen in one of two modes:
   *   - session: Record the whole session, sending it continuously
   *   - buffer: Always keep the last 60s of recording, requires:
   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs
   *     - or calling `flush()` to send the replay
   */ /**
   * The current or last active span.
   * This is only available when performance is enabled.
   */ /**
   * These are here so we can overwrite them in tests etc.
   * @hidden
   */ /** The replay has to be manually started, because no sample rate (neither session or error) was provided. */ /**
   * Options to pass to `rrweb.record()`
   */ /**
   * Timestamp of the last user activity. This lives across sessions.
   */ /**
   * Is the integration currently active?
   */ /**
   * Paused is a state where:
   * - DOM Recording is not listening at all
   * - Nothing will be added to event buffer (e.g. core SDK events)
   */ /**
   * Have we attached listeners to the core SDK?
   * Note we have to track this as there is no way to remove instrumentation handlers.
   */ /**
   * Function to stop recording
   */ /**
   * Internal use for canvas recording options
   */ constructor({ options: t, recordingOptions: n }){
        Ms.prototype.__init.call(this), Ms.prototype.__init2.call(this), Ms.prototype.__init3.call(this), Ms.prototype.__init4.call(this), Ms.prototype.__init5.call(this), Ms.prototype.__init6.call(this), this.eventBuffer = null, this.performanceEntries = [], this.replayPerformanceEntries = [], this.recordingMode = "session", this.timeouts = {
            sessionIdlePause: Nw,
            sessionIdleExpire: Iw
        }, this._lastActivity = Date.now(), this._isEnabled = !1, this._isPaused = !1, this._requiresManualStart = !1, this._hasInitializedCoreListeners = !1, this._context = {
            errorIds: /* @__PURE__ */ new Set(),
            traceIds: /* @__PURE__ */ new Set(),
            urls: [],
            initialTimestamp: Date.now(),
            initialUrl: ""
        }, this._recordingOptions = n, this._options = t, this._debouncedFlush = x7(()=>this._flush(), this._options.flushMinDelay, {
            maxWait: this._options.flushMaxDelay
        }), this._throttledAddEvent = j7((a, o)=>kx(this, a, o), // Max 300 events...
        300, // ... per 5s
        5);
        const { slowClickTimeout: r, slowClickIgnoreSelectors: s } = this.getOptions(), i = r ? {
            threshold: Math.min(vw, r),
            timeout: r,
            scrollTimeout: bw,
            ignoreSelector: s ? s.join(",") : ""
        } : void 0;
        if (i && (this.clickDetector = new Q8(this, i)), Te) {
            const a = t._experiments;
            Ae.setConfig({
                captureExceptions: !!a.captureExceptions,
                traceInternals: !!a.traceInternals
            });
        }
    }
    /** Get the event context. */ getContext() {
        return this._context;
    }
    /** If recording is currently enabled. */ isEnabled() {
        return this._isEnabled;
    }
    /** If recording is currently paused. */ isPaused() {
        return this._isPaused;
    }
    /**
   * Determine if canvas recording is enabled
   */ isRecordingCanvas() {
        return !!this._canvas;
    }
    /** Get the replay integration options. */ getOptions() {
        return this._options;
    }
    /** A wrapper to conditionally capture exceptions. */ handleException(t) {
        Te && Ae.exception(t), this._options.onError && this._options.onError(t);
    }
    /**
   * Initializes the plugin based on sampling configuration. Should not be
   * called outside of constructor.
   */ initializeSampling(t) {
        const { errorSampleRate: n, sessionSampleRate: r } = this._options, s = n <= 0 && r <= 0;
        if (this._requiresManualStart = s, !s) {
            if (this._initializeSessionForSampling(t), !this.session) {
                Te && Ae.exception(new Error("Unable to initialize and create session"));
                return;
            }
            this.session.sampled !== !1 && (this.recordingMode = this.session.sampled === "buffer" && this.session.segmentId === 0 ? "buffer" : "session", Te && Ae.infoTick(`Starting replay in ${this.recordingMode} mode`), this._initializeRecording());
        }
    }
    /**
   * Start a replay regardless of sampling rate. Calling this will always
   * create a new session. Will log a message if replay is already in progress.
   *
   * Creates or loads a session, attaches listeners to varying events (DOM,
   * _performanceObserver, Recording, Sentry SDK, etc)
   */ start() {
        if (this._isEnabled && this.recordingMode === "session") {
            Te && Ae.info("Recording is already in progress");
            return;
        }
        if (this._isEnabled && this.recordingMode === "buffer") {
            Te && Ae.info("Buffering is in progress, call `flush()` to save the replay");
            return;
        }
        Te && Ae.infoTick("Starting replay in session mode"), this._updateUserActivity();
        const t = Cf({
            maxReplayDuration: this._options.maxReplayDuration,
            sessionIdleExpire: this.timeouts.sessionIdleExpire
        }, {
            stickySession: this._options.stickySession,
            // This is intentional: create a new session-based replay when calling `start()`
            sessionSampleRate: 1,
            allowBuffering: !1
        });
        this.session = t, this._initializeRecording();
    }
    /**
   * Start replay buffering. Buffers until `flush()` is called or, if
   * `replaysOnErrorSampleRate` > 0, an error occurs.
   */ startBuffering() {
        if (this._isEnabled) {
            Te && Ae.info("Buffering is in progress, call `flush()` to save the replay");
            return;
        }
        Te && Ae.infoTick("Starting replay in buffer mode");
        const t = Cf({
            sessionIdleExpire: this.timeouts.sessionIdleExpire,
            maxReplayDuration: this._options.maxReplayDuration
        }, {
            stickySession: this._options.stickySession,
            sessionSampleRate: 0,
            allowBuffering: !0
        });
        this.session = t, this.recordingMode = "buffer", this._initializeRecording();
    }
    /**
   * Start recording.
   *
   * Note that this will cause a new DOM checkout
   */ startRecording() {
        try {
            const t = this._canvas;
            this._stopRecording = ss({
                ...this._recordingOptions,
                // When running in error sampling mode, we need to overwrite `checkoutEveryNms`
                // Without this, it would record forever, until an error happens, which we don't want
                // instead, we'll always keep the last 60 seconds of replay before an error happened
                ...this.recordingMode === "buffer" ? {
                    checkoutEveryNms: gw
                } : // Otherwise, use experimental option w/ min checkout time of 6 minutes
                // This is to improve playback seeking as there could potentially be
                // less mutations to process in the worse cases.
                //
                // checkout by "N" events is probably ideal, but means we have less
                // control about the number of checkouts we make (which generally
                // increases replay size)
                this._options._experiments.continuousCheckout && {
                    // Minimum checkout time is 6 minutes
                    checkoutEveryNms: Math.max(36e4, this._options._experiments.continuousCheckout)
                },
                emit: F7(this),
                ...U7(),
                onMutation: this._onMutationHandler,
                ...t ? {
                    recordCanvas: t.recordCanvas,
                    getCanvasManager: t.getCanvasManager,
                    sampling: t.sampling,
                    dataURLOptions: t.dataURLOptions
                } : {}
            });
        } catch (t) {
            this.handleException(t);
        }
    }
    /**
   * Stops the recording, if it was running.
   *
   * Returns true if it was previously stopped, or is now stopped,
   * otherwise false.
   */ stopRecording() {
        try {
            return this._stopRecording && (this._stopRecording(), this._stopRecording = void 0), !0;
        } catch (t) {
            return this.handleException(t), !1;
        }
    }
    /**
   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK
   * does not support a teardown
   */ async stop({ forceFlush: t = !1, reason: n } = {}) {
        if (this._isEnabled) {
            this._isEnabled = !1;
            try {
                Te && Ae.info(`Stopping Replay${n ? ` triggered by ${n}` : ""}`), KC(), this._removeListeners(), this.stopRecording(), this._debouncedFlush.cancel(), t && await this._flush({
                    force: !0
                }), this.eventBuffer && this.eventBuffer.destroy(), this.eventBuffer = null, xx(this);
            } catch (r) {
                this.handleException(r);
            }
        }
    }
    /**
   * Pause some replay functionality. See comments for `_isPaused`.
   * This differs from stop as this only stops DOM recording, it is
   * not as thorough of a shutdown as `stop()`.
   */ pause() {
        this._isPaused || (this._isPaused = !0, this.stopRecording(), Te && Ae.info("Pausing replay"));
    }
    /**
   * Resumes recording, see notes for `pause().
   *
   * Note that calling `startRecording()` here will cause a
   * new DOM checkout.`
   */ resume() {
        !this._isPaused || !this._checkSession() || (this._isPaused = !1, this.startRecording(), Te && Ae.info("Resuming replay"));
    }
    /**
   * If not in "session" recording mode, flush event buffer which will create a new replay.
   * Unless `continueRecording` is false, the replay will continue to record and
   * behave as a "session"-based replay.
   *
   * Otherwise, queue up a flush.
   */ async sendBufferedReplayOrFlush({ continueRecording: t = !0 } = {}) {
        if (this.recordingMode === "session") return this.flushImmediate();
        const n = Date.now();
        Te && Ae.info("Converting buffer to session"), await this.flushImmediate();
        const r = this.stopRecording();
        !t || !r || this.recordingMode !== "session" && (this.recordingMode = "session", this.session && (this._updateUserActivity(n), this._updateSessionActivity(n), this._maybeSaveSession()), this.startRecording());
    }
    /**
   * We want to batch uploads of replay events. Save events only if
   * `<flushMinDelay>` milliseconds have elapsed since the last event
   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.
   *
   * Accepts a callback to perform side-effects and returns true to stop batch
   * processing and hand back control to caller.
   */ addUpdate(t) {
        const n = t();
        this.recordingMode !== "buffer" && n !== !0 && this._debouncedFlush();
    }
    /**
   * Updates the user activity timestamp and resumes recording. This should be
   * called in an event handler for a user action that we consider as the user
   * being "active" (e.g. a mouse click).
   */ triggerUserActivity() {
        if (this._updateUserActivity(), !this._stopRecording) {
            if (!this._checkSession()) return;
            this.resume();
            return;
        }
        this.checkAndHandleExpiredSession(), this._updateSessionActivity();
    }
    /**
   * Updates the user activity timestamp *without* resuming
   * recording. Some user events (e.g. keydown) can be create
   * low-value replays that only contain the keypress as a
   * breadcrumb. Instead this would require other events to
   * create a new replay after a session has expired.
   */ updateUserActivity() {
        this._updateUserActivity(), this._updateSessionActivity();
    }
    /**
   * Only flush if `this.recordingMode === 'session'`
   */ conditionalFlush() {
        return this.recordingMode === "buffer" ? Promise.resolve() : this.flushImmediate();
    }
    /**
   * Flush using debounce flush
   */ flush() {
        return this._debouncedFlush();
    }
    /**
   * Always flush via `_debouncedFlush` so that we do not have flushes triggered
   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be
   * cases of multiple flushes happening closely together.
   */ flushImmediate() {
        return this._debouncedFlush(), this._debouncedFlush.flush();
    }
    /**
   * Cancels queued up flushes.
   */ cancelFlush() {
        this._debouncedFlush.cancel();
    }
    /** Get the current session (=replay) ID */ getSessionId() {
        return this.session && this.session.id;
    }
    /**
   * Checks if recording should be stopped due to user inactivity. Otherwise
   * check if session is expired and create a new session if so. Triggers a new
   * full snapshot on new session.
   *
   * Returns true if session is not expired, false otherwise.
   * @hidden
   */ checkAndHandleExpiredSession() {
        if (this._lastActivity && IT(this._lastActivity, this.timeouts.sessionIdlePause) && this.session && this.session.sampled === "session") {
            this.pause();
            return;
        }
        return !!this._checkSession();
    }
    /**
   * Capture some initial state that can change throughout the lifespan of the
   * replay. This is required because otherwise they would be captured at the
   * first flush.
   */ setInitialState() {
        const t = `${Qe.location.pathname}${Qe.location.hash}${Qe.location.search}`, n = `${Qe.location.origin}${t}`;
        this.performanceEntries = [], this.replayPerformanceEntries = [], this._clearContext(), this._context.initialUrl = n, this._context.initialTimestamp = Date.now(), this._context.urls.push(n);
    }
    /**
   * Add a breadcrumb event, that may be throttled.
   * If it was throttled, we add a custom breadcrumb to indicate that.
   */ throttledAddEvent(t, n) {
        const r = this._throttledAddEvent(t, n);
        if (r === rg) {
            const s = Br({
                category: "replay.throttled"
            });
            this.addUpdate(()=>!mA(this, {
                    type: j8,
                    timestamp: s.timestamp || 0,
                    data: {
                        tag: "breadcrumb",
                        payload: s,
                        metric: !0
                    }
                }));
        }
        return r;
    }
    /**
   * This will get the parametrized route name of the current page.
   * This is only available if performance is enabled, and if an instrumented router is used.
   */ getCurrentRoute() {
        const t = this.lastActiveSpan || wt(), n = t && Mt(t), s = (n && Me(n).data || {})[Sr];
        if (!(!n || !s || ![
            "route",
            "custom"
        ].includes(s))) return Me(n).description;
    }
    /**
   * Initialize and start all listeners to varying events (DOM,
   * Performance Observer, Recording, Sentry SDK, etc)
   */ _initializeRecording() {
        this.setInitialState(), this._updateSessionActivity(), this.eventBuffer = Mx({
            useCompression: this._options.useCompression,
            workerUrl: this._options.workerUrl
        }), this._removeListeners(), this._addListeners(), this._isEnabled = !0, this._isPaused = !1, this.startRecording();
    }
    /**
   * Loads (or refreshes) the current session.
   */ _initializeSessionForSampling(t) {
        const n = this._options.errorSampleRate > 0, r = Cf({
            sessionIdleExpire: this.timeouts.sessionIdleExpire,
            maxReplayDuration: this._options.maxReplayDuration,
            previousSessionId: t
        }, {
            stickySession: this._options.stickySession,
            sessionSampleRate: this._options.sessionSampleRate,
            allowBuffering: n
        });
        this.session = r;
    }
    /**
   * Checks and potentially refreshes the current session.
   * Returns false if session is not recorded.
   */ _checkSession() {
        if (!this.session) return !1;
        const t = this.session;
        return VC(t, {
            sessionIdleExpire: this.timeouts.sessionIdleExpire,
            maxReplayDuration: this._options.maxReplayDuration
        }) ? (this._refreshSession(t), !1) : !0;
    }
    /**
   * Refresh a session with a new one.
   * This stops the current session (without forcing a flush, as that would never work since we are expired),
   * and then does a new sampling based on the refreshed session.
   */ async _refreshSession(t) {
        this._isEnabled && (await this.stop({
            reason: "refresh session"
        }), this.initializeSampling(t.id));
    }
    /**
   * Adds listeners to record events for the replay
   */ _addListeners() {
        try {
            Qe.document.addEventListener("visibilitychange", this._handleVisibilityChange), Qe.addEventListener("blur", this._handleWindowBlur), Qe.addEventListener("focus", this._handleWindowFocus), Qe.addEventListener("keydown", this._handleKeyboardEvent), this.clickDetector && this.clickDetector.addListeners(), this._hasInitializedCoreListeners || (M7(this), this._hasInitializedCoreListeners = !0);
        } catch (t) {
            this.handleException(t);
        }
        this._performanceCleanupCallback = Cx(this);
    }
    /**
   * Cleans up listeners that were created in `_addListeners`
   */ _removeListeners() {
        try {
            Qe.document.removeEventListener("visibilitychange", this._handleVisibilityChange), Qe.removeEventListener("blur", this._handleWindowBlur), Qe.removeEventListener("focus", this._handleWindowFocus), Qe.removeEventListener("keydown", this._handleKeyboardEvent), this.clickDetector && this.clickDetector.removeListeners(), this._performanceCleanupCallback && this._performanceCleanupCallback();
        } catch (t) {
            this.handleException(t);
        }
    }
    /**
   * Handle when visibility of the page content changes. Opening a new tab will
   * cause the state to change to hidden because of content of current page will
   * be hidden. Likewise, moving a different window to cover the contents of the
   * page will also trigger a change to a hidden state.
   */ __init() {
        this._handleVisibilityChange = ()=>{
            Qe.document.visibilityState === "visible" ? this._doChangeToForegroundTasks() : this._doChangeToBackgroundTasks();
        };
    }
    /**
   * Handle when page is blurred
   */ __init2() {
        this._handleWindowBlur = ()=>{
            const t = Br({
                category: "ui.blur"
            });
            this._doChangeToBackgroundTasks(t);
        };
    }
    /**
   * Handle when page is focused
   */ __init3() {
        this._handleWindowFocus = ()=>{
            const t = Br({
                category: "ui.focus"
            });
            this._doChangeToForegroundTasks(t);
        };
    }
    /** Ensure page remains active when a key is pressed. */ __init4() {
        this._handleKeyboardEvent = (t)=>{
            Ex(this, t);
        };
    }
    /**
   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)
   */ _doChangeToBackgroundTasks(t) {
        !this.session || YC(this.session, {
            maxReplayDuration: this._options.maxReplayDuration,
            sessionIdleExpire: this.timeouts.sessionIdleExpire
        }) || (t && this._createCustomBreadcrumb(t), this.conditionalFlush());
    }
    /**
   * Tasks to run when we consider a page to be visible (via focus and/or visibility)
   */ _doChangeToForegroundTasks(t) {
        if (!this.session) return;
        if (!this.checkAndHandleExpiredSession()) {
            Te && Ae.info("Document has become active, but session has expired");
            return;
        }
        t && this._createCustomBreadcrumb(t);
    }
    /**
   * Update user activity (across session lifespans)
   */ _updateUserActivity(t = Date.now()) {
        this._lastActivity = t;
    }
    /**
   * Updates the session's last activity timestamp
   */ _updateSessionActivity(t = Date.now()) {
        this.session && (this.session.lastActivity = t, this._maybeSaveSession());
    }
    /**
   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb
   */ _createCustomBreadcrumb(t) {
        this.addUpdate(()=>{
            this.throttledAddEvent({
                type: ge.Custom,
                timestamp: t.timestamp || 0,
                data: {
                    tag: "breadcrumb",
                    payload: t
                }
            });
        });
    }
    /**
   * Observed performance events are added to `this.performanceEntries`. These
   * are included in the replay event before it is finished and sent to Sentry.
   */ _addPerformanceEntries() {
        let t = Tx(this.performanceEntries).concat(this.replayPerformanceEntries);
        if (this.performanceEntries = [], this.replayPerformanceEntries = [], this._requiresManualStart) {
            const n = this._context.initialTimestamp / 1e3;
            t = t.filter((r)=>r.start >= n);
        }
        return Promise.all(cd(this, t));
    }
    /**
   * Clear _context
   */ _clearContext() {
        this._context.errorIds.clear(), this._context.traceIds.clear(), this._context.urls = [];
    }
    /** Update the initial timestamp based on the buffer content. */ _updateInitialTimestampFromEventBuffer() {
        const { session: t, eventBuffer: n } = this;
        if (!t || !n || this._requiresManualStart || t.segmentId) return;
        const r = n.getEarliestTimestamp();
        r && r < this._context.initialTimestamp && (this._context.initialTimestamp = r);
    }
    /**
   * Return and clear _context
   */ _popEventContext() {
        const t = {
            initialTimestamp: this._context.initialTimestamp,
            initialUrl: this._context.initialUrl,
            errorIds: Array.from(this._context.errorIds),
            traceIds: Array.from(this._context.traceIds),
            urls: this._context.urls
        };
        return this._clearContext(), t;
    }
    /**
   * Flushes replay event buffer to Sentry.
   *
   * Performance events are only added right before flushing - this is
   * due to the buffered performance observer events.
   *
   * Should never be called directly, only by `flush`
   */ async _runFlush() {
        const t = this.getSessionId();
        if (!this.session || !this.eventBuffer || !t) {
            Te && Ae.error("No session or eventBuffer found to flush.");
            return;
        }
        if (await this._addPerformanceEntries(), !(!this.eventBuffer || !this.eventBuffer.hasEvents) && (await D7(this), !!this.eventBuffer && t === this.getSessionId())) try {
            this._updateInitialTimestampFromEventBuffer();
            const n = Date.now();
            if (n - this._context.initialTimestamp > this._options.maxReplayDuration + 3e4) throw new Error("Session is too long, not sending replay");
            const r = this._popEventContext(), s = this.session.segmentId++;
            this._maybeSaveSession();
            const i = await this.eventBuffer.finish();
            await ng({
                replayId: t,
                recordingData: i,
                segmentId: s,
                eventContext: r,
                session: this.session,
                timestamp: n,
                onError: (a)=>this.handleException(a)
            });
        } catch (n) {
            this.handleException(n), this.stop({
                reason: "sendReplay"
            });
            const r = ye();
            if (r) {
                const s = n instanceof NA ? "ratelimit_backoff" : "send_error";
                r.recordDroppedEvent(s, "replay");
            }
        }
    }
    /**
   * Flush recording data to Sentry. Creates a lock so that only a single flush
   * can be active at a time. Do not call this directly.
   */ __init5() {
        this._flush = async ({ force: t = !1 } = {})=>{
            if (!this._isEnabled && !t) return;
            if (!this.checkAndHandleExpiredSession()) {
                Te && Ae.error("Attempting to finish replay event after session expired.");
                return;
            }
            if (!this.session) return;
            const n = this.session.started, s = Date.now() - n;
            this._debouncedFlush.cancel();
            const i = s < this._options.minReplayDuration, a = s > this._options.maxReplayDuration + 5e3;
            if (i || a) {
                Te && Ae.info(`Session duration (${Math.floor(s / 1e3)}s) is too ${i ? "short" : "long"}, not sending replay.`), i && this._debouncedFlush();
                return;
            }
            const o = this.eventBuffer;
            o && this.session.segmentId === 0 && !o.hasCheckout && Te && Ae.info("Flushing initial segment without checkout.");
            const l = !!this._flushLock;
            this._flushLock || (this._flushLock = this._runFlush());
            try {
                await this._flushLock;
            } catch (c) {
                this.handleException(c);
            } finally{
                this._flushLock = void 0, l && this._debouncedFlush();
            }
        };
    }
    /** Save the session, if it is sticky */ _maybeSaveSession() {
        this.session && this._options.stickySession && RA(this.session);
    }
    /** Handler for rrweb.record.onMutation */ __init6() {
        this._onMutationHandler = (t)=>{
            const n = t.length, r = this._options.mutationLimit, s = this._options.mutationBreadcrumbLimit, i = r && n > r;
            if (n > s || i) {
                const a = Br({
                    category: "replay.mutations",
                    data: {
                        count: n,
                        limit: i
                    }
                });
                this._createCustomBreadcrumb(a);
            }
            return i ? (this.stop({
                reason: "mutationLimit",
                forceFlush: this.recordingMode === "session"
            }), !1) : !0;
        };
    }
}
function Mo(e, t) {
    return [
        ...e,
        // sentry defaults
        ...t
    ].join(",");
}
function X7({ mask: e, unmask: t, block: n, unblock: r, ignore: s }) {
    const i = [
        "base",
        "iframe[srcdoc]:not([src])"
    ], a = Mo(e, [
        ".sentry-mask",
        "[data-sentry-mask]"
    ]), o = Mo(t, []);
    return {
        // We are making the decision to make text and input selectors the same
        maskTextSelector: a,
        unmaskTextSelector: o,
        blockSelector: Mo(n, [
            ".sentry-block",
            "[data-sentry-block]",
            ...i
        ]),
        unblockSelector: Mo(r, []),
        ignoreSelector: Mo(s, [
            ".sentry-ignore",
            "[data-sentry-ignore]",
            'input[type="file"]'
        ])
    };
}
function K7({ el: e, key: t, maskAttributes: n, maskAllText: r, privacyOptions: s, value: i }) {
    return !r || s.unmaskTextSelector && e.matches(s.unmaskTextSelector) ? i : n.includes(t) || // Need to mask `value` attribute for `<input>` if it's a button-like
    // type
    t === "value" && e.tagName === "INPUT" && [
        "submit",
        "button"
    ].includes(e.getAttribute("type") || "") ? i.replace(/[\S]/g, "*") : i;
}
const JR = 'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]', z7 = [
    "content-length",
    "content-type",
    "accept"
];
let qR = !1;
const J7 = (e)=>new Ed(e);
class Ed {
    /**
   * @inheritDoc
   */ static __initStatic() {
        this.id = "Replay";
    }
    /**
   * @inheritDoc
   */ /**
   * Options to pass to `rrweb.record()`
   */ /**
   * Initial options passed to the replay integration, merged with default values.
   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they
   * can only be finally set when setupOnce() is called.
   *
   * @private
   */ constructor({ flushMinDelay: t = Ow, flushMaxDelay: n = Cw, minReplayDuration: r = Pw, maxReplayDuration: s = yR, stickySession: i = !0, useCompression: a = !0, workerUrl: o, _experiments: l = {}, maskAllText: c = !0, maskAllInputs: u = !0, blockAllMedia: E = !0, mutationBreadcrumbLimit: p = 750, mutationLimit: A = 1e4, slowClickTimeout: R = 7e3, slowClickIgnoreSelectors: C = [], networkDetailAllowUrls: O = [], networkDetailDenyUrls: d = [], networkCaptureBodies: f = !0, networkRequestHeaders: _ = [], networkResponseHeaders: h = [], mask: I = [], maskAttributes: T = [
        "title",
        "placeholder"
    ], unmask: N = [], block: g = [], unblock: b = [], ignore: S = [], maskFn: P, beforeAddRecordingEvent: w, beforeErrorSampling: G, onError: k } = {}){
        this.name = Ed.id;
        const Y = X7({
            mask: I,
            unmask: N,
            block: g,
            unblock: b,
            ignore: S
        });
        if (this._recordingOptions = {
            maskAllInputs: u,
            maskAllText: c,
            maskInputOptions: {
                password: !0
            },
            maskTextFn: P,
            maskInputFn: P,
            maskAttributeFn: (H, F, x)=>K7({
                    maskAttributes: T,
                    maskAllText: c,
                    privacyOptions: Y,
                    key: H,
                    value: F,
                    el: x
                }),
            ...Y,
            // Our defaults
            slimDOMOptions: "all",
            inlineStylesheet: !0,
            // Disable inline images as it will increase segment/replay size
            inlineImages: !1,
            // collect fonts, but be aware that `sentry.io` needs to be an allowed
            // origin for playback
            collectFonts: !0,
            errorHandler: (H)=>{
                try {
                    H.__rrweb__ = !0;
                } catch  {}
            }
        }, this._initialOptions = {
            flushMinDelay: t,
            flushMaxDelay: n,
            minReplayDuration: Math.min(r, Mw),
            maxReplayDuration: Math.min(s, yR),
            stickySession: i,
            useCompression: a,
            workerUrl: o,
            blockAllMedia: E,
            maskAllInputs: u,
            maskAllText: c,
            mutationBreadcrumbLimit: p,
            mutationLimit: A,
            slowClickTimeout: R,
            slowClickIgnoreSelectors: C,
            networkDetailAllowUrls: O,
            networkDetailDenyUrls: d,
            networkCaptureBodies: f,
            networkRequestHeaders: ZR(_),
            networkResponseHeaders: ZR(h),
            beforeAddRecordingEvent: w,
            beforeErrorSampling: G,
            onError: k,
            _experiments: l
        }, this._initialOptions.blockAllMedia && (this._recordingOptions.blockSelector = this._recordingOptions.blockSelector ? `${this._recordingOptions.blockSelector},${JR}` : JR), this._isInitialized && tR()) throw new Error("Multiple Sentry Session Replay instances are not supported");
        this._isInitialized = !0;
    }
    /** If replay has already been initialized */ get _isInitialized() {
        return qR;
    }
    /** Update _isInitialized */ set _isInitialized(t) {
        qR = t;
    }
    /**
   * Setup and initialize replay container
   */ afterAllSetup(t) {
        !tR() || this._replay || (this._setup(t), this._initialize(t));
    }
    /**
   * Start a replay regardless of sampling rate. Calling this will always
   * create a new session. Will log a message if replay is already in progress.
   *
   * Creates or loads a session, attaches listeners to varying events (DOM,
   * PerformanceObserver, Recording, Sentry SDK, etc)
   */ start() {
        this._replay && this._replay.start();
    }
    /**
   * Start replay buffering. Buffers until `flush()` is called or, if
   * `replaysOnErrorSampleRate` > 0, until an error occurs.
   */ startBuffering() {
        this._replay && this._replay.startBuffering();
    }
    /**
   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK
   * does not support a teardown
   */ stop() {
        return this._replay ? this._replay.stop({
            forceFlush: this._replay.recordingMode === "session"
        }) : Promise.resolve();
    }
    /**
   * If not in "session" recording mode, flush event buffer which will create a new replay.
   * If replay is not enabled, a new session replay is started.
   * Unless `continueRecording` is false, the replay will continue to record and
   * behave as a "session"-based replay.
   *
   * Otherwise, queue up a flush.
   */ flush(t) {
        return this._replay ? this._replay.isEnabled() ? this._replay.sendBufferedReplayOrFlush(t) : (this._replay.start(), Promise.resolve()) : Promise.resolve();
    }
    /**
   * Get the current session ID.
   */ getReplayId() {
        if (!(!this._replay || !this._replay.isEnabled())) return this._replay.getSessionId();
    }
    /**
   * Get the current recording mode. This can be either `session` or `buffer`.
   *
   * `session`: Recording the whole session, sending it continuously
   * `buffer`: Always keeping the last 60s of recording, requires:
   *   - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs
   *   - or calling `flush()` to send the replay
   */ getRecordingMode() {
        if (!(!this._replay || !this._replay.isEnabled())) return this._replay.recordingMode;
    }
    /**
   * Initializes replay.
   */ _initialize(t) {
        this._replay && (this._maybeLoadFromReplayCanvasIntegration(t), this._replay.initializeSampling());
    }
    /** Setup the integration. */ _setup(t) {
        const n = q7(this._initialOptions, t);
        this._replay = new Ms({
            options: n,
            recordingOptions: this._recordingOptions
        });
    }
    /** Get canvas options from ReplayCanvas integration, if it is also added. */ _maybeLoadFromReplayCanvasIntegration(t) {
        try {
            const n = t.getIntegrationByName("ReplayCanvas");
            if (!n) return;
            this._replay._canvas = n.getOptions();
        } catch  {}
    }
}
Ed.__initStatic();
function q7(e, t) {
    const n = t.getOptions(), r = {
        sessionSampleRate: 0,
        errorSampleRate: 0,
        ...Pt(e)
    }, s = tE(n.replaysSessionSampleRate), i = tE(n.replaysOnErrorSampleRate);
    return s == null && i == null && fi(()=>{
        console.warn("Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.");
    }), s != null && (r.sessionSampleRate = s), i != null && (r.errorSampleRate = i), r;
}
function ZR(e) {
    return [
        ...z7,
        ...e.map((t)=>t.toLowerCase())
    ];
}
const QR = /* @__PURE__ */ new WeakMap(), gf = /* @__PURE__ */ new Map(), Su = {
    traceFetch: !0,
    traceXHR: !0,
    enableHTTPTimings: !0,
    trackFetchStreamPerformance: !1
};
function Z7(e, t) {
    const { traceFetch: n, traceXHR: r, trackFetchStreamPerformance: s, shouldCreateSpanForRequest: i, enableHTTPTimings: a, tracePropagationTargets: o } = {
        traceFetch: Su.traceFetch,
        traceXHR: Su.traceXHR,
        trackFetchStreamPerformance: Su.trackFetchStreamPerformance,
        ...t
    }, l = typeof i == "function" ? i : (E)=>!0, c = (E)=>tU(E, o), u = {};
    n && (e.addEventProcessor((E)=>(E.type === "transaction" && E.spans && E.spans.forEach((p)=>{
            if (p.op === "http.client") {
                const A = gf.get(p.span_id);
                A && (p.timestamp = A / 1e3, gf.delete(p.span_id));
            }
        }), E)), s && CP((E)=>{
        if (E.response) {
            const p = QR.get(E.response);
            p && E.endTimestamp && gf.set(p, E.endTimestamp);
        }
    }), pO((E)=>{
        const p = SP(E, l, c, u);
        if (E.response && E.fetchData.__span && QR.set(E.response, E.fetchData.__span), p) {
            const A = sg(E.fetchData.url), R = A ? Ui(A).host : void 0;
            p.setAttributes({
                "http.url": A,
                "server.address": R
            });
        }
        a && p && $R(p);
    })), r && uC((E)=>{
        const p = nU(E, l, c, u);
        a && p && $R(p);
    });
}
function Q7(e) {
    return e.entryType === "resource" && "initiatorType" in e && typeof e.nextHopProtocol == "string" && (e.initiatorType === "fetch" || e.initiatorType === "xmlhttprequest");
}
function $R(e) {
    const { url: t } = Me(e).data || {};
    if (!t || typeof t != "string") return;
    const n = Qa("resource", ({ entries: r })=>{
        r.forEach((s)=>{
            Q7(s) && s.name.endsWith(t) && (eU(s).forEach((a)=>e.setAttribute(...a)), setTimeout(n));
        });
    });
}
function $7(e) {
    let t = "unknown", n = "unknown", r = "";
    for (const s of e){
        if (s === "/") {
            [t, n] = e.split("/");
            break;
        }
        if (!isNaN(Number(s))) {
            t = r === "h" ? "http" : r, n = e.split(r)[1];
            break;
        }
        r += s;
    }
    return r === e && (t = r), {
        name: t,
        version: n
    };
}
function br(e = 0) {
    return (($t || performance.timeOrigin) + e) / 1e3;
}
function eU(e) {
    const { name: t, version: n } = $7(e.nextHopProtocol), r = [];
    return r.push([
        "network.protocol.version",
        n
    ], [
        "network.protocol.name",
        t
    ]), $t ? [
        ...r,
        [
            "http.request.redirect_start",
            br(e.redirectStart)
        ],
        [
            "http.request.fetch_start",
            br(e.fetchStart)
        ],
        [
            "http.request.domain_lookup_start",
            br(e.domainLookupStart)
        ],
        [
            "http.request.domain_lookup_end",
            br(e.domainLookupEnd)
        ],
        [
            "http.request.connect_start",
            br(e.connectStart)
        ],
        [
            "http.request.secure_connection_start",
            br(e.secureConnectionStart)
        ],
        [
            "http.request.connection_end",
            br(e.connectEnd)
        ],
        [
            "http.request.request_start",
            br(e.requestStart)
        ],
        [
            "http.request.response_start",
            br(e.responseStart)
        ],
        [
            "http.request.response_end",
            br(e.responseEnd)
        ]
    ] : r;
}
function tU(e, t) {
    const n = ce.location && ce.location.href;
    if (n) {
        let r, s;
        try {
            r = new URL(e, n), s = new URL(n).origin;
        } catch  {
            return !1;
        }
        const i = r.origin === s;
        return t ? zs(r.toString(), t) || i && zs(r.pathname, t) : i;
    } else {
        const r = !!e.match(/^\/(?!\/)/);
        return t ? zs(e, t) : r;
    }
}
function nU(e, t, n, r) {
    const s = e.xhr, i = s && s[Li];
    if (!s || s.__sentry_own_request__ || !i) return;
    const a = ii() && t(i.url);
    if (e.endTimestamp && a) {
        const E = s.__sentry_xhr_span_id__;
        if (!E) return;
        const p = r[E];
        p && i.status_code !== void 0 && (LI(p, i.status_code), p.end(), delete r[E]);
        return;
    }
    const o = sg(i.url), l = o ? Ui(o).host : void 0, c = !!wt(), u = a && c ? Wl({
        name: `${i.method} ${i.url}`,
        attributes: {
            type: "xhr",
            "http.method": i.method,
            "http.url": o,
            url: i.url,
            "server.address": l,
            [Dt]: "auto.http.browser",
            [si]: "http.client"
        }
    }) : new fo();
    return s.__sentry_xhr_span_id__ = u.spanContext().spanId, r[s.__sentry_xhr_span_id__] = u, n(i.url) && rU(s, // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),
    // we do not want to use the span as base for the trace headers,
    // which means that the headers will be generated from the scope and the sampling decision is deferred
    ii() && c ? u : void 0), u;
}
function rU(e, t) {
    const { "sentry-trace": n, baggage: r } = lO({
        span: t
    });
    n && sU(e, n, r);
}
function sU(e, t, n) {
    try {
        e.setRequestHeader("sentry-trace", t), n && e.setRequestHeader("baggage", n);
    } catch  {}
}
function sg(e) {
    try {
        return new URL(e, ce.location.origin).href;
    } catch  {
        return;
    }
}
function iU() {
    ce && ce.document ? ce.document.addEventListener("visibilitychange", ()=>{
        const e = wt();
        if (!e) return;
        const t = Mt(e);
        if (ce.document.hidden && t) {
            const n = "cancelled", { op: r, status: s } = Me(t);
            Ge && q.log(`[Tracing] Transaction: ${n} -> since tab moved to the background, op: ${r}`), s || t.setStatus({
                code: Ft,
                message: n
            }), t.setAttribute("sentry.cancellation_reason", "document.hidden"), t.end();
        }
    }) : Ge && q.warn("[Tracing] Could not set up background tab detection due to lack of global document");
}
const aU = "BrowserTracing", oU = {
    ...fu,
    instrumentNavigation: !0,
    instrumentPageLoad: !0,
    markBackgroundSpan: !0,
    enableLongTask: !0,
    enableLongAnimationFrame: !0,
    enableInp: !0,
    _experiments: {},
    ...Su
}, lU = (e = {})=>{
    m3();
    const { enableInp: t, enableLongTask: n, enableLongAnimationFrame: r, _experiments: { enableInteractions: s, enableStandaloneClsSpans: i }, beforeStartSpan: a, idleTimeout: o, finalTimeout: l, childSpanTimeout: c, markBackgroundSpan: u, traceFetch: E, traceXHR: p, trackFetchStreamPerformance: A, shouldCreateSpanForRequest: R, enableHTTPTimings: C, instrumentPageLoad: O, instrumentNavigation: d } = {
        ...oU,
        ...e
    }, f = ZD({
        recordClsStandaloneSpans: i || !1
    });
    t && N6(), r && Le.PerformanceObserver && PerformanceObserver.supportedEntryTypes && PerformanceObserver.supportedEntryTypes.includes("long-animation-frame") ? $D() : n && QD(), s && e6();
    const _ = {
        name: void 0,
        source: void 0
    };
    function h(I, T) {
        const N = T.op === "pageload", g = a ? a(T) : T, b = g.attributes || {};
        T.name !== g.name && (b[Sr] = "custom", g.attributes = b), _.name = g.name, _.source = b[Sr];
        const S = KI(g, {
            idleTimeout: o,
            finalTimeout: l,
            childSpanTimeout: c,
            // should wait for finish signal if it's a pageload transaction
            disableAutoFinish: N,
            beforeSpanEnd: (w)=>{
                f(), i6(w, {
                    recordClsOnPageloadSpan: !i
                });
            }
        });
        function P() {
            [
                "interactive",
                "complete"
            ].includes(ce.document.readyState) && I.emit("idleSpanEnableAutoFinish", S);
        }
        return N && ce.document && (ce.document.addEventListener("readystatechange", ()=>{
            P();
        }), P()), S;
    }
    return {
        name: aU,
        afterAllSetup (I) {
            let T, N = ce.location && ce.location.href;
            function g() {
                T && !Me(T).timestamp && (Ge && q.log(`[Tracing] Finishing current active span with op: ${Me(T).op}`), T.end());
            }
            I.on("startNavigationSpan", (b)=>{
                ye() === I && (g(), T = h(I, {
                    op: "navigation",
                    ...b
                }));
            }), I.on("startPageLoadSpan", (b, S = {})=>{
                if (ye() !== I) return;
                g();
                const P = S.sentryTrace || e1("sentry-trace"), w = S.baggage || e1("baggage"), G = f3(P, w);
                qe().setPropagationContext(G), T = h(I, {
                    op: "pageload",
                    ...b
                });
            }), I.on("spanEnd", (b)=>{
                const S = Me(b).op;
                if (b !== Mt(b) || S !== "navigation" && S !== "pageload") return;
                const P = qe(), w = P.getPropagationContext();
                P.setPropagationContext({
                    ...w,
                    sampled: w.sampled !== void 0 ? w.sampled : Qi(b),
                    dsc: w.dsc || $i(b)
                });
            }), ce.location && (O && IA(I, {
                name: ce.location.pathname,
                // pageload should always start at timeOrigin (and needs to be in s, not ms)
                startTime: $t ? $t / 1e3 : void 0,
                attributes: {
                    [Sr]: "url",
                    [Dt]: "auto.pageload.browser"
                }
            }), d && sd(({ to: b, from: S })=>{
                if (S === void 0 && N && N.indexOf(b) !== -1) {
                    N = void 0;
                    return;
                }
                S !== b && (N = void 0, cU(I, {
                    name: ce.location.pathname,
                    attributes: {
                        [Sr]: "url",
                        [Dt]: "auto.navigation.browser"
                    }
                }));
            })), u && iU(), s && uU(o, l, c, _), t && O6(), Z7(I, {
                traceFetch: E,
                traceXHR: p,
                trackFetchStreamPerformance: A,
                tracePropagationTargets: I.getOptions().tracePropagationTargets,
                shouldCreateSpanForRequest: R,
                enableHTTPTimings: C
            });
        }
    };
};
function IA(e, t, n) {
    e.emit("startPageLoadSpan", t, n), qe().setTransactionName(t.name);
    const r = wt();
    return (r && Me(r).op) === "pageload" ? r : void 0;
}
function cU(e, t) {
    Ir().setPropagationContext({
        traceId: ni()
    }), qe().setPropagationContext({
        traceId: ni()
    }), e.emit("startNavigationSpan", t), qe().setTransactionName(t.name);
    const n = wt();
    return (n && Me(n).op) === "navigation" ? n : void 0;
}
function e1(e) {
    const t = G5(`meta[name=${e}]`);
    return t ? t.getAttribute("content") : void 0;
}
function uU(e, t, n, r) {
    let s;
    const i = ()=>{
        const a = "ui.action.click", o = wt(), l = o && Mt(o);
        if (l) {
            const c = Me(l).op;
            if ([
                "navigation",
                "pageload"
            ].includes(c)) {
                Ge && q.warn(`[Tracing] Did not create ${a} span because a pageload or navigation span is in progress.`);
                return;
            }
        }
        if (s && (s.setAttribute(Qp, "interactionInterrupted"), s.end(), s = void 0), !r.name) {
            Ge && q.warn(`[Tracing] Did not create ${a} transaction because _latestRouteName is missing.`);
            return;
        }
        s = KI({
            name: r.name,
            op: a,
            attributes: {
                [Sr]: r.source || "url"
            }
        }, {
            idleTimeout: e,
            finalTimeout: t,
            childSpanTimeout: n
        });
    };
    ce.document && addEventListener("click", i, {
        once: !1,
        capture: !0
    });
}
function ro(e) {
    return new Promise((t, n)=>{
        e.oncomplete = e.onsuccess = ()=>t(e.result), e.onabort = e.onerror = ()=>n(e.error);
    });
}
function EU(e, t) {
    const n = indexedDB.open(e);
    n.onupgradeneeded = ()=>n.result.createObjectStore(t);
    const r = ro(n);
    return (s)=>r.then((i)=>s(i.transaction(t, "readwrite").objectStore(t)));
}
function OA(e) {
    return ro(e.getAllKeys());
}
function dU(e, t, n) {
    return e((r)=>OA(r).then((s)=>{
            if (!(s.length >= n)) return r.put(t, Math.max(...s, 0) + 1), ro(r.transaction);
        }));
}
function fU(e, t, n) {
    return e((r)=>OA(r).then((s)=>{
            if (!(s.length >= n)) return r.put(t, Math.min(...s, 0) - 1), ro(r.transaction);
        }));
}
function pU(e) {
    return e((t)=>OA(t).then((n)=>{
            const r = n[0];
            if (r != null) return ro(t.get(r)).then((s)=>(t.delete(r), ro(t.transaction).then(()=>s)));
        }));
}
function TU(e) {
    let t;
    function n() {
        return t == null && (t = EU(e.dbName || "sentry-offline", e.storeName || "queue")), t;
    }
    return {
        push: async (r)=>{
            try {
                const s = await Il(r);
                await dU(n(), s, e.maxQueueSize || 30);
            } catch  {}
        },
        unshift: async (r)=>{
            try {
                const s = await Il(r);
                await fU(n(), s, e.maxQueueSize || 30);
            } catch  {}
        },
        shift: async ()=>{
            try {
                const r = await pU(n());
                if (r) return B3(r);
            } catch  {}
        }
    };
}
function hU(e) {
    return (t)=>{
        const n = e({
            ...t,
            createStore: TU
        });
        return ce.addEventListener("online", async (r)=>{
            await n.flush();
        }), n;
    };
}
function AU(e = oA) {
    return hU(Gb(e));
}
const t1 = 1e6, Ru = String(0), SU = "main";
let ig = "", ag = "", og = "", gT = ce.navigator && ce.navigator.userAgent || "", lg = "";
const RU = ce.navigator && ce.navigator.language || ce.navigator && ce.navigator.languages && ce.navigator.languages[0] || "";
function mU(e) {
    return typeof e == "object" && e !== null && "getHighEntropyValues" in e;
}
const n1 = ce.navigator && ce.navigator.userAgentData;
mU(n1) && n1.getHighEntropyValues([
    "architecture",
    "model",
    "platform",
    "platformVersion",
    "fullVersionList"
]).then((e)=>{
    if (ig = e.platform || "", og = e.architecture || "", lg = e.model || "", ag = e.platformVersion || "", e.fullVersionList && e.fullVersionList.length > 0) {
        const t = e.fullVersionList[e.fullVersionList.length - 1];
        gT = `${t.brand} ${t.version}`;
    }
}).catch((e)=>{});
function _U(e) {
    return !("thread_metadata" in e);
}
function NU(e) {
    return _U(e) ? CU(e) : e;
}
function IU(e) {
    const t = e && e.contexts && e.contexts.trace && e.contexts.trace.trace_id;
    return typeof t == "string" && t.length !== 32 && Ge && q.log(`[Profiling] Invalid traceId: ${t} on profiled event`), typeof t != "string" ? "" : t;
}
function OU(e, t, n, r) {
    if (r.type !== "transaction") throw new TypeError("Profiling events may only be attached to transactions, this should never occur.");
    if (n == null) throw new TypeError(`Cannot construct profiling event envelope without a valid profile. Got ${n} instead.`);
    const s = IU(r), i = NU(n), a = t || (typeof r.start_timestamp == "number" ? r.start_timestamp * 1e3 : kt() * 1e3), o = typeof r.timestamp == "number" ? r.timestamp * 1e3 : kt() * 1e3;
    return {
        event_id: e,
        timestamp: new Date(a).toISOString(),
        platform: "javascript",
        version: "1",
        release: r.release || "",
        environment: r.environment || JE,
        runtime: {
            name: "javascript",
            version: ce.navigator.userAgent
        },
        os: {
            name: ig,
            version: ag,
            build_number: gT
        },
        device: {
            locale: RU,
            model: lg,
            manufacturer: gT,
            architecture: og,
            is_emulator: !1
        },
        debug_meta: {
            images: yU(n.resources)
        },
        profile: i,
        transactions: [
            {
                name: r.transaction || "",
                id: r.event_id || Sn(),
                trace_id: s,
                active_thread_id: Ru,
                relative_start_ns: "0",
                relative_end_ns: ((o - a) * 1e6).toFixed(0)
            }
        ]
    };
}
function cg(e) {
    return Me(e).op === "pageload";
}
function CU(e) {
    let t, n = 0;
    const r = {
        samples: [],
        stacks: [],
        frames: [],
        thread_metadata: {
            [Ru]: {
                name: SU
            }
        }
    }, s = e.samples[0];
    if (!s) return r;
    const i = s.timestamp, a = typeof performance.timeOrigin == "number" ? performance.timeOrigin : $t || 0, o = a - ($t || a);
    return e.samples.forEach((l, c)=>{
        if (l.stackId === void 0) {
            t === void 0 && (t = n, r.stacks[t] = [], n++), r.samples[c] = {
                // convert ms timestamp to ns
                elapsed_since_start_ns: ((l.timestamp + o - i) * t1).toFixed(0),
                stack_id: t,
                thread_id: Ru
            };
            return;
        }
        let u = e.stacks[l.stackId];
        const E = [];
        for(; u;){
            E.push(u.frameId);
            const A = e.frames[u.frameId];
            A && r.frames[u.frameId] === void 0 && (r.frames[u.frameId] = {
                function: A.name,
                abs_path: typeof A.resourceId == "number" ? e.resources[A.resourceId] : void 0,
                lineno: A.line,
                colno: A.column
            }), u = u.parentId === void 0 ? void 0 : e.stacks[u.parentId];
        }
        const p = {
            // convert ms timestamp to ns
            elapsed_since_start_ns: ((l.timestamp + o - i) * t1).toFixed(0),
            stack_id: n,
            thread_id: Ru
        };
        r.stacks[n] = E, r.samples[c] = p, n++;
    }), r;
}
function gU(e, t) {
    if (!t.length) return e;
    for (const n of t)e[1].push([
        {
            type: "profile"
        },
        n
    ]);
    return e;
}
function LU(e) {
    const t = [];
    return nE(e, (n, r)=>{
        if (r === "transaction") for(let s = 1; s < n.length; s++){
            const i = n[s];
            i && i.contexts && i.contexts.profile && i.contexts.profile.profile_id && t.push(n[s]);
        }
    }), t;
}
function yU(e) {
    const t = ye(), n = t && t.getOptions(), r = n && n.stackParser;
    return r ? sb(r, e) : [];
}
function vU(e) {
    return typeof e != "number" && typeof e != "boolean" || typeof e == "number" && isNaN(e) ? (Ge && q.warn(`[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(e)} of type ${JSON.stringify(typeof e)}.`), !1) : e === !0 || e === !1 ? !0 : e < 0 || e > 1 ? (Ge && q.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${e}.`), !1) : !0;
}
function bU(e) {
    return e.samples.length < 2 ? (Ge && q.log("[Profiling] Discarding profile because it contains less than 2 samples"), !1) : e.frames.length ? !0 : (Ge && q.log("[Profiling] Discarding profile because it contains no frames"), !1);
}
let ug = !1;
const Eg = 3e4;
function PU(e) {
    return typeof e == "function";
}
function MU() {
    const e = ce.Profiler;
    if (!PU(e)) {
        Ge && q.log("[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.");
        return;
    }
    const t = 10, n = Math.floor(Eg / t);
    try {
        return new e({
            sampleInterval: t,
            maxBufferSize: n
        });
    } catch  {
        Ge && (q.log("[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header."), q.log("[Profiling] Disabling profiling for current user session.")), ug = !0;
    }
}
function r1(e) {
    if (ug) return Ge && q.log("[Profiling] Profiling has been disabled for the duration of the current user session."), !1;
    if (!e.isRecording()) return Ge && q.log("[Profiling] Discarding profile because transaction was not sampled."), !1;
    const t = ye(), n = t && t.getOptions();
    if (!n) return Ge && q.log("[Profiling] Profiling disabled, no options found."), !1;
    const r = n.profilesSampleRate;
    return vU(r) ? r ? (r === !0 ? !0 : Math.random() < r) ? !0 : (Ge && q.log(`[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(r)})`), !1) : (Ge && q.log("[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0"), !1) : (Ge && q.warn("[Profiling] Discarding profile because of invalid sample rate."), !1);
}
function DU(e, t, n, r) {
    return bU(n) ? OU(e, t, n, r) : null;
}
const vi = /* @__PURE__ */ new Map();
function wU() {
    return vi.size;
}
function xU(e) {
    const t = vi.get(e);
    return t && vi.delete(e), t;
}
function UU(e, t) {
    if (vi.set(e, t), vi.size > 30) {
        const n = vi.keys().next().value;
        vi.delete(n);
    }
}
function s1(e) {
    let t;
    cg(e) && (t = kt() * 1e3);
    const n = MU();
    if (!n) return;
    Ge && q.log(`[Profiling] started profiling span: ${Me(e).description}`);
    const r = Sn();
    qe().setContext("profile", {
        profile_id: r,
        start_timestamp: t
    });
    async function s() {
        if (e && n) return n.stop().then((l)=>{
            if (i && (ce.clearTimeout(i), i = void 0), Ge && q.log(`[Profiling] stopped profiling of span: ${Me(e).description}`), !l) {
                Ge && q.log(`[Profiling] profiler returned null profile for: ${Me(e).description}`, "this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started");
                return;
            }
            UU(r, l);
        }).catch((l)=>{
            Ge && q.log("[Profiling] error while stopping profiler:", l);
        });
    }
    let i = ce.setTimeout(()=>{
        Ge && q.log("[Profiling] max profile duration elapsed, stopping profiling for:", Me(e).description), s();
    }, Eg);
    const a = e.end.bind(e);
    function o() {
        return e ? (s().then(()=>{
            a();
        }, ()=>{
            a();
        }), e) : a();
    }
    e.end = o;
}
const FU = "BrowserProfiling", BU = ()=>({
        name: FU,
        setup (e) {
            const t = wt(), n = t && Mt(t);
            n && cg(n) && r1(n) && s1(n), e.on("spanStart", (r)=>{
                r === Mt(r) && r1(r) && s1(r);
            }), e.on("beforeEnvelope", (r)=>{
                if (!wU()) return;
                const s = LU(r);
                if (!s.length) return;
                const i = [];
                for (const a of s){
                    const o = a && a.contexts, l = o && o.profile && o.profile.profile_id, c = o && o.profile && o.profile.start_timestamp;
                    if (typeof l != "string") {
                        Ge && q.log("[Profiling] cannot find profile for a span without a profile context");
                        continue;
                    }
                    if (!l) {
                        Ge && q.log("[Profiling] cannot find profile for a span without a profile context");
                        continue;
                    }
                    o && o.profile && delete o.profile;
                    const u = xU(l);
                    if (!u) {
                        Ge && q.log(`[Profiling] Could not retrieve profile for span: ${l}`);
                        continue;
                    }
                    const E = DU(l, c, u, a);
                    E && i.push(E);
                }
                gU(r, i);
            });
        }
    }), GU = BU, kU = "SpotlightBrowser", HU = (e = {})=>{
    const t = e.sidecarUrl || "http://localhost:8969/stream";
    return {
        name: kU,
        setup: ()=>{
            Ge && q.log("Using Sidecar URL", t);
        },
        // We don't want to send interaction transactions/root spans created from
        // clicks within Spotlight to Sentry. Neither do we want them to be sent to
        // spotlight.
        processEvent: (n)=>VU(n) ? null : n,
        afterAllSetup: (n)=>{
            YU(n, t);
        }
    };
};
function YU(e, t) {
    const n = aA("fetch");
    let r = 0;
    e.on("beforeEnvelope", (s)=>{
        if (r > 3) {
            q.warn("[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests:", r);
            return;
        }
        n(t, {
            method: "POST",
            body: Il(s),
            headers: {
                "Content-Type": "application/x-sentry-envelope"
            },
            mode: "cors"
        }).then((i)=>{
            i.status >= 200 && i.status < 400 && (r = 0);
        }, (i)=>{
            r++, q.error("Sentry SDK can't connect to Sidecar is it running? See: https://spotlightjs.com/sidecar/npx/", i);
        });
    });
}
const dg = HU;
function VU(e) {
    return !!(e.type === "transaction" && e.spans && e.contexts && e.contexts.trace && e.contexts.trace.op === "ui.action.click" && e.spans.some(({ description: t })=>t && t.includes("#sentry-spotlight")));
}
function WU(e) {
    return [
        ...new Set((e.transactions || []).map((t)=>{
            var n;
            return qE(((n = t.sdk) == null ? void 0 : n.name) || "unknown");
        }))
    ];
}
function fg({ trace: e }) {
    const t = WU(e);
    if (t.length === 0) return /* @__PURE__ */ m.jsx(Js, {
        className: "rounded-md",
        platform: "unknown"
    });
    if (t.length === 1) return /* @__PURE__ */ m.jsx(Js, {
        className: "rounded-md",
        platform: t[0]
    });
    const n = t.slice(0, 3), r = t.slice(3);
    return /* @__PURE__ */ m.jsxs("div", {
        className: "bg-primary-900 flex h-[42px] w-[42px] flex-wrap items-center justify-center overflow-hidden rounded-md",
        children: [
            n.map((s)=>/* @__PURE__ */ m.jsx(Js, {
                    title: s,
                    size: 21,
                    platform: s
                }, s)),
            r.length > 0 && /* @__PURE__ */ m.jsx("div", {
                title: r.join(", "),
                className: "h-[21px] w-[21px] bg-black p-0.5 text-xs font-bold text-white",
                children: `+${r.length}`
            })
        ]
    });
}
function pg({ trace: e, flowing: t = !1 }) {
    var s, i, a, o, l;
    const n = String(((a = (i = (s = e.rootTransaction) == null ? void 0 : s.contexts) == null ? void 0 : i.trace.data) == null ? void 0 : a.method) || ((l = (o = e.rootTransaction) == null ? void 0 : o.request) == null ? void 0 : l.method) || ""), r = n && e.rootTransactionName.startsWith(n) ? e.rootTransactionName.slice(n.length + 1) : e.rootTransactionName;
    return /* @__PURE__ */ m.jsx(bO, {
        tagKey: n,
        value: r,
        flowing: t
    });
}
function jU({ trace: e }) {
    return /* @__PURE__ */ m.jsxs("div", {
        className: "border-b-primary-700 bg-primary-950 flex items-center gap-x-2 border-b px-6 py-4",
        children: [
            /* @__PURE__ */ m.jsx(fg, {
                trace: e
            }),
            /* @__PURE__ */ m.jsxs("h1", {
                className: "flex w-full flex-1 items-center truncate text-2xl",
                children: [
                    "Trace:  ",
                    /* @__PURE__ */ m.jsx(pg, {
                        trace: e,
                        flowing: !0
                    })
                ]
            })
        ]
    });
}
const XU = ({ title: e, titleId: t, ...n })=>/* @__PURE__ */ L.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "800px",
        height: "800px",
        viewBox: "0 -0.5 25 25",
        fill: "currentColor",
        "aria-labelledby": t,
        ...n
    }, e ? /* @__PURE__ */ L.createElement("title", {
        id: t
    }, e) : null, /* @__PURE__ */ L.createElement("path", {
        d: "M6.96967 16.4697C6.67678 16.7626 6.67678 17.2374 6.96967 17.5303C7.26256 17.8232 7.73744 17.8232 8.03033 17.5303L6.96967 16.4697ZM13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697L13.0303 12.5303ZM11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303L11.9697 11.4697ZM18.0303 7.53033C18.3232 7.23744 18.3232 6.76256 18.0303 6.46967C17.7374 6.17678 17.2626 6.17678 16.9697 6.46967L18.0303 7.53033ZM13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303L13.0303 11.4697ZM16.9697 17.5303C17.2626 17.8232 17.7374 17.8232 18.0303 17.5303C18.3232 17.2374 18.3232 16.7626 18.0303 16.4697L16.9697 17.5303ZM11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697L11.9697 12.5303ZM8.03033 6.46967C7.73744 6.17678 7.26256 6.17678 6.96967 6.46967C6.67678 6.76256 6.67678 7.23744 6.96967 7.53033L8.03033 6.46967ZM8.03033 17.5303L13.0303 12.5303L11.9697 11.4697L6.96967 16.4697L8.03033 17.5303ZM13.0303 12.5303L18.0303 7.53033L16.9697 6.46967L11.9697 11.4697L13.0303 12.5303ZM11.9697 12.5303L16.9697 17.5303L18.0303 16.4697L13.0303 11.4697L11.9697 12.5303ZM13.0303 11.4697L8.03033 6.46967L6.96967 7.53033L11.9697 12.5303L13.0303 11.4697Z",
        fill: "inherit"
    })), Tg = L.createContext(void 0);
function KU({ children: e }) {
    const [t, n] = L.useState(""), [r, s] = L.useState(!1);
    return /* @__PURE__ */ m.jsx(Tg.Provider, {
        value: {
            query: t,
            setQuery: n,
            showOnlyMatched: r,
            setShowOnlyMatched: s
        },
        children: e
    });
}
function CA() {
    const e = L.useContext(Tg);
    if (e === void 0) throw new Error("useSearch must be used within a SearchProvider");
    const t = L.useCallback({
        "CA.useCallback[t]": (n)=>{
            var s, i;
            const r = e.query.toLowerCase();
            return (n.span_id.toLowerCase().includes(r) || ((s = n.op) == null ? void 0 : s.toLowerCase().includes(r)) || ((i = n.description) == null ? void 0 : i.toLowerCase().includes(r))) ?? !1;
        }
    }["CA.useCallback[t]"], [
        e.query
    ]);
    return {
        ...e,
        matchesQuery: t
    };
}
function zU(e, t) {
    const n = L.useRef(e), r = L.useRef(null);
    return L.useLayoutEffect({
        "zU.useLayoutEffect": ()=>{
            n.current = e;
        }
    }["zU.useLayoutEffect"], [
        e
    ]), L.useMemo({
        "zU.useMemo": ()=>({
                "zU.useMemo": (...s)=>{
                    r.current !== null && clearTimeout(r.current), r.current = window.setTimeout({
                        "zU.useMemo": ()=>{
                            n.current(...s), r.current = null;
                        }
                    }["zU.useMemo"], t);
                }
            })["zU.useMemo"]
    }["zU.useMemo"], [
        t
    ]);
}
function JU(e, t = 500) {
    const [n, r] = L.useState(""), [s, i] = L.useState(!1), a = zU(e, t);
    return L.useEffect({
        "JU.useEffect": ()=>{
            a(n);
        }
    }["JU.useEffect"], [
        n,
        a
    ]), {
        inputValue: n,
        showReset: s,
        handleChange: (c)=>{
            const u = c.currentTarget.value;
            r(u), i(!!u);
        },
        handleReset: ()=>{
            r(""), i(!1), e("");
        }
    };
}
Wi.extend(yO);
function hg({ date: e, ...t }) {
    return e ? /* @__PURE__ */ m.jsx("time", {
        dateTime: e instanceof Date ? e.toISOString() : `${e}`,
        ...t,
        children: Wi(e).format("LL LTS")
    }) : null;
}
let Z;
(function(e) {
    e.QUOTED_IDENTIFIER = "QUOTED_IDENTIFIER", e.IDENTIFIER = "IDENTIFIER", e.STRING = "STRING", e.VARIABLE = "VARIABLE", e.RESERVED_KEYWORD = "RESERVED_KEYWORD", e.RESERVED_FUNCTION_NAME = "RESERVED_FUNCTION_NAME", e.RESERVED_PHRASE = "RESERVED_PHRASE", e.RESERVED_SET_OPERATION = "RESERVED_SET_OPERATION", e.RESERVED_CLAUSE = "RESERVED_CLAUSE", e.RESERVED_SELECT = "RESERVED_SELECT", e.RESERVED_JOIN = "RESERVED_JOIN", e.ARRAY_IDENTIFIER = "ARRAY_IDENTIFIER", e.ARRAY_KEYWORD = "ARRAY_KEYWORD", e.CASE = "CASE", e.END = "END", e.WHEN = "WHEN", e.ELSE = "ELSE", e.THEN = "THEN", e.LIMIT = "LIMIT", e.BETWEEN = "BETWEEN", e.AND = "AND", e.OR = "OR", e.XOR = "XOR", e.OPERATOR = "OPERATOR", e.COMMA = "COMMA", e.ASTERISK = "ASTERISK", e.DOT = "DOT", e.OPEN_PAREN = "OPEN_PAREN", e.CLOSE_PAREN = "CLOSE_PAREN", e.LINE_COMMENT = "LINE_COMMENT", e.BLOCK_COMMENT = "BLOCK_COMMENT", e.NUMBER = "NUMBER", e.NAMED_PARAMETER = "NAMED_PARAMETER", e.QUOTED_PARAMETER = "QUOTED_PARAMETER", e.NUMBERED_PARAMETER = "NUMBERED_PARAMETER", e.POSITIONAL_PARAMETER = "POSITIONAL_PARAMETER", e.CUSTOM_PARAMETER = "CUSTOM_PARAMETER", e.DELIMITER = "DELIMITER", e.EOF = "EOF";
})(Z || (Z = {}));
const Ag = (e)=>({
        type: Z.EOF,
        raw: "«EOF»",
        text: "«EOF»",
        start: e
    }), ji = Ag(1 / 0), Do = (e)=>(t)=>t.type === e.type && t.text === e.text, li = {
    ARRAY: Do({
        text: "ARRAY",
        type: Z.RESERVED_KEYWORD
    }),
    BY: Do({
        text: "BY",
        type: Z.RESERVED_KEYWORD
    }),
    SET: Do({
        text: "SET",
        type: Z.RESERVED_CLAUSE
    }),
    STRUCT: Do({
        text: "STRUCT",
        type: Z.RESERVED_KEYWORD
    }),
    WINDOW: Do({
        text: "WINDOW",
        type: Z.RESERVED_CLAUSE
    })
}, Sg = (e)=>e === Z.RESERVED_KEYWORD || e === Z.RESERVED_FUNCTION_NAME || e === Z.RESERVED_PHRASE || e === Z.RESERVED_CLAUSE || e === Z.RESERVED_SELECT || e === Z.RESERVED_SET_OPERATION || e === Z.RESERVED_JOIN || e === Z.ARRAY_KEYWORD || e === Z.CASE || e === Z.END || e === Z.WHEN || e === Z.ELSE || e === Z.THEN || e === Z.LIMIT || e === Z.BETWEEN || e === Z.AND || e === Z.OR || e === Z.XOR, qU = (e)=>e === Z.AND || e === Z.OR || e === Z.XOR, Q = (e)=>e.flatMap(ZU), ZU = (e)=>Rg(QU(e)).map((t)=>t.trim()), i1 = /[^[\]{}]+/y, a1 = /\{.*?\}/y, o1 = /\[.*?\]/y, QU = (e)=>{
    let t = 0;
    const n = [];
    for(; t < e.length;){
        i1.lastIndex = t;
        const r = i1.exec(e);
        r && (n.push([
            r[0].trim()
        ]), t += r[0].length), o1.lastIndex = t;
        const s = o1.exec(e);
        if (s) {
            const a = s[0].slice(1, -1).split("|").map((o)=>o.trim());
            n.push([
                "",
                ...a
            ]), t += s[0].length;
        }
        a1.lastIndex = t;
        const i = a1.exec(e);
        if (i) {
            const a = i[0].slice(1, -1).split("|").map((o)=>o.trim());
            n.push(a), t += i[0].length;
        }
        if (!r && !s && !i) throw new Error(`Unbalanced parenthesis in: ${e}`);
    }
    return n;
}, Rg = ([e, ...t])=>e === void 0 ? [
        ""
    ] : Rg(t).flatMap((n)=>e.map((r)=>r.trim() + " " + n.trim())), $U = (e)=>[
        ...new Set(e)
    ], rl = (e)=>e[e.length - 1], mg = (e)=>e.sort((t, n)=>n.length - t.length || t.localeCompare(n)), _g = (e)=>e.reduce((t, n)=>Math.max(t, n.length), 0), Ng = (e)=>e.replace(/\s+/gu, " "), ke = (e)=>$U(Object.values(e).flat()), Lf = (e)=>/\n/.test(e), e9 = ke({
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical#reserved_keywords
    keywords: [
        "ALL",
        "AND",
        "ANY",
        "ARRAY",
        "AS",
        "ASC",
        "ASSERT_ROWS_MODIFIED",
        "AT",
        "BETWEEN",
        "BY",
        "CASE",
        "CAST",
        "COLLATE",
        "CONTAINS",
        "CREATE",
        "CROSS",
        "CUBE",
        "CURRENT",
        "DEFAULT",
        "DEFINE",
        "DESC",
        "DISTINCT",
        "ELSE",
        "END",
        "ENUM",
        "ESCAPE",
        "EXCEPT",
        "EXCLUDE",
        "EXISTS",
        "EXTRACT",
        "FALSE",
        "FETCH",
        "FOLLOWING",
        "FOR",
        "FROM",
        "FULL",
        "GROUP",
        "GROUPING",
        "GROUPS",
        "HASH",
        "HAVING",
        "IF",
        "IGNORE",
        "IN",
        "INNER",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "IS",
        "JOIN",
        "LATERAL",
        "LEFT",
        "LIKE",
        "LIMIT",
        "LOOKUP",
        "MERGE",
        "NATURAL",
        "NEW",
        "NO",
        "NOT",
        "NULL",
        "NULLS",
        "OF",
        "ON",
        "OR",
        "ORDER",
        "OUTER",
        "OVER",
        "PARTITION",
        "PRECEDING",
        "PROTO",
        "RANGE",
        "RECURSIVE",
        "RESPECT",
        "RIGHT",
        "ROLLUP",
        "ROWS",
        "SELECT",
        "SET",
        "SOME",
        "STRUCT",
        "TABLE",
        "TABLESAMPLE",
        "THEN",
        "TO",
        "TREAT",
        "TRUE",
        "UNBOUNDED",
        "UNION",
        "UNNEST",
        "USING",
        "WHEN",
        "WHERE",
        "WINDOW",
        "WITH",
        "WITHIN"
    ],
    datatypes: [
        "ARRAY",
        // parametric, ARRAY<T>
        "BOOL",
        "BYTES",
        // parameterised, BYTES(Length)
        "DATE",
        "DATETIME",
        "GEOGRAPHY",
        "INTERVAL",
        "INT64",
        "INT",
        "SMALLINT",
        "INTEGER",
        "BIGINT",
        "TINYINT",
        "BYTEINT",
        "NUMERIC",
        // parameterised, NUMERIC(Precision[, Scale])
        "DECIMAL",
        // parameterised, DECIMAL(Precision[, Scale])
        "BIGNUMERIC",
        // parameterised, BIGNUMERIC(Precision[, Scale])
        "BIGDECIMAL",
        // parameterised, BIGDECIMAL(Precision[, Scale])
        "FLOAT64",
        "STRING",
        // parameterised, STRING(Length)
        "STRUCT",
        // parametric, STRUCT<T>
        "TIME",
        "TIMEZONE"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions#formatting_syntax
    stringFormat: [
        "HEX",
        "BASEX",
        "BASE64M",
        "ASCII",
        "UTF-8",
        "UTF8"
    ],
    misc: [
        "SAFE"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language
    ddl: [
        "LIKE",
        // CREATE TABLE LIKE
        "COPY",
        // CREATE TABLE COPY
        "CLONE",
        // CREATE TABLE CLONE
        "IN",
        "OUT",
        "INOUT",
        "RETURNS",
        "LANGUAGE",
        "CASCADE",
        "RESTRICT",
        "DETERMINISTIC"
    ]
}), t9 = ke({
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aead_encryption_functions
    aead: [
        "KEYS.NEW_KEYSET",
        "KEYS.ADD_KEY_FROM_RAW_BYTES",
        "AEAD.DECRYPT_BYTES",
        "AEAD.DECRYPT_STRING",
        "AEAD.ENCRYPT",
        "KEYS.KEYSET_CHAIN",
        "KEYS.KEYSET_FROM_JSON",
        "KEYS.KEYSET_TO_JSON",
        "KEYS.ROTATE_KEYSET",
        "KEYS.KEYSET_LENGTH"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_analytic_functions
    aggregateAnalytic: [
        "ANY_VALUE",
        "ARRAY_AGG",
        "AVG",
        "CORR",
        "COUNT",
        "COUNTIF",
        "COVAR_POP",
        "COVAR_SAMP",
        "MAX",
        "MIN",
        "ST_CLUSTERDBSCAN",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STRING_AGG",
        "SUM",
        "VAR_POP",
        "VAR_SAMP"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_functions
    aggregate: [
        "ANY_VALUE",
        "ARRAY_AGG",
        "ARRAY_CONCAT_AGG",
        "AVG",
        "BIT_AND",
        "BIT_OR",
        "BIT_XOR",
        "COUNT",
        "COUNTIF",
        "LOGICAL_AND",
        "LOGICAL_OR",
        "MAX",
        "MIN",
        "STRING_AGG",
        "SUM"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/approximate_aggregate_functions
    approximateAggregate: [
        "APPROX_COUNT_DISTINCT",
        "APPROX_QUANTILES",
        "APPROX_TOP_COUNT",
        "APPROX_TOP_SUM"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/array_functions
    array: [
        // 'ARRAY',
        "ARRAY_CONCAT",
        "ARRAY_LENGTH",
        "ARRAY_TO_STRING",
        "GENERATE_ARRAY",
        "GENERATE_DATE_ARRAY",
        "GENERATE_TIMESTAMP_ARRAY",
        "ARRAY_REVERSE",
        "OFFSET",
        "SAFE_OFFSET",
        "ORDINAL",
        "SAFE_ORDINAL"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/bit_functions
    bitwise: [
        "BIT_COUNT"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions
    conversion: [
        // 'CASE',
        "PARSE_BIGNUMERIC",
        "PARSE_NUMERIC",
        "SAFE_CAST"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/date_functions
    date: [
        "CURRENT_DATE",
        "EXTRACT",
        "DATE",
        "DATE_ADD",
        "DATE_SUB",
        "DATE_DIFF",
        "DATE_TRUNC",
        "DATE_FROM_UNIX_DATE",
        "FORMAT_DATE",
        "LAST_DAY",
        "PARSE_DATE",
        "UNIX_DATE"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/datetime_functions
    datetime: [
        "CURRENT_DATETIME",
        "DATETIME",
        "EXTRACT",
        "DATETIME_ADD",
        "DATETIME_SUB",
        "DATETIME_DIFF",
        "DATETIME_TRUNC",
        "FORMAT_DATETIME",
        "LAST_DAY",
        "PARSE_DATETIME"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging_functions
    debugging: [
        "ERROR"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/federated_query_functions
    federatedQuery: [
        "EXTERNAL_QUERY"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/geography_functions
    geography: [
        "S2_CELLIDFROMPOINT",
        "S2_COVERINGCELLIDS",
        "ST_ANGLE",
        "ST_AREA",
        "ST_ASBINARY",
        "ST_ASGEOJSON",
        "ST_ASTEXT",
        "ST_AZIMUTH",
        "ST_BOUNDARY",
        "ST_BOUNDINGBOX",
        "ST_BUFFER",
        "ST_BUFFERWITHTOLERANCE",
        "ST_CENTROID",
        "ST_CENTROID_AGG",
        "ST_CLOSESTPOINT",
        "ST_CLUSTERDBSCAN",
        "ST_CONTAINS",
        "ST_CONVEXHULL",
        "ST_COVEREDBY",
        "ST_COVERS",
        "ST_DIFFERENCE",
        "ST_DIMENSION",
        "ST_DISJOINT",
        "ST_DISTANCE",
        "ST_DUMP",
        "ST_DWITHIN",
        "ST_ENDPOINT",
        "ST_EQUALS",
        "ST_EXTENT",
        "ST_EXTERIORRING",
        "ST_GEOGFROM",
        "ST_GEOGFROMGEOJSON",
        "ST_GEOGFROMTEXT",
        "ST_GEOGFROMWKB",
        "ST_GEOGPOINT",
        "ST_GEOGPOINTFROMGEOHASH",
        "ST_GEOHASH",
        "ST_GEOMETRYTYPE",
        "ST_INTERIORRINGS",
        "ST_INTERSECTION",
        "ST_INTERSECTS",
        "ST_INTERSECTSBOX",
        "ST_ISCOLLECTION",
        "ST_ISEMPTY",
        "ST_LENGTH",
        "ST_MAKELINE",
        "ST_MAKEPOLYGON",
        "ST_MAKEPOLYGONORIENTED",
        "ST_MAXDISTANCE",
        "ST_NPOINTS",
        "ST_NUMGEOMETRIES",
        "ST_NUMPOINTS",
        "ST_PERIMETER",
        "ST_POINTN",
        "ST_SIMPLIFY",
        "ST_SNAPTOGRID",
        "ST_STARTPOINT",
        "ST_TOUCHES",
        "ST_UNION",
        "ST_UNION_AGG",
        "ST_WITHIN",
        "ST_X",
        "ST_Y"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/hash_functions
    hash: [
        "FARM_FINGERPRINT",
        "MD5",
        "SHA1",
        "SHA256",
        "SHA512"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/hll_functions
    hll: [
        "HLL_COUNT.INIT",
        "HLL_COUNT.MERGE",
        "HLL_COUNT.MERGE_PARTIAL",
        "HLL_COUNT.EXTRACT"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/interval_functions
    interval: [
        "MAKE_INTERVAL",
        "EXTRACT",
        "JUSTIFY_DAYS",
        "JUSTIFY_HOURS",
        "JUSTIFY_INTERVAL"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/json_functions
    json: [
        "JSON_EXTRACT",
        "JSON_QUERY",
        "JSON_EXTRACT_SCALAR",
        "JSON_VALUE",
        "JSON_EXTRACT_ARRAY",
        "JSON_QUERY_ARRAY",
        "JSON_EXTRACT_STRING_ARRAY",
        "JSON_VALUE_ARRAY",
        "TO_JSON_STRING"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/mathematical_functions
    math: [
        "ABS",
        "SIGN",
        "IS_INF",
        "IS_NAN",
        "IEEE_DIVIDE",
        "RAND",
        "SQRT",
        "POW",
        "POWER",
        "EXP",
        "LN",
        "LOG",
        "LOG10",
        "GREATEST",
        "LEAST",
        "DIV",
        "SAFE_DIVIDE",
        "SAFE_MULTIPLY",
        "SAFE_NEGATE",
        "SAFE_ADD",
        "SAFE_SUBTRACT",
        "MOD",
        "ROUND",
        "TRUNC",
        "CEIL",
        "CEILING",
        "FLOOR",
        "COS",
        "COSH",
        "ACOS",
        "ACOSH",
        "SIN",
        "SINH",
        "ASIN",
        "ASINH",
        "TAN",
        "TANH",
        "ATAN",
        "ATANH",
        "ATAN2",
        "RANGE_BUCKET"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/navigation_functions
    navigation: [
        "FIRST_VALUE",
        "LAST_VALUE",
        "NTH_VALUE",
        "LEAD",
        "LAG",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/net_functions
    net: [
        "NET.IP_FROM_STRING",
        "NET.SAFE_IP_FROM_STRING",
        "NET.IP_TO_STRING",
        "NET.IP_NET_MASK",
        "NET.IP_TRUNC",
        "NET.IPV4_FROM_INT64",
        "NET.IPV4_TO_INT64",
        "NET.HOST",
        "NET.PUBLIC_SUFFIX",
        "NET.REG_DOMAIN"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/numbering_functions
    numbering: [
        "RANK",
        "DENSE_RANK",
        "PERCENT_RANK",
        "CUME_DIST",
        "NTILE",
        "ROW_NUMBER"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/security_functions
    security: [
        "SESSION_USER"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/statistical_aggregate_functions
    statisticalAggregate: [
        "CORR",
        "COVAR_POP",
        "COVAR_SAMP",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STDDEV",
        "VAR_POP",
        "VAR_SAMP",
        "VARIANCE"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/string_functions
    string: [
        "ASCII",
        "BYTE_LENGTH",
        "CHAR_LENGTH",
        "CHARACTER_LENGTH",
        "CHR",
        "CODE_POINTS_TO_BYTES",
        "CODE_POINTS_TO_STRING",
        "CONCAT",
        "CONTAINS_SUBSTR",
        "ENDS_WITH",
        "FORMAT",
        "FROM_BASE32",
        "FROM_BASE64",
        "FROM_HEX",
        "INITCAP",
        "INSTR",
        "LEFT",
        "LENGTH",
        "LPAD",
        "LOWER",
        "LTRIM",
        "NORMALIZE",
        "NORMALIZE_AND_CASEFOLD",
        "OCTET_LENGTH",
        "REGEXP_CONTAINS",
        "REGEXP_EXTRACT",
        "REGEXP_EXTRACT_ALL",
        "REGEXP_INSTR",
        "REGEXP_REPLACE",
        "REGEXP_SUBSTR",
        "REPLACE",
        "REPEAT",
        "REVERSE",
        "RIGHT",
        "RPAD",
        "RTRIM",
        "SAFE_CONVERT_BYTES_TO_STRING",
        "SOUNDEX",
        "SPLIT",
        "STARTS_WITH",
        "STRPOS",
        "SUBSTR",
        "SUBSTRING",
        "TO_BASE32",
        "TO_BASE64",
        "TO_CODE_POINTS",
        "TO_HEX",
        "TRANSLATE",
        "TRIM",
        "UNICODE",
        "UPPER"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/time_functions
    time: [
        "CURRENT_TIME",
        "TIME",
        "EXTRACT",
        "TIME_ADD",
        "TIME_SUB",
        "TIME_DIFF",
        "TIME_TRUNC",
        "FORMAT_TIME",
        "PARSE_TIME"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/timestamp_functions
    timestamp: [
        "CURRENT_TIMESTAMP",
        "EXTRACT",
        "STRING",
        "TIMESTAMP",
        "TIMESTAMP_ADD",
        "TIMESTAMP_SUB",
        "TIMESTAMP_DIFF",
        "TIMESTAMP_TRUNC",
        "FORMAT_TIMESTAMP",
        "PARSE_TIMESTAMP",
        "TIMESTAMP_SECONDS",
        "TIMESTAMP_MILLIS",
        "TIMESTAMP_MICROS",
        "UNIX_SECONDS",
        "UNIX_MILLIS",
        "UNIX_MICROS"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/uuid_functions
    uuid: [
        "GENERATE_UUID"
    ],
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/conditional_expressions
    conditional: [
        "COALESCE",
        "IF",
        "IFNULL",
        "NULLIF"
    ],
    // https://cloud.google.com/bigquery/docs/reference/legacy-sql
    legacyAggregate: [
        "AVG",
        "BIT_AND",
        "BIT_OR",
        "BIT_XOR",
        "CORR",
        "COUNT",
        "COVAR_POP",
        "COVAR_SAMP",
        "EXACT_COUNT_DISTINCT",
        "FIRST",
        "GROUP_CONCAT",
        "GROUP_CONCAT_UNQUOTED",
        "LAST",
        "MAX",
        "MIN",
        "NEST",
        "NTH",
        "QUANTILES",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "SUM",
        "TOP",
        "UNIQUE",
        "VARIANCE",
        "VAR_POP",
        "VAR_SAMP"
    ],
    legacyBitwise: [
        "BIT_COUNT"
    ],
    legacyCasting: [
        "BOOLEAN",
        "BYTES",
        "CAST",
        "FLOAT",
        "HEX_STRING",
        "INTEGER",
        "STRING"
    ],
    legacyComparison: [
        // expr 'IN',
        "COALESCE",
        "GREATEST",
        "IFNULL",
        "IS_INF",
        "IS_NAN",
        "IS_EXPLICITLY_DEFINED",
        "LEAST",
        "NVL"
    ],
    legacyDatetime: [
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "DATE",
        "DATE_ADD",
        "DATEDIFF",
        "DAY",
        "DAYOFWEEK",
        "DAYOFYEAR",
        "FORMAT_UTC_USEC",
        "HOUR",
        "MINUTE",
        "MONTH",
        "MSEC_TO_TIMESTAMP",
        "NOW",
        "PARSE_UTC_USEC",
        "QUARTER",
        "SEC_TO_TIMESTAMP",
        "SECOND",
        "STRFTIME_UTC_USEC",
        "TIME",
        "TIMESTAMP",
        "TIMESTAMP_TO_MSEC",
        "TIMESTAMP_TO_SEC",
        "TIMESTAMP_TO_USEC",
        "USEC_TO_TIMESTAMP",
        "UTC_USEC_TO_DAY",
        "UTC_USEC_TO_HOUR",
        "UTC_USEC_TO_MONTH",
        "UTC_USEC_TO_WEEK",
        "UTC_USEC_TO_YEAR",
        "WEEK",
        "YEAR"
    ],
    legacyIp: [
        "FORMAT_IP",
        "PARSE_IP",
        "FORMAT_PACKED_IP",
        "PARSE_PACKED_IP"
    ],
    legacyJson: [
        "JSON_EXTRACT",
        "JSON_EXTRACT_SCALAR"
    ],
    legacyMath: [
        "ABS",
        "ACOS",
        "ACOSH",
        "ASIN",
        "ASINH",
        "ATAN",
        "ATANH",
        "ATAN2",
        "CEIL",
        "COS",
        "COSH",
        "DEGREES",
        "EXP",
        "FLOOR",
        "LN",
        "LOG",
        "LOG2",
        "LOG10",
        "PI",
        "POW",
        "RADIANS",
        "RAND",
        "ROUND",
        "SIN",
        "SINH",
        "SQRT",
        "TAN",
        "TANH"
    ],
    legacyRegex: [
        "REGEXP_MATCH",
        "REGEXP_EXTRACT",
        "REGEXP_REPLACE"
    ],
    legacyString: [
        "CONCAT",
        // expr CONTAINS 'str'
        "INSTR",
        "LEFT",
        "LENGTH",
        "LOWER",
        "LPAD",
        "LTRIM",
        "REPLACE",
        "RIGHT",
        "RPAD",
        "RTRIM",
        "SPLIT",
        "SUBSTR",
        "UPPER"
    ],
    legacyTableWildcard: [
        "TABLE_DATE_RANGE",
        "TABLE_DATE_RANGE_STRICT",
        "TABLE_QUERY"
    ],
    legacyUrl: [
        "HOST",
        "DOMAIN",
        "TLD"
    ],
    legacyWindow: [
        "AVG",
        "COUNT",
        "MAX",
        "MIN",
        "STDDEV",
        "SUM",
        "CUME_DIST",
        "DENSE_RANK",
        "FIRST_VALUE",
        "LAG",
        "LAST_VALUE",
        "LEAD",
        "NTH_VALUE",
        "NTILE",
        "PERCENT_RANK",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "RANK",
        "RATIO_TO_REPORT",
        "ROW_NUMBER"
    ],
    legacyMisc: [
        "CURRENT_USER",
        "EVERY",
        "FROM_BASE64",
        "HASH",
        "FARM_FINGERPRINT",
        "IF",
        "POSITION",
        "SHA1",
        "SOME",
        "TO_BASE64"
    ],
    other: [
        "BQ.JOBS.CANCEL",
        "BQ.REFRESH_MATERIALIZED_VIEW"
    ],
    ddl: [
        "OPTIONS"
    ],
    pivot: [
        "PIVOT",
        "UNPIVOT"
    ],
    // Data types with parameters like VARCHAR(100)
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#parameterized_data_types
    dataTypes: [
        "BYTES",
        "NUMERIC",
        "DECIMAL",
        "BIGNUMERIC",
        "BIGDECIMAL",
        "STRING"
    ]
}), n9 = Q([
    "SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"
]), r9 = Q([
    // Queries: https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "QUALIFY",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    "OMIT RECORD IF",
    // legacy
    // Data modification: https://cloud.google.com/bigquery/docs/reference/standard-sql/dml-syntax
    // - insert:
    "INSERT [INTO]",
    "VALUES",
    // - update:
    "SET",
    // - merge:
    "MERGE [INTO]",
    "WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]",
    "UPDATE SET",
    // Data definition, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language
    "CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]",
    "CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]",
    "CLUSTER BY",
    "FOR SYSTEM_TIME AS OF",
    // CREATE SNAPSHOT TABLE
    "WITH CONNECTION",
    "WITH PARTITION COLUMNS",
    "REMOTE WITH CONNECTION"
]), l1 = Q([
    // - update:
    "UPDATE",
    // - delete:
    "DELETE [FROM]",
    // - drop table:
    "DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE [IF EXISTS]",
    "ADD COLUMN [IF NOT EXISTS]",
    "DROP COLUMN [IF EXISTS]",
    "RENAME TO",
    "ALTER COLUMN [IF EXISTS]",
    "SET DEFAULT COLLATE",
    // for alter column
    "SET OPTIONS",
    // for alter column
    "DROP NOT NULL",
    // for alter column
    "SET DATA TYPE",
    // for alter column
    // - alter schema
    "ALTER SCHEMA [IF EXISTS]",
    // - alter view
    "ALTER [MATERIALIZED] VIEW [IF EXISTS]",
    // - alter bi_capacity
    "ALTER BI_CAPACITY",
    // - truncate:
    "TRUNCATE TABLE",
    // - create schema
    "CREATE SCHEMA [IF NOT EXISTS]",
    "DEFAULT COLLATE",
    // stored procedures
    "CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]",
    "CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]",
    // row access policy
    "CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]",
    "GRANT TO",
    "FILTER USING",
    // capacity
    "CREATE CAPACITY",
    "AS JSON",
    // reservation
    "CREATE RESERVATION",
    // assignment
    "CREATE ASSIGNMENT",
    // search index
    "CREATE SEARCH INDEX [IF NOT EXISTS]",
    // drop
    "DROP SCHEMA [IF EXISTS]",
    "DROP [MATERIALIZED] VIEW [IF EXISTS]",
    "DROP [TABLE] FUNCTION [IF EXISTS]",
    "DROP PROCEDURE [IF EXISTS]",
    "DROP ROW ACCESS POLICY",
    "DROP ALL ROW ACCESS POLICIES",
    "DROP CAPACITY [IF EXISTS]",
    "DROP RESERVATION [IF EXISTS]",
    "DROP ASSIGNMENT [IF EXISTS]",
    "DROP SEARCH INDEX [IF EXISTS]",
    "DROP [IF EXISTS]",
    // DCL, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-control-language
    "GRANT",
    "REVOKE",
    // Script, https://cloud.google.com/bigquery/docs/reference/standard-sql/scripting
    "DECLARE",
    "EXECUTE IMMEDIATE",
    "LOOP",
    "END LOOP",
    "REPEAT",
    "END REPEAT",
    "WHILE",
    "END WHILE",
    "BREAK",
    "LEAVE",
    "CONTINUE",
    "ITERATE",
    "FOR",
    "END FOR",
    "BEGIN",
    "BEGIN TRANSACTION",
    "COMMIT TRANSACTION",
    "ROLLBACK TRANSACTION",
    "RAISE",
    "RETURN",
    "CALL",
    // Debug, https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging-statements
    "ASSERT",
    // Other, https://cloud.google.com/bigquery/docs/reference/standard-sql/other-statements
    "EXPORT DATA"
]), s9 = Q([
    "UNION {ALL | DISTINCT}",
    "EXCEPT DISTINCT",
    "INTERSECT DISTINCT"
]), i9 = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN"
]), a9 = Q([
    // https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#tablesample_operator
    "TABLESAMPLE SYSTEM",
    // From DDL: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language
    "ANY TYPE",
    "ALL COLUMNS",
    "NOT DETERMINISTIC",
    // inside window definitions
    "{ROWS | RANGE} BETWEEN",
    // comparison operator
    "IS [NOT] DISTINCT FROM"
]), o9 = {
    tokenizerOptions: {
        reservedSelect: n9,
        reservedClauses: [
            ...r9,
            ...l1
        ],
        reservedSetOperations: s9,
        reservedJoins: i9,
        reservedPhrases: a9,
        reservedKeywords: e9,
        reservedFunctionNames: t9,
        extraParens: [
            "[]"
        ],
        stringTypes: [
            // The triple-quoted strings are listed first, so they get matched first.
            // Otherwise the first two quotes of """ will get matched as an empty "" string.
            {
                quote: '""".."""',
                prefixes: [
                    "R",
                    "B",
                    "RB",
                    "BR"
                ]
            },
            {
                quote: "'''..'''",
                prefixes: [
                    "R",
                    "B",
                    "RB",
                    "BR"
                ]
            },
            '""-bs',
            "''-bs",
            {
                quote: '""-raw',
                prefixes: [
                    "R",
                    "B",
                    "RB",
                    "BR"
                ],
                requirePrefix: !0
            },
            {
                quote: "''-raw",
                prefixes: [
                    "R",
                    "B",
                    "RB",
                    "BR"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            "``"
        ],
        identChars: {
            dashes: !0
        },
        paramTypes: {
            positional: !0,
            named: [
                "@"
            ],
            quoted: [
                "@"
            ]
        },
        variableTypes: [
            {
                regex: String.raw`@@\w+`
            }
        ],
        lineCommentTypes: [
            "--",
            "#"
        ],
        operators: [
            "&",
            "|",
            "^",
            "~",
            ">>",
            "<<",
            "||",
            "=>"
        ],
        postProcess: l9
    },
    formatOptions: {
        onelineClauses: l1
    }
};
function l9(e) {
    return c9(u9(e));
}
function c9(e) {
    let t = ji;
    return e.map((n)=>n.text === "OFFSET" && t.text === "[" ? (t = n, {
            ...n,
            type: Z.RESERVED_FUNCTION_NAME
        }) : (t = n, n));
}
function u9(e) {
    const t = [];
    for(let r = 0; r < e.length; r++){
        var n;
        const s = e[r];
        if ((li.ARRAY(s) || li.STRUCT(s)) && ((n = e[r + 1]) === null || n === void 0 ? void 0 : n.text) === "<") {
            const i = E9(e, r + 1), a = e.slice(r, i + 1);
            t.push({
                type: Z.IDENTIFIER,
                raw: a.map(c1("raw")).join(""),
                text: a.map(c1("text")).join(""),
                start: s.start
            }), r = i;
        } else t.push(s);
    }
    return t;
}
const c1 = (e)=>(t)=>t.type === Z.IDENTIFIER || t.type === Z.COMMA ? t[e] + " " : t[e];
function E9(e, t) {
    let n = 0;
    for(let r = t; r < e.length; r++){
        const s = e[r];
        if (s.text === "<" ? n++ : s.text === ">" ? n-- : s.text === ">>" && (n -= 2), n === 0) return r;
    }
    return e.length - 1;
}
const d9 = ke({
    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-aggregate
    aggregate: [
        "ARRAY_AGG",
        "AVG",
        "CORR",
        "CORRELATION",
        "COUNT",
        "COUNT_BIG",
        "COVAR_POP",
        "COVARIANCE",
        "COVAR",
        "COVAR_SAMP",
        "COVARIANCE_SAMP",
        "CUME_DIST",
        "GROUPING",
        "LISTAGG",
        "MAX",
        "MEDIAN",
        "MIN",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "PERCENT_RANK",
        "REGR_AVGX",
        "REGR_AVGY",
        "REGR_COUNT",
        "REGR_INTERCEPT",
        "REGR_ICPT",
        "REGR_R2",
        "REGR_SLOPE",
        "REGR_SXX",
        "REGR_SXY",
        "REGR_SYY",
        "STDDEV_POP",
        "STDDEV",
        "STDDEV_SAMP",
        "SUM",
        "VAR_POP",
        "VARIANCE",
        "VAR",
        "VAR_SAMP",
        "VARIANCE_SAMP",
        "XMLAGG"
    ],
    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-scalar
    scalar: [
        "ABS",
        "ABSVAL",
        "ACOS",
        "ADD_DAYS",
        "ADD_MONTHS",
        "ARRAY_DELETE",
        "ARRAY_FIRST",
        "ARRAY_LAST",
        "ARRAY_NEXT",
        "ARRAY_PRIOR",
        "ARRAY_TRIM",
        "ASCII",
        "ASCII_CHR",
        "ASCII_STR",
        "ASCIISTR",
        "ASIN",
        "ATAN",
        "ATANH",
        "ATAN2",
        "BIGINT",
        "BINARY",
        "BITAND",
        "BITANDNOT",
        "BITOR",
        "BITXOR",
        "BITNOT",
        "BLOB",
        "BTRIM",
        "CARDINALITY",
        "CCSID_ENCODING",
        "CEILING",
        "CEIL",
        "CHAR",
        "CHAR9",
        "CHARACTER_LENGTH",
        "CHAR_LENGTH",
        "CHR",
        "CLOB",
        "COALESCE",
        "COLLATION_KEY",
        "COMPARE_DECFLOAT",
        "CONCAT",
        "CONTAINS",
        "COS",
        "COSH",
        "DATE",
        "DAY",
        "DAYOFMONTH",
        "DAYOFWEEK",
        "DAYOFWEEK_ISO",
        "DAYOFYEAR",
        "DAYS",
        "DAYS_BETWEEN",
        "DBCLOB",
        "DECFLOAT",
        "DECFLOAT_FORMAT",
        "DECFLOAT_SORTKEY",
        "DECIMAL",
        "DEC",
        "DECODE",
        "DECRYPT_BINARY",
        "DECRYPT_BIT",
        "DECRYPT_CHAR",
        "DECRYPT_DB",
        "DECRYPT_DATAKEY_BIGINT",
        "DECRYPT_DATAKEY_BIT",
        "DECRYPT_DATAKEY_CLOB",
        "DECRYPT_DATAKEY_DBCLOB",
        "DECRYPT_DATAKEY_DECIMAL",
        "DECRYPT_DATAKEY_INTEGER",
        "DECRYPT_DATAKEY_VARCHAR",
        "DECRYPT_DATAKEY_VARGRAPHIC",
        "DEGREES",
        "DIFFERENCE",
        "DIGITS",
        "DOUBLE_PRECISION",
        "DOUBLE",
        "DSN_XMLVALIDATE",
        "EBCDIC_CHR",
        "EBCDIC_STR",
        "ENCRYPT_DATAKEY",
        "ENCRYPT_TDES",
        "EXP",
        "EXTRACT",
        "FLOAT",
        "FLOOR",
        "GENERATE_UNIQUE",
        "GENERATE_UNIQUE_BINARY",
        "GETHINT",
        "GETVARIABLE",
        "GRAPHIC",
        "GREATEST",
        "HASH",
        "HASH_CRC32",
        "HASH_MD5",
        "HASH_SHA1",
        "HASH_SHA256",
        "HEX",
        "HOUR",
        "IDENTITY_VAL_LOCAL",
        "IFNULL",
        "INSERT",
        "INSTR",
        "INTEGER",
        "INT",
        "JULIAN_DAY",
        "LAST_DAY",
        "LCASE",
        "LEAST",
        "LEFT",
        "LENGTH",
        "LN",
        "LOCATE",
        "LOCATE_IN_STRING",
        "LOG10",
        "LOWER",
        "LPAD",
        "LTRIM",
        "MAX",
        "MAX_CARDINALITY",
        "MICROSECOND",
        "MIDNIGHT_SECONDS",
        "MIN",
        "MINUTE",
        "MOD",
        "MONTH",
        "MONTHS_BETWEEN",
        "MQREAD",
        "MQREADCLOB",
        "MQRECEIVE",
        "MQRECEIVECLOB",
        "MQSEND",
        "MULTIPLY_ALT",
        "NEXT_DAY",
        "NEXT_MONTH",
        "NORMALIZE_DECFLOAT",
        "NORMALIZE_STRING",
        "NULLIF",
        "NVL",
        "OVERLAY",
        "PACK",
        "POSITION",
        "POSSTR",
        "POWER",
        "POW",
        "QUANTIZE",
        "QUARTER",
        "RADIANS",
        "RAISE_ERROR",
        "RANDOM",
        "RAND",
        "REAL",
        "REGEXP_COUNT",
        "REGEXP_INSTR",
        "REGEXP_LIKE",
        "REGEXP_REPLACE",
        "REGEXP_SUBSTR",
        "REPEAT",
        "REPLACE",
        "RID",
        "RIGHT",
        "ROUND",
        "ROUND_TIMESTAMP",
        "ROWID",
        "RPAD",
        "RTRIM",
        "SCORE",
        "SECOND",
        "SIGN",
        "SIN",
        "SINH",
        "SMALLINT",
        "SOUNDEX",
        "SOAPHTTPC",
        "SOAPHTTPV",
        "SOAPHTTPNC",
        "SOAPHTTPNV",
        "SPACE",
        "SQRT",
        "STRIP",
        "STRLEFT",
        "STRPOS",
        "STRRIGHT",
        "SUBSTR",
        "SUBSTRING",
        "TAN",
        "TANH",
        "TIME",
        "TIMESTAMP",
        "TIMESTAMPADD",
        "TIMESTAMPDIFF",
        "TIMESTAMP_FORMAT",
        "TIMESTAMP_ISO",
        "TIMESTAMP_TZ",
        "TO_CHAR",
        "TO_CLOB",
        "TO_DATE",
        "TO_NUMBER",
        "TOTALORDER",
        "TO_TIMESTAMP",
        "TRANSLATE",
        "TRIM",
        "TRIM_ARRAY",
        "TRUNCATE",
        "TRUNC",
        "TRUNC_TIMESTAMP",
        "UCASE",
        "UNICODE",
        "UNICODE_STR",
        "UNISTR",
        "UPPER",
        "VALUE",
        "VARBINARY",
        "VARCHAR",
        "VARCHAR9",
        "VARCHAR_BIT_FORMAT",
        "VARCHAR_FORMAT",
        "VARGRAPHIC",
        "VERIFY_GROUP_FOR_USER",
        "VERIFY_ROLE_FOR_USER",
        "VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER",
        "WEEK",
        "WEEK_ISO",
        "WRAP",
        "XMLATTRIBUTES",
        "XMLCOMMENT",
        "XMLCONCAT",
        "XMLDOCUMENT",
        "XMLELEMENT",
        "XMLFOREST",
        "XMLMODIFY",
        "XMLNAMESPACES",
        "XMLPARSE",
        "XMLPI",
        "XMLQUERY",
        "XMLSERIALIZE",
        "XMLTEXT",
        "XMLXSROBJECTID",
        "XSLTRANSFORM",
        "YEAR"
    ],
    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-table
    table: [
        "ADMIN_TASK_LIST",
        "ADMIN_TASK_OUTPUT",
        "ADMIN_TASK_STATUS",
        "BLOCKING_THREADS",
        "MQREADALL",
        "MQREADALLCLOB",
        "MQRECEIVEALL",
        "MQRECEIVEALLCLOB",
        "XMLTABLE"
    ],
    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-row
    row: [
        "UNPACK"
    ],
    // https://www.ibm.com/docs/en/db2-for-zos/12?topic=expressions-olap-specification
    olap: [
        "CUME_DIST",
        "PERCENT_RANK",
        "RANK",
        "DENSE_RANK",
        "NTILE",
        "LAG",
        "LEAD",
        "ROW_NUMBER",
        "FIRST_VALUE",
        "LAST_VALUE",
        "NTH_VALUE",
        "RATIO_TO_REPORT"
    ],
    // Type casting
    cast: [
        "CAST"
    ]
}), f9 = ke({
    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=words-reserved#db2z_reservedwords__newresword
    standard: [
        "ALL",
        "ALLOCATE",
        "ALLOW",
        "ALTERAND",
        "ANY",
        "AS",
        "ARRAY",
        "ARRAY_EXISTS",
        "ASENSITIVE",
        "ASSOCIATE",
        "ASUTIME",
        "AT",
        "AUDIT",
        "AUX",
        "AUXILIARY",
        "BEFORE",
        "BEGIN",
        "BETWEEN",
        "BUFFERPOOL",
        "BY",
        "CAPTURE",
        "CASCADED",
        "CAST",
        "CCSID",
        "CHARACTER",
        "CHECK",
        "CLONE",
        "CLUSTER",
        "COLLECTION",
        "COLLID",
        "COLUMN",
        "CONDITION",
        "CONNECTION",
        "CONSTRAINT",
        "CONTENT",
        "CONTINUE",
        "CREATE",
        "CUBE",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_LC_CTYPE",
        "CURRENT_PATH",
        "CURRENT_SCHEMA",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRVAL",
        "CURSOR",
        "DATA",
        "DATABASE",
        "DBINFO",
        "DECLARE",
        "DEFAULT",
        "DESCRIPTOR",
        "DETERMINISTIC",
        "DISABLE",
        "DISALLOW",
        "DISTINCT",
        "DO",
        "DOCUMENT",
        "DSSIZE",
        "DYNAMIC",
        "EDITPROC",
        "ELSE",
        "ELSEIF",
        "ENCODING",
        "ENCRYPTION",
        "ENDING",
        "END-EXEC",
        "ERASE",
        "ESCAPE",
        "EXCEPTION",
        "EXISTS",
        "EXIT",
        "EXTERNAL",
        "FENCED",
        "FIELDPROC",
        "FINAL",
        "FIRST",
        "FOR",
        "FREE",
        "FULL",
        "FUNCTION",
        "GENERATED",
        "GET",
        "GLOBAL",
        "GOTO",
        "GROUP",
        "HANDLER",
        "HOLD",
        "HOURS",
        "IF",
        "IMMEDIATE",
        "IN",
        "INCLUSIVE",
        "INDEX",
        "INHERIT",
        "INNER",
        "INOUT",
        "INSENSITIVE",
        "INTO",
        "IS",
        "ISOBID",
        "ITERATE",
        "JAR",
        "KEEP",
        "KEY",
        "LANGUAGE",
        "LAST",
        "LC_CTYPE",
        "LEAVE",
        "LIKE",
        "LOCAL",
        "LOCALE",
        "LOCATOR",
        "LOCATORS",
        "LOCK",
        "LOCKMAX",
        "LOCKSIZE",
        "LONG",
        "LOOP",
        "MAINTAINED",
        "MATERIALIZED",
        "MICROSECONDS",
        "MINUTEMINUTES",
        "MODIFIES",
        "MONTHS",
        "NEXT",
        "NEXTVAL",
        "NO",
        "NONE",
        "NOT",
        "NULL",
        "NULLS",
        "NUMPARTS",
        "OBID",
        "OF",
        "OLD",
        "ON",
        "OPTIMIZATION",
        "OPTIMIZE",
        "ORDER",
        "ORGANIZATION",
        "OUT",
        "OUTER",
        "PACKAGE",
        "PARAMETER",
        "PART",
        "PADDED",
        "PARTITION",
        "PARTITIONED",
        "PARTITIONING",
        "PATH",
        "PIECESIZE",
        "PERIOD",
        "PLAN",
        "PRECISION",
        "PREVVAL",
        "PRIOR",
        "PRIQTY",
        "PRIVILEGES",
        "PROCEDURE",
        "PROGRAM",
        "PSID",
        "PUBLIC",
        "QUERY",
        "QUERYNO",
        "READS",
        "REFERENCES",
        "RESIGNAL",
        "RESTRICT",
        "RESULT",
        "RESULT_SET_LOCATOR",
        "RETURN",
        "RETURNS",
        "ROLE",
        "ROLLUP",
        "ROUND_CEILING",
        "ROUND_DOWN",
        "ROUND_FLOOR",
        "ROUND_HALF_DOWN",
        "ROUND_HALF_EVEN",
        "ROUND_HALF_UP",
        "ROUND_UP",
        "ROW",
        "ROWSET",
        "SCHEMA",
        "SCRATCHPAD",
        "SECONDS",
        "SECQTY",
        "SECURITY",
        "SEQUENCE",
        "SENSITIVE",
        "SESSION_USER",
        "SIMPLE",
        "SOME",
        "SOURCE",
        "SPECIFIC",
        "STANDARD",
        "STATIC",
        "STATEMENT",
        "STAY",
        "STOGROUP",
        "STORES",
        "STYLE",
        "SUMMARY",
        "SYNONYM",
        "SYSDATE",
        "SYSTEM",
        "SYSTIMESTAMP",
        "TABLE",
        "TABLESPACE",
        "THEN",
        "TO",
        "TRIGGER",
        "TYPE",
        "UNDO",
        "UNIQUE",
        "UNTIL",
        "USER",
        "USING",
        "VALIDPROC",
        "VARIABLE",
        "VARIANT",
        "VCAT",
        "VERSIONING",
        "VIEW",
        "VOLATILE",
        "VOLUMES",
        "WHILE",
        "WLM",
        "XMLEXISTS",
        "XMLCAST",
        "YEARS",
        "ZONE"
    ]
}), p9 = Q([
    "SELECT [ALL | DISTINCT]"
]), T9 = Q([
    // queries
    "WITH",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "PARTITION BY",
    "ORDER BY [INPUT SEQUENCE]",
    "FETCH FIRST",
    // Data modification
    // - insert:
    "INSERT INTO",
    "VALUES",
    // - update:
    "SET",
    // - merge:
    "MERGE INTO",
    "WHEN [NOT] MATCHED [THEN]",
    "UPDATE SET",
    "INSERT",
    // Data definition
    "CREATE [OR REPLACE] VIEW",
    "CREATE [GLOBAL TEMPORARY] TABLE"
]), u1 = Q([
    // - update:
    "UPDATE",
    "WHERE CURRENT OF",
    "WITH {RR | RS | CS | UR}",
    // - delete:
    "DELETE FROM",
    // - drop table:
    "DROP TABLE [HIERARCHY]",
    // alter table:
    "ALTER TABLE",
    "ADD [COLUMN]",
    "DROP [COLUMN]",
    "RENAME [COLUMN]",
    "ALTER [COLUMN]",
    "SET DATA TYPE",
    // for alter column
    "SET NOT NULL",
    // for alter column
    "DROP {IDENTITY | EXPRESSION | DEFAULT | NOT NULL}",
    // for alter column
    // - truncate:
    "TRUNCATE [TABLE]",
    // other
    "SET [CURRENT] SCHEMA",
    "AFTER",
    "GO",
    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=statements-list-supported
    "ALLOCATE CURSOR",
    "ALTER DATABASE",
    "ALTER FUNCTION",
    "ALTER INDEX",
    "ALTER MASK",
    "ALTER PERMISSION",
    "ALTER PROCEDURE",
    "ALTER SEQUENCE",
    "ALTER STOGROUP",
    "ALTER TABLESPACE",
    "ALTER TRIGGER",
    "ALTER TRUSTED CONTEXT",
    "ALTER VIEW",
    "ASSOCIATE LOCATORS",
    "BEGIN DECLARE SECTION",
    "CALL",
    "CLOSE",
    "COMMENT",
    "COMMIT",
    "CONNECT",
    "CREATE ALIAS",
    "CREATE AUXILIARY TABLE",
    "CREATE DATABASE",
    "CREATE FUNCTION",
    "CREATE GLOBAL TEMPORARY TABLE",
    "CREATE INDEX",
    "CREATE LOB TABLESPACE",
    "CREATE MASK",
    "CREATE PERMISSION",
    "CREATE PROCEDURE",
    "CREATE ROLE",
    "CREATE SEQUENCE",
    "CREATE STOGROUP",
    "CREATE SYNONYM",
    "CREATE TABLESPACE",
    "CREATE TRIGGER",
    "CREATE TRUSTED CONTEXT",
    "CREATE TYPE",
    "CREATE VARIABLE",
    "DECLARE CURSOR",
    "DECLARE GLOBAL TEMPORARY TABLE",
    "DECLARE STATEMENT",
    "DECLARE TABLE",
    "DECLARE VARIABLE",
    "DESCRIBE CURSOR",
    "DESCRIBE INPUT",
    "DESCRIBE OUTPUT",
    "DESCRIBE PROCEDURE",
    "DESCRIBE TABLE",
    "DROP",
    "END DECLARE SECTION",
    "EXCHANGE",
    "EXECUTE",
    "EXECUTE IMMEDIATE",
    "EXPLAIN",
    "FETCH",
    "FREE LOCATOR",
    "GET DIAGNOSTICS",
    "GRANT",
    "HOLD LOCATOR",
    "INCLUDE",
    "LABEL",
    "LOCK TABLE",
    "OPEN",
    "PREPARE",
    "REFRESH",
    "RELEASE",
    "RELEASE SAVEPOINT",
    "RENAME",
    "REVOKE",
    "ROLLBACK",
    "SAVEPOINT",
    "SELECT INTO",
    "SET CONNECTION",
    "SET CURRENT ACCELERATOR",
    "SET CURRENT APPLICATION COMPATIBILITY",
    "SET CURRENT APPLICATION ENCODING SCHEME",
    "SET CURRENT DEBUG MODE",
    "SET CURRENT DECFLOAT ROUNDING MODE",
    "SET CURRENT DEGREE",
    "SET CURRENT EXPLAIN MODE",
    "SET CURRENT GET_ACCEL_ARCHIVE",
    "SET CURRENT LOCALE LC_CTYPE",
    "SET CURRENT MAINTAINED TABLE TYPES FOR OPTIMIZATION",
    "SET CURRENT OPTIMIZATION HINT",
    "SET CURRENT PACKAGE PATH",
    "SET CURRENT PACKAGESET",
    "SET CURRENT PRECISION",
    "SET CURRENT QUERY ACCELERATION",
    "SET CURRENT QUERY ACCELERATION WAITFORDATA",
    "SET CURRENT REFRESH AGE",
    "SET CURRENT ROUTINE VERSION",
    "SET CURRENT RULES",
    "SET CURRENT SQLID",
    "SET CURRENT TEMPORAL BUSINESS_TIME",
    "SET CURRENT TEMPORAL SYSTEM_TIME",
    "SET ENCRYPTION PASSWORD",
    "SET PATH",
    "SET SESSION TIME ZONE",
    "SIGNAL",
    "VALUES INTO",
    "WHENEVER"
]), h9 = Q([
    "UNION [ALL]",
    "EXCEPT [ALL]",
    "INTERSECT [ALL]"
]), A9 = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN"
]), S9 = Q([
    "ON DELETE",
    "ON UPDATE",
    "SET NULL",
    "{ROWS | RANGE} BETWEEN"
]), R9 = {
    tokenizerOptions: {
        reservedSelect: p9,
        reservedClauses: [
            ...T9,
            ...u1
        ],
        reservedSetOperations: h9,
        reservedJoins: A9,
        reservedPhrases: S9,
        reservedKeywords: f9,
        reservedFunctionNames: d9,
        stringTypes: [
            {
                quote: "''-qq",
                prefixes: [
                    "G",
                    "N",
                    "U&"
                ]
            },
            {
                quote: "''-raw",
                prefixes: [
                    "X",
                    "BX",
                    "GX",
                    "UX"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            '""-qq'
        ],
        identChars: {
            first: "@#$"
        },
        paramTypes: {
            positional: !0,
            named: [
                ":"
            ]
        },
        paramChars: {
            first: "@#$",
            rest: "@#$"
        },
        operators: [
            "**",
            "¬=",
            "¬>",
            "¬<",
            "!>",
            "!<",
            "||"
        ]
    },
    formatOptions: {
        onelineClauses: u1
    }
}, m9 = ke({
    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF
    math: [
        "ABS",
        "ACOS",
        "ASIN",
        "ATAN",
        "BIN",
        "BROUND",
        "CBRT",
        "CEIL",
        "CEILING",
        "CONV",
        "COS",
        "DEGREES",
        // 'E',
        "EXP",
        "FACTORIAL",
        "FLOOR",
        "GREATEST",
        "HEX",
        "LEAST",
        "LN",
        "LOG",
        "LOG10",
        "LOG2",
        "NEGATIVE",
        "PI",
        "PMOD",
        "POSITIVE",
        "POW",
        "POWER",
        "RADIANS",
        "RAND",
        "ROUND",
        "SHIFTLEFT",
        "SHIFTRIGHT",
        "SHIFTRIGHTUNSIGNED",
        "SIGN",
        "SIN",
        "SQRT",
        "TAN",
        "UNHEX",
        "WIDTH_BUCKET"
    ],
    array: [
        "ARRAY_CONTAINS",
        "MAP_KEYS",
        "MAP_VALUES",
        "SIZE",
        "SORT_ARRAY"
    ],
    conversion: [
        "BINARY",
        "CAST"
    ],
    date: [
        "ADD_MONTHS",
        "DATE",
        "DATE_ADD",
        "DATE_FORMAT",
        "DATE_SUB",
        "DATEDIFF",
        "DAY",
        "DAYNAME",
        "DAYOFMONTH",
        "DAYOFYEAR",
        "EXTRACT",
        "FROM_UNIXTIME",
        "FROM_UTC_TIMESTAMP",
        "HOUR",
        "LAST_DAY",
        "MINUTE",
        "MONTH",
        "MONTHS_BETWEEN",
        "NEXT_DAY",
        "QUARTER",
        "SECOND",
        "TIMESTAMP",
        "TO_DATE",
        "TO_UTC_TIMESTAMP",
        "TRUNC",
        "UNIX_TIMESTAMP",
        "WEEKOFYEAR",
        "YEAR"
    ],
    conditional: [
        "ASSERT_TRUE",
        "COALESCE",
        "IF",
        "ISNOTNULL",
        "ISNULL",
        "NULLIF",
        "NVL"
    ],
    string: [
        "ASCII",
        "BASE64",
        "CHARACTER_LENGTH",
        "CHR",
        "CONCAT",
        "CONCAT_WS",
        "CONTEXT_NGRAMS",
        "DECODE",
        "ELT",
        "ENCODE",
        "FIELD",
        "FIND_IN_SET",
        "FORMAT_NUMBER",
        "GET_JSON_OBJECT",
        "IN_FILE",
        "INITCAP",
        "INSTR",
        "LCASE",
        "LENGTH",
        "LEVENSHTEIN",
        "LOCATE",
        "LOWER",
        "LPAD",
        "LTRIM",
        "NGRAMS",
        "OCTET_LENGTH",
        "PARSE_URL",
        "PRINTF",
        "QUOTE",
        "REGEXP_EXTRACT",
        "REGEXP_REPLACE",
        "REPEAT",
        "REVERSE",
        "RPAD",
        "RTRIM",
        "SENTENCES",
        "SOUNDEX",
        "SPACE",
        "SPLIT",
        "STR_TO_MAP",
        "SUBSTR",
        "SUBSTRING",
        "TRANSLATE",
        "TRIM",
        "UCASE",
        "UNBASE64",
        "UPPER"
    ],
    masking: [
        "MASK",
        "MASK_FIRST_N",
        "MASK_HASH",
        "MASK_LAST_N",
        "MASK_SHOW_FIRST_N",
        "MASK_SHOW_LAST_N"
    ],
    misc: [
        "AES_DECRYPT",
        "AES_ENCRYPT",
        "CRC32",
        "CURRENT_DATABASE",
        "CURRENT_USER",
        "HASH",
        "JAVA_METHOD",
        "LOGGED_IN_USER",
        "MD5",
        "REFLECT",
        "SHA",
        "SHA1",
        "SHA2",
        "SURROGATE_KEY",
        "VERSION"
    ],
    aggregate: [
        "AVG",
        "COLLECT_LIST",
        "COLLECT_SET",
        "CORR",
        "COUNT",
        "COVAR_POP",
        "COVAR_SAMP",
        "HISTOGRAM_NUMERIC",
        "MAX",
        "MIN",
        "NTILE",
        "PERCENTILE",
        "PERCENTILE_APPROX",
        "REGR_AVGX",
        "REGR_AVGY",
        "REGR_COUNT",
        "REGR_INTERCEPT",
        "REGR_R2",
        "REGR_SLOPE",
        "REGR_SXX",
        "REGR_SXY",
        "REGR_SYY",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "SUM",
        "VAR_POP",
        "VAR_SAMP",
        "VARIANCE"
    ],
    table: [
        "EXPLODE",
        "INLINE",
        "JSON_TUPLE",
        "PARSE_URL_TUPLE",
        "POSEXPLODE",
        "STACK"
    ],
    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+WindowingAndAnalytics
    window: [
        "LEAD",
        "LAG",
        "FIRST_VALUE",
        "LAST_VALUE",
        "RANK",
        "ROW_NUMBER",
        "DENSE_RANK",
        "CUME_DIST",
        "PERCENT_RANK",
        "NTILE"
    ],
    // Parameterized data types
    // https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=82706456
    // Though in reality Hive only supports parameters for DECIMAL(),
    // it doesn't hurt to allow others in here as well.
    dataTypes: [
        "DECIMAL",
        "NUMERIC",
        "VARCHAR",
        "CHAR"
    ]
}), _9 = ke({
    // https://cwiki.apache.org/confluence/display/hive/languagemanual+ddl
    // Non-reserved keywords have proscribed meanings in. HiveQL, but can still be used as table or column names
    nonReserved: [
        "ADD",
        "ADMIN",
        "AFTER",
        "ANALYZE",
        "ARCHIVE",
        "ASC",
        "BEFORE",
        "BUCKET",
        "BUCKETS",
        "CASCADE",
        "CHANGE",
        "CLUSTER",
        "CLUSTERED",
        "CLUSTERSTATUS",
        "COLLECTION",
        "COLUMNS",
        "COMMENT",
        "COMPACT",
        "COMPACTIONS",
        "COMPUTE",
        "CONCATENATE",
        "CONTINUE",
        "DATA",
        "DATABASES",
        "DATETIME",
        "DAY",
        "DBPROPERTIES",
        "DEFERRED",
        "DEFINED",
        "DELIMITED",
        "DEPENDENCY",
        "DESC",
        "DIRECTORIES",
        "DIRECTORY",
        "DISABLE",
        "DISTRIBUTE",
        "ELEM_TYPE",
        "ENABLE",
        "ESCAPED",
        "EXCLUSIVE",
        "EXPLAIN",
        "EXPORT",
        "FIELDS",
        "FILE",
        "FILEFORMAT",
        "FIRST",
        "FORMAT",
        "FORMATTED",
        "FUNCTIONS",
        "HOLD_DDLTIME",
        "HOUR",
        "IDXPROPERTIES",
        "IGNORE",
        "INDEX",
        "INDEXES",
        "INPATH",
        "INPUTDRIVER",
        "INPUTFORMAT",
        "ITEMS",
        "JAR",
        "KEYS",
        "KEY_TYPE",
        "LIMIT",
        "LINES",
        "LOAD",
        "LOCATION",
        "LOCK",
        "LOCKS",
        "LOGICAL",
        "LONG",
        "MAPJOIN",
        "MATERIALIZED",
        "METADATA",
        "MINUS",
        "MINUTE",
        "MONTH",
        "MSCK",
        "NOSCAN",
        "NO_DROP",
        "OFFLINE",
        "OPTION",
        "OUTPUTDRIVER",
        "OUTPUTFORMAT",
        "OVERWRITE",
        "OWNER",
        "PARTITIONED",
        "PARTITIONS",
        "PLUS",
        "PRETTY",
        "PRINCIPALS",
        "PROTECTION",
        "PURGE",
        "READ",
        "READONLY",
        "REBUILD",
        "RECORDREADER",
        "RECORDWRITER",
        "RELOAD",
        "RENAME",
        "REPAIR",
        "REPLACE",
        "REPLICATION",
        "RESTRICT",
        "REWRITE",
        "ROLE",
        "ROLES",
        "SCHEMA",
        "SCHEMAS",
        "SECOND",
        "SEMI",
        "SERDE",
        "SERDEPROPERTIES",
        "SERVER",
        "SETS",
        "SHARED",
        "SHOW",
        "SHOW_DATABASE",
        "SKEWED",
        "SORT",
        "SORTED",
        "SSL",
        "STATISTICS",
        "STORED",
        "STREAMTABLE",
        "STRING",
        "STRUCT",
        "TABLES",
        "TBLPROPERTIES",
        "TEMPORARY",
        "TERMINATED",
        "TINYINT",
        "TOUCH",
        "TRANSACTIONS",
        "UNARCHIVE",
        "UNDO",
        "UNIONTYPE",
        "UNLOCK",
        "UNSET",
        "UNSIGNED",
        "URI",
        "USE",
        "UTC",
        "UTCTIMESTAMP",
        "VALUE_TYPE",
        "VIEW",
        "WHILE",
        "YEAR",
        "AUTOCOMMIT",
        "ISOLATION",
        "LEVEL",
        "OFFSET",
        "SNAPSHOT",
        "TRANSACTION",
        "WORK",
        "WRITE",
        "ABORT",
        "KEY",
        "LAST",
        "NORELY",
        "NOVALIDATE",
        "NULLS",
        "RELY",
        "VALIDATE",
        "DETAIL",
        "DOW",
        "EXPRESSION",
        "OPERATOR",
        "QUARTER",
        "SUMMARY",
        "VECTORIZATION",
        "WEEK",
        "YEARS",
        "MONTHS",
        "WEEKS",
        "DAYS",
        "HOURS",
        "MINUTES",
        "SECONDS",
        "TIMESTAMPTZ",
        "ZONE"
    ],
    reserved: [
        "ALL",
        "ALTER",
        "AND",
        "ARRAY",
        "AS",
        "AUTHORIZATION",
        "BETWEEN",
        "BIGINT",
        "BINARY",
        "BOOLEAN",
        "BOTH",
        "BY",
        "CASE",
        "CAST",
        "CHAR",
        "COLUMN",
        "CONF",
        "CREATE",
        "CROSS",
        "CUBE",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_TIMESTAMP",
        "CURSOR",
        "DATABASE",
        "DATE",
        "DECIMAL",
        "DELETE",
        "DESCRIBE",
        "DISTINCT",
        "DOUBLE",
        "DROP",
        "ELSE",
        "END",
        "EXCHANGE",
        "EXISTS",
        "EXTENDED",
        "EXTERNAL",
        "FALSE",
        "FETCH",
        "FLOAT",
        "FOLLOWING",
        "FOR",
        "FROM",
        "FULL",
        "FUNCTION",
        "GRANT",
        "GROUP",
        "GROUPING",
        "HAVING",
        "IF",
        "IMPORT",
        "IN",
        "INNER",
        "INSERT",
        "INT",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "IS",
        "JOIN",
        "LATERAL",
        "LEFT",
        "LESS",
        "LIKE",
        "LOCAL",
        "MACRO",
        "MAP",
        "MORE",
        "NONE",
        "NOT",
        "NULL",
        "OF",
        "ON",
        "OR",
        "ORDER",
        "OUT",
        "OUTER",
        "OVER",
        "PARTIALSCAN",
        "PARTITION",
        "PERCENT",
        "PRECEDING",
        "PRESERVE",
        "PROCEDURE",
        "RANGE",
        "READS",
        "REDUCE",
        "REVOKE",
        "RIGHT",
        "ROLLUP",
        "ROW",
        "ROWS",
        "SELECT",
        "SET",
        "SMALLINT",
        "TABLE",
        "TABLESAMPLE",
        "THEN",
        "TIMESTAMP",
        "TO",
        "TRANSFORM",
        "TRIGGER",
        "TRUE",
        "TRUNCATE",
        "UNBOUNDED",
        "UNION",
        "UNIQUEJOIN",
        "UPDATE",
        "USER",
        "USING",
        "UTC_TMESTAMP",
        "VALUES",
        "VARCHAR",
        "WHEN",
        "WHERE",
        "WINDOW",
        "WITH",
        "COMMIT",
        "ONLY",
        "REGEXP",
        "RLIKE",
        "ROLLBACK",
        "START",
        "CACHE",
        "CONSTRAINT",
        "FOREIGN",
        "PRIMARY",
        "REFERENCES",
        "DAYOFWEEK",
        "EXTRACT",
        "FLOOR",
        "INTEGER",
        "PRECISION",
        "VIEWS",
        "TIME",
        "NUMERIC",
        "SYNC"
    ],
    fileTypes: [
        "TEXTFILE",
        "SEQUENCEFILE",
        "ORC",
        "CSV",
        "TSV",
        "PARQUET",
        "AVRO",
        "RCFILE",
        "JSONFILE",
        "INPUTFORMAT",
        "OUTPUTFORMAT"
    ]
}), N9 = Q([
    "SELECT [ALL | DISTINCT]"
]), I9 = Q([
    // queries
    "WITH",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "SORT BY",
    "CLUSTER BY",
    "DISTRIBUTE BY",
    "LIMIT",
    // Data manipulation
    // - insert:
    //   Hive does not actually support plain INSERT INTO, only INSERT INTO TABLE
    //   but it's a nuisance to not support it, as all other dialects do.
    "INSERT INTO [TABLE]",
    "VALUES",
    // - update:
    "SET",
    // - merge:
    "MERGE INTO",
    "WHEN [NOT] MATCHED [THEN]",
    "UPDATE SET",
    "INSERT [VALUES]",
    // - insert overwrite directory:
    //   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Writingdataintothefilesystemfromqueries
    "INSERT OVERWRITE [LOCAL] DIRECTORY",
    // - load:
    //   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Loadingfilesintotables
    "LOAD DATA [LOCAL] INPATH",
    "[OVERWRITE] INTO TABLE",
    // Data definition
    "CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]",
    "CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]"
]), E1 = Q([
    // - update:
    "UPDATE",
    // - delete:
    "DELETE FROM",
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE",
    "RENAME TO",
    // - truncate:
    "TRUNCATE [TABLE]",
    // other
    "ALTER",
    "CREATE",
    "USE",
    "DESCRIBE",
    "DROP",
    "FETCH",
    "SHOW",
    "STORED AS",
    "STORED BY",
    "ROW FORMAT"
]), O9 = Q([
    "UNION [ALL | DISTINCT]"
]), C9 = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    // non-standard joins
    "LEFT SEMI JOIN"
]), g9 = Q([
    "{ROWS | RANGE} BETWEEN"
]), L9 = {
    tokenizerOptions: {
        reservedSelect: N9,
        reservedClauses: [
            ...I9,
            ...E1
        ],
        reservedSetOperations: O9,
        reservedJoins: C9,
        reservedPhrases: g9,
        reservedKeywords: _9,
        reservedFunctionNames: m9,
        extraParens: [
            "[]"
        ],
        stringTypes: [
            '""-bs',
            "''-bs"
        ],
        identTypes: [
            "``"
        ],
        variableTypes: [
            {
                quote: "{}",
                prefixes: [
                    "$"
                ],
                requirePrefix: !0
            }
        ],
        operators: [
            "%",
            "~",
            "^",
            "|",
            "&",
            "<=>",
            "==",
            "!",
            "||"
        ]
    },
    formatOptions: {
        onelineClauses: E1
    }
}, y9 = ke({
    // https://mariadb.com/kb/en/information-schema-keywords-table/
    all: [
        "ACCESSIBLE",
        "ACCOUNT",
        "ACTION",
        "ADD",
        "ADMIN",
        "AFTER",
        "AGAINST",
        "AGGREGATE",
        "ALL",
        "ALGORITHM",
        "ALTER",
        "ALWAYS",
        "ANALYZE",
        "AND",
        "ANY",
        "AS",
        "ASC",
        "ASCII",
        "ASENSITIVE",
        "AT",
        "ATOMIC",
        "AUTHORS",
        "AUTO_INCREMENT",
        "AUTOEXTEND_SIZE",
        "AUTO",
        "AVG",
        "AVG_ROW_LENGTH",
        "BACKUP",
        "BEFORE",
        "BEGIN",
        "BETWEEN",
        "BIGINT",
        "BINARY",
        "BINLOG",
        "BIT",
        "BLOB",
        "BLOCK",
        "BODY",
        "BOOL",
        "BOOLEAN",
        "BOTH",
        "BTREE",
        "BY",
        "BYTE",
        "CACHE",
        "CALL",
        "CASCADE",
        "CASCADED",
        "CASE",
        "CATALOG_NAME",
        "CHAIN",
        "CHANGE",
        "CHANGED",
        "CHAR",
        "CHARACTER",
        "CHARSET",
        "CHECK",
        "CHECKPOINT",
        "CHECKSUM",
        "CIPHER",
        "CLASS_ORIGIN",
        "CLIENT",
        "CLOB",
        "CLOSE",
        "COALESCE",
        "CODE",
        "COLLATE",
        "COLLATION",
        "COLUMN",
        "COLUMN_NAME",
        "COLUMNS",
        "COLUMN_ADD",
        "COLUMN_CHECK",
        "COLUMN_CREATE",
        "COLUMN_DELETE",
        "COLUMN_GET",
        "COMMENT",
        "COMMIT",
        "COMMITTED",
        "COMPACT",
        "COMPLETION",
        "COMPRESSED",
        "CONCURRENT",
        "CONDITION",
        "CONNECTION",
        "CONSISTENT",
        "CONSTRAINT",
        "CONSTRAINT_CATALOG",
        "CONSTRAINT_NAME",
        "CONSTRAINT_SCHEMA",
        "CONTAINS",
        "CONTEXT",
        "CONTINUE",
        "CONTRIBUTORS",
        "CONVERT",
        "CPU",
        "CREATE",
        "CROSS",
        "CUBE",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_POS",
        "CURRENT_ROLE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "CURSOR",
        "CURSOR_NAME",
        "CYCLE",
        "DATA",
        "DATABASE",
        "DATABASES",
        "DATAFILE",
        "DATE",
        "DATETIME",
        "DAY",
        "DAY_HOUR",
        "DAY_MICROSECOND",
        "DAY_MINUTE",
        "DAY_SECOND",
        "DEALLOCATE",
        "DEC",
        "DECIMAL",
        "DECLARE",
        "DEFAULT",
        "DEFINER",
        "DELAYED",
        "DELAY_KEY_WRITE",
        "DELETE",
        "DELETE_DOMAIN_ID",
        "DESC",
        "DESCRIBE",
        "DES_KEY_FILE",
        "DETERMINISTIC",
        "DIAGNOSTICS",
        "DIRECTORY",
        "DISABLE",
        "DISCARD",
        "DISK",
        "DISTINCT",
        "DISTINCTROW",
        "DIV",
        "DO",
        "DOUBLE",
        "DO_DOMAIN_IDS",
        "DROP",
        "DUAL",
        "DUMPFILE",
        "DUPLICATE",
        "DYNAMIC",
        "EACH",
        "ELSE",
        "ELSEIF",
        "ELSIF",
        "EMPTY",
        "ENABLE",
        "ENCLOSED",
        "END",
        "ENDS",
        "ENGINE",
        "ENGINES",
        "ENUM",
        "ERROR",
        "ERRORS",
        "ESCAPE",
        "ESCAPED",
        "EVENT",
        "EVENTS",
        "EVERY",
        "EXAMINED",
        "EXCEPT",
        "EXCHANGE",
        "EXCLUDE",
        "EXECUTE",
        "EXCEPTION",
        "EXISTS",
        "EXIT",
        "EXPANSION",
        "EXPIRE",
        "EXPORT",
        "EXPLAIN",
        "EXTENDED",
        "EXTENT_SIZE",
        "FALSE",
        "FAST",
        "FAULTS",
        "FEDERATED",
        "FETCH",
        "FIELDS",
        "FILE",
        "FIRST",
        "FIXED",
        "FLOAT",
        "FLOAT4",
        "FLOAT8",
        "FLUSH",
        "FOLLOWING",
        "FOLLOWS",
        "FOR",
        "FORCE",
        "FOREIGN",
        "FORMAT",
        "FOUND",
        "FROM",
        "FULL",
        "FULLTEXT",
        "FUNCTION",
        "GENERAL",
        "GENERATED",
        "GET_FORMAT",
        "GET",
        "GLOBAL",
        "GOTO",
        "GRANT",
        "GRANTS",
        "GROUP",
        "HANDLER",
        "HARD",
        "HASH",
        "HAVING",
        "HELP",
        "HIGH_PRIORITY",
        "HISTORY",
        "HOST",
        "HOSTS",
        "HOUR",
        "HOUR_MICROSECOND",
        "HOUR_MINUTE",
        "HOUR_SECOND",
        // 'ID', // conflicts with common column name
        "IDENTIFIED",
        "IF",
        "IGNORE",
        "IGNORED",
        "IGNORE_DOMAIN_IDS",
        "IGNORE_SERVER_IDS",
        "IMMEDIATE",
        "IMPORT",
        "INTERSECT",
        "IN",
        "INCREMENT",
        "INDEX",
        "INDEXES",
        "INFILE",
        "INITIAL_SIZE",
        "INNER",
        "INOUT",
        "INSENSITIVE",
        "INSERT",
        "INSERT_METHOD",
        "INSTALL",
        "INT",
        "INT1",
        "INT2",
        "INT3",
        "INT4",
        "INT8",
        "INTEGER",
        "INTERVAL",
        "INVISIBLE",
        "INTO",
        "IO",
        "IO_THREAD",
        "IPC",
        "IS",
        "ISOLATION",
        "ISOPEN",
        "ISSUER",
        "ITERATE",
        "INVOKER",
        "JOIN",
        "JSON",
        "JSON_TABLE",
        "KEY",
        "KEYS",
        "KEY_BLOCK_SIZE",
        "KILL",
        "LANGUAGE",
        "LAST",
        "LAST_VALUE",
        "LASTVAL",
        "LEADING",
        "LEAVE",
        "LEAVES",
        "LEFT",
        "LESS",
        "LEVEL",
        "LIKE",
        "LIMIT",
        "LINEAR",
        "LINES",
        "LIST",
        "LOAD",
        "LOCAL",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "LOCK",
        "LOCKED",
        "LOCKS",
        "LOGFILE",
        "LOGS",
        "LONG",
        "LONGBLOB",
        "LONGTEXT",
        "LOOP",
        "LOW_PRIORITY",
        "MASTER",
        "MASTER_CONNECT_RETRY",
        "MASTER_DELAY",
        "MASTER_GTID_POS",
        "MASTER_HOST",
        "MASTER_LOG_FILE",
        "MASTER_LOG_POS",
        "MASTER_PASSWORD",
        "MASTER_PORT",
        "MASTER_SERVER_ID",
        "MASTER_SSL",
        "MASTER_SSL_CA",
        "MASTER_SSL_CAPATH",
        "MASTER_SSL_CERT",
        "MASTER_SSL_CIPHER",
        "MASTER_SSL_CRL",
        "MASTER_SSL_CRLPATH",
        "MASTER_SSL_KEY",
        "MASTER_SSL_VERIFY_SERVER_CERT",
        "MASTER_USER",
        "MASTER_USE_GTID",
        "MASTER_HEARTBEAT_PERIOD",
        "MATCH",
        "MAX_CONNECTIONS_PER_HOUR",
        "MAX_QUERIES_PER_HOUR",
        "MAX_ROWS",
        "MAX_SIZE",
        "MAX_STATEMENT_TIME",
        "MAX_UPDATES_PER_HOUR",
        "MAX_USER_CONNECTIONS",
        "MAXVALUE",
        "MEDIUM",
        "MEDIUMBLOB",
        "MEDIUMINT",
        "MEDIUMTEXT",
        "MEMORY",
        "MERGE",
        "MESSAGE_TEXT",
        "MICROSECOND",
        "MIDDLEINT",
        "MIGRATE",
        "MINUS",
        "MINUTE",
        "MINUTE_MICROSECOND",
        "MINUTE_SECOND",
        "MINVALUE",
        "MIN_ROWS",
        "MOD",
        "MODE",
        "MODIFIES",
        "MODIFY",
        "MONITOR",
        "MONTH",
        "MUTEX",
        "MYSQL",
        "MYSQL_ERRNO",
        "NAME",
        "NAMES",
        "NATIONAL",
        "NATURAL",
        "NCHAR",
        "NESTED",
        "NEVER",
        "NEW",
        "NEXT",
        "NEXTVAL",
        "NO",
        "NOMAXVALUE",
        "NOMINVALUE",
        "NOCACHE",
        "NOCYCLE",
        "NO_WAIT",
        "NOWAIT",
        "NODEGROUP",
        "NONE",
        "NOT",
        "NOTFOUND",
        "NO_WRITE_TO_BINLOG",
        "NULL",
        "NUMBER",
        "NUMERIC",
        "NVARCHAR",
        "OF",
        "OFFSET",
        "OLD_PASSWORD",
        "ON",
        "ONE",
        "ONLINE",
        "ONLY",
        "OPEN",
        "OPTIMIZE",
        "OPTIONS",
        "OPTION",
        "OPTIONALLY",
        "OR",
        "ORDER",
        "ORDINALITY",
        "OTHERS",
        "OUT",
        "OUTER",
        "OUTFILE",
        "OVER",
        "OVERLAPS",
        "OWNER",
        "PACKAGE",
        "PACK_KEYS",
        "PAGE",
        "PAGE_CHECKSUM",
        "PARSER",
        "PARSE_VCOL_EXPR",
        "PATH",
        "PERIOD",
        "PARTIAL",
        "PARTITION",
        "PARTITIONING",
        "PARTITIONS",
        "PASSWORD",
        "PERSISTENT",
        "PHASE",
        "PLUGIN",
        "PLUGINS",
        "PORT",
        "PORTION",
        "PRECEDES",
        "PRECEDING",
        "PRECISION",
        "PREPARE",
        "PRESERVE",
        "PREV",
        "PREVIOUS",
        "PRIMARY",
        "PRIVILEGES",
        "PROCEDURE",
        "PROCESS",
        "PROCESSLIST",
        "PROFILE",
        "PROFILES",
        "PROXY",
        "PURGE",
        "QUARTER",
        "QUERY",
        "QUICK",
        "RAISE",
        "RANGE",
        "RAW",
        "READ",
        "READ_ONLY",
        "READ_WRITE",
        "READS",
        "REAL",
        "REBUILD",
        "RECOVER",
        "RECURSIVE",
        "REDO_BUFFER_SIZE",
        "REDOFILE",
        "REDUNDANT",
        "REFERENCES",
        "REGEXP",
        "RELAY",
        "RELAYLOG",
        "RELAY_LOG_FILE",
        "RELAY_LOG_POS",
        "RELAY_THREAD",
        "RELEASE",
        "RELOAD",
        "REMOVE",
        "RENAME",
        "REORGANIZE",
        "REPAIR",
        "REPEATABLE",
        "REPLACE",
        "REPLAY",
        "REPLICA",
        "REPLICAS",
        "REPLICA_POS",
        "REPLICATION",
        "REPEAT",
        "REQUIRE",
        "RESET",
        "RESIGNAL",
        "RESTART",
        "RESTORE",
        "RESTRICT",
        "RESUME",
        "RETURNED_SQLSTATE",
        "RETURN",
        "RETURNING",
        "RETURNS",
        "REUSE",
        "REVERSE",
        "REVOKE",
        "RIGHT",
        "RLIKE",
        "ROLE",
        "ROLLBACK",
        "ROLLUP",
        "ROUTINE",
        "ROW",
        "ROWCOUNT",
        "ROWNUM",
        "ROWS",
        "ROWTYPE",
        "ROW_COUNT",
        "ROW_FORMAT",
        "RTREE",
        "SAVEPOINT",
        "SCHEDULE",
        "SCHEMA",
        "SCHEMA_NAME",
        "SCHEMAS",
        "SECOND",
        "SECOND_MICROSECOND",
        "SECURITY",
        "SELECT",
        "SENSITIVE",
        "SEPARATOR",
        "SEQUENCE",
        "SERIAL",
        "SERIALIZABLE",
        "SESSION",
        "SERVER",
        "SET",
        "SETVAL",
        "SHARE",
        "SHOW",
        "SHUTDOWN",
        "SIGNAL",
        "SIGNED",
        "SIMPLE",
        "SKIP",
        "SLAVE",
        "SLAVES",
        "SLAVE_POS",
        "SLOW",
        "SNAPSHOT",
        "SMALLINT",
        "SOCKET",
        "SOFT",
        "SOME",
        "SONAME",
        "SOUNDS",
        "SOURCE",
        "STAGE",
        "STORED",
        "SPATIAL",
        "SPECIFIC",
        "REF_SYSTEM_ID",
        "SQL",
        "SQLEXCEPTION",
        "SQLSTATE",
        "SQLWARNING",
        "SQL_BIG_RESULT",
        "SQL_BUFFER_RESULT",
        "SQL_CACHE",
        "SQL_CALC_FOUND_ROWS",
        "SQL_NO_CACHE",
        "SQL_SMALL_RESULT",
        "SQL_THREAD",
        "SQL_TSI_SECOND",
        "SQL_TSI_MINUTE",
        "SQL_TSI_HOUR",
        "SQL_TSI_DAY",
        "SQL_TSI_WEEK",
        "SQL_TSI_MONTH",
        "SQL_TSI_QUARTER",
        "SQL_TSI_YEAR",
        "SSL",
        "START",
        "STARTING",
        "STARTS",
        "STATEMENT",
        "STATS_AUTO_RECALC",
        "STATS_PERSISTENT",
        "STATS_SAMPLE_PAGES",
        "STATUS",
        "STOP",
        "STORAGE",
        "STRAIGHT_JOIN",
        "STRING",
        "SUBCLASS_ORIGIN",
        "SUBJECT",
        "SUBPARTITION",
        "SUBPARTITIONS",
        "SUPER",
        "SUSPEND",
        "SWAPS",
        "SWITCHES",
        "SYSDATE",
        "SYSTEM",
        "SYSTEM_TIME",
        "TABLE",
        "TABLE_NAME",
        "TABLES",
        "TABLESPACE",
        "TABLE_CHECKSUM",
        "TEMPORARY",
        "TEMPTABLE",
        "TERMINATED",
        "TEXT",
        "THAN",
        "THEN",
        "TIES",
        "TIME",
        "TIMESTAMP",
        "TIMESTAMPADD",
        "TIMESTAMPDIFF",
        "TINYBLOB",
        "TINYINT",
        "TINYTEXT",
        "TO",
        "TRAILING",
        "TRANSACTION",
        "TRANSACTIONAL",
        "THREADS",
        "TRIGGER",
        "TRIGGERS",
        "TRUE",
        "TRUNCATE",
        "TYPE",
        "TYPES",
        "UNBOUNDED",
        "UNCOMMITTED",
        "UNDEFINED",
        "UNDO_BUFFER_SIZE",
        "UNDOFILE",
        "UNDO",
        "UNICODE",
        "UNION",
        "UNIQUE",
        "UNKNOWN",
        "UNLOCK",
        "UNINSTALL",
        "UNSIGNED",
        "UNTIL",
        "UPDATE",
        "UPGRADE",
        "USAGE",
        "USE",
        "USER",
        "USER_RESOURCES",
        "USE_FRM",
        "USING",
        "UTC_DATE",
        "UTC_TIME",
        "UTC_TIMESTAMP",
        "VALUE",
        "VALUES",
        "VARBINARY",
        "VARCHAR",
        "VARCHARACTER",
        "VARCHAR2",
        "VARIABLES",
        "VARYING",
        "VIA",
        "VIEW",
        "VIRTUAL",
        "VISIBLE",
        "VERSIONING",
        "WAIT",
        "WARNINGS",
        "WEEK",
        "WEIGHT_STRING",
        "WHEN",
        "WHERE",
        "WHILE",
        "WINDOW",
        "WITH",
        "WITHIN",
        "WITHOUT",
        "WORK",
        "WRAPPER",
        "WRITE",
        "X509",
        "XOR",
        "XA",
        "XML",
        "YEAR",
        "YEAR_MONTH",
        "ZEROFILL"
    ]
}), v9 = ke({
    // https://mariadb.com/kb/en/information-schema-sql_functions-table/
    all: [
        "ADDDATE",
        "ADD_MONTHS",
        "BIT_AND",
        "BIT_OR",
        "BIT_XOR",
        "CAST",
        "COUNT",
        "CUME_DIST",
        "CURDATE",
        "CURTIME",
        "DATE_ADD",
        "DATE_SUB",
        "DATE_FORMAT",
        "DECODE",
        "DENSE_RANK",
        "EXTRACT",
        "FIRST_VALUE",
        "GROUP_CONCAT",
        "JSON_ARRAYAGG",
        "JSON_OBJECTAGG",
        "LAG",
        "LEAD",
        "MAX",
        "MEDIAN",
        "MID",
        "MIN",
        "NOW",
        "NTH_VALUE",
        "NTILE",
        "POSITION",
        "PERCENT_RANK",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "RANK",
        "ROW_NUMBER",
        "SESSION_USER",
        "STD",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "SUBDATE",
        "SUBSTR",
        "SUBSTRING",
        "SUM",
        "SYSTEM_USER",
        "TRIM",
        "TRIM_ORACLE",
        "VARIANCE",
        "VAR_POP",
        "VAR_SAMP",
        "ABS",
        "ACOS",
        "ADDTIME",
        "AES_DECRYPT",
        "AES_ENCRYPT",
        "ASIN",
        "ATAN",
        "ATAN2",
        "BENCHMARK",
        "BIN",
        "BINLOG_GTID_POS",
        "BIT_COUNT",
        "BIT_LENGTH",
        "CEIL",
        "CEILING",
        "CHARACTER_LENGTH",
        "CHAR_LENGTH",
        "CHR",
        "COERCIBILITY",
        "COLUMN_CHECK",
        "COLUMN_EXISTS",
        "COLUMN_LIST",
        "COLUMN_JSON",
        "COMPRESS",
        "CONCAT",
        "CONCAT_OPERATOR_ORACLE",
        "CONCAT_WS",
        "CONNECTION_ID",
        "CONV",
        "CONVERT_TZ",
        "COS",
        "COT",
        "CRC32",
        "DATEDIFF",
        "DAYNAME",
        "DAYOFMONTH",
        "DAYOFWEEK",
        "DAYOFYEAR",
        "DEGREES",
        "DECODE_HISTOGRAM",
        "DECODE_ORACLE",
        "DES_DECRYPT",
        "DES_ENCRYPT",
        "ELT",
        "ENCODE",
        "ENCRYPT",
        "EXP",
        "EXPORT_SET",
        "EXTRACTVALUE",
        "FIELD",
        "FIND_IN_SET",
        "FLOOR",
        "FORMAT",
        "FOUND_ROWS",
        "FROM_BASE64",
        "FROM_DAYS",
        "FROM_UNIXTIME",
        "GET_LOCK",
        "GREATEST",
        "HEX",
        "IFNULL",
        "INSTR",
        "ISNULL",
        "IS_FREE_LOCK",
        "IS_USED_LOCK",
        "JSON_ARRAY",
        "JSON_ARRAY_APPEND",
        "JSON_ARRAY_INSERT",
        "JSON_COMPACT",
        "JSON_CONTAINS",
        "JSON_CONTAINS_PATH",
        "JSON_DEPTH",
        "JSON_DETAILED",
        "JSON_EXISTS",
        "JSON_EXTRACT",
        "JSON_INSERT",
        "JSON_KEYS",
        "JSON_LENGTH",
        "JSON_LOOSE",
        "JSON_MERGE",
        "JSON_MERGE_PATCH",
        "JSON_MERGE_PRESERVE",
        "JSON_QUERY",
        "JSON_QUOTE",
        "JSON_OBJECT",
        "JSON_REMOVE",
        "JSON_REPLACE",
        "JSON_SET",
        "JSON_SEARCH",
        "JSON_TYPE",
        "JSON_UNQUOTE",
        "JSON_VALID",
        "JSON_VALUE",
        "LAST_DAY",
        "LAST_INSERT_ID",
        "LCASE",
        "LEAST",
        "LENGTH",
        "LENGTHB",
        "LN",
        "LOAD_FILE",
        "LOCATE",
        "LOG",
        "LOG10",
        "LOG2",
        "LOWER",
        "LPAD",
        "LPAD_ORACLE",
        "LTRIM",
        "LTRIM_ORACLE",
        "MAKEDATE",
        "MAKETIME",
        "MAKE_SET",
        "MASTER_GTID_WAIT",
        "MASTER_POS_WAIT",
        "MD5",
        "MONTHNAME",
        "NAME_CONST",
        "NVL",
        "NVL2",
        "OCT",
        "OCTET_LENGTH",
        "ORD",
        "PERIOD_ADD",
        "PERIOD_DIFF",
        "PI",
        "POW",
        "POWER",
        "QUOTE",
        "REGEXP_INSTR",
        "REGEXP_REPLACE",
        "REGEXP_SUBSTR",
        "RADIANS",
        "RAND",
        "RELEASE_ALL_LOCKS",
        "RELEASE_LOCK",
        "REPLACE_ORACLE",
        "REVERSE",
        "ROUND",
        "RPAD",
        "RPAD_ORACLE",
        "RTRIM",
        "RTRIM_ORACLE",
        "SEC_TO_TIME",
        "SHA",
        "SHA1",
        "SHA2",
        "SIGN",
        "SIN",
        "SLEEP",
        "SOUNDEX",
        "SPACE",
        "SQRT",
        "STRCMP",
        "STR_TO_DATE",
        "SUBSTR_ORACLE",
        "SUBSTRING_INDEX",
        "SUBTIME",
        "SYS_GUID",
        "TAN",
        "TIMEDIFF",
        "TIME_FORMAT",
        "TIME_TO_SEC",
        "TO_BASE64",
        "TO_CHAR",
        "TO_DAYS",
        "TO_SECONDS",
        "UCASE",
        "UNCOMPRESS",
        "UNCOMPRESSED_LENGTH",
        "UNHEX",
        "UNIX_TIMESTAMP",
        "UPDATEXML",
        "UPPER",
        "UUID",
        "UUID_SHORT",
        "VERSION",
        "WEEKDAY",
        "WEEKOFYEAR",
        "WSREP_LAST_WRITTEN_GTID",
        "WSREP_LAST_SEEN_GTID",
        "WSREP_SYNC_WAIT_UPTO_GTID",
        "YEARWEEK",
        // CASE expression shorthands
        "COALESCE",
        "NULLIF",
        // Data types with parameters
        // https://mariadb.com/kb/en/data-types/
        "TINYINT",
        "SMALLINT",
        "MEDIUMINT",
        "INT",
        "INTEGER",
        "BIGINT",
        "DECIMAL",
        "DEC",
        "NUMERIC",
        "FIXED",
        // 'NUMBER', // ?? In oracle mode only
        "FLOAT",
        "DOUBLE",
        "DOUBLE PRECISION",
        "REAL",
        "BIT",
        "BINARY",
        "BLOB",
        "CHAR",
        "NATIONAL CHAR",
        "CHAR BYTE",
        "ENUM",
        "VARBINARY",
        "VARCHAR",
        "NATIONAL VARCHAR",
        // 'SET' // handled as special-case in postProcess
        "TIME",
        "DATETIME",
        "TIMESTAMP",
        "YEAR"
    ]
}), b9 = Q([
    "SELECT [ALL | DISTINCT | DISTINCTROW]"
]), P9 = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    "FETCH {FIRST | NEXT}",
    // Data manipulation
    // - insert:
    "INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]",
    "REPLACE [LOW_PRIORITY | DELAYED] [INTO]",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    "CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]",
    "CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]",
    // other
    "RETURNING"
]), d1 = Q([
    // - update:
    "UPDATE [LOW_PRIORITY] [IGNORE]",
    // - delete:
    "DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM",
    // - drop table:
    "DROP [TEMPORARY] TABLE [IF EXISTS]",
    // - alter table:
    "ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]",
    "ADD [COLUMN] [IF NOT EXISTS]",
    "{CHANGE | MODIFY} [COLUMN] [IF EXISTS]",
    "DROP [COLUMN] [IF EXISTS]",
    "RENAME [TO]",
    "RENAME COLUMN",
    "ALTER [COLUMN]",
    "{SET | DROP} DEFAULT",
    // for alter column
    "SET {VISIBLE | INVISIBLE}",
    // for alter column
    // - truncate:
    "TRUNCATE [TABLE]",
    // https://mariadb.com/docs/reference/mdb/sql-statements/
    "ALTER DATABASE",
    "ALTER DATABASE COMMENT",
    "ALTER EVENT",
    "ALTER FUNCTION",
    "ALTER PROCEDURE",
    "ALTER SCHEMA",
    "ALTER SCHEMA COMMENT",
    "ALTER SEQUENCE",
    "ALTER SERVER",
    "ALTER USER",
    "ALTER VIEW",
    "ANALYZE",
    "ANALYZE TABLE",
    "BACKUP LOCK",
    "BACKUP STAGE",
    "BACKUP UNLOCK",
    "BEGIN",
    "BINLOG",
    "CACHE INDEX",
    "CALL",
    "CHANGE MASTER TO",
    "CHECK TABLE",
    "CHECK VIEW",
    "CHECKSUM TABLE",
    "COMMIT",
    "CREATE AGGREGATE FUNCTION",
    "CREATE DATABASE",
    "CREATE EVENT",
    "CREATE FUNCTION",
    "CREATE INDEX",
    "CREATE PROCEDURE",
    "CREATE ROLE",
    "CREATE SEQUENCE",
    "CREATE SERVER",
    "CREATE SPATIAL INDEX",
    "CREATE TRIGGER",
    "CREATE UNIQUE INDEX",
    "CREATE USER",
    "DEALLOCATE PREPARE",
    "DESCRIBE",
    "DROP DATABASE",
    "DROP EVENT",
    "DROP FUNCTION",
    "DROP INDEX",
    "DROP PREPARE",
    "DROP PROCEDURE",
    "DROP ROLE",
    "DROP SEQUENCE",
    "DROP SERVER",
    "DROP TRIGGER",
    "DROP USER",
    "DROP VIEW",
    "EXECUTE",
    "EXPLAIN",
    "FLUSH",
    "GET DIAGNOSTICS",
    "GET DIAGNOSTICS CONDITION",
    "GRANT",
    "HANDLER",
    "HELP",
    "INSTALL PLUGIN",
    "INSTALL SONAME",
    "KILL",
    "LOAD DATA INFILE",
    "LOAD INDEX INTO CACHE",
    "LOAD XML INFILE",
    "LOCK TABLE",
    "OPTIMIZE TABLE",
    "PREPARE",
    "PURGE BINARY LOGS",
    "PURGE MASTER LOGS",
    "RELEASE SAVEPOINT",
    "RENAME TABLE",
    "RENAME USER",
    "REPAIR TABLE",
    "REPAIR VIEW",
    "RESET MASTER",
    "RESET QUERY CACHE",
    "RESET REPLICA",
    "RESET SLAVE",
    "RESIGNAL",
    "REVOKE",
    "ROLLBACK",
    "SAVEPOINT",
    "SET CHARACTER SET",
    "SET DEFAULT ROLE",
    "SET GLOBAL TRANSACTION",
    "SET NAMES",
    "SET PASSWORD",
    "SET ROLE",
    "SET STATEMENT",
    "SET TRANSACTION",
    "SHOW",
    "SHOW ALL REPLICAS STATUS",
    "SHOW ALL SLAVES STATUS",
    "SHOW AUTHORS",
    "SHOW BINARY LOGS",
    "SHOW BINLOG EVENTS",
    "SHOW BINLOG STATUS",
    "SHOW CHARACTER SET",
    "SHOW CLIENT_STATISTICS",
    "SHOW COLLATION",
    "SHOW COLUMNS",
    "SHOW CONTRIBUTORS",
    "SHOW CREATE DATABASE",
    "SHOW CREATE EVENT",
    "SHOW CREATE FUNCTION",
    "SHOW CREATE PACKAGE",
    "SHOW CREATE PACKAGE BODY",
    "SHOW CREATE PROCEDURE",
    "SHOW CREATE SEQUENCE",
    "SHOW CREATE TABLE",
    "SHOW CREATE TRIGGER",
    "SHOW CREATE USER",
    "SHOW CREATE VIEW",
    "SHOW DATABASES",
    "SHOW ENGINE",
    "SHOW ENGINE INNODB STATUS",
    "SHOW ENGINES",
    "SHOW ERRORS",
    "SHOW EVENTS",
    "SHOW EXPLAIN",
    "SHOW FUNCTION CODE",
    "SHOW FUNCTION STATUS",
    "SHOW GRANTS",
    "SHOW INDEX",
    "SHOW INDEXES",
    "SHOW INDEX_STATISTICS",
    "SHOW KEYS",
    "SHOW LOCALES",
    "SHOW MASTER LOGS",
    "SHOW MASTER STATUS",
    "SHOW OPEN TABLES",
    "SHOW PACKAGE BODY CODE",
    "SHOW PACKAGE BODY STATUS",
    "SHOW PACKAGE STATUS",
    "SHOW PLUGINS",
    "SHOW PLUGINS SONAME",
    "SHOW PRIVILEGES",
    "SHOW PROCEDURE CODE",
    "SHOW PROCEDURE STATUS",
    "SHOW PROCESSLIST",
    "SHOW PROFILE",
    "SHOW PROFILES",
    "SHOW QUERY_RESPONSE_TIME",
    "SHOW RELAYLOG EVENTS",
    "SHOW REPLICA",
    "SHOW REPLICA HOSTS",
    "SHOW REPLICA STATUS",
    "SHOW SCHEMAS",
    "SHOW SLAVE",
    "SHOW SLAVE HOSTS",
    "SHOW SLAVE STATUS",
    "SHOW STATUS",
    "SHOW STORAGE ENGINES",
    "SHOW TABLE STATUS",
    "SHOW TABLES",
    "SHOW TRIGGERS",
    "SHOW USER_STATISTICS",
    "SHOW VARIABLES",
    "SHOW WARNINGS",
    "SHOW WSREP_MEMBERSHIP",
    "SHOW WSREP_STATUS",
    "SHUTDOWN",
    "SIGNAL",
    "START ALL REPLICAS",
    "START ALL SLAVES",
    "START REPLICA",
    "START SLAVE",
    "START TRANSACTION",
    "STOP ALL REPLICAS",
    "STOP ALL SLAVES",
    "STOP REPLICA",
    "STOP SLAVE",
    "UNINSTALL PLUGIN",
    "UNINSTALL SONAME",
    "UNLOCK TABLE",
    "USE",
    "XA BEGIN",
    "XA COMMIT",
    "XA END",
    "XA PREPARE",
    "XA RECOVER",
    "XA ROLLBACK",
    "XA START"
]), M9 = Q([
    "UNION [ALL | DISTINCT]",
    "EXCEPT [ALL | DISTINCT]",
    "INTERSECT [ALL | DISTINCT]",
    "MINUS [ALL | DISTINCT]"
]), D9 = Q([
    "JOIN",
    "{LEFT | RIGHT} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL JOIN",
    "NATURAL {LEFT | RIGHT} [OUTER] JOIN",
    // non-standard joins
    "STRAIGHT_JOIN"
]), w9 = Q([
    "ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]",
    "CHARACTER SET",
    "{ROWS | RANGE} BETWEEN"
]), x9 = {
    tokenizerOptions: {
        reservedSelect: b9,
        reservedClauses: [
            ...P9,
            ...d1
        ],
        reservedSetOperations: M9,
        reservedJoins: D9,
        reservedPhrases: w9,
        supportsXor: !0,
        reservedKeywords: y9,
        reservedFunctionNames: v9,
        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.
        stringTypes: [
            '""-qq-bs',
            "''-qq-bs",
            {
                quote: "''-raw",
                prefixes: [
                    "B",
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            "``"
        ],
        identChars: {
            first: "$",
            rest: "$",
            allowFirstCharNumber: !0
        },
        variableTypes: [
            {
                regex: "@@?[A-Za-z0-9_.$]+"
            },
            {
                quote: '""-qq-bs',
                prefixes: [
                    "@"
                ],
                requirePrefix: !0
            },
            {
                quote: "''-qq-bs",
                prefixes: [
                    "@"
                ],
                requirePrefix: !0
            },
            {
                quote: "``",
                prefixes: [
                    "@"
                ],
                requirePrefix: !0
            }
        ],
        paramTypes: {
            positional: !0
        },
        lineCommentTypes: [
            "--",
            "#"
        ],
        operators: [
            "%",
            ":=",
            "&",
            "|",
            "^",
            "~",
            "<<",
            ">>",
            "<=>",
            "&&",
            "||",
            "!"
        ],
        postProcess: U9
    },
    formatOptions: {
        onelineClauses: d1
    }
};
function U9(e) {
    return e.map((t, n)=>{
        const r = e[n + 1] || ji;
        return li.SET(t) && r.text === "(" ? {
            ...t,
            type: Z.RESERVED_FUNCTION_NAME
        } : t;
    });
}
const F9 = ke({
    // https://dev.mysql.com/doc/refman/8.0/en/keywords.html
    all: [
        "ACCESSIBLE",
        // (R)
        "ACCOUNT",
        "ACTION",
        "ACTIVE",
        "ADD",
        // (R)
        "ADMIN",
        "AFTER",
        "AGAINST",
        "AGGREGATE",
        "ALGORITHM",
        "ALL",
        // (R)
        "ALTER",
        // (R)
        "ALWAYS",
        "ANALYZE",
        // (R)
        "AND",
        // (R)
        "ANY",
        "ARRAY",
        "AS",
        // (R)
        "ASC",
        // (R)
        "ASCII",
        "ASENSITIVE",
        // (R)
        "AT",
        "ATTRIBUTE",
        "AUTHENTICATION",
        "AUTOEXTEND_SIZE",
        "AUTO_INCREMENT",
        "AVG",
        "AVG_ROW_LENGTH",
        "BACKUP",
        "BEFORE",
        // (R)
        "BEGIN",
        "BETWEEN",
        // (R)
        "BIGINT",
        // (R)
        "BINARY",
        // (R)
        "BINLOG",
        "BIT",
        "BLOB",
        // (R)
        "BLOCK",
        "BOOL",
        "BOOLEAN",
        "BOTH",
        // (R)
        "BTREE",
        "BUCKETS",
        "BY",
        // (R)
        "BYTE",
        "CACHE",
        "CALL",
        // (R)
        "CASCADE",
        // (R)
        "CASCADED",
        "CASE",
        // (R)
        "CATALOG_NAME",
        "CHAIN",
        "CHALLENGE_RESPONSE",
        "CHANGE",
        // (R)
        "CHANGED",
        "CHANNEL",
        "CHAR",
        // (R)
        "CHARACTER",
        // (R)
        "CHARSET",
        "CHECK",
        // (R)
        "CHECKSUM",
        "CIPHER",
        "CLASS_ORIGIN",
        "CLIENT",
        "CLONE",
        "CLOSE",
        "COALESCE",
        "CODE",
        "COLLATE",
        // (R)
        "COLLATION",
        "COLUMN",
        // (R)
        "COLUMNS",
        "COLUMN_FORMAT",
        "COLUMN_NAME",
        "COMMENT",
        "COMMIT",
        "COMMITTED",
        "COMPACT",
        "COMPLETION",
        "COMPONENT",
        "COMPRESSED",
        "COMPRESSION",
        "CONCURRENT",
        "CONDITION",
        // (R)
        "CONNECTION",
        "CONSISTENT",
        "CONSTRAINT",
        // (R)
        "CONSTRAINT_CATALOG",
        "CONSTRAINT_NAME",
        "CONSTRAINT_SCHEMA",
        "CONTAINS",
        "CONTEXT",
        "CONTINUE",
        // (R)
        "CONVERT",
        // (R)
        "CPU",
        "CREATE",
        // (R)
        "CROSS",
        // (R)
        "CUBE",
        // (R)
        "CUME_DIST",
        // (R)
        "CURRENT",
        "CURRENT_DATE",
        // (R)
        "CURRENT_TIME",
        // (R)
        "CURRENT_TIMESTAMP",
        // (R)
        "CURRENT_USER",
        // (R)
        "CURSOR",
        // (R)
        "CURSOR_NAME",
        "DATA",
        "DATABASE",
        // (R)
        "DATABASES",
        // (R)
        "DATAFILE",
        "DATE",
        "DATETIME",
        "DAY",
        "DAY_HOUR",
        // (R)
        "DAY_MICROSECOND",
        // (R)
        "DAY_MINUTE",
        // (R)
        "DAY_SECOND",
        // (R)
        "DEALLOCATE",
        "DEC",
        // (R)
        "DECIMAL",
        // (R)
        "DECLARE",
        // (R)
        "DEFAULT",
        // (R)
        "DEFAULT_AUTH",
        "DEFINER",
        "DEFINITION",
        "DELAYED",
        // (R)
        "DELAY_KEY_WRITE",
        "DELETE",
        // (R)
        "DENSE_RANK",
        // (R)
        "DESC",
        // (R)
        "DESCRIBE",
        // (R)
        "DESCRIPTION",
        "DETERMINISTIC",
        // (R)
        "DIAGNOSTICS",
        "DIRECTORY",
        "DISABLE",
        "DISCARD",
        "DISK",
        "DISTINCT",
        // (R)
        "DISTINCTROW",
        // (R)
        "DIV",
        // (R)
        "DO",
        "DOUBLE",
        // (R)
        "DROP",
        // (R)
        "DUAL",
        // (R)
        "DUMPFILE",
        "DUPLICATE",
        "DYNAMIC",
        "EACH",
        // (R)
        "ELSE",
        // (R)
        "ELSEIF",
        // (R)
        "EMPTY",
        // (R)
        "ENABLE",
        "ENCLOSED",
        // (R)
        "ENCRYPTION",
        "END",
        "ENDS",
        "ENFORCED",
        "ENGINE",
        "ENGINES",
        "ENGINE_ATTRIBUTE",
        "ENUM",
        "ERROR",
        "ERRORS",
        "ESCAPE",
        "ESCAPED",
        // (R)
        "EVENT",
        "EVENTS",
        "EVERY",
        "EXCEPT",
        // (R)
        "EXCHANGE",
        "EXCLUDE",
        "EXECUTE",
        "EXISTS",
        // (R)
        "EXIT",
        // (R)
        "EXPANSION",
        "EXPIRE",
        "EXPLAIN",
        // (R)
        "EXPORT",
        "EXTENDED",
        "EXTENT_SIZE",
        "FACTOR",
        "FAILED_LOGIN_ATTEMPTS",
        "FALSE",
        // (R)
        "FAST",
        "FAULTS",
        "FETCH",
        // (R)
        "FIELDS",
        "FILE",
        "FILE_BLOCK_SIZE",
        "FILTER",
        "FINISH",
        "FIRST",
        "FIRST_VALUE",
        // (R)
        "FIXED",
        "FLOAT",
        // (R)
        "FLOAT4",
        // (R)
        "FLOAT8",
        // (R)
        "FLUSH",
        "FOLLOWING",
        "FOLLOWS",
        "FOR",
        // (R)
        "FORCE",
        // (R)
        "FOREIGN",
        // (R)
        "FORMAT",
        "FOUND",
        "FROM",
        // (R)
        "FULL",
        "FULLTEXT",
        // (R)
        "FUNCTION",
        // (R)
        "GENERAL",
        "GENERATED",
        // (R)
        "GEOMCOLLECTION",
        "GEOMETRY",
        "GEOMETRYCOLLECTION",
        "GET",
        // (R)
        "GET_FORMAT",
        "GET_MASTER_PUBLIC_KEY",
        "GET_SOURCE_PUBLIC_KEY",
        "GLOBAL",
        "GRANT",
        // (R)
        "GRANTS",
        "GROUP",
        // (R)
        "GROUPING",
        // (R)
        "GROUPS",
        // (R)
        "GROUP_REPLICATION",
        "GTID_ONLY",
        "HANDLER",
        "HASH",
        "HAVING",
        // (R)
        "HELP",
        "HIGH_PRIORITY",
        // (R)
        "HISTOGRAM",
        "HISTORY",
        "HOST",
        "HOSTS",
        "HOUR",
        "HOUR_MICROSECOND",
        // (R)
        "HOUR_MINUTE",
        // (R)
        "HOUR_SECOND",
        // (R)
        "IDENTIFIED",
        "IF",
        // (R)
        "IGNORE",
        // (R)
        "IGNORE_SERVER_IDS",
        "IMPORT",
        "IN",
        // (R)
        "INACTIVE",
        "INDEX",
        // (R)
        "INDEXES",
        "INFILE",
        // (R)
        "INITIAL",
        "INITIAL_SIZE",
        "INITIATE",
        "INNER",
        // (R)
        "INOUT",
        // (R)
        "INSENSITIVE",
        // (R)
        "INSERT",
        // (R)
        "INSERT_METHOD",
        "INSTALL",
        "INSTANCE",
        "IN",
        // <-- moved over from functions
        "INT",
        // (R)
        "INT1",
        // (R)
        "INT2",
        // (R)
        "INT3",
        // (R)
        "INT4",
        // (R)
        "INT8",
        // (R)
        "INTEGER",
        // (R)
        "INTERSECT",
        // (R)
        "INTERVAL",
        // (R)
        "INTO",
        // (R)
        "INVISIBLE",
        "INVOKER",
        "IO",
        "IO_AFTER_GTIDS",
        // (R)
        "IO_BEFORE_GTIDS",
        // (R)
        "IO_THREAD",
        "IPC",
        "IS",
        // (R)
        "ISOLATION",
        "ISSUER",
        "ITERATE",
        // (R)
        "JOIN",
        // (R)
        "JSON",
        "JSON_TABLE",
        // (R)
        "JSON_VALUE",
        "KEY",
        // (R)
        "KEYRING",
        "KEYS",
        // (R)
        "KEY_BLOCK_SIZE",
        "KILL",
        // (R)
        "LAG",
        // (R)
        "LANGUAGE",
        "LAST",
        "LAST_VALUE",
        // (R)
        "LATERAL",
        // (R)
        "LEAD",
        // (R)
        "LEADING",
        // (R)
        "LEAVE",
        // (R)
        "LEAVES",
        "LEFT",
        // (R)
        "LESS",
        "LEVEL",
        "LIKE",
        // (R)
        "LIMIT",
        // (R)
        "LINEAR",
        // (R)
        "LINES",
        // (R)
        "LINESTRING",
        "LIST",
        "LOAD",
        // (R)
        "LOCAL",
        "LOCALTIME",
        // (R)
        "LOCALTIMESTAMP",
        // (R)
        "LOCK",
        // (R)
        "LOCKED",
        "LOCKS",
        "LOGFILE",
        "LOGS",
        "LONG",
        // (R)
        "LONGBLOB",
        // (R)
        "LONGTEXT",
        // (R)
        "LOOP",
        // (R)
        "LOW_PRIORITY",
        // (R)
        "MASTER",
        "MASTER_AUTO_POSITION",
        "MASTER_BIND",
        // (R)
        "MASTER_COMPRESSION_ALGORITHMS",
        "MASTER_CONNECT_RETRY",
        "MASTER_DELAY",
        "MASTER_HEARTBEAT_PERIOD",
        "MASTER_HOST",
        "MASTER_LOG_FILE",
        "MASTER_LOG_POS",
        "MASTER_PASSWORD",
        "MASTER_PORT",
        "MASTER_PUBLIC_KEY_PATH",
        "MASTER_RETRY_COUNT",
        "MASTER_SSL",
        "MASTER_SSL_CA",
        "MASTER_SSL_CAPATH",
        "MASTER_SSL_CERT",
        "MASTER_SSL_CIPHER",
        "MASTER_SSL_CRL",
        "MASTER_SSL_CRLPATH",
        "MASTER_SSL_KEY",
        "MASTER_SSL_VERIFY_SERVER_CERT",
        // (R)
        "MASTER_TLS_CIPHERSUITES",
        "MASTER_TLS_VERSION",
        "MASTER_USER",
        "MASTER_ZSTD_COMPRESSION_LEVEL",
        "MATCH",
        // (R)
        "MAXVALUE",
        // (R)
        "MAX_CONNECTIONS_PER_HOUR",
        "MAX_QUERIES_PER_HOUR",
        "MAX_ROWS",
        "MAX_SIZE",
        "MAX_UPDATES_PER_HOUR",
        "MAX_USER_CONNECTIONS",
        "MEDIUM",
        "MEDIUMBLOB",
        // (R)
        "MEDIUMINT",
        // (R)
        "MEDIUMTEXT",
        // (R)
        "MEMBER",
        "MEMORY",
        "MERGE",
        "MESSAGE_TEXT",
        "MICROSECOND",
        "MIDDLEINT",
        // (R)
        "MIGRATE",
        "MINUTE",
        "MINUTE_MICROSECOND",
        // (R)
        "MINUTE_SECOND",
        // (R)
        "MIN_ROWS",
        "MOD",
        // (R)
        "MODE",
        "MODIFIES",
        // (R)
        "MODIFY",
        "MONTH",
        "MULTILINESTRING",
        "MULTIPOINT",
        "MULTIPOLYGON",
        "MUTEX",
        "MYSQL_ERRNO",
        "NAME",
        "NAMES",
        "NATIONAL",
        "NATURAL",
        // (R)
        "NCHAR",
        "NDB",
        "NDBCLUSTER",
        "NESTED",
        "NETWORK_NAMESPACE",
        "NEVER",
        "NEW",
        "NEXT",
        "NO",
        "NODEGROUP",
        "NONE",
        "NOT",
        // (R)
        "NOWAIT",
        "NO_WAIT",
        "NO_WRITE_TO_BINLOG",
        // (R)
        "NTH_VALUE",
        // (R)
        "NTILE",
        // (R)
        "NULL",
        // (R)
        "NULLS",
        "NUMBER",
        "NUMERIC",
        // (R)
        "NVARCHAR",
        "OF",
        // (R)
        "OFF",
        "OFFSET",
        "OJ",
        "OLD",
        "ON",
        // (R)
        "ONE",
        "ONLY",
        "OPEN",
        "OPTIMIZE",
        // (R)
        "OPTIMIZER_COSTS",
        // (R)
        "OPTION",
        // (R)
        "OPTIONAL",
        "OPTIONALLY",
        // (R)
        "OPTIONS",
        "OR",
        // (R)
        "ORDER",
        // (R)
        "ORDINALITY",
        "ORGANIZATION",
        "OTHERS",
        "OUT",
        // (R)
        "OUTER",
        // (R)
        "OUTFILE",
        // (R)
        "OVER",
        // (R)
        "OWNER",
        "PACK_KEYS",
        "PAGE",
        "PARSER",
        "PARTIAL",
        "PARTITION",
        // (R)
        "PARTITIONING",
        "PARTITIONS",
        "PASSWORD",
        "PASSWORD_LOCK_TIME",
        "PATH",
        "PERCENT_RANK",
        // (R)
        "PERSIST",
        "PERSIST_ONLY",
        "PHASE",
        "PLUGIN",
        "PLUGINS",
        "PLUGIN_DIR",
        "POINT",
        "POLYGON",
        "PORT",
        "PRECEDES",
        "PRECEDING",
        "PRECISION",
        // (R)
        "PREPARE",
        "PRESERVE",
        "PREV",
        "PRIMARY",
        // (R)
        "PRIVILEGES",
        "PRIVILEGE_CHECKS_USER",
        "PROCEDURE",
        // (R)
        "PROCESS",
        "PROCESSLIST",
        "PROFILE",
        "PROFILES",
        "PROXY",
        "PURGE",
        // (R)
        "QUARTER",
        "QUERY",
        "QUICK",
        "RANDOM",
        "RANGE",
        // (R)
        "RANK",
        // (R)
        "READ",
        // (R)
        "READS",
        // (R)
        "READ_ONLY",
        "READ_WRITE",
        // (R)
        "REAL",
        // (R)
        "REBUILD",
        "RECOVER",
        "RECURSIVE",
        // (R)
        "REDO_BUFFER_SIZE",
        "REDUNDANT",
        "REFERENCE",
        "REFERENCES",
        // (R)
        "REGEXP",
        // (R)
        "REGISTRATION",
        "RELAY",
        "RELAYLOG",
        "RELAY_LOG_FILE",
        "RELAY_LOG_POS",
        "RELAY_THREAD",
        "RELEASE",
        // (R)
        "RELOAD",
        "REMOVE",
        "RENAME",
        // (R)
        "REORGANIZE",
        "REPAIR",
        "REPEAT",
        // (R)
        "REPEATABLE",
        "REPLACE",
        // (R)
        "REPLICA",
        "REPLICAS",
        "REPLICATE_DO_DB",
        "REPLICATE_DO_TABLE",
        "REPLICATE_IGNORE_DB",
        "REPLICATE_IGNORE_TABLE",
        "REPLICATE_REWRITE_DB",
        "REPLICATE_WILD_DO_TABLE",
        "REPLICATE_WILD_IGNORE_TABLE",
        "REPLICATION",
        "REQUIRE",
        // (R)
        "REQUIRE_ROW_FORMAT",
        "RESET",
        "RESIGNAL",
        // (R)
        "RESOURCE",
        "RESPECT",
        "RESTART",
        "RESTORE",
        "RESTRICT",
        // (R)
        "RESUME",
        "RETAIN",
        "RETURN",
        // (R)
        "RETURNED_SQLSTATE",
        "RETURNING",
        "RETURNS",
        "REUSE",
        "REVERSE",
        "REVOKE",
        // (R)
        "RIGHT",
        // (R)
        "RLIKE",
        // (R)
        "ROLE",
        "ROLLBACK",
        "ROLLUP",
        "ROTATE",
        "ROUTINE",
        "ROW",
        // (R)
        "ROWS",
        // (R)
        "ROW_COUNT",
        "ROW_FORMAT",
        "ROW_NUMBER",
        // (R)
        "RTREE",
        "SAVEPOINT",
        "SCHEDULE",
        "SCHEMA",
        // (R)
        "SCHEMAS",
        // (R)
        "SCHEMA_NAME",
        "SECOND",
        "SECONDARY",
        "SECONDARY_ENGINE",
        "SECONDARY_ENGINE_ATTRIBUTE",
        "SECONDARY_LOAD",
        "SECONDARY_UNLOAD",
        "SECOND_MICROSECOND",
        // (R)
        "SECURITY",
        "SELECT",
        // (R)
        "SENSITIVE",
        // (R)
        "SEPARATOR",
        // (R)
        "SERIAL",
        "SERIALIZABLE",
        "SERVER",
        "SESSION",
        "SET",
        // (R)
        "SHARE",
        "SHOW",
        // (R)
        "SHUTDOWN",
        "SIGNAL",
        // (R)
        "SIGNED",
        "SIMPLE",
        "SKIP",
        "SLAVE",
        "SLOW",
        "SMALLINT",
        // (R)
        "SNAPSHOT",
        "SOCKET",
        "SOME",
        "SONAME",
        "SOUNDS",
        "SOURCE",
        "SOURCE_AUTO_POSITION",
        "SOURCE_BIND",
        "SOURCE_COMPRESSION_ALGORITHMS",
        "SOURCE_CONNECT_RETRY",
        "SOURCE_DELAY",
        "SOURCE_HEARTBEAT_PERIOD",
        "SOURCE_HOST",
        "SOURCE_LOG_FILE",
        "SOURCE_LOG_POS",
        "SOURCE_PASSWORD",
        "SOURCE_PORT",
        "SOURCE_PUBLIC_KEY_PATH",
        "SOURCE_RETRY_COUNT",
        "SOURCE_SSL",
        "SOURCE_SSL_CA",
        "SOURCE_SSL_CAPATH",
        "SOURCE_SSL_CERT",
        "SOURCE_SSL_CIPHER",
        "SOURCE_SSL_CRL",
        "SOURCE_SSL_CRLPATH",
        "SOURCE_SSL_KEY",
        "SOURCE_SSL_VERIFY_SERVER_CERT",
        "SOURCE_TLS_CIPHERSUITES",
        "SOURCE_TLS_VERSION",
        "SOURCE_USER",
        "SOURCE_ZSTD_COMPRESSION_LEVEL",
        "SPATIAL",
        // (R)
        "SPECIFIC",
        // (R)
        "SQL",
        // (R)
        "SQLEXCEPTION",
        // (R)
        "SQLSTATE",
        // (R)
        "SQLWARNING",
        // (R)
        "SQL_AFTER_GTIDS",
        "SQL_AFTER_MTS_GAPS",
        "SQL_BEFORE_GTIDS",
        "SQL_BIG_RESULT",
        // (R)
        "SQL_BUFFER_RESULT",
        "SQL_CALC_FOUND_ROWS",
        // (R)
        "SQL_NO_CACHE",
        "SQL_SMALL_RESULT",
        // (R)
        "SQL_THREAD",
        "SQL_TSI_DAY",
        "SQL_TSI_HOUR",
        "SQL_TSI_MINUTE",
        "SQL_TSI_MONTH",
        "SQL_TSI_QUARTER",
        "SQL_TSI_SECOND",
        "SQL_TSI_WEEK",
        "SQL_TSI_YEAR",
        "SRID",
        "SSL",
        // (R)
        "STACKED",
        "START",
        "STARTING",
        // (R)
        "STARTS",
        "STATS_AUTO_RECALC",
        "STATS_PERSISTENT",
        "STATS_SAMPLE_PAGES",
        "STATUS",
        "STOP",
        "STORAGE",
        "STORED",
        // (R)
        "STRAIGHT_JOIN",
        // (R)
        "STREAM",
        "STRING",
        "SUBCLASS_ORIGIN",
        "SUBJECT",
        "SUBPARTITION",
        "SUBPARTITIONS",
        "SUPER",
        "SUSPEND",
        "SWAPS",
        "SWITCHES",
        "SYSTEM",
        // (R)
        "TABLE",
        // (R)
        "TABLES",
        "TABLESPACE",
        "TABLE_CHECKSUM",
        "TABLE_NAME",
        "TEMPORARY",
        "TEMPTABLE",
        "TERMINATED",
        // (R)
        "TEXT",
        "THAN",
        "THEN",
        // (R)
        "THREAD_PRIORITY",
        "TIES",
        "TIME",
        "TIMESTAMP",
        "TIMESTAMPADD",
        "TIMESTAMPDIFF",
        "TINYBLOB",
        // (R)
        "TINYINT",
        // (R)
        "TINYTEXT",
        // (R)
        "TLS",
        "TO",
        // (R)
        "TRAILING",
        // (R)
        "TRANSACTION",
        "TRIGGER",
        // (R)
        "TRIGGERS",
        "TRUE",
        // (R)
        "TRUNCATE",
        "TYPE",
        "TYPES",
        "UNBOUNDED",
        "UNCOMMITTED",
        "UNDEFINED",
        "UNDO",
        // (R)
        "UNDOFILE",
        "UNDO_BUFFER_SIZE",
        "UNICODE",
        "UNINSTALL",
        "UNION",
        // (R)
        "UNIQUE",
        // (R)
        "UNKNOWN",
        "UNLOCK",
        // (R)
        "UNREGISTER",
        "UNSIGNED",
        // (R)
        "UNTIL",
        "UPDATE",
        // (R)
        "UPGRADE",
        "USAGE",
        // (R)
        "USE",
        // (R)
        "USER",
        "USER_RESOURCES",
        "USE_FRM",
        "USING",
        // (R)
        "UTC_DATE",
        // (R)
        "UTC_TIME",
        // (R)
        "UTC_TIMESTAMP",
        // (R)
        "VALIDATION",
        "VALUE",
        "VALUES",
        // (R)
        "VARBINARY",
        // (R)
        "VARCHAR",
        // (R)
        "VARCHARACTER",
        // (R)
        "VARIABLES",
        "VARYING",
        // (R)
        "VCPU",
        "VIEW",
        "VIRTUAL",
        // (R)
        "VISIBLE",
        "WAIT",
        "WARNINGS",
        "WEEK",
        "WEIGHT_STRING",
        "WHEN",
        // (R)
        "WHERE",
        // (R)
        "WHILE",
        // (R)
        "WINDOW",
        // (R)
        "WITH",
        // (R)
        "WITHOUT",
        "WORK",
        "WRAPPER",
        "WRITE",
        // (R)
        "X509",
        "XA",
        "XID",
        "XML",
        "XOR",
        // (R)
        "YEAR",
        "YEAR_MONTH",
        // (R)
        "ZEROFILL",
        // (R)
        "ZONE"
    ]
}), B9 = ke({
    // https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html
    all: [
        "ABS",
        "ACOS",
        "ADDDATE",
        "ADDTIME",
        "AES_DECRYPT",
        "AES_ENCRYPT",
        // 'AND',
        "ANY_VALUE",
        "ASCII",
        "ASIN",
        "ATAN",
        "ATAN2",
        "AVG",
        "BENCHMARK",
        "BIN",
        "BIN_TO_UUID",
        "BINARY",
        "BIT_AND",
        "BIT_COUNT",
        "BIT_LENGTH",
        "BIT_OR",
        "BIT_XOR",
        "CAN_ACCESS_COLUMN",
        "CAN_ACCESS_DATABASE",
        "CAN_ACCESS_TABLE",
        "CAN_ACCESS_USER",
        "CAN_ACCESS_VIEW",
        "CAST",
        "CEIL",
        "CEILING",
        "CHAR",
        "CHAR_LENGTH",
        "CHARACTER_LENGTH",
        "CHARSET",
        "COALESCE",
        "COERCIBILITY",
        "COLLATION",
        "COMPRESS",
        "CONCAT",
        "CONCAT_WS",
        "CONNECTION_ID",
        "CONV",
        "CONVERT",
        "CONVERT_TZ",
        "COS",
        "COT",
        "COUNT",
        "CRC32",
        "CUME_DIST",
        "CURDATE",
        "CURRENT_DATE",
        "CURRENT_ROLE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "CURTIME",
        "DATABASE",
        "DATE",
        "DATE_ADD",
        "DATE_FORMAT",
        "DATE_SUB",
        "DATEDIFF",
        "DAY",
        "DAYNAME",
        "DAYOFMONTH",
        "DAYOFWEEK",
        "DAYOFYEAR",
        "DEFAULT",
        "DEGREES",
        "DENSE_RANK",
        "DIV",
        "ELT",
        "EXP",
        "EXPORT_SET",
        "EXTRACT",
        "EXTRACTVALUE",
        "FIELD",
        "FIND_IN_SET",
        "FIRST_VALUE",
        "FLOOR",
        "FORMAT",
        "FORMAT_BYTES",
        "FORMAT_PICO_TIME",
        "FOUND_ROWS",
        "FROM_BASE64",
        "FROM_DAYS",
        "FROM_UNIXTIME",
        "GEOMCOLLECTION",
        "GEOMETRYCOLLECTION",
        "GET_DD_COLUMN_PRIVILEGES",
        "GET_DD_CREATE_OPTIONS",
        "GET_DD_INDEX_SUB_PART_LENGTH",
        "GET_FORMAT",
        "GET_LOCK",
        "GREATEST",
        "GROUP_CONCAT",
        "GROUPING",
        "GTID_SUBSET",
        "GTID_SUBTRACT",
        "HEX",
        "HOUR",
        "ICU_VERSION",
        "IF",
        "IFNULL",
        // 'IN',
        "INET_ATON",
        "INET_NTOA",
        "INET6_ATON",
        "INET6_NTOA",
        "INSERT",
        "INSTR",
        "INTERNAL_AUTO_INCREMENT",
        "INTERNAL_AVG_ROW_LENGTH",
        "INTERNAL_CHECK_TIME",
        "INTERNAL_CHECKSUM",
        "INTERNAL_DATA_FREE",
        "INTERNAL_DATA_LENGTH",
        "INTERNAL_DD_CHAR_LENGTH",
        "INTERNAL_GET_COMMENT_OR_ERROR",
        "INTERNAL_GET_ENABLED_ROLE_JSON",
        "INTERNAL_GET_HOSTNAME",
        "INTERNAL_GET_USERNAME",
        "INTERNAL_GET_VIEW_WARNING_OR_ERROR",
        "INTERNAL_INDEX_COLUMN_CARDINALITY",
        "INTERNAL_INDEX_LENGTH",
        "INTERNAL_IS_ENABLED_ROLE",
        "INTERNAL_IS_MANDATORY_ROLE",
        "INTERNAL_KEYS_DISABLED",
        "INTERNAL_MAX_DATA_LENGTH",
        "INTERNAL_TABLE_ROWS",
        "INTERNAL_UPDATE_TIME",
        "INTERVAL",
        "IS",
        "IS_FREE_LOCK",
        "IS_IPV4",
        "IS_IPV4_COMPAT",
        "IS_IPV4_MAPPED",
        "IS_IPV6",
        "IS NOT",
        "IS NOT NULL",
        "IS NULL",
        "IS_USED_LOCK",
        "IS_UUID",
        "ISNULL",
        "JSON_ARRAY",
        "JSON_ARRAY_APPEND",
        "JSON_ARRAY_INSERT",
        "JSON_ARRAYAGG",
        "JSON_CONTAINS",
        "JSON_CONTAINS_PATH",
        "JSON_DEPTH",
        "JSON_EXTRACT",
        "JSON_INSERT",
        "JSON_KEYS",
        "JSON_LENGTH",
        "JSON_MERGE",
        "JSON_MERGE_PATCH",
        "JSON_MERGE_PRESERVE",
        "JSON_OBJECT",
        "JSON_OBJECTAGG",
        "JSON_OVERLAPS",
        "JSON_PRETTY",
        "JSON_QUOTE",
        "JSON_REMOVE",
        "JSON_REPLACE",
        "JSON_SCHEMA_VALID",
        "JSON_SCHEMA_VALIDATION_REPORT",
        "JSON_SEARCH",
        "JSON_SET",
        "JSON_STORAGE_FREE",
        "JSON_STORAGE_SIZE",
        "JSON_TABLE",
        "JSON_TYPE",
        "JSON_UNQUOTE",
        "JSON_VALID",
        "JSON_VALUE",
        "LAG",
        "LAST_DAY",
        "LAST_INSERT_ID",
        "LAST_VALUE",
        "LCASE",
        "LEAD",
        "LEAST",
        "LEFT",
        "LENGTH",
        "LIKE",
        "LINESTRING",
        "LN",
        "LOAD_FILE",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "LOCATE",
        "LOG",
        "LOG10",
        "LOG2",
        "LOWER",
        "LPAD",
        "LTRIM",
        "MAKE_SET",
        "MAKEDATE",
        "MAKETIME",
        "MASTER_POS_WAIT",
        "MATCH",
        "MAX",
        "MBRCONTAINS",
        "MBRCOVEREDBY",
        "MBRCOVERS",
        "MBRDISJOINT",
        "MBREQUALS",
        "MBRINTERSECTS",
        "MBROVERLAPS",
        "MBRTOUCHES",
        "MBRWITHIN",
        "MD5",
        "MEMBER OF",
        "MICROSECOND",
        "MID",
        "MIN",
        "MINUTE",
        "MOD",
        "MONTH",
        "MONTHNAME",
        "MULTILINESTRING",
        "MULTIPOINT",
        "MULTIPOLYGON",
        "NAME_CONST",
        "NOT",
        "NOT IN",
        "NOT LIKE",
        "NOT REGEXP",
        "NOW",
        "NTH_VALUE",
        "NTILE",
        "NULLIF",
        "OCT",
        "OCTET_LENGTH",
        // 'OR',
        "ORD",
        "PERCENT_RANK",
        "PERIOD_ADD",
        "PERIOD_DIFF",
        "PI",
        "POINT",
        "POLYGON",
        "POSITION",
        "POW",
        "POWER",
        "PS_CURRENT_THREAD_ID",
        "PS_THREAD_ID",
        "QUARTER",
        "QUOTE",
        "RADIANS",
        "RAND",
        "RANDOM_BYTES",
        "RANK",
        "REGEXP",
        "REGEXP_INSTR",
        "REGEXP_LIKE",
        "REGEXP_REPLACE",
        "REGEXP_SUBSTR",
        "RELEASE_ALL_LOCKS",
        "RELEASE_LOCK",
        "REPEAT",
        "REPLACE",
        "REVERSE",
        "RIGHT",
        "RLIKE",
        "ROLES_GRAPHML",
        "ROUND",
        "ROW_COUNT",
        "ROW_NUMBER",
        "RPAD",
        "RTRIM",
        "SCHEMA",
        "SEC_TO_TIME",
        "SECOND",
        "SESSION_USER",
        "SHA1",
        "SHA2",
        "SIGN",
        "SIN",
        "SLEEP",
        "SOUNDEX",
        "SOUNDS LIKE",
        "SOURCE_POS_WAIT",
        "SPACE",
        "SQRT",
        "ST_AREA",
        "ST_ASBINARY",
        "ST_ASGEOJSON",
        "ST_ASTEXT",
        "ST_BUFFER",
        "ST_BUFFER_STRATEGY",
        "ST_CENTROID",
        "ST_COLLECT",
        "ST_CONTAINS",
        "ST_CONVEXHULL",
        "ST_CROSSES",
        "ST_DIFFERENCE",
        "ST_DIMENSION",
        "ST_DISJOINT",
        "ST_DISTANCE",
        "ST_DISTANCE_SPHERE",
        "ST_ENDPOINT",
        "ST_ENVELOPE",
        "ST_EQUALS",
        "ST_EXTERIORRING",
        "ST_FRECHETDISTANCE",
        "ST_GEOHASH",
        "ST_GEOMCOLLFROMTEXT",
        "ST_GEOMCOLLFROMWKB",
        "ST_GEOMETRYN",
        "ST_GEOMETRYTYPE",
        "ST_GEOMFROMGEOJSON",
        "ST_GEOMFROMTEXT",
        "ST_GEOMFROMWKB",
        "ST_HAUSDORFFDISTANCE",
        "ST_INTERIORRINGN",
        "ST_INTERSECTION",
        "ST_INTERSECTS",
        "ST_ISCLOSED",
        "ST_ISEMPTY",
        "ST_ISSIMPLE",
        "ST_ISVALID",
        "ST_LATFROMGEOHASH",
        "ST_LATITUDE",
        "ST_LENGTH",
        "ST_LINEFROMTEXT",
        "ST_LINEFROMWKB",
        "ST_LINEINTERPOLATEPOINT",
        "ST_LINEINTERPOLATEPOINTS",
        "ST_LONGFROMGEOHASH",
        "ST_LONGITUDE",
        "ST_MAKEENVELOPE",
        "ST_MLINEFROMTEXT",
        "ST_MLINEFROMWKB",
        "ST_MPOINTFROMTEXT",
        "ST_MPOINTFROMWKB",
        "ST_MPOLYFROMTEXT",
        "ST_MPOLYFROMWKB",
        "ST_NUMGEOMETRIES",
        "ST_NUMINTERIORRING",
        "ST_NUMPOINTS",
        "ST_OVERLAPS",
        "ST_POINTATDISTANCE",
        "ST_POINTFROMGEOHASH",
        "ST_POINTFROMTEXT",
        "ST_POINTFROMWKB",
        "ST_POINTN",
        "ST_POLYFROMTEXT",
        "ST_POLYFROMWKB",
        "ST_SIMPLIFY",
        "ST_SRID",
        "ST_STARTPOINT",
        "ST_SWAPXY",
        "ST_SYMDIFFERENCE",
        "ST_TOUCHES",
        "ST_TRANSFORM",
        "ST_UNION",
        "ST_VALIDATE",
        "ST_WITHIN",
        "ST_X",
        "ST_Y",
        "STATEMENT_DIGEST",
        "STATEMENT_DIGEST_TEXT",
        "STD",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STR_TO_DATE",
        "STRCMP",
        "SUBDATE",
        "SUBSTR",
        "SUBSTRING",
        "SUBSTRING_INDEX",
        "SUBTIME",
        "SUM",
        "SYSDATE",
        "SYSTEM_USER",
        "TAN",
        "TIME",
        "TIME_FORMAT",
        "TIME_TO_SEC",
        "TIMEDIFF",
        "TIMESTAMP",
        "TIMESTAMPADD",
        "TIMESTAMPDIFF",
        "TO_BASE64",
        "TO_DAYS",
        "TO_SECONDS",
        "TRIM",
        "TRUNCATE",
        "UCASE",
        "UNCOMPRESS",
        "UNCOMPRESSED_LENGTH",
        "UNHEX",
        "UNIX_TIMESTAMP",
        "UPDATEXML",
        "UPPER",
        "USER",
        "UTC_DATE",
        "UTC_TIME",
        "UTC_TIMESTAMP",
        "UUID",
        "UUID_SHORT",
        "UUID_TO_BIN",
        "VALIDATE_PASSWORD_STRENGTH",
        "VALUES",
        "VAR_POP",
        "VAR_SAMP",
        "VARIANCE",
        "VERSION",
        "WAIT_FOR_EXECUTED_GTID_SET",
        "WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
        "WEEK",
        "WEEKDAY",
        "WEEKOFYEAR",
        "WEIGHT_STRING",
        // 'XOR',
        "YEAR",
        "YEARWEEK",
        // Data types with parameters
        // https://dev.mysql.com/doc/refman/8.0/en/data-types.html
        "BIT",
        "TINYINT",
        "SMALLINT",
        "MEDIUMINT",
        "INT",
        "INTEGER",
        "BIGINT",
        "DECIMAL",
        "DEC",
        "NUMERIC",
        "FIXED",
        "FLOAT",
        "DOUBLE",
        "DOUBLE PRECISION",
        "REAL",
        "DATETIME",
        "TIMESTAMP",
        "TIME",
        "YEAR",
        "CHAR",
        "NATIONAL CHAR",
        "VARCHAR",
        "NATIONAL VARCHAR",
        "BINARY",
        "VARBINARY",
        "BLOB",
        "TEXT",
        "ENUM"
    ]
}), G9 = Q([
    "SELECT [ALL | DISTINCT | DISTINCTROW]"
]), k9 = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    // Data manipulation
    // - insert:
    "INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]",
    "REPLACE [LOW_PRIORITY | DELAYED] [INTO]",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    "CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]",
    "CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"
]), f1 = Q([
    // - update:
    "UPDATE [LOW_PRIORITY] [IGNORE]",
    // - delete:
    "DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM",
    // - drop table:
    "DROP [TEMPORARY] TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE",
    "ADD [COLUMN]",
    "{CHANGE | MODIFY} [COLUMN]",
    "DROP [COLUMN]",
    "RENAME [TO | AS]",
    "RENAME COLUMN",
    "ALTER [COLUMN]",
    "{SET | DROP} DEFAULT",
    // for alter column
    // - truncate:
    "TRUNCATE [TABLE]",
    // https://dev.mysql.com/doc/refman/8.0/en/sql-statements.html
    "ALTER DATABASE",
    "ALTER EVENT",
    "ALTER FUNCTION",
    "ALTER INSTANCE",
    "ALTER LOGFILE GROUP",
    "ALTER PROCEDURE",
    "ALTER RESOURCE GROUP",
    "ALTER SERVER",
    "ALTER TABLESPACE",
    "ALTER USER",
    "ALTER VIEW",
    "ANALYZE TABLE",
    "BINLOG",
    "CACHE INDEX",
    "CALL",
    "CHANGE MASTER TO",
    "CHANGE REPLICATION FILTER",
    "CHANGE REPLICATION SOURCE TO",
    "CHECK TABLE",
    "CHECKSUM TABLE",
    "CLONE",
    "COMMIT",
    "CREATE DATABASE",
    "CREATE EVENT",
    "CREATE FUNCTION",
    "CREATE FUNCTION",
    "CREATE INDEX",
    "CREATE LOGFILE GROUP",
    "CREATE PROCEDURE",
    "CREATE RESOURCE GROUP",
    "CREATE ROLE",
    "CREATE SERVER",
    "CREATE SPATIAL REFERENCE SYSTEM",
    "CREATE TABLESPACE",
    "CREATE TRIGGER",
    "CREATE USER",
    "DEALLOCATE PREPARE",
    "DESCRIBE",
    "DROP DATABASE",
    "DROP EVENT",
    "DROP FUNCTION",
    "DROP FUNCTION",
    "DROP INDEX",
    "DROP LOGFILE GROUP",
    "DROP PROCEDURE",
    "DROP RESOURCE GROUP",
    "DROP ROLE",
    "DROP SERVER",
    "DROP SPATIAL REFERENCE SYSTEM",
    "DROP TABLESPACE",
    "DROP TRIGGER",
    "DROP USER",
    "DROP VIEW",
    "EXECUTE",
    "EXPLAIN",
    "FLUSH",
    "GRANT",
    "HANDLER",
    "HELP",
    "IMPORT TABLE",
    "INSTALL COMPONENT",
    "INSTALL PLUGIN",
    "KILL",
    "LOAD DATA",
    "LOAD INDEX INTO CACHE",
    "LOAD XML",
    "LOCK INSTANCE FOR BACKUP",
    "LOCK TABLES",
    "MASTER_POS_WAIT",
    "OPTIMIZE TABLE",
    "PREPARE",
    "PURGE BINARY LOGS",
    "RELEASE SAVEPOINT",
    "RENAME TABLE",
    "RENAME USER",
    "REPAIR TABLE",
    "RESET",
    "RESET MASTER",
    "RESET PERSIST",
    "RESET REPLICA",
    "RESET SLAVE",
    "RESTART",
    "REVOKE",
    "ROLLBACK",
    "ROLLBACK TO SAVEPOINT",
    "SAVEPOINT",
    "SET CHARACTER SET",
    "SET DEFAULT ROLE",
    "SET NAMES",
    "SET PASSWORD",
    "SET RESOURCE GROUP",
    "SET ROLE",
    "SET TRANSACTION",
    "SHOW",
    "SHOW BINARY LOGS",
    "SHOW BINLOG EVENTS",
    "SHOW CHARACTER SET",
    "SHOW COLLATION",
    "SHOW COLUMNS",
    "SHOW CREATE DATABASE",
    "SHOW CREATE EVENT",
    "SHOW CREATE FUNCTION",
    "SHOW CREATE PROCEDURE",
    "SHOW CREATE TABLE",
    "SHOW CREATE TRIGGER",
    "SHOW CREATE USER",
    "SHOW CREATE VIEW",
    "SHOW DATABASES",
    "SHOW ENGINE",
    "SHOW ENGINES",
    "SHOW ERRORS",
    "SHOW EVENTS",
    "SHOW FUNCTION CODE",
    "SHOW FUNCTION STATUS",
    "SHOW GRANTS",
    "SHOW INDEX",
    "SHOW MASTER STATUS",
    "SHOW OPEN TABLES",
    "SHOW PLUGINS",
    "SHOW PRIVILEGES",
    "SHOW PROCEDURE CODE",
    "SHOW PROCEDURE STATUS",
    "SHOW PROCESSLIST",
    "SHOW PROFILE",
    "SHOW PROFILES",
    "SHOW RELAYLOG EVENTS",
    "SHOW REPLICA STATUS",
    "SHOW REPLICAS",
    "SHOW SLAVE",
    "SHOW SLAVE HOSTS",
    "SHOW STATUS",
    "SHOW TABLE STATUS",
    "SHOW TABLES",
    "SHOW TRIGGERS",
    "SHOW VARIABLES",
    "SHOW WARNINGS",
    "SHUTDOWN",
    "SOURCE_POS_WAIT",
    "START GROUP_REPLICATION",
    "START REPLICA",
    "START SLAVE",
    "START TRANSACTION",
    "STOP GROUP_REPLICATION",
    "STOP REPLICA",
    "STOP SLAVE",
    "TABLE",
    "UNINSTALL COMPONENT",
    "UNINSTALL PLUGIN",
    "UNLOCK INSTANCE",
    "UNLOCK TABLES",
    "USE",
    "XA",
    // flow control
    // 'IF',
    "ITERATE",
    "LEAVE",
    "LOOP",
    "REPEAT",
    "RETURN",
    "WHILE"
]), H9 = Q([
    "UNION [ALL | DISTINCT]"
]), Y9 = Q([
    "JOIN",
    "{LEFT | RIGHT} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT} [OUTER] JOIN",
    // non-standard joins
    "STRAIGHT_JOIN"
]), V9 = Q([
    "ON {UPDATE | DELETE} [SET NULL]",
    "CHARACTER SET",
    "{ROWS | RANGE} BETWEEN"
]), W9 = {
    tokenizerOptions: {
        reservedSelect: G9,
        reservedClauses: [
            ...k9,
            ...f1
        ],
        reservedSetOperations: H9,
        reservedJoins: Y9,
        reservedPhrases: V9,
        supportsXor: !0,
        reservedKeywords: F9,
        reservedFunctionNames: B9,
        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.
        stringTypes: [
            '""-qq-bs',
            {
                quote: "''-qq-bs",
                prefixes: [
                    "N"
                ]
            },
            {
                quote: "''-raw",
                prefixes: [
                    "B",
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            "``"
        ],
        identChars: {
            first: "$",
            rest: "$",
            allowFirstCharNumber: !0
        },
        variableTypes: [
            {
                regex: "@@?[A-Za-z0-9_.$]+"
            },
            {
                quote: '""-qq-bs',
                prefixes: [
                    "@"
                ],
                requirePrefix: !0
            },
            {
                quote: "''-qq-bs",
                prefixes: [
                    "@"
                ],
                requirePrefix: !0
            },
            {
                quote: "``",
                prefixes: [
                    "@"
                ],
                requirePrefix: !0
            }
        ],
        paramTypes: {
            positional: !0
        },
        lineCommentTypes: [
            "--",
            "#"
        ],
        operators: [
            "%",
            ":=",
            "&",
            "|",
            "^",
            "~",
            "<<",
            ">>",
            "<=>",
            "->",
            "->>",
            "&&",
            "||",
            "!"
        ],
        postProcess: j9
    },
    formatOptions: {
        onelineClauses: f1
    }
};
function j9(e) {
    return e.map((t, n)=>{
        const r = e[n + 1] || ji;
        return li.SET(t) && r.text === "(" ? {
            ...t,
            type: Z.RESERVED_FUNCTION_NAME
        } : t;
    });
}
const X9 = ke({
    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/functions.html
    all: [
        "ABORT",
        "ABS",
        "ACOS",
        "ADVISOR",
        "ARRAY_AGG",
        "ARRAY_AGG",
        "ARRAY_APPEND",
        "ARRAY_AVG",
        "ARRAY_BINARY_SEARCH",
        "ARRAY_CONCAT",
        "ARRAY_CONTAINS",
        "ARRAY_COUNT",
        "ARRAY_DISTINCT",
        "ARRAY_EXCEPT",
        "ARRAY_FLATTEN",
        "ARRAY_IFNULL",
        "ARRAY_INSERT",
        "ARRAY_INTERSECT",
        "ARRAY_LENGTH",
        "ARRAY_MAX",
        "ARRAY_MIN",
        "ARRAY_MOVE",
        "ARRAY_POSITION",
        "ARRAY_PREPEND",
        "ARRAY_PUT",
        "ARRAY_RANGE",
        "ARRAY_REMOVE",
        "ARRAY_REPEAT",
        "ARRAY_REPLACE",
        "ARRAY_REVERSE",
        "ARRAY_SORT",
        "ARRAY_STAR",
        "ARRAY_SUM",
        "ARRAY_SYMDIFF",
        "ARRAY_SYMDIFF1",
        "ARRAY_SYMDIFFN",
        "ARRAY_UNION",
        "ASIN",
        "ATAN",
        "ATAN2",
        "AVG",
        "BASE64",
        "BASE64_DECODE",
        "BASE64_ENCODE",
        "BITAND ",
        "BITCLEAR ",
        "BITNOT ",
        "BITOR ",
        "BITSET ",
        "BITSHIFT ",
        "BITTEST ",
        "BITXOR ",
        "CEIL",
        "CLOCK_LOCAL",
        "CLOCK_MILLIS",
        "CLOCK_STR",
        "CLOCK_TZ",
        "CLOCK_UTC",
        "COALESCE",
        "CONCAT",
        "CONCAT2",
        "CONTAINS",
        "CONTAINS_TOKEN",
        "CONTAINS_TOKEN_LIKE",
        "CONTAINS_TOKEN_REGEXP",
        "COS",
        "COUNT",
        "COUNT",
        "COUNTN",
        "CUME_DIST",
        "CURL",
        "DATE_ADD_MILLIS",
        "DATE_ADD_STR",
        "DATE_DIFF_MILLIS",
        "DATE_DIFF_STR",
        "DATE_FORMAT_STR",
        "DATE_PART_MILLIS",
        "DATE_PART_STR",
        "DATE_RANGE_MILLIS",
        "DATE_RANGE_STR",
        "DATE_TRUNC_MILLIS",
        "DATE_TRUNC_STR",
        "DECODE",
        "DECODE_JSON",
        "DEGREES",
        "DENSE_RANK",
        "DURATION_TO_STR",
        // 'E',
        "ENCODED_SIZE",
        "ENCODE_JSON",
        "EXP",
        "FIRST_VALUE",
        "FLOOR",
        "GREATEST",
        "HAS_TOKEN",
        "IFINF",
        "IFMISSING",
        "IFMISSINGORNULL",
        "IFNAN",
        "IFNANORINF",
        "IFNULL",
        "INITCAP",
        "ISARRAY",
        "ISATOM",
        "ISBITSET",
        "ISBOOLEAN",
        "ISNUMBER",
        "ISOBJECT",
        "ISSTRING",
        "LAG",
        "LAST_VALUE",
        "LEAD",
        "LEAST",
        "LENGTH",
        "LN",
        "LOG",
        "LOWER",
        "LTRIM",
        "MAX",
        "MEAN",
        "MEDIAN",
        "META",
        "MILLIS",
        "MILLIS_TO_LOCAL",
        "MILLIS_TO_STR",
        "MILLIS_TO_TZ",
        "MILLIS_TO_UTC",
        "MILLIS_TO_ZONE_NAME",
        "MIN",
        "MISSINGIF",
        "NANIF",
        "NEGINFIF",
        "NOW_LOCAL",
        "NOW_MILLIS",
        "NOW_STR",
        "NOW_TZ",
        "NOW_UTC",
        "NTH_VALUE",
        "NTILE",
        "NULLIF",
        "NVL",
        "NVL2",
        "OBJECT_ADD",
        "OBJECT_CONCAT",
        "OBJECT_INNER_PAIRS",
        "OBJECT_INNER_VALUES",
        "OBJECT_LENGTH",
        "OBJECT_NAMES",
        "OBJECT_PAIRS",
        "OBJECT_PUT",
        "OBJECT_REMOVE",
        "OBJECT_RENAME",
        "OBJECT_REPLACE",
        "OBJECT_UNWRAP",
        "OBJECT_VALUES",
        "PAIRS",
        "PERCENT_RANK",
        "PI",
        "POLY_LENGTH",
        "POSINFIF",
        "POSITION",
        "POWER",
        "RADIANS",
        "RANDOM",
        "RANK",
        "RATIO_TO_REPORT",
        "REGEXP_CONTAINS",
        "REGEXP_LIKE",
        "REGEXP_MATCHES",
        "REGEXP_POSITION",
        "REGEXP_REPLACE",
        "REGEXP_SPLIT",
        "REGEX_CONTAINS",
        "REGEX_LIKE",
        "REGEX_MATCHES",
        "REGEX_POSITION",
        "REGEX_REPLACE",
        "REGEX_SPLIT",
        "REPEAT",
        "REPLACE",
        "REVERSE",
        "ROUND",
        "ROW_NUMBER",
        "RTRIM",
        "SEARCH",
        "SEARCH_META",
        "SEARCH_SCORE",
        "SIGN",
        "SIN",
        "SPLIT",
        "SQRT",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STR_TO_DURATION",
        "STR_TO_MILLIS",
        "STR_TO_TZ",
        "STR_TO_UTC",
        "STR_TO_ZONE_NAME",
        "SUBSTR",
        "SUFFIXES",
        "SUM",
        "TAN",
        "TITLE",
        "TOARRAY",
        "TOATOM",
        "TOBOOLEAN",
        "TOKENS",
        "TOKENS",
        "TONUMBER",
        "TOOBJECT",
        "TOSTRING",
        "TRIM",
        "TRUNC",
        // 'TYPE', // disabled
        "UPPER",
        "UUID",
        "VARIANCE",
        "VARIANCE_POP",
        "VARIANCE_SAMP",
        "VAR_POP",
        "VAR_SAMP",
        "WEEKDAY_MILLIS",
        "WEEKDAY_STR",
        // type casting
        // not implemented in N1QL, but added here now for the sake of tests
        // https://docs.couchbase.com/server/current/analytics/3_query.html#Vs_SQL-92
        "CAST"
    ]
}), K9 = ke({
    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html
    all: [
        "ADVISE",
        "ALL",
        "ALTER",
        "ANALYZE",
        "AND",
        "ANY",
        "ARRAY",
        "AS",
        "ASC",
        "AT",
        "BEGIN",
        "BETWEEN",
        "BINARY",
        "BOOLEAN",
        "BREAK",
        "BUCKET",
        "BUILD",
        "BY",
        "CALL",
        "CASE",
        "CAST",
        "CLUSTER",
        "COLLATE",
        "COLLECTION",
        "COMMIT",
        "COMMITTED",
        "CONNECT",
        "CONTINUE",
        "CORRELATED",
        "COVER",
        "CREATE",
        "CURRENT",
        "DATABASE",
        "DATASET",
        "DATASTORE",
        "DECLARE",
        "DECREMENT",
        "DELETE",
        "DERIVED",
        "DESC",
        "DESCRIBE",
        "DISTINCT",
        "DO",
        "DROP",
        "EACH",
        "ELEMENT",
        "ELSE",
        "END",
        "EVERY",
        "EXCEPT",
        "EXCLUDE",
        "EXECUTE",
        "EXISTS",
        "EXPLAIN",
        "FALSE",
        "FETCH",
        "FILTER",
        "FIRST",
        "FLATTEN",
        "FLUSH",
        "FOLLOWING",
        "FOR",
        "FORCE",
        "FROM",
        "FTS",
        "FUNCTION",
        "GOLANG",
        "GRANT",
        "GROUP",
        "GROUPS",
        "GSI",
        "HASH",
        "HAVING",
        "IF",
        "ISOLATION",
        "IGNORE",
        "ILIKE",
        "IN",
        "INCLUDE",
        "INCREMENT",
        "INDEX",
        "INFER",
        "INLINE",
        "INNER",
        "INSERT",
        "INTERSECT",
        "INTO",
        "IS",
        "JAVASCRIPT",
        "JOIN",
        "KEY",
        "KEYS",
        "KEYSPACE",
        "KNOWN",
        "LANGUAGE",
        "LAST",
        "LEFT",
        "LET",
        "LETTING",
        "LEVEL",
        "LIKE",
        "LIMIT",
        "LSM",
        "MAP",
        "MAPPING",
        "MATCHED",
        "MATERIALIZED",
        "MERGE",
        "MINUS",
        "MISSING",
        "NAMESPACE",
        "NEST",
        "NL",
        "NO",
        "NOT",
        "NTH_VALUE",
        "NULL",
        "NULLS",
        "NUMBER",
        "OBJECT",
        "OFFSET",
        "ON",
        "OPTION",
        "OPTIONS",
        "OR",
        "ORDER",
        "OTHERS",
        "OUTER",
        "OVER",
        "PARSE",
        "PARTITION",
        "PASSWORD",
        "PATH",
        "POOL",
        "PRECEDING",
        "PREPARE",
        "PRIMARY",
        "PRIVATE",
        "PRIVILEGE",
        "PROBE",
        "PROCEDURE",
        "PUBLIC",
        "RANGE",
        "RAW",
        "REALM",
        "REDUCE",
        "RENAME",
        "RESPECT",
        "RETURN",
        "RETURNING",
        "REVOKE",
        "RIGHT",
        "ROLE",
        "ROLLBACK",
        "ROW",
        "ROWS",
        "SATISFIES",
        "SAVEPOINT",
        "SCHEMA",
        "SCOPE",
        "SELECT",
        "SELF",
        "SEMI",
        "SET",
        "SHOW",
        "SOME",
        "START",
        "STATISTICS",
        "STRING",
        "SYSTEM",
        "THEN",
        "TIES",
        "TO",
        "TRAN",
        "TRANSACTION",
        "TRIGGER",
        "TRUE",
        "TRUNCATE",
        "UNBOUNDED",
        "UNDER",
        "UNION",
        "UNIQUE",
        "UNKNOWN",
        "UNNEST",
        "UNSET",
        "UPDATE",
        "UPSERT",
        "USE",
        "USER",
        "USING",
        "VALIDATE",
        "VALUE",
        "VALUED",
        "VALUES",
        "VIA",
        "VIEW",
        "WHEN",
        "WHERE",
        "WHILE",
        "WINDOW",
        "WITH",
        "WITHIN",
        "WORK",
        "XOR"
    ]
}), z9 = Q([
    "SELECT [ALL | DISTINCT]"
]), J9 = Q([
    // queries
    "WITH",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    // Data manipulation
    // - insert:
    "INSERT INTO",
    "VALUES",
    // - update:
    "SET",
    // - merge:
    "MERGE INTO",
    "WHEN [NOT] MATCHED THEN",
    "UPDATE SET",
    "INSERT",
    // other
    "NEST",
    "UNNEST",
    "RETURNING"
]), p1 = Q([
    // - update:
    "UPDATE",
    // - delete:
    "DELETE FROM",
    // - set schema:
    "SET SCHEMA",
    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html
    "ADVISE",
    "ALTER INDEX",
    "BEGIN TRANSACTION",
    "BUILD INDEX",
    "COMMIT TRANSACTION",
    "CREATE COLLECTION",
    "CREATE FUNCTION",
    "CREATE INDEX",
    "CREATE PRIMARY INDEX",
    "CREATE SCOPE",
    "DROP COLLECTION",
    "DROP FUNCTION",
    "DROP INDEX",
    "DROP PRIMARY INDEX",
    "DROP SCOPE",
    "EXECUTE",
    "EXECUTE FUNCTION",
    "EXPLAIN",
    "GRANT",
    "INFER",
    "PREPARE",
    "REVOKE",
    "ROLLBACK TRANSACTION",
    "SAVEPOINT",
    "SET TRANSACTION",
    "UPDATE STATISTICS",
    "UPSERT",
    // other
    "LET",
    "SET CURRENT SCHEMA",
    "SHOW",
    "USE [PRIMARY] KEYS"
]), q9 = Q([
    "UNION [ALL]",
    "EXCEPT [ALL]",
    "INTERSECT [ALL]"
]), Z9 = Q([
    "JOIN",
    "{LEFT | RIGHT} [OUTER] JOIN",
    "INNER JOIN"
]), Q9 = Q([
    "{ROWS | RANGE | GROUPS} BETWEEN"
]), $9 = {
    tokenizerOptions: {
        reservedSelect: z9,
        reservedClauses: [
            ...J9,
            ...p1
        ],
        reservedSetOperations: q9,
        reservedJoins: Z9,
        reservedPhrases: Q9,
        supportsXor: !0,
        reservedKeywords: K9,
        reservedFunctionNames: X9,
        // NOTE: single quotes are actually not supported in N1QL,
        // but we support them anyway as all other SQL dialects do,
        // which simplifies writing tests that are shared between all dialects.
        stringTypes: [
            '""-bs',
            "''-bs"
        ],
        identTypes: [
            "``"
        ],
        extraParens: [
            "[]",
            "{}"
        ],
        paramTypes: {
            positional: !0,
            numbered: [
                "$"
            ],
            named: [
                "$"
            ]
        },
        lineCommentTypes: [
            "#",
            "--"
        ],
        operators: [
            "%",
            "==",
            ":",
            "||"
        ]
    },
    formatOptions: {
        onelineClauses: p1
    }
}, eF = ke({
    // https://docs.oracle.com/cd/B19306_01/appdev.102/b14261/reservewords.htm
    all: [
        // 'A',
        "ADD",
        "AGENT",
        "AGGREGATE",
        "ALL",
        "ALTER",
        "AND",
        "ANY",
        "ARRAY",
        "ARROW",
        "AS",
        "ASC",
        "AT",
        "ATTRIBUTE",
        "AUTHID",
        "AVG",
        "BEGIN",
        "BETWEEN",
        "BFILE_BASE",
        "BINARY",
        "BLOB_BASE",
        "BLOCK",
        "BODY",
        "BOTH",
        "BOUND",
        "BULK",
        "BY",
        "BYTE",
        // 'C',
        "CALL",
        "CALLING",
        "CASCADE",
        "CASE",
        "CHAR",
        "CHAR_BASE",
        "CHARACTER",
        "CHARSET",
        "CHARSETFORM",
        "CHARSETID",
        "CHECK",
        "CLOB_BASE",
        "CLOSE",
        "CLUSTER",
        "CLUSTERS",
        "COLAUTH",
        "COLLECT",
        "COLUMNS",
        "COMMENT",
        "COMMIT",
        "COMMITTED",
        "COMPILED",
        "COMPRESS",
        "CONNECT",
        "CONSTANT",
        "CONSTRUCTOR",
        "CONTEXT",
        "CONVERT",
        "COUNT",
        "CRASH",
        "CREATE",
        "CURRENT",
        "CURSOR",
        "CUSTOMDATUM",
        "DANGLING",
        "DATA",
        "DATE",
        "DATE_BASE",
        "DAY",
        "DECIMAL",
        "DECLARE",
        "DEFAULT",
        "DEFINE",
        "DELETE",
        "DESC",
        "DETERMINISTIC",
        "DISTINCT",
        "DOUBLE",
        "DROP",
        "DURATION",
        "ELEMENT",
        "ELSE",
        "ELSIF",
        "EMPTY",
        "END",
        "ESCAPE",
        "EXCEPT",
        "EXCEPTION",
        "EXCEPTIONS",
        "EXCLUSIVE",
        "EXECUTE",
        "EXISTS",
        "EXIT",
        "EXTERNAL",
        "FETCH",
        "FINAL",
        "FIXED",
        "FLOAT",
        "FOR",
        "FORALL",
        "FORCE",
        "FORM",
        "FROM",
        "FUNCTION",
        "GENERAL",
        "GOTO",
        "GRANT",
        "GROUP",
        "HASH",
        "HAVING",
        "HEAP",
        "HIDDEN",
        "HOUR",
        "IDENTIFIED",
        "IF",
        "IMMEDIATE",
        "IN",
        "INCLUDING",
        "INDEX",
        "INDEXES",
        "INDICATOR",
        "INDICES",
        "INFINITE",
        "INSERT",
        "INSTANTIABLE",
        "INT",
        "INTERFACE",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "INVALIDATE",
        "IS",
        "ISOLATION",
        "JAVA",
        "LANGUAGE",
        "LARGE",
        "LEADING",
        "LENGTH",
        "LEVEL",
        "LIBRARY",
        "LIKE",
        "LIKE2",
        "LIKE4",
        "LIKEC",
        "LIMIT",
        "LIMITED",
        "LOCAL",
        "LOCK",
        "LONG",
        "LOOP",
        "MAP",
        "MAX",
        "MAXLEN",
        "MEMBER",
        "MERGE",
        "MIN",
        "MINUS",
        "MINUTE",
        "MOD",
        "MODE",
        "MODIFY",
        "MONTH",
        "MULTISET",
        "NAME",
        "NAN",
        "NATIONAL",
        "NATIVE",
        "NCHAR",
        "NEW",
        "NOCOMPRESS",
        "NOCOPY",
        "NOT",
        "NOWAIT",
        "NULL",
        "NUMBER_BASE",
        "OBJECT",
        "OCICOLL",
        "OCIDATE",
        "OCIDATETIME",
        "OCIDURATION",
        "OCIINTERVAL",
        "OCILOBLOCATOR",
        "OCINUMBER",
        "OCIRAW",
        "OCIREF",
        "OCIREFCURSOR",
        "OCIROWID",
        "OCISTRING",
        "OCITYPE",
        "OF",
        "ON",
        "ONLY",
        "OPAQUE",
        "OPEN",
        "OPERATOR",
        "OPTION",
        "OR",
        "ORACLE",
        "ORADATA",
        "ORDER",
        "OVERLAPS",
        "ORGANIZATION",
        "ORLANY",
        "ORLVARY",
        "OTHERS",
        "OUT",
        "OVERRIDING",
        "PACKAGE",
        "PARALLEL_ENABLE",
        "PARAMETER",
        "PARAMETERS",
        "PARTITION",
        "PASCAL",
        "PIPE",
        "PIPELINED",
        "PRAGMA",
        "PRECISION",
        "PRIOR",
        "PRIVATE",
        "PROCEDURE",
        "PUBLIC",
        "RAISE",
        "RANGE",
        "RAW",
        "READ",
        "RECORD",
        "REF",
        "REFERENCE",
        "REM",
        "REMAINDER",
        "RENAME",
        "RESOURCE",
        "RESULT",
        "RETURN",
        "RETURNING",
        "REVERSE",
        "REVOKE",
        "ROLLBACK",
        "ROW",
        "SAMPLE",
        "SAVE",
        "SAVEPOINT",
        "SB1",
        "SB2",
        "SB4",
        "SECOND",
        "SEGMENT",
        "SELECT",
        "SELF",
        "SEPARATE",
        "SEQUENCE",
        "SERIALIZABLE",
        "SET",
        "SHARE",
        "SHORT",
        "SIZE",
        "SIZE_T",
        "SOME",
        "SPARSE",
        "SQL",
        "SQLCODE",
        "SQLDATA",
        "SQLNAME",
        "SQLSTATE",
        "STANDARD",
        "START",
        "STATIC",
        "STDDEV",
        "STORED",
        "STRING",
        "STRUCT",
        "STYLE",
        "SUBMULTISET",
        "SUBPARTITION",
        "SUBSTITUTABLE",
        "SUBTYPE",
        "SUM",
        "SYNONYM",
        "TABAUTH",
        "TABLE",
        "TDO",
        "THE",
        "THEN",
        "TIME",
        "TIMESTAMP",
        "TIMEZONE_ABBR",
        "TIMEZONE_HOUR",
        "TIMEZONE_MINUTE",
        "TIMEZONE_REGION",
        "TO",
        "TRAILING",
        "TRANSAC",
        "TRANSACTIONAL",
        "TRUSTED",
        "TYPE",
        "UB1",
        "UB2",
        "UB4",
        "UNDER",
        "UNION",
        "UNIQUE",
        "UNSIGNED",
        "UNTRUSTED",
        "UPDATE",
        "USE",
        "USING",
        "VALIST",
        "VALUE",
        "VALUES",
        "VARIABLE",
        "VARIANCE",
        "VARRAY",
        "VARYING",
        "VIEW",
        "VIEWS",
        "VOID",
        "WHEN",
        "WHERE",
        "WHILE",
        "WITH",
        "WORK",
        "WRAPPED",
        "WRITE",
        "YEAR",
        "ZONE"
    ]
}), tF = ke({
    // https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions001.htm
    numeric: [
        "ABS",
        "ACOS",
        "ASIN",
        "ATAN",
        "ATAN2",
        "BITAND",
        "CEIL",
        "COS",
        "COSH",
        "EXP",
        "FLOOR",
        "LN",
        "LOG",
        "MOD",
        "NANVL",
        "POWER",
        "REMAINDER",
        "ROUND",
        "SIGN",
        "SIN",
        "SINH",
        "SQRT",
        "TAN",
        "TANH",
        "TRUNC",
        "WIDTH_BUCKET"
    ],
    character: [
        "CHR",
        "CONCAT",
        "INITCAP",
        "LOWER",
        "LPAD",
        "LTRIM",
        "NLS_INITCAP",
        "NLS_LOWER",
        "NLSSORT",
        "NLS_UPPER",
        "REGEXP_REPLACE",
        "REGEXP_SUBSTR",
        "REPLACE",
        "RPAD",
        "RTRIM",
        "SOUNDEX",
        "SUBSTR",
        "TRANSLATE",
        "TREAT",
        "TRIM",
        "UPPER",
        "NLS_CHARSET_DECL_LEN",
        "NLS_CHARSET_ID",
        "NLS_CHARSET_NAME",
        "ASCII",
        "INSTR",
        "LENGTH",
        "REGEXP_INSTR"
    ],
    datetime: [
        "ADD_MONTHS",
        "CURRENT_DATE",
        "CURRENT_TIMESTAMP",
        "DBTIMEZONE",
        "EXTRACT",
        "FROM_TZ",
        "LAST_DAY",
        "LOCALTIMESTAMP",
        "MONTHS_BETWEEN",
        "NEW_TIME",
        "NEXT_DAY",
        "NUMTODSINTERVAL",
        "NUMTOYMINTERVAL",
        "ROUND",
        "SESSIONTIMEZONE",
        "SYS_EXTRACT_UTC",
        "SYSDATE",
        "SYSTIMESTAMP",
        "TO_CHAR",
        "TO_TIMESTAMP",
        "TO_TIMESTAMP_TZ",
        "TO_DSINTERVAL",
        "TO_YMINTERVAL",
        "TRUNC",
        "TZ_OFFSET"
    ],
    comparison: [
        "GREATEST",
        "LEAST"
    ],
    conversion: [
        "ASCIISTR",
        "BIN_TO_NUM",
        "CAST",
        "CHARTOROWID",
        "COMPOSE",
        "CONVERT",
        "DECOMPOSE",
        "HEXTORAW",
        "NUMTODSINTERVAL",
        "NUMTOYMINTERVAL",
        "RAWTOHEX",
        "RAWTONHEX",
        "ROWIDTOCHAR",
        "ROWIDTONCHAR",
        "SCN_TO_TIMESTAMP",
        "TIMESTAMP_TO_SCN",
        "TO_BINARY_DOUBLE",
        "TO_BINARY_FLOAT",
        "TO_CHAR",
        "TO_CLOB",
        "TO_DATE",
        "TO_DSINTERVAL",
        "TO_LOB",
        "TO_MULTI_BYTE",
        "TO_NCHAR",
        "TO_NCLOB",
        "TO_NUMBER",
        "TO_DSINTERVAL",
        "TO_SINGLE_BYTE",
        "TO_TIMESTAMP",
        "TO_TIMESTAMP_TZ",
        "TO_YMINTERVAL",
        "TO_YMINTERVAL",
        "TRANSLATE",
        "UNISTR"
    ],
    largeObject: [
        "BFILENAME",
        "EMPTY_BLOB,",
        "EMPTY_CLOB"
    ],
    collection: [
        "CARDINALITY",
        "COLLECT",
        "POWERMULTISET",
        "POWERMULTISET_BY_CARDINALITY",
        "SET"
    ],
    hierarchical: [
        "SYS_CONNECT_BY_PATH"
    ],
    dataMining: [
        "CLUSTER_ID",
        "CLUSTER_PROBABILITY",
        "CLUSTER_SET",
        "FEATURE_ID",
        "FEATURE_SET",
        "FEATURE_VALUE",
        "PREDICTION",
        "PREDICTION_COST",
        "PREDICTION_DETAILS",
        "PREDICTION_PROBABILITY",
        "PREDICTION_SET"
    ],
    xml: [
        "APPENDCHILDXML",
        "DELETEXML",
        "DEPTH",
        "EXTRACT",
        "EXISTSNODE",
        "EXTRACTVALUE",
        "INSERTCHILDXML",
        "INSERTXMLBEFORE",
        "PATH",
        "SYS_DBURIGEN",
        "SYS_XMLAGG",
        "SYS_XMLGEN",
        "UPDATEXML",
        "XMLAGG",
        "XMLCDATA",
        "XMLCOLATTVAL",
        "XMLCOMMENT",
        "XMLCONCAT",
        "XMLFOREST",
        "XMLPARSE",
        "XMLPI",
        "XMLQUERY",
        "XMLROOT",
        "XMLSEQUENCE",
        "XMLSERIALIZE",
        "XMLTABLE",
        "XMLTRANSFORM"
    ],
    encoding: [
        "DECODE",
        "DUMP",
        "ORA_HASH",
        "VSIZE"
    ],
    nullRelated: [
        "COALESCE",
        "LNNVL",
        "NULLIF",
        "NVL",
        "NVL2"
    ],
    env: [
        "SYS_CONTEXT",
        "SYS_GUID",
        "SYS_TYPEID",
        "UID",
        "USER",
        "USERENV"
    ],
    aggregate: [
        "AVG",
        "COLLECT",
        "CORR",
        "CORR_S",
        "CORR_K",
        "COUNT",
        "COVAR_POP",
        "COVAR_SAMP",
        "CUME_DIST",
        "DENSE_RANK",
        "FIRST",
        "GROUP_ID",
        "GROUPING",
        "GROUPING_ID",
        "LAST",
        "MAX",
        "MEDIAN",
        "MIN",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "PERCENT_RANK",
        "RANK",
        "REGR_SLOPE",
        "REGR_INTERCEPT",
        "REGR_COUNT",
        "REGR_R2",
        "REGR_AVGX",
        "REGR_AVGY",
        "REGR_SXX",
        "REGR_SYY",
        "REGR_SXY",
        "STATS_BINOMIAL_TEST",
        "STATS_CROSSTAB",
        "STATS_F_TEST",
        "STATS_KS_TEST",
        "STATS_MODE",
        "STATS_MW_TEST",
        "STATS_ONE_WAY_ANOVA",
        "STATS_T_TEST_ONE",
        "STATS_T_TEST_PAIRED",
        "STATS_T_TEST_INDEP",
        "STATS_T_TEST_INDEPU",
        "STATS_WSR_TEST",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "SUM",
        "VAR_POP",
        "VAR_SAMP",
        "VARIANCE"
    ],
    // Windowing functions (minus the ones already listed in aggregates)
    window: [
        "FIRST_VALUE",
        "LAG",
        "LAST_VALUE",
        "LEAD",
        "NTILE",
        "RATIO_TO_REPORT",
        "ROW_NUMBER"
    ],
    objectReference: [
        "DEREF",
        "MAKE_REF",
        "REF",
        "REFTOHEX",
        "VALUE"
    ],
    model: [
        "CV",
        "ITERATION_NUMBER",
        "PRESENTNNV",
        "PRESENTV",
        "PREVIOUS"
    ],
    // Parameterized data types
    // https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/Data-Types.html
    dataTypes: [
        // Oracle builtin data types
        "VARCHAR2",
        "NVARCHAR2",
        "NUMBER",
        "FLOAT",
        "TIMESTAMP",
        "INTERVAL YEAR",
        "INTERVAL DAY",
        "RAW",
        "UROWID",
        "NCHAR",
        // ANSI Data Types
        "CHARACTER",
        "CHAR",
        "CHARACTER VARYING",
        "CHAR VARYING",
        "NATIONAL CHARACTER",
        "NATIONAL CHAR",
        "NATIONAL CHARACTER VARYING",
        "NATIONAL CHAR VARYING",
        "NCHAR VARYING",
        "NUMERIC",
        "DECIMAL",
        "FLOAT",
        // SQL/DS and DB2 Data Types
        "VARCHAR"
    ]
}), nF = Q([
    "SELECT [ALL | DISTINCT | UNIQUE]"
]), rF = Q([
    // queries
    "WITH",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "PARTITION BY",
    "ORDER [SIBLINGS] BY",
    "OFFSET",
    "FETCH {FIRST | NEXT}",
    "FOR UPDATE [OF]",
    // Data manipulation
    // - insert:
    "INSERT [INTO | ALL INTO]",
    "VALUES",
    // - update:
    "SET",
    // - merge:
    "MERGE [INTO]",
    "WHEN [NOT] MATCHED [THEN]",
    "UPDATE SET",
    // Data definition
    "CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW",
    "CREATE MATERIALIZED VIEW",
    "CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE",
    // other
    "RETURNING"
]), T1 = Q([
    // - update:
    "UPDATE [ONLY]",
    // - delete:
    "DELETE FROM [ONLY]",
    // - drop table:
    "DROP TABLE",
    // - alter table:
    "ALTER TABLE",
    "ADD",
    "DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}",
    "MODIFY",
    "RENAME TO",
    "RENAME COLUMN",
    // - truncate:
    "TRUNCATE TABLE",
    // other
    "SET SCHEMA",
    "BEGIN",
    "CONNECT BY",
    "DECLARE",
    "EXCEPT",
    "EXCEPTION",
    "LOOP",
    "START WITH"
]), sF = Q([
    "UNION [ALL]",
    "EXCEPT",
    "INTERSECT"
]), iF = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN",
    // non-standard joins
    "{CROSS | OUTER} APPLY"
]), aF = Q([
    "ON {UPDATE | DELETE} [SET NULL]",
    "ON COMMIT",
    "{ROWS | RANGE} BETWEEN"
]), oF = {
    tokenizerOptions: {
        reservedSelect: nF,
        reservedClauses: [
            ...rF,
            ...T1
        ],
        reservedSetOperations: sF,
        reservedJoins: iF,
        reservedPhrases: aF,
        supportsXor: !0,
        reservedKeywords: eF,
        reservedFunctionNames: tF,
        stringTypes: [
            {
                quote: "''-qq",
                prefixes: [
                    "N"
                ]
            },
            {
                quote: "q''",
                prefixes: [
                    "N"
                ]
            }
        ],
        // PL/SQL doesn't actually support escaping of quotes in identifiers,
        // but for the sake of simpler testing we'll support this anyway
        // as all other SQL dialects with "identifiers" do.
        identTypes: [
            '""-qq'
        ],
        identChars: {
            rest: "$#"
        },
        variableTypes: [
            {
                regex: "&{1,2}[A-Za-z][A-Za-z0-9_$#]*"
            }
        ],
        paramTypes: {
            numbered: [
                ":"
            ],
            named: [
                ":"
            ]
        },
        paramChars: {},
        // Empty object used on purpose to not allow $ and # chars as specified in identChars
        operators: [
            "**",
            ":=",
            "%",
            "~=",
            "^=",
            // '..', // Conflicts with float followed by dot (so "2..3" gets parsed as ["2.", ".", "3"])
            ">>",
            "<<",
            "=>",
            "@",
            "||"
        ],
        postProcess: lF
    },
    formatOptions: {
        alwaysDenseOperators: [
            "@"
        ],
        onelineClauses: T1
    }
};
function lF(e) {
    let t = ji;
    return e.map((n)=>li.SET(n) && li.BY(t) ? {
            ...n,
            type: Z.RESERVED_KEYWORD
        } : (Sg(n.type) && (t = n), n));
}
const cF = ke({
    // https://www.postgresql.org/docs/14/functions.html
    //
    // https://www.postgresql.org/docs/14/functions-math.html
    math: [
        "ABS",
        "ACOS",
        "ACOSD",
        "ACOSH",
        "ASIN",
        "ASIND",
        "ASINH",
        "ATAN",
        "ATAN2",
        "ATAN2D",
        "ATAND",
        "ATANH",
        "CBRT",
        "CEIL",
        "CEILING",
        "COS",
        "COSD",
        "COSH",
        "COT",
        "COTD",
        "DEGREES",
        "DIV",
        "EXP",
        "FACTORIAL",
        "FLOOR",
        "GCD",
        "LCM",
        "LN",
        "LOG",
        "LOG10",
        "MIN_SCALE",
        "MOD",
        "PI",
        "POWER",
        "RADIANS",
        "RANDOM",
        "ROUND",
        "SCALE",
        "SETSEED",
        "SIGN",
        "SIN",
        "SIND",
        "SINH",
        "SQRT",
        "TAN",
        "TAND",
        "TANH",
        "TRIM_SCALE",
        "TRUNC",
        "WIDTH_BUCKET"
    ],
    // https://www.postgresql.org/docs/14/functions-string.html
    string: [
        "ABS",
        "ASCII",
        "BIT_LENGTH",
        "BTRIM",
        "CHARACTER_LENGTH",
        "CHAR_LENGTH",
        "CHR",
        "CONCAT",
        "CONCAT_WS",
        "FORMAT",
        "INITCAP",
        "LEFT",
        "LENGTH",
        "LOWER",
        "LPAD",
        "LTRIM",
        "MD5",
        "NORMALIZE",
        "OCTET_LENGTH",
        "OVERLAY",
        "PARSE_IDENT",
        "PG_CLIENT_ENCODING",
        "POSITION",
        "QUOTE_IDENT",
        "QUOTE_LITERAL",
        "QUOTE_NULLABLE",
        "REGEXP_MATCH",
        "REGEXP_MATCHES",
        "REGEXP_REPLACE",
        "REGEXP_SPLIT_TO_ARRAY",
        "REGEXP_SPLIT_TO_TABLE",
        "REPEAT",
        "REPLACE",
        "REVERSE",
        "RIGHT",
        "RPAD",
        "RTRIM",
        "SPLIT_PART",
        "SPRINTF",
        "STARTS_WITH",
        "STRING_AGG",
        "STRING_TO_ARRAY",
        "STRING_TO_TABLE",
        "STRPOS",
        "SUBSTR",
        "SUBSTRING",
        "TO_ASCII",
        "TO_HEX",
        "TRANSLATE",
        "TRIM",
        "UNISTR",
        "UPPER"
    ],
    // https://www.postgresql.org/docs/14/functions-binarystring.html
    binary: [
        "BIT_COUNT",
        "BIT_LENGTH",
        "BTRIM",
        "CONVERT",
        "CONVERT_FROM",
        "CONVERT_TO",
        "DECODE",
        "ENCODE",
        "GET_BIT",
        "GET_BYTE",
        "LENGTH",
        "LTRIM",
        "MD5",
        "OCTET_LENGTH",
        "OVERLAY",
        "POSITION",
        "RTRIM",
        "SET_BIT",
        "SET_BYTE",
        "SHA224",
        "SHA256",
        "SHA384",
        "SHA512",
        "STRING_AGG",
        "SUBSTR",
        "SUBSTRING",
        "TRIM"
    ],
    // https://www.postgresql.org/docs/14/functions-bitstring.html
    bitstring: [
        "BIT_COUNT",
        "BIT_LENGTH",
        "GET_BIT",
        "LENGTH",
        "OCTET_LENGTH",
        "OVERLAY",
        "POSITION",
        "SET_BIT",
        "SUBSTRING"
    ],
    // https://www.postgresql.org/docs/14/functions-matching.html
    pattern: [
        "REGEXP_MATCH",
        "REGEXP_MATCHES",
        "REGEXP_REPLACE",
        "REGEXP_SPLIT_TO_ARRAY",
        "REGEXP_SPLIT_TO_TABLE"
    ],
    // https://www.postgresql.org/docs/14/functions-formatting.html
    datatype: [
        "TO_CHAR",
        "TO_DATE",
        "TO_NUMBER",
        "TO_TIMESTAMP"
    ],
    // https://www.postgresql.org/docs/14/functions-datetime.html
    datetime: [
        // 'AGE',
        "CLOCK_TIMESTAMP",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "DATE_BIN",
        "DATE_PART",
        "DATE_TRUNC",
        "EXTRACT",
        "ISFINITE",
        "JUSTIFY_DAYS",
        "JUSTIFY_HOURS",
        "JUSTIFY_INTERVAL",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "MAKE_DATE",
        "MAKE_INTERVAL",
        "MAKE_TIME",
        "MAKE_TIMESTAMP",
        "MAKE_TIMESTAMPTZ",
        "NOW",
        "PG_SLEEP",
        "PG_SLEEP_FOR",
        "PG_SLEEP_UNTIL",
        "STATEMENT_TIMESTAMP",
        "TIMEOFDAY",
        "TO_TIMESTAMP",
        "TRANSACTION_TIMESTAMP"
    ],
    // https://www.postgresql.org/docs/14/functions-enum.html
    enum: [
        "ENUM_FIRST",
        "ENUM_LAST",
        "ENUM_RANGE"
    ],
    // https://www.postgresql.org/docs/14/functions-geometry.html
    geometry: [
        "AREA",
        "BOUND_BOX",
        "BOX",
        "CENTER",
        "CIRCLE",
        "DIAGONAL",
        "DIAMETER",
        "HEIGHT",
        "ISCLOSED",
        "ISOPEN",
        "LENGTH",
        "LINE",
        "LSEG",
        "NPOINTS",
        "PATH",
        "PCLOSE",
        "POINT",
        "POLYGON",
        "POPEN",
        "RADIUS",
        "SLOPE",
        "WIDTH"
    ],
    // https://www.postgresql.org/docs/14/functions-net.html
    network: [
        "ABBREV",
        "BROADCAST",
        "FAMILY",
        "HOST",
        "HOSTMASK",
        "INET_MERGE",
        "INET_SAME_FAMILY",
        "MACADDR8_SET7BIT",
        "MASKLEN",
        "NETMASK",
        "NETWORK",
        "SET_MASKLEN",
        "TEXT",
        "TRUNC"
    ],
    // https://www.postgresql.org/docs/14/functions-textsearch.html
    textsearch: [
        "ARRAY_TO_TSVECTOR",
        "GET_CURRENT_TS_CONFIG",
        "JSONB_TO_TSVECTOR",
        "JSON_TO_TSVECTOR",
        "LENGTH",
        "NUMNODE",
        "PHRASETO_TSQUERY",
        "PLAINTO_TSQUERY",
        "QUERYTREE",
        "SETWEIGHT",
        "STRIP",
        "TO_TSQUERY",
        "TO_TSVECTOR",
        "TSQUERY_PHRASE",
        "TSVECTOR_TO_ARRAY",
        "TS_DEBUG",
        "TS_DELETE",
        "TS_FILTER",
        "TS_HEADLINE",
        "TS_LEXIZE",
        "TS_PARSE",
        "TS_RANK",
        "TS_RANK_CD",
        "TS_REWRITE",
        "TS_STAT",
        "TS_TOKEN_TYPE",
        "WEBSEARCH_TO_TSQUERY"
    ],
    // https://www.postgresql.org/docs/14/functions-uuid.html
    uuid: [
        "UUID"
    ],
    // https://www.postgresql.org/docs/14/functions-xml.html
    xml: [
        "CURSOR_TO_XML",
        "CURSOR_TO_XMLSCHEMA",
        "DATABASE_TO_XML",
        "DATABASE_TO_XMLSCHEMA",
        "DATABASE_TO_XML_AND_XMLSCHEMA",
        "NEXTVAL",
        "QUERY_TO_XML",
        "QUERY_TO_XMLSCHEMA",
        "QUERY_TO_XML_AND_XMLSCHEMA",
        "SCHEMA_TO_XML",
        "SCHEMA_TO_XMLSCHEMA",
        "SCHEMA_TO_XML_AND_XMLSCHEMA",
        "STRING",
        "TABLE_TO_XML",
        "TABLE_TO_XMLSCHEMA",
        "TABLE_TO_XML_AND_XMLSCHEMA",
        "XMLAGG",
        "XMLCOMMENT",
        "XMLCONCAT",
        "XMLELEMENT",
        "XMLEXISTS",
        "XMLFOREST",
        "XMLPARSE",
        "XMLPI",
        "XMLROOT",
        "XMLSERIALIZE",
        "XMLTABLE",
        "XML_IS_WELL_FORMED",
        "XML_IS_WELL_FORMED_CONTENT",
        "XML_IS_WELL_FORMED_DOCUMENT",
        "XPATH",
        "XPATH_EXISTS"
    ],
    // https://www.postgresql.org/docs/14/functions-json.html
    json: [
        "ARRAY_TO_JSON",
        "JSONB_AGG",
        "JSONB_ARRAY_ELEMENTS",
        "JSONB_ARRAY_ELEMENTS_TEXT",
        "JSONB_ARRAY_LENGTH",
        "JSONB_BUILD_ARRAY",
        "JSONB_BUILD_OBJECT",
        "JSONB_EACH",
        "JSONB_EACH_TEXT",
        "JSONB_EXTRACT_PATH",
        "JSONB_EXTRACT_PATH_TEXT",
        "JSONB_INSERT",
        "JSONB_OBJECT",
        "JSONB_OBJECT_AGG",
        "JSONB_OBJECT_KEYS",
        "JSONB_PATH_EXISTS",
        "JSONB_PATH_EXISTS_TZ",
        "JSONB_PATH_MATCH",
        "JSONB_PATH_MATCH_TZ",
        "JSONB_PATH_QUERY",
        "JSONB_PATH_QUERY_ARRAY",
        "JSONB_PATH_QUERY_ARRAY_TZ",
        "JSONB_PATH_QUERY_FIRST",
        "JSONB_PATH_QUERY_FIRST_TZ",
        "JSONB_PATH_QUERY_TZ",
        "JSONB_POPULATE_RECORD",
        "JSONB_POPULATE_RECORDSET",
        "JSONB_PRETTY",
        "JSONB_SET",
        "JSONB_SET_LAX",
        "JSONB_STRIP_NULLS",
        "JSONB_TO_RECORD",
        "JSONB_TO_RECORDSET",
        "JSONB_TYPEOF",
        "JSON_AGG",
        "JSON_ARRAY_ELEMENTS",
        "JSON_ARRAY_ELEMENTS_TEXT",
        "JSON_ARRAY_LENGTH",
        "JSON_BUILD_ARRAY",
        "JSON_BUILD_OBJECT",
        "JSON_EACH",
        "JSON_EACH_TEXT",
        "JSON_EXTRACT_PATH",
        "JSON_EXTRACT_PATH_TEXT",
        "JSON_OBJECT",
        "JSON_OBJECT_AGG",
        "JSON_OBJECT_KEYS",
        "JSON_POPULATE_RECORD",
        "JSON_POPULATE_RECORDSET",
        "JSON_STRIP_NULLS",
        "JSON_TO_RECORD",
        "JSON_TO_RECORDSET",
        "JSON_TYPEOF",
        "ROW_TO_JSON",
        "TO_JSON",
        "TO_JSONB",
        "TO_TIMESTAMP"
    ],
    // https://www.postgresql.org/docs/14/functions-sequence.html
    sequence: [
        "CURRVAL",
        "LASTVAL",
        "NEXTVAL",
        "SETVAL"
    ],
    // https://www.postgresql.org/docs/14/functions-conditional.html
    conditional: [
        // 'CASE',
        "COALESCE",
        "GREATEST",
        "LEAST",
        "NULLIF"
    ],
    // https://www.postgresql.org/docs/14/functions-array.html
    array: [
        "ARRAY_AGG",
        "ARRAY_APPEND",
        "ARRAY_CAT",
        "ARRAY_DIMS",
        "ARRAY_FILL",
        "ARRAY_LENGTH",
        "ARRAY_LOWER",
        "ARRAY_NDIMS",
        "ARRAY_POSITION",
        "ARRAY_POSITIONS",
        "ARRAY_PREPEND",
        "ARRAY_REMOVE",
        "ARRAY_REPLACE",
        "ARRAY_TO_STRING",
        "ARRAY_UPPER",
        "CARDINALITY",
        "STRING_TO_ARRAY",
        "TRIM_ARRAY",
        "UNNEST"
    ],
    // https://www.postgresql.org/docs/14/functions-range.html
    range: [
        "ISEMPTY",
        "LOWER",
        "LOWER_INC",
        "LOWER_INF",
        "MULTIRANGE",
        "RANGE_MERGE",
        "UPPER",
        "UPPER_INC",
        "UPPER_INF"
    ],
    // https://www.postgresql.org/docs/14/functions-aggregate.html
    aggregate: [
        // 'ANY',
        "ARRAY_AGG",
        "AVG",
        "BIT_AND",
        "BIT_OR",
        "BIT_XOR",
        "BOOL_AND",
        "BOOL_OR",
        "COALESCE",
        "CORR",
        "COUNT",
        "COVAR_POP",
        "COVAR_SAMP",
        "CUME_DIST",
        "DENSE_RANK",
        "EVERY",
        "GROUPING",
        "JSONB_AGG",
        "JSONB_OBJECT_AGG",
        "JSON_AGG",
        "JSON_OBJECT_AGG",
        "MAX",
        "MIN",
        "MODE",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "PERCENT_RANK",
        "RANGE_AGG",
        "RANGE_INTERSECT_AGG",
        "RANK",
        "REGR_AVGX",
        "REGR_AVGY",
        "REGR_COUNT",
        "REGR_INTERCEPT",
        "REGR_R2",
        "REGR_SLOPE",
        "REGR_SXX",
        "REGR_SXY",
        "REGR_SYY",
        // 'SOME',
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STRING_AGG",
        "SUM",
        "TO_JSON",
        "TO_JSONB",
        "VARIANCE",
        "VAR_POP",
        "VAR_SAMP",
        "XMLAGG"
    ],
    // https://www.postgresql.org/docs/14/functions-window.html
    window: [
        "CUME_DIST",
        "DENSE_RANK",
        "FIRST_VALUE",
        "LAG",
        "LAST_VALUE",
        "LEAD",
        "NTH_VALUE",
        "NTILE",
        "PERCENT_RANK",
        "RANK",
        "ROW_NUMBER"
    ],
    // https://www.postgresql.org/docs/14/functions-srf.html
    set: [
        "GENERATE_SERIES",
        "GENERATE_SUBSCRIPTS"
    ],
    // https://www.postgresql.org/docs/14/functions-info.html
    sysInfo: [
        "ACLDEFAULT",
        "ACLEXPLODE",
        "COL_DESCRIPTION",
        "CURRENT_CATALOG",
        "CURRENT_DATABASE",
        "CURRENT_QUERY",
        "CURRENT_ROLE",
        "CURRENT_SCHEMA",
        "CURRENT_SCHEMAS",
        "CURRENT_USER",
        "FORMAT_TYPE",
        "HAS_ANY_COLUMN_PRIVILEGE",
        "HAS_COLUMN_PRIVILEGE",
        "HAS_DATABASE_PRIVILEGE",
        "HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE",
        "HAS_FUNCTION_PRIVILEGE",
        "HAS_LANGUAGE_PRIVILEGE",
        "HAS_SCHEMA_PRIVILEGE",
        "HAS_SEQUENCE_PRIVILEGE",
        "HAS_SERVER_PRIVILEGE",
        "HAS_TABLESPACE_PRIVILEGE",
        "HAS_TABLE_PRIVILEGE",
        "HAS_TYPE_PRIVILEGE",
        "INET_CLIENT_ADDR",
        "INET_CLIENT_PORT",
        "INET_SERVER_ADDR",
        "INET_SERVER_PORT",
        "MAKEACLITEM",
        "OBJ_DESCRIPTION",
        "PG_BACKEND_PID",
        "PG_BLOCKING_PIDS",
        "PG_COLLATION_IS_VISIBLE",
        "PG_CONF_LOAD_TIME",
        "PG_CONTROL_CHECKPOINT",
        "PG_CONTROL_INIT",
        "PG_CONTROL_SYSTEM",
        "PG_CONVERSION_IS_VISIBLE",
        "PG_CURRENT_LOGFILE",
        "PG_CURRENT_SNAPSHOT",
        "PG_CURRENT_XACT_ID",
        "PG_CURRENT_XACT_ID_IF_ASSIGNED",
        "PG_DESCRIBE_OBJECT",
        "PG_FUNCTION_IS_VISIBLE",
        "PG_GET_CATALOG_FOREIGN_KEYS",
        "PG_GET_CONSTRAINTDEF",
        "PG_GET_EXPR",
        "PG_GET_FUNCTIONDEF",
        "PG_GET_FUNCTION_ARGUMENTS",
        "PG_GET_FUNCTION_IDENTITY_ARGUMENTS",
        "PG_GET_FUNCTION_RESULT",
        "PG_GET_INDEXDEF",
        "PG_GET_KEYWORDS",
        "PG_GET_OBJECT_ADDRESS",
        "PG_GET_OWNED_SEQUENCE",
        "PG_GET_RULEDEF",
        "PG_GET_SERIAL_SEQUENCE",
        "PG_GET_STATISTICSOBJDEF",
        "PG_GET_TRIGGERDEF",
        "PG_GET_USERBYID",
        "PG_GET_VIEWDEF",
        "PG_HAS_ROLE",
        "PG_IDENTIFY_OBJECT",
        "PG_IDENTIFY_OBJECT_AS_ADDRESS",
        "PG_INDEXAM_HAS_PROPERTY",
        "PG_INDEX_COLUMN_HAS_PROPERTY",
        "PG_INDEX_HAS_PROPERTY",
        "PG_IS_OTHER_TEMP_SCHEMA",
        "PG_JIT_AVAILABLE",
        "PG_LAST_COMMITTED_XACT",
        "PG_LISTENING_CHANNELS",
        "PG_MY_TEMP_SCHEMA",
        "PG_NOTIFICATION_QUEUE_USAGE",
        "PG_OPCLASS_IS_VISIBLE",
        "PG_OPERATOR_IS_VISIBLE",
        "PG_OPFAMILY_IS_VISIBLE",
        "PG_OPTIONS_TO_TABLE",
        "PG_POSTMASTER_START_TIME",
        "PG_SAFE_SNAPSHOT_BLOCKING_PIDS",
        "PG_SNAPSHOT_XIP",
        "PG_SNAPSHOT_XMAX",
        "PG_SNAPSHOT_XMIN",
        "PG_STATISTICS_OBJ_IS_VISIBLE",
        "PG_TABLESPACE_DATABASES",
        "PG_TABLESPACE_LOCATION",
        "PG_TABLE_IS_VISIBLE",
        "PG_TRIGGER_DEPTH",
        "PG_TS_CONFIG_IS_VISIBLE",
        "PG_TS_DICT_IS_VISIBLE",
        "PG_TS_PARSER_IS_VISIBLE",
        "PG_TS_TEMPLATE_IS_VISIBLE",
        "PG_TYPEOF",
        "PG_TYPE_IS_VISIBLE",
        "PG_VISIBLE_IN_SNAPSHOT",
        "PG_XACT_COMMIT_TIMESTAMP",
        "PG_XACT_COMMIT_TIMESTAMP_ORIGIN",
        "PG_XACT_STATUS",
        "PQSERVERVERSION",
        "ROW_SECURITY_ACTIVE",
        "SESSION_USER",
        "SHOBJ_DESCRIPTION",
        "TO_REGCLASS",
        "TO_REGCOLLATION",
        "TO_REGNAMESPACE",
        "TO_REGOPER",
        "TO_REGOPERATOR",
        "TO_REGPROC",
        "TO_REGPROCEDURE",
        "TO_REGROLE",
        "TO_REGTYPE",
        "TXID_CURRENT",
        "TXID_CURRENT_IF_ASSIGNED",
        "TXID_CURRENT_SNAPSHOT",
        "TXID_SNAPSHOT_XIP",
        "TXID_SNAPSHOT_XMAX",
        "TXID_SNAPSHOT_XMIN",
        "TXID_STATUS",
        "TXID_VISIBLE_IN_SNAPSHOT",
        "USER",
        "VERSION"
    ],
    // https://www.postgresql.org/docs/14/functions-admin.html
    sysAdmin: [
        "BRIN_DESUMMARIZE_RANGE",
        "BRIN_SUMMARIZE_NEW_VALUES",
        "BRIN_SUMMARIZE_RANGE",
        "CONVERT_FROM",
        "CURRENT_SETTING",
        "GIN_CLEAN_PENDING_LIST",
        "PG_ADVISORY_LOCK",
        "PG_ADVISORY_LOCK_SHARED",
        "PG_ADVISORY_UNLOCK",
        "PG_ADVISORY_UNLOCK_ALL",
        "PG_ADVISORY_UNLOCK_SHARED",
        "PG_ADVISORY_XACT_LOCK",
        "PG_ADVISORY_XACT_LOCK_SHARED",
        "PG_BACKUP_START_TIME",
        "PG_CANCEL_BACKEND",
        "PG_COLLATION_ACTUAL_VERSION",
        "PG_COLUMN_COMPRESSION",
        "PG_COLUMN_SIZE",
        "PG_COPY_LOGICAL_REPLICATION_SLOT",
        "PG_COPY_PHYSICAL_REPLICATION_SLOT",
        "PG_CREATE_LOGICAL_REPLICATION_SLOT",
        "PG_CREATE_PHYSICAL_REPLICATION_SLOT",
        "PG_CREATE_RESTORE_POINT",
        "PG_CURRENT_WAL_FLUSH_LSN",
        "PG_CURRENT_WAL_INSERT_LSN",
        "PG_CURRENT_WAL_LSN",
        "PG_DATABASE_SIZE",
        "PG_DROP_REPLICATION_SLOT",
        "PG_EXPORT_SNAPSHOT",
        "PG_FILENODE_RELATION",
        "PG_GET_WAL_REPLAY_PAUSE_STATE",
        "PG_IMPORT_SYSTEM_COLLATIONS",
        "PG_INDEXES_SIZE",
        "PG_IS_IN_BACKUP",
        "PG_IS_IN_RECOVERY",
        "PG_IS_WAL_REPLAY_PAUSED",
        "PG_LAST_WAL_RECEIVE_LSN",
        "PG_LAST_WAL_REPLAY_LSN",
        "PG_LAST_XACT_REPLAY_TIMESTAMP",
        "PG_LOGICAL_EMIT_MESSAGE",
        "PG_LOGICAL_SLOT_GET_BINARY_CHANGES",
        "PG_LOGICAL_SLOT_GET_CHANGES",
        "PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES",
        "PG_LOGICAL_SLOT_PEEK_CHANGES",
        "PG_LOG_BACKEND_MEMORY_CONTEXTS",
        "PG_LS_ARCHIVE_STATUSDIR",
        "PG_LS_DIR",
        "PG_LS_LOGDIR",
        "PG_LS_TMPDIR",
        "PG_LS_WALDIR",
        "PG_PARTITION_ANCESTORS",
        "PG_PARTITION_ROOT",
        "PG_PARTITION_TREE",
        "PG_PROMOTE",
        "PG_READ_BINARY_FILE",
        "PG_READ_FILE",
        "PG_RELATION_FILENODE",
        "PG_RELATION_FILEPATH",
        "PG_RELATION_SIZE",
        "PG_RELOAD_CONF",
        "PG_REPLICATION_ORIGIN_ADVANCE",
        "PG_REPLICATION_ORIGIN_CREATE",
        "PG_REPLICATION_ORIGIN_DROP",
        "PG_REPLICATION_ORIGIN_OID",
        "PG_REPLICATION_ORIGIN_PROGRESS",
        "PG_REPLICATION_ORIGIN_SESSION_IS_SETUP",
        "PG_REPLICATION_ORIGIN_SESSION_PROGRESS",
        "PG_REPLICATION_ORIGIN_SESSION_RESET",
        "PG_REPLICATION_ORIGIN_SESSION_SETUP",
        "PG_REPLICATION_ORIGIN_XACT_RESET",
        "PG_REPLICATION_ORIGIN_XACT_SETUP",
        "PG_REPLICATION_SLOT_ADVANCE",
        "PG_ROTATE_LOGFILE",
        "PG_SIZE_BYTES",
        "PG_SIZE_PRETTY",
        "PG_START_BACKUP",
        "PG_STAT_FILE",
        "PG_STOP_BACKUP",
        "PG_SWITCH_WAL",
        "PG_TABLESPACE_SIZE",
        "PG_TABLE_SIZE",
        "PG_TERMINATE_BACKEND",
        "PG_TOTAL_RELATION_SIZE",
        "PG_TRY_ADVISORY_LOCK",
        "PG_TRY_ADVISORY_LOCK_SHARED",
        "PG_TRY_ADVISORY_XACT_LOCK",
        "PG_TRY_ADVISORY_XACT_LOCK_SHARED",
        "PG_WALFILE_NAME",
        "PG_WALFILE_NAME_OFFSET",
        "PG_WAL_LSN_DIFF",
        "PG_WAL_REPLAY_PAUSE",
        "PG_WAL_REPLAY_RESUME",
        "SET_CONFIG"
    ],
    // https://www.postgresql.org/docs/14/functions-trigger.html
    trigger: [
        "SUPPRESS_REDUNDANT_UPDATES_TRIGGER",
        "TSVECTOR_UPDATE_TRIGGER",
        "TSVECTOR_UPDATE_TRIGGER_COLUMN"
    ],
    // https://www.postgresql.org/docs/14/functions-event-triggers.html
    eventTrigger: [
        "PG_EVENT_TRIGGER_DDL_COMMANDS",
        "PG_EVENT_TRIGGER_DROPPED_OBJECTS",
        "PG_EVENT_TRIGGER_TABLE_REWRITE_OID",
        "PG_EVENT_TRIGGER_TABLE_REWRITE_REASON",
        "PG_GET_OBJECT_ADDRESS"
    ],
    // https://www.postgresql.org/docs/14/functions-statistics.html
    stats: [
        "PG_MCV_LIST_ITEMS"
    ],
    cast: [
        "CAST"
    ],
    // Parameterized data types
    // https://www.postgresql.org/docs/current/datatype.html
    dataTypes: [
        "BIT",
        "BIT VARYING",
        "CHARACTER",
        "CHARACTER VARYING",
        "VARCHAR",
        "CHAR",
        "DECIMAL",
        "NUMERIC",
        "TIME",
        "TIMESTAMP",
        "ENUM"
    ]
}), uF = ke({
    // https://www.postgresql.org/docs/14/sql-keywords-appendix.html
    all: [
        "ABORT",
        "ABSOLUTE",
        "ACCESS",
        "ACTION",
        "ADD",
        "ADMIN",
        "AFTER",
        "AGGREGATE",
        "ALL",
        // reserved
        "ALSO",
        "ALTER",
        "ALWAYS",
        "ANALYSE",
        // reserved
        "ANALYZE",
        // reserved
        "AND",
        // reserved
        "ANY",
        // reserved
        "ARRAY",
        // reserved, requires AS
        "AS",
        // reserved, requires AS
        "ASC",
        // reserved
        "ASENSITIVE",
        "ASSERTION",
        "ASSIGNMENT",
        "ASYMMETRIC",
        // reserved
        "AT",
        "ATOMIC",
        "ATTACH",
        "ATTRIBUTE",
        "AUTHORIZATION",
        // reserved (can be function or type)
        "BACKWARD",
        "BEFORE",
        "BEGIN",
        "BETWEEN",
        // (cannot be function or type)
        "BIGINT",
        // (cannot be function or type)
        "BINARY",
        // reserved (can be function or type)
        "BIT",
        // (cannot be function or type)
        "BOOLEAN",
        // (cannot be function or type)
        "BOTH",
        // reserved
        "BREADTH",
        "BY",
        "CACHE",
        "CALL",
        "CALLED",
        "CASCADE",
        "CASCADED",
        "CASE",
        // reserved
        "CAST",
        // reserved
        "CATALOG",
        "CHAIN",
        "CHAR",
        // (cannot be function or type), requires AS
        "CHARACTER",
        // (cannot be function or type), requires AS
        "CHARACTERISTICS",
        "CHECK",
        // reserved
        "CHECKPOINT",
        "CLASS",
        "CLOSE",
        "CLUSTER",
        "COALESCE",
        // (cannot be function or type)
        "COLLATE",
        // reserved
        "COLLATION",
        // reserved (can be function or type)
        "COLUMN",
        // reserved
        "COLUMNS",
        "COMMENT",
        "COMMENTS",
        "COMMIT",
        "COMMITTED",
        "COMPRESSION",
        "CONCURRENTLY",
        // reserved (can be function or type)
        "CONFIGURATION",
        "CONFLICT",
        "CONNECTION",
        "CONSTRAINT",
        // reserved
        "CONSTRAINTS",
        "CONTENT",
        "CONTINUE",
        "CONVERSION",
        "COPY",
        "COST",
        "CREATE",
        // reserved, requires AS
        "CROSS",
        // reserved (can be function or type)
        "CSV",
        "CUBE",
        "CURRENT",
        "CURRENT_CATALOG",
        // reserved
        "CURRENT_DATE",
        // reserved
        "CURRENT_ROLE",
        // reserved
        "CURRENT_SCHEMA",
        // reserved (can be function or type)
        "CURRENT_TIME",
        // reserved
        "CURRENT_TIMESTAMP",
        // reserved
        "CURRENT_USER",
        // reserved
        "CURSOR",
        "CYCLE",
        "DATA",
        "DATABASE",
        "DAY",
        // requires AS
        "DEALLOCATE",
        "DEC",
        // (cannot be function or type)
        "DECIMAL",
        // (cannot be function or type)
        "DECLARE",
        "DEFAULT",
        // reserved
        "DEFAULTS",
        "DEFERRABLE",
        // reserved
        "DEFERRED",
        "DEFINER",
        "DELETE",
        "DELIMITER",
        "DELIMITERS",
        "DEPENDS",
        "DEPTH",
        "DESC",
        // reserved
        "DETACH",
        "DICTIONARY",
        "DISABLE",
        "DISCARD",
        "DISTINCT",
        // reserved
        "DO",
        // reserved
        "DOCUMENT",
        "DOMAIN",
        "DOUBLE",
        "DROP",
        "EACH",
        "ELSE",
        // reserved
        "ENABLE",
        "ENCODING",
        "ENCRYPTED",
        "END",
        // reserved
        "ENUM",
        "ESCAPE",
        "EVENT",
        "EXCEPT",
        // reserved, requires AS
        "EXCLUDE",
        "EXCLUDING",
        "EXCLUSIVE",
        "EXECUTE",
        "EXISTS",
        // (cannot be function or type)
        "EXPLAIN",
        "EXPRESSION",
        "EXTENSION",
        "EXTERNAL",
        "EXTRACT",
        // (cannot be function or type)
        "FALSE",
        // reserved
        "FAMILY",
        "FETCH",
        // reserved, requires AS
        "FILTER",
        // requires AS
        "FINALIZE",
        "FIRST",
        "FLOAT",
        // (cannot be function or type)
        "FOLLOWING",
        "FOR",
        // reserved, requires AS
        "FORCE",
        "FOREIGN",
        // reserved
        "FORWARD",
        "FREEZE",
        // reserved (can be function or type)
        "FROM",
        // reserved, requires AS
        "FULL",
        // reserved (can be function or type)
        "FUNCTION",
        "FUNCTIONS",
        "GENERATED",
        "GLOBAL",
        "GRANT",
        // reserved, requires AS
        "GRANTED",
        "GREATEST",
        // (cannot be function or type)
        "GROUP",
        // reserved, requires AS
        "GROUPING",
        // (cannot be function or type)
        "GROUPS",
        "HANDLER",
        "HAVING",
        // reserved, requires AS
        "HEADER",
        "HOLD",
        "HOUR",
        // requires AS
        "IDENTITY",
        "IF",
        "ILIKE",
        // reserved (can be function or type)
        "IMMEDIATE",
        "IMMUTABLE",
        "IMPLICIT",
        "IMPORT",
        "IN",
        // reserved
        "INCLUDE",
        "INCLUDING",
        "INCREMENT",
        "INDEX",
        "INDEXES",
        "INHERIT",
        "INHERITS",
        "INITIALLY",
        // reserved
        "INLINE",
        "INNER",
        // reserved (can be function or type)
        "INOUT",
        // (cannot be function or type)
        "INPUT",
        "INSENSITIVE",
        "INSERT",
        "INSTEAD",
        "INT",
        // (cannot be function or type)
        "INTEGER",
        // (cannot be function or type)
        "INTERSECT",
        // reserved, requires AS
        "INTERVAL",
        // (cannot be function or type)
        "INTO",
        // reserved, requires AS
        "INVOKER",
        "IS",
        // reserved (can be function or type)
        "ISNULL",
        // reserved (can be function or type), requires AS
        "ISOLATION",
        "JOIN",
        // reserved (can be function or type)
        "KEY",
        "LABEL",
        "LANGUAGE",
        "LARGE",
        "LAST",
        "LATERAL",
        // reserved
        "LEADING",
        // reserved
        "LEAKPROOF",
        "LEAST",
        // (cannot be function or type)
        "LEFT",
        // reserved (can be function or type)
        "LEVEL",
        "LIKE",
        // reserved (can be function or type)
        "LIMIT",
        // reserved, requires AS
        "LISTEN",
        "LOAD",
        "LOCAL",
        "LOCALTIME",
        // reserved
        "LOCALTIMESTAMP",
        // reserved
        "LOCATION",
        "LOCK",
        "LOCKED",
        "LOGGED",
        "MAPPING",
        "MATCH",
        "MATERIALIZED",
        "MAXVALUE",
        "METHOD",
        "MINUTE",
        // requires AS
        "MINVALUE",
        "MODE",
        "MONTH",
        // requires AS
        "MOVE",
        "NAME",
        "NAMES",
        "NATIONAL",
        // (cannot be function or type)
        "NATURAL",
        // reserved (can be function or type)
        "NCHAR",
        // (cannot be function or type)
        "NEW",
        "NEXT",
        "NFC",
        "NFD",
        "NFKC",
        "NFKD",
        "NO",
        "NONE",
        // (cannot be function or type)
        "NORMALIZE",
        // (cannot be function or type)
        "NORMALIZED",
        "NOT",
        // reserved
        "NOTHING",
        "NOTIFY",
        "NOTNULL",
        // reserved (can be function or type), requires AS
        "NOWAIT",
        "NULL",
        // reserved
        "NULLIF",
        // (cannot be function or type)
        "NULLS",
        "NUMERIC",
        // (cannot be function or type)
        "OBJECT",
        "OF",
        "OFF",
        "OFFSET",
        // reserved, requires AS
        "OIDS",
        "OLD",
        "ON",
        // reserved, requires AS
        "ONLY",
        // reserved
        "OPERATOR",
        "OPTION",
        "OPTIONS",
        "OR",
        // reserved
        "ORDER",
        // reserved, requires AS
        "ORDINALITY",
        "OTHERS",
        "OUT",
        // (cannot be function or type)
        "OUTER",
        // reserved (can be function or type)
        "OVER",
        // requires AS
        "OVERLAPS",
        // reserved (can be function or type), requires AS
        "OVERLAY",
        // (cannot be function or type)
        "OVERRIDING",
        "OWNED",
        "OWNER",
        "PARALLEL",
        "PARSER",
        "PARTIAL",
        "PARTITION",
        "PASSING",
        "PASSWORD",
        "PLACING",
        // reserved
        "PLANS",
        "POLICY",
        "POSITION",
        // (cannot be function or type)
        "PRECEDING",
        "PRECISION",
        // (cannot be function or type), requires AS
        "PREPARE",
        "PREPARED",
        "PRESERVE",
        "PRIMARY",
        // reserved
        "PRIOR",
        "PRIVILEGES",
        "PROCEDURAL",
        "PROCEDURE",
        "PROCEDURES",
        "PROGRAM",
        "PUBLICATION",
        "QUOTE",
        "RANGE",
        "READ",
        "REAL",
        // (cannot be function or type)
        "REASSIGN",
        "RECHECK",
        "RECURSIVE",
        "REF",
        "REFERENCES",
        // reserved
        "REFERENCING",
        "REFRESH",
        "REINDEX",
        "RELATIVE",
        "RELEASE",
        "RENAME",
        "REPEATABLE",
        "REPLACE",
        "REPLICA",
        "RESET",
        "RESTART",
        "RESTRICT",
        "RETURN",
        "RETURNING",
        // reserved, requires AS
        "RETURNS",
        "REVOKE",
        "RIGHT",
        // reserved (can be function or type)
        "ROLE",
        "ROLLBACK",
        "ROLLUP",
        "ROUTINE",
        "ROUTINES",
        "ROW",
        // (cannot be function or type)
        "ROWS",
        "RULE",
        "SAVEPOINT",
        "SCHEMA",
        "SCHEMAS",
        "SCROLL",
        "SEARCH",
        "SECOND",
        // requires AS
        "SECURITY",
        "SELECT",
        // reserved
        "SEQUENCE",
        "SEQUENCES",
        "SERIALIZABLE",
        "SERVER",
        "SESSION",
        "SESSION_USER",
        // reserved
        "SET",
        "SETOF",
        // (cannot be function or type)
        "SETS",
        "SHARE",
        "SHOW",
        "SIMILAR",
        // reserved (can be function or type)
        "SIMPLE",
        "SKIP",
        "SMALLINT",
        // (cannot be function or type)
        "SNAPSHOT",
        "SOME",
        // reserved
        "SQL",
        "STABLE",
        "STANDALONE",
        "START",
        "STATEMENT",
        "STATISTICS",
        "STDIN",
        "STDOUT",
        "STORAGE",
        "STORED",
        "STRICT",
        "STRIP",
        "SUBSCRIPTION",
        "SUBSTRING",
        // (cannot be function or type)
        "SUPPORT",
        "SYMMETRIC",
        // reserved
        "SYSID",
        "SYSTEM",
        "TABLE",
        // reserved
        "TABLES",
        "TABLESAMPLE",
        // reserved (can be function or type)
        "TABLESPACE",
        "TEMP",
        "TEMPLATE",
        "TEMPORARY",
        "TEXT",
        "THEN",
        // reserved
        "TIES",
        "TIME",
        // (cannot be function or type)
        "TIMESTAMP",
        // (cannot be function or type)
        "TO",
        // reserved, requires AS
        "TRAILING",
        // reserved
        "TRANSACTION",
        "TRANSFORM",
        "TREAT",
        // (cannot be function or type)
        "TRIGGER",
        "TRIM",
        // (cannot be function or type)
        "TRUE",
        // reserved
        "TRUNCATE",
        "TRUSTED",
        "TYPE",
        "TYPES",
        "UESCAPE",
        "UNBOUNDED",
        "UNCOMMITTED",
        "UNENCRYPTED",
        "UNION",
        // reserved, requires AS
        "UNIQUE",
        // reserved
        "UNKNOWN",
        "UNLISTEN",
        "UNLOGGED",
        "UNTIL",
        "UPDATE",
        "USER",
        // reserved
        "USING",
        // reserved
        "VACUUM",
        "VALID",
        "VALIDATE",
        "VALIDATOR",
        "VALUE",
        "VALUES",
        // (cannot be function or type)
        "VARCHAR",
        // (cannot be function or type)
        "VARIADIC",
        // reserved
        "VARYING",
        // requires AS
        "VERBOSE",
        // reserved (can be function or type)
        "VERSION",
        "VIEW",
        "VIEWS",
        "VOLATILE",
        "WHEN",
        // reserved
        "WHERE",
        // reserved, requires AS
        "WHITESPACE",
        "WINDOW",
        // reserved, requires AS
        "WITH",
        // reserved, requires AS
        "WITHIN",
        // requires AS
        "WITHOUT",
        // requires AS
        "WORK",
        "WRAPPER",
        "WRITE",
        "XML",
        "XMLATTRIBUTES",
        // (cannot be function or type)
        "XMLCONCAT",
        // (cannot be function or type)
        "XMLELEMENT",
        // (cannot be function or type)
        "XMLEXISTS",
        // (cannot be function or type)
        "XMLFOREST",
        // (cannot be function or type)
        "XMLNAMESPACES",
        // (cannot be function or type)
        "XMLPARSE",
        // (cannot be function or type)
        "XMLPI",
        // (cannot be function or type)
        "XMLROOT",
        // (cannot be function or type)
        "XMLSERIALIZE",
        // (cannot be function or type)
        "XMLTABLE",
        // (cannot be function or type)
        "YEAR",
        // requires AS
        "YES",
        "ZONE"
    ]
}), EF = Q([
    "SELECT [ALL | DISTINCT]"
]), dF = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY [ALL | DISTINCT]",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    "FETCH {FIRST | NEXT}",
    "FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]",
    // Data manipulation
    // - insert:
    "INSERT INTO",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    "CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW",
    "CREATE MATERIALIZED VIEW [IF NOT EXISTS]",
    "CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]",
    // other
    "RETURNING"
]), h1 = Q([
    // - update:
    "UPDATE [ONLY]",
    "WHERE CURRENT OF",
    // - insert:
    "ON CONFLICT",
    // - delete:
    "DELETE FROM [ONLY]",
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE [IF EXISTS] [ONLY]",
    "ALTER TABLE ALL IN TABLESPACE",
    "RENAME [COLUMN]",
    "RENAME TO",
    "ADD [COLUMN] [IF NOT EXISTS]",
    "DROP [COLUMN] [IF EXISTS]",
    "ALTER [COLUMN]",
    "[SET DATA] TYPE",
    // for alter column
    "{SET | DROP} DEFAULT",
    // for alter column
    "{SET | DROP} NOT NULL",
    // for alter column
    // - truncate:
    "TRUNCATE [TABLE] [ONLY]",
    // other
    "SET SCHEMA",
    "AFTER",
    // https://www.postgresql.org/docs/14/sql-commands.html
    "ABORT",
    "ALTER AGGREGATE",
    "ALTER COLLATION",
    "ALTER CONVERSION",
    "ALTER DATABASE",
    "ALTER DEFAULT PRIVILEGES",
    "ALTER DOMAIN",
    "ALTER EVENT TRIGGER",
    "ALTER EXTENSION",
    "ALTER FOREIGN DATA WRAPPER",
    "ALTER FOREIGN TABLE",
    "ALTER FUNCTION",
    "ALTER GROUP",
    "ALTER INDEX",
    "ALTER LANGUAGE",
    "ALTER LARGE OBJECT",
    "ALTER MATERIALIZED VIEW",
    "ALTER OPERATOR",
    "ALTER OPERATOR CLASS",
    "ALTER OPERATOR FAMILY",
    "ALTER POLICY",
    "ALTER PROCEDURE",
    "ALTER PUBLICATION",
    "ALTER ROLE",
    "ALTER ROUTINE",
    "ALTER RULE",
    "ALTER SCHEMA",
    "ALTER SEQUENCE",
    "ALTER SERVER",
    "ALTER STATISTICS",
    "ALTER SUBSCRIPTION",
    "ALTER SYSTEM",
    "ALTER TABLESPACE",
    "ALTER TEXT SEARCH CONFIGURATION",
    "ALTER TEXT SEARCH DICTIONARY",
    "ALTER TEXT SEARCH PARSER",
    "ALTER TEXT SEARCH TEMPLATE",
    "ALTER TRIGGER",
    "ALTER TYPE",
    "ALTER USER",
    "ALTER USER MAPPING",
    "ALTER VIEW",
    "ANALYZE",
    "BEGIN",
    "CALL",
    "CHECKPOINT",
    "CLOSE",
    "CLUSTER",
    "COMMENT",
    "COMMIT",
    "COMMIT PREPARED",
    "COPY",
    "CREATE ACCESS METHOD",
    "CREATE AGGREGATE",
    "CREATE CAST",
    "CREATE COLLATION",
    "CREATE CONVERSION",
    "CREATE DATABASE",
    "CREATE DOMAIN",
    "CREATE EVENT TRIGGER",
    "CREATE EXTENSION",
    "CREATE FOREIGN DATA WRAPPER",
    "CREATE FOREIGN TABLE",
    "CREATE FUNCTION",
    "CREATE GROUP",
    "CREATE INDEX",
    "CREATE LANGUAGE",
    "CREATE OPERATOR",
    "CREATE OPERATOR CLASS",
    "CREATE OPERATOR FAMILY",
    "CREATE POLICY",
    "CREATE PROCEDURE",
    "CREATE PUBLICATION",
    "CREATE ROLE",
    "CREATE RULE",
    "CREATE SCHEMA",
    "CREATE SEQUENCE",
    "CREATE SERVER",
    "CREATE STATISTICS",
    "CREATE SUBSCRIPTION",
    "CREATE TABLESPACE",
    "CREATE TEXT SEARCH CONFIGURATION",
    "CREATE TEXT SEARCH DICTIONARY",
    "CREATE TEXT SEARCH PARSER",
    "CREATE TEXT SEARCH TEMPLATE",
    "CREATE TRANSFORM",
    "CREATE TRIGGER",
    "CREATE TYPE",
    "CREATE USER",
    "CREATE USER MAPPING",
    "DEALLOCATE",
    "DECLARE",
    "DISCARD",
    "DROP ACCESS METHOD",
    "DROP AGGREGATE",
    "DROP CAST",
    "DROP COLLATION",
    "DROP CONVERSION",
    "DROP DATABASE",
    "DROP DOMAIN",
    "DROP EVENT TRIGGER",
    "DROP EXTENSION",
    "DROP FOREIGN DATA WRAPPER",
    "DROP FOREIGN TABLE",
    "DROP FUNCTION",
    "DROP GROUP",
    "DROP INDEX",
    "DROP LANGUAGE",
    "DROP MATERIALIZED VIEW",
    "DROP OPERATOR",
    "DROP OPERATOR CLASS",
    "DROP OPERATOR FAMILY",
    "DROP OWNED",
    "DROP POLICY",
    "DROP PROCEDURE",
    "DROP PUBLICATION",
    "DROP ROLE",
    "DROP ROUTINE",
    "DROP RULE",
    "DROP SCHEMA",
    "DROP SEQUENCE",
    "DROP SERVER",
    "DROP STATISTICS",
    "DROP SUBSCRIPTION",
    "DROP TABLESPACE",
    "DROP TEXT SEARCH CONFIGURATION",
    "DROP TEXT SEARCH DICTIONARY",
    "DROP TEXT SEARCH PARSER",
    "DROP TEXT SEARCH TEMPLATE",
    "DROP TRANSFORM",
    "DROP TRIGGER",
    "DROP TYPE",
    "DROP USER",
    "DROP USER MAPPING",
    "DROP VIEW",
    "EXECUTE",
    "EXPLAIN",
    "FETCH",
    "GRANT",
    "IMPORT FOREIGN SCHEMA",
    "LISTEN",
    "LOAD",
    "LOCK",
    "MOVE",
    "NOTIFY",
    "PREPARE",
    "PREPARE TRANSACTION",
    "REASSIGN OWNED",
    "REFRESH MATERIALIZED VIEW",
    "REINDEX",
    "RELEASE SAVEPOINT",
    "RESET",
    "REVOKE",
    "ROLLBACK",
    "ROLLBACK PREPARED",
    "ROLLBACK TO SAVEPOINT",
    "SAVEPOINT",
    "SECURITY LABEL",
    "SELECT INTO",
    "SET CONSTRAINTS",
    "SET ROLE",
    "SET SESSION AUTHORIZATION",
    "SET TRANSACTION",
    "SHOW",
    "START TRANSACTION",
    "UNLISTEN",
    "VACUUM"
]), fF = Q([
    "UNION [ALL | DISTINCT]",
    "EXCEPT [ALL | DISTINCT]",
    "INTERSECT [ALL | DISTINCT]"
]), pF = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"
]), TF = Q([
    "ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]",
    "{ROWS | RANGE | GROUPS} BETWEEN",
    // https://www.postgresql.org/docs/current/datatype-datetime.html
    "{TIMESTAMP | TIME} {WITH | WITHOUT} TIME ZONE",
    // comparison operator
    "IS [NOT] DISTINCT FROM"
]), hF = {
    tokenizerOptions: {
        reservedSelect: EF,
        reservedClauses: [
            ...dF,
            ...h1
        ],
        reservedSetOperations: fF,
        reservedJoins: pF,
        reservedPhrases: TF,
        reservedKeywords: uF,
        reservedFunctionNames: cF,
        nestedBlockComments: !0,
        extraParens: [
            "[]"
        ],
        stringTypes: [
            "$$",
            {
                quote: "''-qq",
                prefixes: [
                    "U&"
                ]
            },
            {
                quote: "''-bs",
                prefixes: [
                    "E"
                ],
                requirePrefix: !0
            },
            {
                quote: "''-raw",
                prefixes: [
                    "B",
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            {
                quote: '""-qq',
                prefixes: [
                    "U&"
                ]
            }
        ],
        identChars: {
            rest: "$"
        },
        paramTypes: {
            numbered: [
                "$"
            ]
        },
        operators: [
            // Arithmetic
            "%",
            "^",
            "|/",
            "||/",
            "@",
            // Assignment
            ":=",
            // Bitwise
            "&",
            "|",
            "#",
            "~",
            "<<",
            ">>",
            // Byte comparison
            "~>~",
            "~<~",
            "~>=~",
            "~<=~",
            // Geometric
            "@-@",
            "@@",
            "##",
            "<->",
            "&&",
            "&<",
            "&>",
            "<<|",
            "&<|",
            "|>>",
            "|&>",
            "<^",
            "^>",
            "?#",
            "?-",
            "?|",
            "?-|",
            "?||",
            "@>",
            "<@",
            "~=",
            // JSON
            "?",
            "@?",
            "?&",
            "->",
            "->>",
            "#>",
            "#>>",
            "#-",
            // Named function params
            "=>",
            // Network address
            ">>=",
            "<<=",
            // Pattern matching
            "~~",
            "~~*",
            "!~~",
            "!~~*",
            // POSIX RegExp
            "~",
            "~*",
            "!~",
            "!~*",
            // Range/multirange
            "-|-",
            // String concatenation
            "||",
            // Text search
            "@@@",
            "!!",
            // Trigram/trigraph
            "<%",
            "%>",
            "<<%",
            "%>>",
            "<<->",
            "<->>",
            "<<<->",
            "<->>>",
            // Type cast
            "::"
        ]
    },
    formatOptions: {
        alwaysDenseOperators: [
            "::"
        ],
        onelineClauses: h1
    }
}, AF = ke({
    // https://docs.aws.amazon.com/redshift/latest/dg/c_Aggregate_Functions.html
    aggregate: [
        "ANY_VALUE",
        "APPROXIMATE PERCENTILE_DISC",
        "AVG",
        "COUNT",
        "LISTAGG",
        "MAX",
        "MEDIAN",
        "MIN",
        "PERCENTILE_CONT",
        "STDDEV_SAMP",
        "STDDEV_POP",
        "SUM",
        "VAR_SAMP",
        "VAR_POP"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/c_Array_Functions.html
    array: [
        "array",
        "array_concat",
        "array_flatten",
        "get_array_length",
        "split_to_array",
        "subarray"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/c_bitwise_aggregate_functions.html
    bitwise: [
        "BIT_AND",
        "BIT_OR",
        "BOOL_AND",
        "BOOL_OR"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/c_conditional_expressions.html
    conditional: [
        "COALESCE",
        "DECODE",
        "GREATEST",
        "LEAST",
        "NVL",
        "NVL2",
        "NULLIF"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/Date_functions_header.html
    dateTime: [
        "ADD_MONTHS",
        "AT TIME ZONE",
        "CONVERT_TIMEZONE",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "DATE_CMP",
        "DATE_CMP_TIMESTAMP",
        "DATE_CMP_TIMESTAMPTZ",
        "DATE_PART_YEAR",
        "DATEADD",
        "DATEDIFF",
        "DATE_PART",
        "DATE_TRUNC",
        "EXTRACT",
        "GETDATE",
        "INTERVAL_CMP",
        "LAST_DAY",
        "MONTHS_BETWEEN",
        "NEXT_DAY",
        "SYSDATE",
        "TIMEOFDAY",
        "TIMESTAMP_CMP",
        "TIMESTAMP_CMP_DATE",
        "TIMESTAMP_CMP_TIMESTAMPTZ",
        "TIMESTAMPTZ_CMP",
        "TIMESTAMPTZ_CMP_DATE",
        "TIMESTAMPTZ_CMP_TIMESTAMP",
        "TIMEZONE",
        "TO_TIMESTAMP",
        "TRUNC"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/geospatial-functions.html
    spatial: [
        "AddBBox",
        "DropBBox",
        "GeometryType",
        "ST_AddPoint",
        "ST_Angle",
        "ST_Area",
        "ST_AsBinary",
        "ST_AsEWKB",
        "ST_AsEWKT",
        "ST_AsGeoJSON",
        "ST_AsText",
        "ST_Azimuth",
        "ST_Boundary",
        "ST_Collect",
        "ST_Contains",
        "ST_ContainsProperly",
        "ST_ConvexHull",
        "ST_CoveredBy",
        "ST_Covers",
        "ST_Crosses",
        "ST_Dimension",
        "ST_Disjoint",
        "ST_Distance",
        "ST_DistanceSphere",
        "ST_DWithin",
        "ST_EndPoint",
        "ST_Envelope",
        "ST_Equals",
        "ST_ExteriorRing",
        "ST_Force2D",
        "ST_Force3D",
        "ST_Force3DM",
        "ST_Force3DZ",
        "ST_Force4D",
        "ST_GeometryN",
        "ST_GeometryType",
        "ST_GeomFromEWKB",
        "ST_GeomFromEWKT",
        "ST_GeomFromText",
        "ST_GeomFromWKB",
        "ST_InteriorRingN",
        "ST_Intersects",
        "ST_IsPolygonCCW",
        "ST_IsPolygonCW",
        "ST_IsClosed",
        "ST_IsCollection",
        "ST_IsEmpty",
        "ST_IsSimple",
        "ST_IsValid",
        "ST_Length",
        "ST_LengthSphere",
        "ST_Length2D",
        "ST_LineFromMultiPoint",
        "ST_LineInterpolatePoint",
        "ST_M",
        "ST_MakeEnvelope",
        "ST_MakeLine",
        "ST_MakePoint",
        "ST_MakePolygon",
        "ST_MemSize",
        "ST_MMax",
        "ST_MMin",
        "ST_Multi",
        "ST_NDims",
        "ST_NPoints",
        "ST_NRings",
        "ST_NumGeometries",
        "ST_NumInteriorRings",
        "ST_NumPoints",
        "ST_Perimeter",
        "ST_Perimeter2D",
        "ST_Point",
        "ST_PointN",
        "ST_Points",
        "ST_Polygon",
        "ST_RemovePoint",
        "ST_Reverse",
        "ST_SetPoint",
        "ST_SetSRID",
        "ST_Simplify",
        "ST_SRID",
        "ST_StartPoint",
        "ST_Touches",
        "ST_Within",
        "ST_X",
        "ST_XMax",
        "ST_XMin",
        "ST_Y",
        "ST_YMax",
        "ST_YMin",
        "ST_Z",
        "ST_ZMax",
        "ST_ZMin",
        "SupportsBBox"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/hash-functions.html
    hash: [
        "CHECKSUM",
        "FUNC_SHA1",
        "FNV_HASH",
        "MD5",
        "SHA",
        "SHA1",
        "SHA2"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/hyperloglog-functions.html
    hyperLogLog: [
        "HLL",
        "HLL_CREATE_SKETCH",
        "HLL_CARDINALITY",
        "HLL_COMBINE"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/json-functions.html
    json: [
        "IS_VALID_JSON",
        "IS_VALID_JSON_ARRAY",
        "JSON_ARRAY_LENGTH",
        "JSON_EXTRACT_ARRAY_ELEMENT_TEXT",
        "JSON_EXTRACT_PATH_TEXT",
        "JSON_PARSE",
        "JSON_SERIALIZE"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/Math_functions.html
    math: [
        "ABS",
        "ACOS",
        "ASIN",
        "ATAN",
        "ATAN2",
        "CBRT",
        "CEILING",
        "CEIL",
        "COS",
        "COT",
        "DEGREES",
        "DEXP",
        "DLOG1",
        "DLOG10",
        "EXP",
        "FLOOR",
        "LN",
        "LOG",
        "MOD",
        "PI",
        "POWER",
        "RADIANS",
        "RANDOM",
        "ROUND",
        "SIN",
        "SIGN",
        "SQRT",
        "TAN",
        "TO_HEX",
        "TRUNC"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/ml-function.html
    machineLearning: [
        "EXPLAIN_MODEL"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/String_functions_header.html
    string: [
        "ASCII",
        "BPCHARCMP",
        "BTRIM",
        "BTTEXT_PATTERN_CMP",
        "CHAR_LENGTH",
        "CHARACTER_LENGTH",
        "CHARINDEX",
        "CHR",
        "COLLATE",
        "CONCAT",
        "CRC32",
        "DIFFERENCE",
        "INITCAP",
        "LEFT",
        "RIGHT",
        "LEN",
        "LENGTH",
        "LOWER",
        "LPAD",
        "RPAD",
        "LTRIM",
        "OCTETINDEX",
        "OCTET_LENGTH",
        "POSITION",
        "QUOTE_IDENT",
        "QUOTE_LITERAL",
        "REGEXP_COUNT",
        "REGEXP_INSTR",
        "REGEXP_REPLACE",
        "REGEXP_SUBSTR",
        "REPEAT",
        "REPLACE",
        "REPLICATE",
        "REVERSE",
        "RTRIM",
        "SOUNDEX",
        "SPLIT_PART",
        "STRPOS",
        "STRTOL",
        "SUBSTRING",
        "TEXTLEN",
        "TRANSLATE",
        "TRIM",
        "UPPER"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/c_Type_Info_Functions.html
    superType: [
        "decimal_precision",
        "decimal_scale",
        "is_array",
        "is_bigint",
        "is_boolean",
        "is_char",
        "is_decimal",
        "is_float",
        "is_integer",
        "is_object",
        "is_scalar",
        "is_smallint",
        "is_varchar",
        "json_typeof"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/c_Window_functions.html
    window: [
        "AVG",
        "COUNT",
        "CUME_DIST",
        "DENSE_RANK",
        "FIRST_VALUE",
        "LAST_VALUE",
        "LAG",
        "LEAD",
        "LISTAGG",
        "MAX",
        "MEDIAN",
        "MIN",
        "NTH_VALUE",
        "NTILE",
        "PERCENT_RANK",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "RANK",
        "RATIO_TO_REPORT",
        "ROW_NUMBER",
        "STDDEV_SAMP",
        "STDDEV_POP",
        "SUM",
        "VAR_SAMP",
        "VAR_POP"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/r_Data_type_formatting.html
    dataType: [
        "CAST",
        "CONVERT",
        "TO_CHAR",
        "TO_DATE",
        "TO_NUMBER",
        "TEXT_TO_INT_ALT",
        "TEXT_TO_NUMERIC_ALT"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/r_System_administration_functions.html
    sysAdmin: [
        "CHANGE_QUERY_PRIORITY",
        "CHANGE_SESSION_PRIORITY",
        "CHANGE_USER_PRIORITY",
        "CURRENT_SETTING",
        "PG_CANCEL_BACKEND",
        "PG_TERMINATE_BACKEND",
        "REBOOT_CLUSTER",
        "SET_CONFIG"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/r_System_information_functions.html
    sysInfo: [
        "CURRENT_AWS_ACCOUNT",
        "CURRENT_DATABASE",
        "CURRENT_NAMESPACE",
        "CURRENT_SCHEMA",
        "CURRENT_SCHEMAS",
        "CURRENT_USER",
        "CURRENT_USER_ID",
        "HAS_ASSUMEROLE_PRIVILEGE",
        "HAS_DATABASE_PRIVILEGE",
        "HAS_SCHEMA_PRIVILEGE",
        "HAS_TABLE_PRIVILEGE",
        "PG_BACKEND_PID",
        "PG_GET_COLS",
        "PG_GET_GRANTEE_BY_IAM_ROLE",
        "PG_GET_IAM_ROLE_BY_USER",
        "PG_GET_LATE_BINDING_VIEW_COLS",
        "PG_LAST_COPY_COUNT",
        "PG_LAST_COPY_ID",
        "PG_LAST_UNLOAD_ID",
        "PG_LAST_QUERY_ID",
        "PG_LAST_UNLOAD_COUNT",
        "SESSION_USER",
        "SLICE_NUM",
        "USER",
        "VERSION"
    ],
    dataTypes: [
        "DECIMAL",
        "NUMERIC",
        "CHAR",
        "CHARACTER",
        "VARCHAR",
        "CHARACTER VARYING",
        "NCHAR",
        "NVARCHAR",
        "VARBYTE"
    ]
}), SF = ke({
    // https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html
    standard: [
        "AES128",
        "AES256",
        "ALL",
        "ALLOWOVERWRITE",
        "ANY",
        "ARRAY",
        "AS",
        "ASC",
        "AUTHORIZATION",
        "BACKUP",
        "BETWEEN",
        "BINARY",
        "BOTH",
        "CHECK",
        "COLUMN",
        "CONSTRAINT",
        "CREATE",
        "CROSS",
        "DEFAULT",
        "DEFERRABLE",
        "DEFLATE",
        "DEFRAG",
        "DESC",
        "DISABLE",
        "DISTINCT",
        "DO",
        "ENABLE",
        "ENCODE",
        "ENCRYPT",
        "ENCRYPTION",
        "EXPLICIT",
        "FALSE",
        "FOR",
        "FOREIGN",
        "FREEZE",
        "FROM",
        "FULL",
        "GLOBALDICT256",
        "GLOBALDICT64K",
        "GROUP",
        "IDENTITY",
        "IGNORE",
        "ILIKE",
        "IN",
        "INITIALLY",
        "INNER",
        "INTO",
        "IS",
        "ISNULL",
        "LANGUAGE",
        "LEADING",
        "LIKE",
        "LIMIT",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "LUN",
        "LUNS",
        "MINUS",
        "NATURAL",
        "NEW",
        "NOT",
        "NOTNULL",
        "NULL",
        "NULLS",
        "OFF",
        "OFFLINE",
        "OFFSET",
        "OID",
        "OLD",
        "ON",
        "ONLY",
        "OPEN",
        "ORDER",
        "OUTER",
        "OVERLAPS",
        "PARALLEL",
        "PARTITION",
        "PERCENT",
        "PERMISSIONS",
        "PLACING",
        "PRIMARY",
        "RECOVER",
        "REFERENCES",
        "REJECTLOG",
        "RESORT",
        "RESPECT",
        "RESTORE",
        "SIMILAR",
        "SNAPSHOT",
        "SOME",
        "SYSTEM",
        "TABLE",
        "TAG",
        "TDES",
        "THEN",
        "TIMESTAMP",
        "TO",
        "TOP",
        "TRAILING",
        "TRUE",
        "UNIQUE",
        "USING",
        "VERBOSE",
        "WALLET",
        "WITHOUT"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html
    dataConversionParams: [
        "ACCEPTANYDATE",
        "ACCEPTINVCHARS",
        "BLANKSASNULL",
        "DATEFORMAT",
        "EMPTYASNULL",
        "ENCODING",
        "ESCAPE",
        "EXPLICIT_IDS",
        "FILLRECORD",
        "IGNOREBLANKLINES",
        "IGNOREHEADER",
        "REMOVEQUOTES",
        "ROUNDEC",
        "TIMEFORMAT",
        "TRIMBLANKS",
        "TRUNCATECOLUMNS"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-load.html
    dataLoadParams: [
        "COMPROWS",
        "COMPUPDATE",
        "MAXERROR",
        "NOLOAD",
        "STATUPDATE"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-format.html
    dataFormatParams: [
        "FORMAT",
        "CSV",
        "DELIMITER",
        "FIXEDWIDTH",
        "SHAPEFILE",
        "AVRO",
        "JSON",
        "PARQUET",
        "ORC"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-authorization.html
    copyAuthParams: [
        "ACCESS_KEY_ID",
        "CREDENTIALS",
        "ENCRYPTED",
        "IAM_ROLE",
        "MASTER_SYMMETRIC_KEY",
        "SECRET_ACCESS_KEY",
        "SESSION_TOKEN"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-file-compression.html
    copyCompressionParams: [
        "BZIP2",
        "GZIP",
        "LZOP",
        "ZSTD"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/r_COPY-alphabetical-parm-list.html
    copyMiscParams: [
        "MANIFEST",
        "READRATIO",
        "REGION",
        "SSH"
    ],
    // https://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html
    compressionEncodings: [
        "RAW",
        "AZ64",
        "BYTEDICT",
        "DELTA",
        "DELTA32K",
        "LZO",
        "MOSTLY8",
        "MOSTLY16",
        "MOSTLY32",
        "RUNLENGTH",
        "TEXT255",
        "TEXT32K"
    ],
    misc: [
        // CREATE EXTERNAL SCHEMA (https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html)
        "CATALOG_ROLE",
        "SECRET_ARN",
        "EXTERNAL",
        // https://docs.aws.amazon.com/redshift/latest/dg/c_choosing_dist_sort.html
        "AUTO",
        "EVEN",
        "KEY",
        "PREDICATE",
        // ANALYZE | ANALYSE (https://docs.aws.amazon.com/redshift/latest/dg/r_ANALYZE.html)
        // unknown
        "COMPRESSION"
    ],
    /**
   * Other keywords not included:
   * STL: https://docs.aws.amazon.com/redshift/latest/dg/c_intro_STL_tables.html
   * SVCS: https://docs.aws.amazon.com/redshift/latest/dg/svcs_views.html
   * SVL: https://docs.aws.amazon.com/redshift/latest/dg/svl_views.html
   * SVV: https://docs.aws.amazon.com/redshift/latest/dg/svv_views.html
   */ // https://docs.aws.amazon.com/redshift/latest/dg/r_Character_types.html#r_Character_types-text-and-bpchar-types
    dataTypes: [
        "BPCHAR",
        "TEXT"
    ]
}), RF = Q([
    "SELECT [ALL | DISTINCT]"
]), mF = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    // Data manipulation
    // - insert:
    "INSERT INTO",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    "CREATE [OR REPLACE | MATERIALIZED] VIEW",
    "CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]"
]), A1 = Q([
    // - update:
    "UPDATE",
    // - delete:
    "DELETE [FROM]",
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE",
    "ALTER TABLE APPEND",
    "ADD [COLUMN]",
    "DROP [COLUMN]",
    "RENAME TO",
    "RENAME COLUMN",
    "ALTER COLUMN",
    "TYPE",
    // for alter column
    "ENCODE",
    // for alter column
    // - truncate:
    "TRUNCATE [TABLE]",
    // https://docs.aws.amazon.com/redshift/latest/dg/c_SQL_commands.html
    "ABORT",
    "ALTER DATABASE",
    "ALTER DATASHARE",
    "ALTER DEFAULT PRIVILEGES",
    "ALTER GROUP",
    "ALTER MATERIALIZED VIEW",
    "ALTER PROCEDURE",
    "ALTER SCHEMA",
    "ALTER USER",
    "ANALYSE",
    "ANALYZE",
    "ANALYSE COMPRESSION",
    "ANALYZE COMPRESSION",
    "BEGIN",
    "CALL",
    "CANCEL",
    "CLOSE",
    "COMMENT",
    "COMMIT",
    "COPY",
    "CREATE DATABASE",
    "CREATE DATASHARE",
    "CREATE EXTERNAL FUNCTION",
    "CREATE EXTERNAL SCHEMA",
    "CREATE EXTERNAL TABLE",
    "CREATE FUNCTION",
    "CREATE GROUP",
    "CREATE LIBRARY",
    "CREATE MODEL",
    "CREATE PROCEDURE",
    "CREATE SCHEMA",
    "CREATE USER",
    "DEALLOCATE",
    "DECLARE",
    "DESC DATASHARE",
    "DROP DATABASE",
    "DROP DATASHARE",
    "DROP FUNCTION",
    "DROP GROUP",
    "DROP LIBRARY",
    "DROP MODEL",
    "DROP MATERIALIZED VIEW",
    "DROP PROCEDURE",
    "DROP SCHEMA",
    "DROP USER",
    "DROP VIEW",
    "DROP",
    "EXECUTE",
    "EXPLAIN",
    "FETCH",
    "GRANT",
    "LOCK",
    "PREPARE",
    "REFRESH MATERIALIZED VIEW",
    "RESET",
    "REVOKE",
    "ROLLBACK",
    "SELECT INTO",
    "SET SESSION AUTHORIZATION",
    "SET SESSION CHARACTERISTICS",
    "SHOW",
    "SHOW EXTERNAL TABLE",
    "SHOW MODEL",
    "SHOW DATASHARES",
    "SHOW PROCEDURE",
    "SHOW TABLE",
    "SHOW VIEW",
    "START TRANSACTION",
    "UNLOAD",
    "VACUUM"
]), _F = Q([
    "UNION [ALL]",
    "EXCEPT",
    "INTERSECT",
    "MINUS"
]), NF = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"
]), IF = Q([
    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html
    "NULL AS",
    // https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html
    "DATA CATALOG",
    "HIVE METASTORE",
    // in window specifications
    "{ROWS | RANGE} BETWEEN"
]), OF = {
    tokenizerOptions: {
        reservedSelect: RF,
        reservedClauses: [
            ...mF,
            ...A1
        ],
        reservedSetOperations: _F,
        reservedJoins: NF,
        reservedPhrases: IF,
        reservedKeywords: SF,
        reservedFunctionNames: AF,
        stringTypes: [
            "''-qq"
        ],
        identTypes: [
            '""-qq'
        ],
        identChars: {
            first: "#"
        },
        paramTypes: {
            numbered: [
                "$"
            ]
        },
        operators: [
            "^",
            "%",
            "@",
            "|/",
            "||/",
            "&",
            "|",
            // '#', conflicts with first char of identifier
            "~",
            "<<",
            ">>",
            "||",
            "::"
        ]
    },
    formatOptions: {
        alwaysDenseOperators: [
            "::"
        ],
        onelineClauses: A1
    }
}, CF = ke({
    // https://deepkb.com/CO_000013/en/kb/IMPORT-fbfa59f0-2bf1-31fe-bb7b-0f9efe9932c6/spark-sql-keywords
    all: [
        "ADD",
        "AFTER",
        "ALL",
        "ALTER",
        "ANALYZE",
        "AND",
        "ANTI",
        "ANY",
        "ARCHIVE",
        "ARRAY",
        "AS",
        "ASC",
        "AT",
        "AUTHORIZATION",
        "BETWEEN",
        "BOTH",
        "BUCKET",
        "BUCKETS",
        "BY",
        "CACHE",
        "CASCADE",
        "CAST",
        "CHANGE",
        "CHECK",
        "CLEAR",
        "CLUSTER",
        "CLUSTERED",
        "CODEGEN",
        "COLLATE",
        "COLLECTION",
        "COLUMN",
        "COLUMNS",
        "COMMENT",
        "COMMIT",
        "COMPACT",
        "COMPACTIONS",
        "COMPUTE",
        "CONCATENATE",
        "CONSTRAINT",
        "COST",
        "CREATE",
        "CROSS",
        "CUBE",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "DATA",
        "DATABASE",
        "DATABASES",
        "DAY",
        "DBPROPERTIES",
        "DEFINED",
        "DELETE",
        "DELIMITED",
        "DESC",
        "DESCRIBE",
        "DFS",
        "DIRECTORIES",
        "DIRECTORY",
        "DISTINCT",
        "DISTRIBUTE",
        "DIV",
        "DROP",
        "ESCAPE",
        "ESCAPED",
        "EXCEPT",
        "EXCHANGE",
        "EXISTS",
        "EXPORT",
        "EXTENDED",
        "EXTERNAL",
        "EXTRACT",
        "FALSE",
        "FETCH",
        "FIELDS",
        "FILTER",
        "FILEFORMAT",
        "FIRST",
        "FIRST_VALUE",
        "FOLLOWING",
        "FOR",
        "FOREIGN",
        "FORMAT",
        "FORMATTED",
        "FULL",
        "FUNCTION",
        "FUNCTIONS",
        "GLOBAL",
        "GRANT",
        "GROUP",
        "GROUPING",
        "HOUR",
        "IF",
        "IGNORE",
        "IMPORT",
        "IN",
        "INDEX",
        "INDEXES",
        "INNER",
        "INPATH",
        "INPUTFORMAT",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "IS",
        "ITEMS",
        "KEYS",
        "LAST",
        "LAST_VALUE",
        "LATERAL",
        "LAZY",
        "LEADING",
        "LEFT",
        "LIKE",
        "LINES",
        "LIST",
        "LOCAL",
        "LOCATION",
        "LOCK",
        "LOCKS",
        "LOGICAL",
        "MACRO",
        "MAP",
        "MATCHED",
        "MERGE",
        "MINUTE",
        "MONTH",
        "MSCK",
        "NAMESPACE",
        "NAMESPACES",
        "NATURAL",
        "NO",
        "NOT",
        "NULL",
        "NULLS",
        "OF",
        "ONLY",
        "OPTION",
        "OPTIONS",
        "OR",
        "ORDER",
        "OUT",
        "OUTER",
        "OUTPUTFORMAT",
        "OVER",
        "OVERLAPS",
        "OVERLAY",
        "OVERWRITE",
        "OWNER",
        "PARTITION",
        "PARTITIONED",
        "PARTITIONS",
        "PERCENT",
        "PLACING",
        "POSITION",
        "PRECEDING",
        "PRIMARY",
        "PRINCIPALS",
        "PROPERTIES",
        "PURGE",
        "QUERY",
        "RANGE",
        "RECORDREADER",
        "RECORDWRITER",
        "RECOVER",
        "REDUCE",
        "REFERENCES",
        "RENAME",
        "REPAIR",
        "REPLACE",
        "RESPECT",
        "RESTRICT",
        "REVOKE",
        "RIGHT",
        "RLIKE",
        "ROLE",
        "ROLES",
        "ROLLBACK",
        "ROLLUP",
        "ROW",
        "ROWS",
        "SCHEMA",
        "SECOND",
        "SELECT",
        "SEMI",
        "SEPARATED",
        "SERDE",
        "SERDEPROPERTIES",
        "SESSION_USER",
        "SETS",
        "SHOW",
        "SKEWED",
        "SOME",
        "SORT",
        "SORTED",
        "START",
        "STATISTICS",
        "STORED",
        "STRATIFY",
        "STRUCT",
        "SUBSTR",
        "SUBSTRING",
        "TABLE",
        "TABLES",
        "TBLPROPERTIES",
        "TEMPORARY",
        "TERMINATED",
        "THEN",
        "TO",
        "TOUCH",
        "TRAILING",
        "TRANSACTION",
        "TRANSACTIONS",
        "TRIM",
        "TRUE",
        "TRUNCATE",
        "UNARCHIVE",
        "UNBOUNDED",
        "UNCACHE",
        "UNIQUE",
        "UNKNOWN",
        "UNLOCK",
        "UNSET",
        "USE",
        "USER",
        "USING",
        "VIEW",
        "WINDOW",
        "YEAR",
        // other
        "ANALYSE",
        "ARRAY_ZIP",
        "COALESCE",
        "CONTAINS",
        "CONVERT",
        "DAYS",
        "DAY_HOUR",
        "DAY_MINUTE",
        "DAY_SECOND",
        "DECODE",
        "DEFAULT",
        "DISTINCTROW",
        "ENCODE",
        "EXPLODE",
        "EXPLODE_OUTER",
        "FIXED",
        "GREATEST",
        "GROUP_CONCAT",
        "HOURS",
        "HOUR_MINUTE",
        "HOUR_SECOND",
        "IFNULL",
        "LEAST",
        "LEVEL",
        "MINUTE_SECOND",
        "NULLIF",
        "OFFSET",
        "ON",
        "OPTIMIZE",
        "REGEXP",
        "SEPARATOR",
        "SIZE",
        "STRING",
        "TYPE",
        "TYPES",
        "UNSIGNED",
        "VARIABLES",
        "YEAR_MONTH"
    ]
}), gF = ke({
    // http://spark.apache.org/docs/latest/sql-ref-functions.html
    //
    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#aggregate-functions
    aggregate: [
        // 'ANY',
        "APPROX_COUNT_DISTINCT",
        "APPROX_PERCENTILE",
        "AVG",
        "BIT_AND",
        "BIT_OR",
        "BIT_XOR",
        "BOOL_AND",
        "BOOL_OR",
        "COLLECT_LIST",
        "COLLECT_SET",
        "CORR",
        "COUNT",
        "COUNT",
        "COUNT",
        "COUNT_IF",
        "COUNT_MIN_SKETCH",
        "COVAR_POP",
        "COVAR_SAMP",
        "EVERY",
        "FIRST",
        "FIRST_VALUE",
        "GROUPING",
        "GROUPING_ID",
        "KURTOSIS",
        "LAST",
        "LAST_VALUE",
        "MAX",
        "MAX_BY",
        "MEAN",
        "MIN",
        "MIN_BY",
        "PERCENTILE",
        "PERCENTILE",
        "PERCENTILE_APPROX",
        "SKEWNESS",
        // 'SOME',
        "STD",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "SUM",
        "VAR_POP",
        "VAR_SAMP",
        "VARIANCE"
    ],
    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#window-functions
    window: [
        "CUME_DIST",
        "DENSE_RANK",
        "LAG",
        "LEAD",
        "NTH_VALUE",
        "NTILE",
        "PERCENT_RANK",
        "RANK",
        "ROW_NUMBER"
    ],
    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#array-functions
    array: [
        "ARRAY",
        "ARRAY_CONTAINS",
        "ARRAY_DISTINCT",
        "ARRAY_EXCEPT",
        "ARRAY_INTERSECT",
        "ARRAY_JOIN",
        "ARRAY_MAX",
        "ARRAY_MIN",
        "ARRAY_POSITION",
        "ARRAY_REMOVE",
        "ARRAY_REPEAT",
        "ARRAY_UNION",
        "ARRAYS_OVERLAP",
        "ARRAYS_ZIP",
        "FLATTEN",
        "SEQUENCE",
        "SHUFFLE",
        "SLICE",
        "SORT_ARRAY"
    ],
    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#map-functions
    map: [
        "ELEMENT_AT",
        "ELEMENT_AT",
        "MAP",
        "MAP_CONCAT",
        "MAP_ENTRIES",
        "MAP_FROM_ARRAYS",
        "MAP_FROM_ENTRIES",
        "MAP_KEYS",
        "MAP_VALUES",
        "STR_TO_MAP"
    ],
    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#date-and-timestamp-functions
    datetime: [
        "ADD_MONTHS",
        "CURRENT_DATE",
        "CURRENT_DATE",
        "CURRENT_TIMESTAMP",
        "CURRENT_TIMESTAMP",
        "CURRENT_TIMEZONE",
        "DATE_ADD",
        "DATE_FORMAT",
        "DATE_FROM_UNIX_DATE",
        "DATE_PART",
        "DATE_SUB",
        "DATE_TRUNC",
        "DATEDIFF",
        "DAY",
        "DAYOFMONTH",
        "DAYOFWEEK",
        "DAYOFYEAR",
        "EXTRACT",
        "FROM_UNIXTIME",
        "FROM_UTC_TIMESTAMP",
        "HOUR",
        "LAST_DAY",
        "MAKE_DATE",
        "MAKE_DT_INTERVAL",
        "MAKE_INTERVAL",
        "MAKE_TIMESTAMP",
        "MAKE_YM_INTERVAL",
        "MINUTE",
        "MONTH",
        "MONTHS_BETWEEN",
        "NEXT_DAY",
        "NOW",
        "QUARTER",
        "SECOND",
        "SESSION_WINDOW",
        "TIMESTAMP_MICROS",
        "TIMESTAMP_MILLIS",
        "TIMESTAMP_SECONDS",
        "TO_DATE",
        "TO_TIMESTAMP",
        "TO_UNIX_TIMESTAMP",
        "TO_UTC_TIMESTAMP",
        "TRUNC",
        "UNIX_DATE",
        "UNIX_MICROS",
        "UNIX_MILLIS",
        "UNIX_SECONDS",
        "UNIX_TIMESTAMP",
        "WEEKDAY",
        "WEEKOFYEAR",
        "WINDOW",
        "YEAR"
    ],
    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#json-functions
    json: [
        "FROM_JSON",
        "GET_JSON_OBJECT",
        "JSON_ARRAY_LENGTH",
        "JSON_OBJECT_KEYS",
        "JSON_TUPLE",
        "SCHEMA_OF_JSON",
        "TO_JSON"
    ],
    // http://spark.apache.org/docs/latest/api/sql/index.html
    misc: [
        "ABS",
        "ACOS",
        "ACOSH",
        "AGGREGATE",
        "ARRAY_SORT",
        "ASCII",
        "ASIN",
        "ASINH",
        "ASSERT_TRUE",
        "ATAN",
        "ATAN2",
        "ATANH",
        "BASE64",
        "BIGINT",
        "BIN",
        "BINARY",
        "BIT_COUNT",
        "BIT_GET",
        "BIT_LENGTH",
        "BOOLEAN",
        "BROUND",
        "BTRIM",
        "CARDINALITY",
        "CBRT",
        "CEIL",
        "CEILING",
        "CHAR",
        "CHAR_LENGTH",
        "CHARACTER_LENGTH",
        "CHR",
        "CONCAT",
        "CONCAT_WS",
        "CONV",
        "COS",
        "COSH",
        "COT",
        "CRC32",
        "CURRENT_CATALOG",
        "CURRENT_DATABASE",
        "CURRENT_USER",
        "DATE",
        "DECIMAL",
        "DEGREES",
        "DOUBLE",
        // 'E',
        "ELT",
        "EXP",
        "EXPM1",
        "FACTORIAL",
        "FIND_IN_SET",
        "FLOAT",
        "FLOOR",
        "FORALL",
        "FORMAT_NUMBER",
        "FORMAT_STRING",
        "FROM_CSV",
        "GETBIT",
        "HASH",
        "HEX",
        "HYPOT",
        "INITCAP",
        "INLINE",
        "INLINE_OUTER",
        "INPUT_FILE_BLOCK_LENGTH",
        "INPUT_FILE_BLOCK_START",
        "INPUT_FILE_NAME",
        "INSTR",
        "INT",
        "ISNAN",
        "ISNOTNULL",
        "ISNULL",
        "JAVA_METHOD",
        "LCASE",
        "LEFT",
        "LENGTH",
        "LEVENSHTEIN",
        "LN",
        "LOCATE",
        "LOG",
        "LOG10",
        "LOG1P",
        "LOG2",
        "LOWER",
        "LPAD",
        "LTRIM",
        "MAP_FILTER",
        "MAP_ZIP_WITH",
        "MD5",
        "MOD",
        "MONOTONICALLY_INCREASING_ID",
        "NAMED_STRUCT",
        "NANVL",
        "NEGATIVE",
        "NVL",
        "NVL2",
        "OCTET_LENGTH",
        "OVERLAY",
        "PARSE_URL",
        "PI",
        "PMOD",
        "POSEXPLODE",
        "POSEXPLODE_OUTER",
        "POSITION",
        "POSITIVE",
        "POW",
        "POWER",
        "PRINTF",
        "RADIANS",
        "RAISE_ERROR",
        "RAND",
        "RANDN",
        "RANDOM",
        "REFLECT",
        "REGEXP_EXTRACT",
        "REGEXP_EXTRACT_ALL",
        "REGEXP_LIKE",
        "REGEXP_REPLACE",
        "REPEAT",
        "REPLACE",
        "REVERSE",
        "RIGHT",
        "RINT",
        "ROUND",
        "RPAD",
        "RTRIM",
        "SCHEMA_OF_CSV",
        "SENTENCES",
        "SHA",
        "SHA1",
        "SHA2",
        "SHIFTLEFT",
        "SHIFTRIGHT",
        "SHIFTRIGHTUNSIGNED",
        "SIGN",
        "SIGNUM",
        "SIN",
        "SINH",
        "SMALLINT",
        "SOUNDEX",
        "SPACE",
        "SPARK_PARTITION_ID",
        "SPLIT",
        "SQRT",
        "STACK",
        "SUBSTR",
        "SUBSTRING",
        "SUBSTRING_INDEX",
        "TAN",
        "TANH",
        "TIMESTAMP",
        "TINYINT",
        "TO_CSV",
        "TRANSFORM_KEYS",
        "TRANSFORM_VALUES",
        "TRANSLATE",
        "TRIM",
        "TRY_ADD",
        "TRY_DIVIDE",
        "TYPEOF",
        "UCASE",
        "UNBASE64",
        "UNHEX",
        "UPPER",
        "UUID",
        "VERSION",
        "WIDTH_BUCKET",
        "XPATH",
        "XPATH_BOOLEAN",
        "XPATH_DOUBLE",
        "XPATH_FLOAT",
        "XPATH_INT",
        "XPATH_LONG",
        "XPATH_NUMBER",
        "XPATH_SHORT",
        "XPATH_STRING",
        "XXHASH64",
        "ZIP_WITH"
    ],
    cast: [
        "CAST"
    ],
    // Shorthand functions to use in place of CASE expression
    caseAbbrev: [
        "COALESCE",
        "NULLIF"
    ],
    // Parameterized data types
    // https://spark.apache.org/docs/latest/sql-ref-datatypes.html
    dataTypes: [
        "DECIMAL",
        "DEC",
        "NUMERIC",
        // No varchar type in Spark, only STRING. Added for the sake of tests
        "VARCHAR"
    ]
}), LF = Q([
    "SELECT [ALL | DISTINCT]"
]), yF = Q([
    // queries
    "WITH",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "SORT BY",
    "CLUSTER BY",
    "DISTRIBUTE BY",
    "LIMIT",
    // Data manipulation
    // - insert:
    "INSERT [INTO | OVERWRITE] [TABLE]",
    "VALUES",
    // - insert overwrite directory:
    //   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-insert-overwrite-directory.html
    "INSERT OVERWRITE [LOCAL] DIRECTORY",
    // - load:
    //   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-load.html
    "LOAD DATA [LOCAL] INPATH",
    "[OVERWRITE] INTO TABLE",
    // Data definition
    "CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]",
    "CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"
]), S1 = Q([
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE",
    "ADD COLUMNS",
    "DROP {COLUMN | COLUMNS}",
    "RENAME TO",
    "RENAME COLUMN",
    "ALTER COLUMN",
    // - truncate:
    "TRUNCATE TABLE",
    // other
    "LATERAL VIEW",
    "ALTER DATABASE",
    "ALTER VIEW",
    "CREATE DATABASE",
    "CREATE FUNCTION",
    "DROP DATABASE",
    "DROP FUNCTION",
    "DROP VIEW",
    "REPAIR TABLE",
    "USE DATABASE",
    // Data Retrieval
    "TABLESAMPLE",
    "PIVOT",
    "TRANSFORM",
    "EXPLAIN",
    // Auxiliary
    "ADD FILE",
    "ADD JAR",
    "ANALYZE TABLE",
    "CACHE TABLE",
    "CLEAR CACHE",
    "DESCRIBE DATABASE",
    "DESCRIBE FUNCTION",
    "DESCRIBE QUERY",
    "DESCRIBE TABLE",
    "LIST FILE",
    "LIST JAR",
    "REFRESH",
    "REFRESH TABLE",
    "REFRESH FUNCTION",
    "RESET",
    "SHOW COLUMNS",
    "SHOW CREATE TABLE",
    "SHOW DATABASES",
    "SHOW FUNCTIONS",
    "SHOW PARTITIONS",
    "SHOW TABLE EXTENDED",
    "SHOW TABLES",
    "SHOW TBLPROPERTIES",
    "SHOW VIEWS",
    "UNCACHE TABLE"
]), vF = Q([
    "UNION [ALL | DISTINCT]",
    "EXCEPT [ALL | DISTINCT]",
    "INTERSECT [ALL | DISTINCT]"
]), bF = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN",
    // non-standard-joins
    "[LEFT] {ANTI | SEMI} JOIN",
    "NATURAL [LEFT] {ANTI | SEMI} JOIN"
]), PF = Q([
    "ON DELETE",
    "ON UPDATE",
    "CURRENT ROW",
    "{ROWS | RANGE} BETWEEN"
]), MF = {
    tokenizerOptions: {
        reservedSelect: LF,
        reservedClauses: [
            ...yF,
            ...S1
        ],
        reservedSetOperations: vF,
        reservedJoins: bF,
        reservedPhrases: PF,
        supportsXor: !0,
        reservedKeywords: CF,
        reservedFunctionNames: gF,
        extraParens: [
            "[]"
        ],
        stringTypes: [
            "''-bs",
            '""-bs',
            {
                quote: "''-raw",
                prefixes: [
                    "R",
                    "X"
                ],
                requirePrefix: !0
            },
            {
                quote: '""-raw',
                prefixes: [
                    "R",
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            "``"
        ],
        variableTypes: [
            {
                quote: "{}",
                prefixes: [
                    "$"
                ],
                requirePrefix: !0
            }
        ],
        operators: [
            "%",
            "~",
            "^",
            "|",
            "&",
            "<=>",
            "==",
            "!",
            "||",
            "->"
        ],
        postProcess: DF
    },
    formatOptions: {
        onelineClauses: S1
    }
};
function DF(e) {
    return e.map((t, n)=>{
        const r = e[n - 1] || ji, s = e[n + 1] || ji;
        return li.WINDOW(t) && s.type === Z.OPEN_PAREN ? {
            ...t,
            type: Z.RESERVED_FUNCTION_NAME
        } : t.text === "ITEMS" && t.type === Z.RESERVED_KEYWORD && !(r.text === "COLLECTION" && s.text === "TERMINATED") ? {
            ...t,
            type: Z.IDENTIFIER,
            text: t.raw
        } : t;
    });
}
const wF = ke({
    // https://www.sqlite.org/lang_corefunc.html
    scalar: [
        "ABS",
        "CHANGES",
        "CHAR",
        "COALESCE",
        "FORMAT",
        "GLOB",
        "HEX",
        "IFNULL",
        "IIF",
        "INSTR",
        "LAST_INSERT_ROWID",
        "LENGTH",
        "LIKE",
        "LIKELIHOOD",
        "LIKELY",
        "LOAD_EXTENSION",
        "LOWER",
        "LTRIM",
        "NULLIF",
        "PRINTF",
        "QUOTE",
        "RANDOM",
        "RANDOMBLOB",
        "REPLACE",
        "ROUND",
        "RTRIM",
        "SIGN",
        "SOUNDEX",
        "SQLITE_COMPILEOPTION_GET",
        "SQLITE_COMPILEOPTION_USED",
        "SQLITE_OFFSET",
        "SQLITE_SOURCE_ID",
        "SQLITE_VERSION",
        "SUBSTR",
        "SUBSTRING",
        "TOTAL_CHANGES",
        "TRIM",
        "TYPEOF",
        "UNICODE",
        "UNLIKELY",
        "UPPER",
        "ZEROBLOB"
    ],
    // https://www.sqlite.org/lang_aggfunc.html
    aggregate: [
        "AVG",
        "COUNT",
        "GROUP_CONCAT",
        "MAX",
        "MIN",
        "SUM",
        "TOTAL"
    ],
    // https://www.sqlite.org/lang_datefunc.html
    datetime: [
        "DATE",
        "TIME",
        "DATETIME",
        "JULIANDAY",
        "UNIXEPOCH",
        "STRFTIME"
    ],
    // https://www.sqlite.org/windowfunctions.html#biwinfunc
    window: [
        "row_number",
        "rank",
        "dense_rank",
        "percent_rank",
        "cume_dist",
        "ntile",
        "lag",
        "lead",
        "first_value",
        "last_value",
        "nth_value"
    ],
    // https://www.sqlite.org/lang_mathfunc.html
    math: [
        "ACOS",
        "ACOSH",
        "ASIN",
        "ASINH",
        "ATAN",
        "ATAN2",
        "ATANH",
        "CEIL",
        "CEILING",
        "COS",
        "COSH",
        "DEGREES",
        "EXP",
        "FLOOR",
        "LN",
        "LOG",
        "LOG",
        "LOG10",
        "LOG2",
        "MOD",
        "PI",
        "POW",
        "POWER",
        "RADIANS",
        "SIN",
        "SINH",
        "SQRT",
        "TAN",
        "TANH",
        "TRUNC"
    ],
    // https://www.sqlite.org/json1.html
    json: [
        "JSON",
        "JSON_ARRAY",
        "JSON_ARRAY_LENGTH",
        "JSON_ARRAY_LENGTH",
        "JSON_EXTRACT",
        "JSON_INSERT",
        "JSON_OBJECT",
        "JSON_PATCH",
        "JSON_REMOVE",
        "JSON_REPLACE",
        "JSON_SET",
        "JSON_TYPE",
        "JSON_TYPE",
        "JSON_VALID",
        "JSON_QUOTE",
        "JSON_GROUP_ARRAY",
        "JSON_GROUP_OBJECT",
        "JSON_EACH",
        "JSON_TREE"
    ],
    cast: [
        "CAST"
    ],
    // SQLite allows parameters for all data types
    // Well, in fact it allows any word as a data type, e.g. CREATE TABLE foo (col1 madeupname(123));
    // https://www.sqlite.org/datatype3.html
    dataTypes: [
        "CHARACTER",
        "VARCHAR",
        "VARYING CHARACTER",
        "NCHAR",
        "NATIVE CHARACTER",
        "NVARCHAR",
        "NUMERIC",
        "DECIMAL"
    ]
}), xF = ke({
    // https://www.sqlite.org/lang_keywords.html
    all: [
        "ABORT",
        "ACTION",
        "ADD",
        "AFTER",
        "ALL",
        "ALTER",
        "AND",
        "ANY",
        "ARE",
        "ARRAY",
        "ALWAYS",
        "ANALYZE",
        "AS",
        "ASC",
        "ATTACH",
        "AUTOINCREMENT",
        "BEFORE",
        "BEGIN",
        "BETWEEN",
        "BY",
        "CASCADE",
        "CASE",
        "CAST",
        "CHECK",
        "COLLATE",
        "COLUMN",
        "COMMIT",
        "CONFLICT",
        "CONSTRAINT",
        "CREATE",
        "CROSS",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "DATABASE",
        "DEFAULT",
        "DEFERRABLE",
        "DEFERRED",
        "DELETE",
        "DESC",
        "DETACH",
        "DISTINCT",
        "DO",
        "DROP",
        "EACH",
        "ELSE",
        "END",
        "ESCAPE",
        "EXCEPT",
        "EXCLUDE",
        "EXCLUSIVE",
        "EXISTS",
        "EXPLAIN",
        "FAIL",
        "FILTER",
        "FIRST",
        "FOLLOWING",
        "FOR",
        "FOREIGN",
        "FROM",
        "FULL",
        "GENERATED",
        "GLOB",
        "GROUP",
        "GROUPS",
        "HAVING",
        "IF",
        "IGNORE",
        "IMMEDIATE",
        "IN",
        "INDEX",
        "INDEXED",
        "INITIALLY",
        "INNER",
        "INSERT",
        "INSTEAD",
        "INTERSECT",
        "INTO",
        "IS",
        "ISNULL",
        "JOIN",
        "KEY",
        "LAST",
        "LEFT",
        "LIKE",
        "LIMIT",
        "MATCH",
        "MATERIALIZED",
        "NATURAL",
        "NO",
        "NOT",
        "NOTHING",
        "NOTNULL",
        "NULL",
        "NULLS",
        "OF",
        "OFFSET",
        "ON",
        "ONLY",
        "OPEN",
        "OR",
        "ORDER",
        "OTHERS",
        "OUTER",
        "OVER",
        "PARTITION",
        "PLAN",
        "PRAGMA",
        "PRECEDING",
        "PRIMARY",
        "QUERY",
        "RAISE",
        "RANGE",
        "RECURSIVE",
        "REFERENCES",
        "REGEXP",
        "REINDEX",
        "RELEASE",
        "RENAME",
        "REPLACE",
        "RESTRICT",
        "RETURNING",
        "RIGHT",
        "ROLLBACK",
        "ROW",
        "ROWS",
        "SAVEPOINT",
        "SELECT",
        "SET",
        "TABLE",
        "TEMP",
        "TEMPORARY",
        "THEN",
        "TIES",
        "TO",
        "TRANSACTION",
        "TRIGGER",
        "UNBOUNDED",
        "UNION",
        "UNIQUE",
        "UPDATE",
        "USING",
        "VACUUM",
        "VALUES",
        "VIEW",
        "VIRTUAL",
        "WHEN",
        "WHERE",
        "WINDOW",
        "WITH",
        "WITHOUT"
    ]
}), UF = Q([
    "SELECT [ALL | DISTINCT]"
]), FF = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    // Data manipulation
    // - insert:
    "INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO",
    "REPLACE INTO",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    "CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]",
    "CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"
]), R1 = Q([
    // - update:
    "UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]",
    // - insert:
    "ON CONFLICT",
    // - delete:
    "DELETE FROM",
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE",
    "ADD [COLUMN]",
    "DROP [COLUMN]",
    "RENAME [COLUMN]",
    "RENAME TO",
    // - set schema
    "SET SCHEMA"
]), BF = Q([
    "UNION [ALL]",
    "EXCEPT",
    "INTERSECT"
]), GF = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"
]), kF = Q([
    "ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]",
    "{ROWS | RANGE | GROUPS} BETWEEN"
]), HF = {
    tokenizerOptions: {
        reservedSelect: UF,
        reservedClauses: [
            ...FF,
            ...R1
        ],
        reservedSetOperations: BF,
        reservedJoins: GF,
        reservedPhrases: kF,
        reservedKeywords: xF,
        reservedFunctionNames: wF,
        stringTypes: [
            "''-qq",
            {
                quote: "''-raw",
                prefixes: [
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            '""-qq',
            "``",
            "[]"
        ],
        // https://www.sqlite.org/lang_expr.html#parameters
        paramTypes: {
            positional: !0,
            numbered: [
                "?"
            ],
            named: [
                ":",
                "@",
                "$"
            ]
        },
        operators: [
            "%",
            "~",
            "&",
            "|",
            "<<",
            ">>",
            "==",
            "->",
            "->>",
            "||"
        ]
    },
    formatOptions: {
        onelineClauses: R1
    }
}, YF = ke({
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_9_set_function_specification
    set: [
        "GROUPING"
    ],
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_10_window_function
    window: [
        "RANK",
        "DENSE_RANK",
        "PERCENT_RANK",
        "CUME_DIST",
        "ROW_NUMBER"
    ],
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_27_numeric_value_function
    numeric: [
        "POSITION",
        "OCCURRENCES_REGEX",
        "POSITION_REGEX",
        "EXTRACT",
        "CHAR_LENGTH",
        "CHARACTER_LENGTH",
        "OCTET_LENGTH",
        "CARDINALITY",
        "ABS",
        "MOD",
        "LN",
        "EXP",
        "POWER",
        "SQRT",
        "FLOOR",
        "CEIL",
        "CEILING",
        "WIDTH_BUCKET"
    ],
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_29_string_value_function
    string: [
        "SUBSTRING",
        "SUBSTRING_REGEX",
        "UPPER",
        "LOWER",
        "CONVERT",
        "TRANSLATE",
        "TRANSLATE_REGEX",
        "TRIM",
        "OVERLAY",
        "NORMALIZE",
        "SPECIFICTYPE"
    ],
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_31_datetime_value_function
    datetime: [
        "CURRENT_DATE",
        "CURRENT_TIME",
        "LOCALTIME",
        "CURRENT_TIMESTAMP",
        "LOCALTIMESTAMP"
    ],
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_38_multiset_value_function
    // SET serves multiple roles: a SET() function and a SET keyword e.g. in UPDATE table SET ...
    // multiset: ['SET'], (disabled for now)
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_10_9_aggregate_function
    aggregate: [
        "COUNT",
        "AVG",
        "MAX",
        "MIN",
        "SUM",
        // 'EVERY',
        // 'ANY',
        // 'SOME',
        "STDDEV_POP",
        "STDDEV_SAMP",
        "VAR_SAMP",
        "VAR_POP",
        "COLLECT",
        "FUSION",
        "INTERSECTION",
        "COVAR_POP",
        "COVAR_SAMP",
        "CORR",
        "REGR_SLOPE",
        "REGR_INTERCEPT",
        "REGR_COUNT",
        "REGR_R2",
        "REGR_AVGX",
        "REGR_AVGY",
        "REGR_SXX",
        "REGR_SYY",
        "REGR_SXY",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC"
    ],
    // CAST is a pretty complex case, involving multiple forms:
    // - CAST(col AS int)
    // - CAST(...) WITH ...
    // - CAST FROM int
    // - CREATE CAST(mycol AS int) WITH ...
    cast: [
        "CAST"
    ],
    // Shorthand functions to use in place of CASE expression
    caseAbbrev: [
        "COALESCE",
        "NULLIF"
    ],
    // Non-standard functions that have widespread support
    nonStandard: [
        "ROUND",
        "SIN",
        "COS",
        "TAN",
        "ASIN",
        "ACOS",
        "ATAN"
    ],
    // Data types with parameters like VARCHAR(100)
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#predefined-type
    dataTypes: [
        "CHARACTER",
        "CHAR",
        "CHARACTER VARYING",
        "CHAR VARYING",
        "VARCHAR",
        "CHARACTER LARGE OBJECT",
        "CHAR LARGE OBJECT",
        "CLOB",
        "NATIONAL CHARACTER",
        "NATIONAL CHAR",
        "NCHAR",
        "NATIONAL CHARACTER VARYING",
        "NATIONAL CHAR VARYING",
        "NCHAR VARYING",
        "NATIONAL CHARACTER LARGE OBJECT",
        "NCHAR LARGE OBJECT",
        "NCLOB",
        "BINARY",
        "BINARY VARYING",
        "VARBINARY",
        "BINARY LARGE OBJECT",
        "BLOB",
        "NUMERIC",
        "DECIMAL",
        "DEC",
        "TIME",
        "TIMESTAMP"
    ]
}), VF = ke({
    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#reserved-word
    all: [
        "ALL",
        "ALLOCATE",
        "ALTER",
        "ANY",
        // <- moved over from functions
        "ARE",
        "ARRAY",
        "AS",
        "ASENSITIVE",
        "ASYMMETRIC",
        "AT",
        "ATOMIC",
        "AUTHORIZATION",
        "BEGIN",
        "BETWEEN",
        "BIGINT",
        "BINARY",
        "BLOB",
        "BOOLEAN",
        "BOTH",
        "BY",
        "CALL",
        "CALLED",
        "CASCADED",
        "CAST",
        "CHAR",
        "CHARACTER",
        "CHECK",
        "CLOB",
        "CLOSE",
        "COALESCE",
        "COLLATE",
        "COLUMN",
        "COMMIT",
        "CONDITION",
        "CONNECT",
        "CONSTRAINT",
        "CORRESPONDING",
        "CREATE",
        "CROSS",
        "CUBE",
        "CURRENT",
        "CURRENT_CATALOG",
        "CURRENT_DEFAULT_TRANSFORM_GROUP",
        "CURRENT_PATH",
        "CURRENT_ROLE",
        "CURRENT_SCHEMA",
        "CURRENT_TRANSFORM_GROUP_FOR_TYPE",
        "CURRENT_USER",
        "CURSOR",
        "CYCLE",
        "DATE",
        "DAY",
        "DEALLOCATE",
        "DEC",
        "DECIMAL",
        "DECLARE",
        "DEFAULT",
        "DELETE",
        "DEREF",
        "DESCRIBE",
        "DETERMINISTIC",
        "DISCONNECT",
        "DISTINCT",
        "DOUBLE",
        "DROP",
        "DYNAMIC",
        "EACH",
        "ELEMENT",
        "END-EXEC",
        "ESCAPE",
        "EVERY",
        // <- moved over from functions
        "EXCEPT",
        "EXEC",
        "EXECUTE",
        "EXISTS",
        "EXTERNAL",
        "FALSE",
        "FETCH",
        "FILTER",
        "FLOAT",
        "FOR",
        "FOREIGN",
        "FREE",
        "FROM",
        "FULL",
        "FUNCTION",
        "GET",
        "GLOBAL",
        "GRANT",
        "GROUP",
        "HAVING",
        "HOLD",
        "HOUR",
        "IDENTITY",
        "IN",
        "INDICATOR",
        "INNER",
        "INOUT",
        "INSENSITIVE",
        "INSERT",
        "INT",
        "INTEGER",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "IS",
        "LANGUAGE",
        "LARGE",
        "LATERAL",
        "LEADING",
        "LEFT",
        "LIKE",
        "LIKE_REGEX",
        "LOCAL",
        "MATCH",
        "MEMBER",
        "MERGE",
        "METHOD",
        "MINUTE",
        "MODIFIES",
        "MODULE",
        "MONTH",
        "MULTISET",
        "NATIONAL",
        "NATURAL",
        "NCHAR",
        "NCLOB",
        "NEW",
        "NO",
        "NONE",
        "NOT",
        "NULL",
        "NULLIF",
        "NUMERIC",
        "OF",
        "OLD",
        "ON",
        "ONLY",
        "OPEN",
        "ORDER",
        "OUT",
        "OUTER",
        "OVER",
        "OVERLAPS",
        "PARAMETER",
        "PARTITION",
        "PRECISION",
        "PREPARE",
        "PRIMARY",
        "PROCEDURE",
        "RANGE",
        "READS",
        "REAL",
        "RECURSIVE",
        "REF",
        "REFERENCES",
        "REFERENCING",
        "RELEASE",
        "RESULT",
        "RETURN",
        "RETURNS",
        "REVOKE",
        "RIGHT",
        "ROLLBACK",
        "ROLLUP",
        "ROW",
        "ROWS",
        "SAVEPOINT",
        "SCOPE",
        "SCROLL",
        "SEARCH",
        "SECOND",
        "SELECT",
        "SENSITIVE",
        "SESSION_USER",
        "SET",
        "SIMILAR",
        "SMALLINT",
        "SOME",
        // <- moved over from functions
        "SPECIFIC",
        "SQL",
        "SQLEXCEPTION",
        "SQLSTATE",
        "SQLWARNING",
        "START",
        "STATIC",
        "SUBMULTISET",
        "SYMMETRIC",
        "SYSTEM",
        "SYSTEM_USER",
        "TABLE",
        "TABLESAMPLE",
        "THEN",
        "TIME",
        "TIMESTAMP",
        "TIMEZONE_HOUR",
        "TIMEZONE_MINUTE",
        "TO",
        "TRAILING",
        "TRANSLATION",
        "TREAT",
        "TRIGGER",
        "TRUE",
        "UESCAPE",
        "UNION",
        "UNIQUE",
        "UNKNOWN",
        "UNNEST",
        "UPDATE",
        "USER",
        "USING",
        "VALUE",
        "VALUES",
        "VARBINARY",
        "VARCHAR",
        "VARYING",
        "WHENEVER",
        "WINDOW",
        "WITHIN",
        "WITHOUT",
        "YEAR"
    ]
}), WF = Q([
    "SELECT [ALL | DISTINCT]"
]), jF = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY [ALL | DISTINCT]",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    "FETCH {FIRST | NEXT}",
    // Data manipulation
    // - insert:
    "INSERT INTO",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    "CREATE [RECURSIVE] VIEW",
    "CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE"
]), m1 = Q([
    // - update:
    "UPDATE",
    "WHERE CURRENT OF",
    // - delete:
    "DELETE FROM",
    // - drop table:
    "DROP TABLE",
    // - alter table:
    "ALTER TABLE",
    "ADD COLUMN",
    "DROP [COLUMN]",
    "RENAME COLUMN",
    "RENAME TO",
    "ALTER [COLUMN]",
    "{SET | DROP} DEFAULT",
    // for alter column
    "ADD SCOPE",
    // for alter column
    "DROP SCOPE {CASCADE | RESTRICT}",
    // for alter column
    "RESTART WITH",
    // for alter column
    // - truncate:
    "TRUNCATE TABLE",
    // other
    "SET SCHEMA"
]), XF = Q([
    "UNION [ALL | DISTINCT]",
    "EXCEPT [ALL | DISTINCT]",
    "INTERSECT [ALL | DISTINCT]"
]), KF = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"
]), zF = Q([
    "ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]",
    "{ROWS | RANGE} BETWEEN"
]), JF = {
    tokenizerOptions: {
        reservedSelect: WF,
        reservedClauses: [
            ...jF,
            ...m1
        ],
        reservedSetOperations: XF,
        reservedJoins: KF,
        reservedPhrases: zF,
        reservedKeywords: VF,
        reservedFunctionNames: YF,
        stringTypes: [
            {
                quote: "''-qq-bs",
                prefixes: [
                    "N",
                    "U&"
                ]
            },
            {
                quote: "''-raw",
                prefixes: [
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            '""-qq',
            "``"
        ],
        paramTypes: {
            positional: !0
        },
        operators: [
            "||"
        ]
    },
    formatOptions: {
        onelineClauses: m1
    }
}, qF = ke({
    // https://github.com/trinodb/trino/tree/432d2897bdef99388c1a47188743a061c4ac1f34/docs/src/main/sphinx/functions
    // rg '^\.\. function::' ./docs/src/main/sphinx/functions | cut -d' ' -f 3 | cut -d '(' -f 1 | sort | uniq
    // rg '\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep    '\* :func:' | cut -d'`' -f 2
    // rg '\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep -v '\* :func:'
    // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep  -e '^- :func:' | cut -d'`' -f2
    // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep -ve '^- :func:'
    all: [
        "ABS",
        "ACOS",
        "ALL_MATCH",
        "ANY_MATCH",
        "APPROX_DISTINCT",
        "APPROX_MOST_FREQUENT",
        "APPROX_PERCENTILE",
        "APPROX_SET",
        "ARBITRARY",
        "ARRAYS_OVERLAP",
        "ARRAY_AGG",
        "ARRAY_DISTINCT",
        "ARRAY_EXCEPT",
        "ARRAY_INTERSECT",
        "ARRAY_JOIN",
        "ARRAY_MAX",
        "ARRAY_MIN",
        "ARRAY_POSITION",
        "ARRAY_REMOVE",
        "ARRAY_SORT",
        "ARRAY_UNION",
        "ASIN",
        "ATAN",
        "ATAN2",
        "AT_TIMEZONE",
        "AVG",
        "BAR",
        "BETA_CDF",
        "BING_TILE",
        "BING_TILES_AROUND",
        "BING_TILE_AT",
        "BING_TILE_COORDINATES",
        "BING_TILE_POLYGON",
        "BING_TILE_QUADKEY",
        "BING_TILE_ZOOM_LEVEL",
        "BITWISE_AND",
        "BITWISE_AND_AGG",
        "BITWISE_LEFT_SHIFT",
        "BITWISE_NOT",
        "BITWISE_OR",
        "BITWISE_OR_AGG",
        "BITWISE_RIGHT_SHIFT",
        "BITWISE_RIGHT_SHIFT_ARITHMETIC",
        "BITWISE_XOR",
        "BIT_COUNT",
        "BOOL_AND",
        "BOOL_OR",
        "CARDINALITY",
        "CAST",
        "CBRT",
        "CEIL",
        "CEILING",
        "CHAR2HEXINT",
        "CHECKSUM",
        "CHR",
        "CLASSIFY",
        "COALESCE",
        "CODEPOINT",
        "COLOR",
        "COMBINATIONS",
        "CONCAT",
        "CONCAT_WS",
        "CONTAINS",
        "CONTAINS_SEQUENCE",
        "CONVEX_HULL_AGG",
        "CORR",
        "COS",
        "COSH",
        "COSINE_SIMILARITY",
        "COUNT",
        "COUNT_IF",
        "COVAR_POP",
        "COVAR_SAMP",
        "CRC32",
        "CUME_DIST",
        "CURRENT_CATALOG",
        "CURRENT_DATE",
        "CURRENT_GROUPS",
        "CURRENT_SCHEMA",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_TIMEZONE",
        "CURRENT_USER",
        "DATE",
        "DATE_ADD",
        "DATE_DIFF",
        "DATE_FORMAT",
        "DATE_PARSE",
        "DATE_TRUNC",
        "DAY",
        "DAY_OF_MONTH",
        "DAY_OF_WEEK",
        "DAY_OF_YEAR",
        "DEGREES",
        "DENSE_RANK",
        "DOW",
        "DOY",
        "E",
        "ELEMENT_AT",
        "EMPTY_APPROX_SET",
        "EVALUATE_CLASSIFIER_PREDICTIONS",
        "EVERY",
        "EXP",
        "EXTRACT",
        "FEATURES",
        "FILTER",
        "FIRST_VALUE",
        "FLATTEN",
        "FLOOR",
        "FORMAT",
        "FORMAT_DATETIME",
        "FORMAT_NUMBER",
        "FROM_BASE",
        "FROM_BASE32",
        "FROM_BASE64",
        "FROM_BASE64URL",
        "FROM_BIG_ENDIAN_32",
        "FROM_BIG_ENDIAN_64",
        "FROM_ENCODED_POLYLINE",
        "FROM_GEOJSON_GEOMETRY",
        "FROM_HEX",
        "FROM_IEEE754_32",
        "FROM_IEEE754_64",
        "FROM_ISO8601_DATE",
        "FROM_ISO8601_TIMESTAMP",
        "FROM_ISO8601_TIMESTAMP_NANOS",
        "FROM_UNIXTIME",
        "FROM_UNIXTIME_NANOS",
        "FROM_UTF8",
        "GEOMETRIC_MEAN",
        "GEOMETRY_FROM_HADOOP_SHAPE",
        "GEOMETRY_INVALID_REASON",
        "GEOMETRY_NEAREST_POINTS",
        "GEOMETRY_TO_BING_TILES",
        "GEOMETRY_UNION",
        "GEOMETRY_UNION_AGG",
        "GREATEST",
        "GREAT_CIRCLE_DISTANCE",
        "HAMMING_DISTANCE",
        "HASH_COUNTS",
        "HISTOGRAM",
        "HMAC_MD5",
        "HMAC_SHA1",
        "HMAC_SHA256",
        "HMAC_SHA512",
        "HOUR",
        "HUMAN_READABLE_SECONDS",
        "IF",
        "INDEX",
        "INFINITY",
        "INTERSECTION_CARDINALITY",
        "INVERSE_BETA_CDF",
        "INVERSE_NORMAL_CDF",
        "IS_FINITE",
        "IS_INFINITE",
        "IS_JSON_SCALAR",
        "IS_NAN",
        "JACCARD_INDEX",
        "JSON_ARRAY_CONTAINS",
        "JSON_ARRAY_GET",
        "JSON_ARRAY_LENGTH",
        "JSON_EXISTS",
        "JSON_EXTRACT",
        "JSON_EXTRACT_SCALAR",
        "JSON_FORMAT",
        "JSON_PARSE",
        "JSON_QUERY",
        "JSON_SIZE",
        "JSON_VALUE",
        "KURTOSIS",
        "LAG",
        "LAST_DAY_OF_MONTH",
        "LAST_VALUE",
        "LEAD",
        "LEARN_CLASSIFIER",
        "LEARN_LIBSVM_CLASSIFIER",
        "LEARN_LIBSVM_REGRESSOR",
        "LEARN_REGRESSOR",
        "LEAST",
        "LENGTH",
        "LEVENSHTEIN_DISTANCE",
        "LINE_INTERPOLATE_POINT",
        "LINE_INTERPOLATE_POINTS",
        "LINE_LOCATE_POINT",
        "LISTAGG",
        "LN",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "LOG",
        "LOG10",
        "LOG2",
        "LOWER",
        "LPAD",
        "LTRIM",
        "LUHN_CHECK",
        "MAKE_SET_DIGEST",
        "MAP",
        "MAP_AGG",
        "MAP_CONCAT",
        "MAP_ENTRIES",
        "MAP_FILTER",
        "MAP_FROM_ENTRIES",
        "MAP_KEYS",
        "MAP_UNION",
        "MAP_VALUES",
        "MAP_ZIP_WITH",
        "MAX",
        "MAX_BY",
        "MD5",
        "MERGE",
        "MERGE_SET_DIGEST",
        "MILLISECOND",
        "MIN",
        "MINUTE",
        "MIN_BY",
        "MOD",
        "MONTH",
        "MULTIMAP_AGG",
        "MULTIMAP_FROM_ENTRIES",
        "MURMUR3",
        "NAN",
        "NGRAMS",
        "NONE_MATCH",
        "NORMALIZE",
        "NORMAL_CDF",
        "NOW",
        "NTH_VALUE",
        "NTILE",
        "NULLIF",
        "NUMERIC_HISTOGRAM",
        "OBJECTID",
        "OBJECTID_TIMESTAMP",
        "PARSE_DATA_SIZE",
        "PARSE_DATETIME",
        "PARSE_DURATION",
        "PERCENT_RANK",
        "PI",
        "POSITION",
        "POW",
        "POWER",
        "QDIGEST_AGG",
        "QUARTER",
        "RADIANS",
        "RAND",
        "RANDOM",
        "RANK",
        "REDUCE",
        "REDUCE_AGG",
        "REGEXP_COUNT",
        "REGEXP_EXTRACT",
        "REGEXP_EXTRACT_ALL",
        "REGEXP_LIKE",
        "REGEXP_POSITION",
        "REGEXP_REPLACE",
        "REGEXP_SPLIT",
        "REGRESS",
        "REGR_INTERCEPT",
        "REGR_SLOPE",
        "RENDER",
        "REPEAT",
        "REPLACE",
        "REVERSE",
        "RGB",
        "ROUND",
        "ROW_NUMBER",
        "RPAD",
        "RTRIM",
        "SECOND",
        "SEQUENCE",
        "SHA1",
        "SHA256",
        "SHA512",
        "SHUFFLE",
        "SIGN",
        "SIMPLIFY_GEOMETRY",
        "SIN",
        "SKEWNESS",
        "SLICE",
        "SOUNDEX",
        "SPATIAL_PARTITIONING",
        "SPATIAL_PARTITIONS",
        "SPLIT",
        "SPLIT_PART",
        "SPLIT_TO_MAP",
        "SPLIT_TO_MULTIMAP",
        "SPOOKY_HASH_V2_32",
        "SPOOKY_HASH_V2_64",
        "SQRT",
        "STARTS_WITH",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STRPOS",
        "ST_AREA",
        "ST_ASBINARY",
        "ST_ASTEXT",
        "ST_BOUNDARY",
        "ST_BUFFER",
        "ST_CENTROID",
        "ST_CONTAINS",
        "ST_CONVEXHULL",
        "ST_COORDDIM",
        "ST_CROSSES",
        "ST_DIFFERENCE",
        "ST_DIMENSION",
        "ST_DISJOINT",
        "ST_DISTANCE",
        "ST_ENDPOINT",
        "ST_ENVELOPE",
        "ST_ENVELOPEASPTS",
        "ST_EQUALS",
        "ST_EXTERIORRING",
        "ST_GEOMETRIES",
        "ST_GEOMETRYFROMTEXT",
        "ST_GEOMETRYN",
        "ST_GEOMETRYTYPE",
        "ST_GEOMFROMBINARY",
        "ST_INTERIORRINGN",
        "ST_INTERIORRINGS",
        "ST_INTERSECTION",
        "ST_INTERSECTS",
        "ST_ISCLOSED",
        "ST_ISEMPTY",
        "ST_ISRING",
        "ST_ISSIMPLE",
        "ST_ISVALID",
        "ST_LENGTH",
        "ST_LINEFROMTEXT",
        "ST_LINESTRING",
        "ST_MULTIPOINT",
        "ST_NUMGEOMETRIES",
        "ST_NUMINTERIORRING",
        "ST_NUMPOINTS",
        "ST_OVERLAPS",
        "ST_POINT",
        "ST_POINTN",
        "ST_POINTS",
        "ST_POLYGON",
        "ST_RELATE",
        "ST_STARTPOINT",
        "ST_SYMDIFFERENCE",
        "ST_TOUCHES",
        "ST_UNION",
        "ST_WITHIN",
        "ST_X",
        "ST_XMAX",
        "ST_XMIN",
        "ST_Y",
        "ST_YMAX",
        "ST_YMIN",
        "SUBSTR",
        "SUBSTRING",
        "SUM",
        "TAN",
        "TANH",
        "TDIGEST_AGG",
        "TIMESTAMP_OBJECTID",
        "TIMEZONE_HOUR",
        "TIMEZONE_MINUTE",
        "TO_BASE",
        "TO_BASE32",
        "TO_BASE64",
        "TO_BASE64URL",
        "TO_BIG_ENDIAN_32",
        "TO_BIG_ENDIAN_64",
        "TO_CHAR",
        "TO_DATE",
        "TO_ENCODED_POLYLINE",
        "TO_GEOJSON_GEOMETRY",
        "TO_GEOMETRY",
        "TO_HEX",
        "TO_IEEE754_32",
        "TO_IEEE754_64",
        "TO_ISO8601",
        "TO_MILLISECONDS",
        "TO_SPHERICAL_GEOGRAPHY",
        "TO_TIMESTAMP",
        "TO_UNIXTIME",
        "TO_UTF8",
        "TRANSFORM",
        "TRANSFORM_KEYS",
        "TRANSFORM_VALUES",
        "TRANSLATE",
        "TRIM",
        "TRIM_ARRAY",
        "TRUNCATE",
        "TRY",
        "TRY_CAST",
        "TYPEOF",
        "UPPER",
        "URL_DECODE",
        "URL_ENCODE",
        "URL_EXTRACT_FRAGMENT",
        "URL_EXTRACT_HOST",
        "URL_EXTRACT_PARAMETER",
        "URL_EXTRACT_PATH",
        "URL_EXTRACT_PORT",
        "URL_EXTRACT_PROTOCOL",
        "URL_EXTRACT_QUERY",
        "UUID",
        "VALUES_AT_QUANTILES",
        "VALUE_AT_QUANTILE",
        "VARIANCE",
        "VAR_POP",
        "VAR_SAMP",
        "VERSION",
        "WEEK",
        "WEEK_OF_YEAR",
        "WIDTH_BUCKET",
        "WILSON_INTERVAL_LOWER",
        "WILSON_INTERVAL_UPPER",
        "WITH_TIMEZONE",
        "WORD_STEM",
        "XXHASH64",
        "YEAR",
        "YEAR_OF_WEEK",
        "YOW",
        "ZIP",
        "ZIP_WITH"
    ],
    // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-recognition-expressions
    rowPattern: [
        "CLASSIFIER",
        "FIRST",
        "LAST",
        "MATCH_NUMBER",
        "NEXT",
        "PERMUTE",
        "PREV"
    ]
}), ZF = ke({
    // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L858-L1128
    all: [
        "ABSENT",
        "ADD",
        "ADMIN",
        "AFTER",
        "ALL",
        "ALTER",
        "ANALYZE",
        "AND",
        "ANY",
        "ARRAY",
        "AS",
        "ASC",
        "AT",
        "AUTHORIZATION",
        "BERNOULLI",
        "BETWEEN",
        "BOTH",
        "BY",
        "CALL",
        "CASCADE",
        "CASE",
        "CATALOGS",
        "COLUMN",
        "COLUMNS",
        "COMMENT",
        "COMMIT",
        "COMMITTED",
        "CONDITIONAL",
        "CONSTRAINT",
        "COPARTITION",
        "CREATE",
        "CROSS",
        "CUBE",
        "CURRENT",
        "CURRENT_PATH",
        "CURRENT_ROLE",
        "DATA",
        "DEALLOCATE",
        "DEFAULT",
        "DEFINE",
        "DEFINER",
        "DELETE",
        "DENY",
        "DESC",
        "DESCRIBE",
        "DESCRIPTOR",
        "DISTINCT",
        "DISTRIBUTED",
        "DOUBLE",
        "DROP",
        "ELSE",
        "EMPTY",
        "ENCODING",
        "END",
        "ERROR",
        "ESCAPE",
        "EXCEPT",
        "EXCLUDING",
        "EXECUTE",
        "EXISTS",
        "EXPLAIN",
        "FALSE",
        "FETCH",
        "FINAL",
        "FIRST",
        "FOLLOWING",
        "FOR",
        "FROM",
        "FULL",
        "FUNCTIONS",
        "GRANT",
        "GRANTED",
        "GRANTS",
        "GRAPHVIZ",
        "GROUP",
        "GROUPING",
        "GROUPS",
        "HAVING",
        "IGNORE",
        "IN",
        "INCLUDING",
        "INITIAL",
        "INNER",
        "INPUT",
        "INSERT",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "INVOKER",
        "IO",
        "IS",
        "ISOLATION",
        "JOIN",
        "JSON",
        "JSON_ARRAY",
        "JSON_OBJECT",
        "KEEP",
        "KEY",
        "KEYS",
        "LAST",
        "LATERAL",
        "LEADING",
        "LEFT",
        "LEVEL",
        "LIKE",
        "LIMIT",
        "LOCAL",
        "LOGICAL",
        "MATCH",
        "MATCHED",
        "MATCHES",
        "MATCH_RECOGNIZE",
        "MATERIALIZED",
        "MEASURES",
        "NATURAL",
        "NEXT",
        "NFC",
        "NFD",
        "NFKC",
        "NFKD",
        "NO",
        "NONE",
        "NOT",
        "NULL",
        "NULLS",
        "OBJECT",
        "OF",
        "OFFSET",
        "OMIT",
        "ON",
        "ONE",
        "ONLY",
        "OPTION",
        "OR",
        "ORDER",
        "ORDINALITY",
        "OUTER",
        "OUTPUT",
        "OVER",
        "OVERFLOW",
        "PARTITION",
        "PARTITIONS",
        "PASSING",
        "PAST",
        "PATH",
        "PATTERN",
        "PER",
        "PERMUTE",
        "PRECEDING",
        "PRECISION",
        "PREPARE",
        "PRIVILEGES",
        "PROPERTIES",
        "PRUNE",
        "QUOTES",
        "RANGE",
        "READ",
        "RECURSIVE",
        "REFRESH",
        "RENAME",
        "REPEATABLE",
        "RESET",
        "RESPECT",
        "RESTRICT",
        "RETURNING",
        "REVOKE",
        "RIGHT",
        "ROLE",
        "ROLES",
        "ROLLBACK",
        "ROLLUP",
        "ROW",
        "ROWS",
        "RUNNING",
        "SCALAR",
        "SCHEMA",
        "SCHEMAS",
        "SECURITY",
        "SEEK",
        "SELECT",
        "SERIALIZABLE",
        "SESSION",
        "SET",
        "SETS",
        "SHOW",
        "SKIP",
        "SOME",
        "START",
        "STATS",
        "STRING",
        "SUBSET",
        "SYSTEM",
        "TABLE",
        "TABLES",
        "TABLESAMPLE",
        "TEXT",
        "THEN",
        "TIES",
        "TIME",
        "TIMESTAMP",
        "TO",
        "TRAILING",
        "TRANSACTION",
        "TRUE",
        "TYPE",
        "UESCAPE",
        "UNBOUNDED",
        "UNCOMMITTED",
        "UNCONDITIONAL",
        "UNION",
        "UNIQUE",
        "UNKNOWN",
        "UNMATCHED",
        "UNNEST",
        "UPDATE",
        "USE",
        "USER",
        "USING",
        "UTF16",
        "UTF32",
        "UTF8",
        "VALIDATE",
        "VALUE",
        "VALUES",
        "VERBOSE",
        "VIEW",
        "WHEN",
        "WHERE",
        "WINDOW",
        "WITH",
        "WITHIN",
        "WITHOUT",
        "WORK",
        "WRAPPER",
        "WRITE",
        "ZONE"
    ],
    // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java#L131-L168
    // or https://trino.io/docs/current/language/types.html
    types: [
        "BIGINT",
        "INT",
        "INTEGER",
        "SMALLINT",
        "TINYINT",
        "BOOLEAN",
        "DATE",
        "DECIMAL",
        "REAL",
        "DOUBLE",
        "HYPERLOGLOG",
        "QDIGEST",
        "TDIGEST",
        "P4HYPERLOGLOG",
        "INTERVAL",
        "TIMESTAMP",
        "TIME",
        "VARBINARY",
        "VARCHAR",
        "CHAR",
        "ROW",
        "ARRAY",
        "MAP",
        "JSON",
        "JSON2016",
        "IPADDRESS",
        "GEOMETRY",
        "UUID",
        "SETDIGEST",
        "JONIREGEXP",
        "RE2JREGEXP",
        "LIKEPATTERN",
        "COLOR",
        "CODEPOINTS",
        "FUNCTION",
        "JSONPATH"
    ]
}), QF = Q([
    "SELECT [ALL | DISTINCT]"
]), $F = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY [ALL | DISTINCT]",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    "FETCH {FIRST | NEXT}",
    // Data manipulation
    // - insert:
    "INSERT INTO",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    "CREATE [OR REPLACE] [MATERIALIZED] VIEW",
    "CREATE TABLE [IF NOT EXISTS]",
    // MATCH_RECOGNIZE
    "MATCH_RECOGNIZE",
    "MEASURES",
    "ONE ROW PER MATCH",
    "ALL ROWS PER MATCH",
    "AFTER MATCH",
    "PATTERN",
    "SUBSET",
    "DEFINE"
]), _1 = Q([
    // - update:
    "UPDATE",
    // - delete:
    "DELETE FROM",
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE [IF EXISTS]",
    "ADD COLUMN [IF NOT EXISTS]",
    "DROP COLUMN [IF EXISTS]",
    "RENAME COLUMN [IF EXISTS]",
    "RENAME TO",
    "SET AUTHORIZATION [USER | ROLE]",
    "SET PROPERTIES",
    "EXECUTE",
    // - truncate:
    "TRUNCATE TABLE",
    // other
    "ALTER SCHEMA",
    "ALTER MATERIALIZED VIEW",
    "ALTER VIEW",
    "CREATE SCHEMA",
    "CREATE ROLE",
    "DROP SCHEMA",
    "DROP MATERIALIZED VIEW",
    "DROP VIEW",
    "DROP ROLE",
    // Auxiliary
    "EXPLAIN",
    "ANALYZE",
    "EXPLAIN ANALYZE",
    "EXPLAIN ANALYZE VERBOSE",
    "USE",
    "COMMENT ON TABLE",
    "COMMENT ON COLUMN",
    "DESCRIBE INPUT",
    "DESCRIBE OUTPUT",
    "REFRESH MATERIALIZED VIEW",
    "RESET SESSION",
    "SET SESSION",
    "SET PATH",
    "SET TIME ZONE",
    "SHOW GRANTS",
    "SHOW CREATE TABLE",
    "SHOW CREATE SCHEMA",
    "SHOW CREATE VIEW",
    "SHOW CREATE MATERIALIZED VIEW",
    "SHOW TABLES",
    "SHOW SCHEMAS",
    "SHOW CATALOGS",
    "SHOW COLUMNS",
    "SHOW STATS FOR",
    "SHOW ROLES",
    "SHOW CURRENT ROLES",
    "SHOW ROLE GRANTS",
    "SHOW FUNCTIONS",
    "SHOW SESSION"
]), eB = Q([
    "UNION [ALL | DISTINCT]",
    "EXCEPT [ALL | DISTINCT]",
    "INTERSECT [ALL | DISTINCT]"
]), tB = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL [INNER] JOIN",
    "NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"
]), nB = Q([
    "{ROWS | RANGE | GROUPS} BETWEEN",
    // comparison operator
    "IS [NOT] DISTINCT FROM"
]), rB = {
    tokenizerOptions: {
        reservedSelect: QF,
        reservedClauses: [
            ...$F,
            ..._1
        ],
        reservedSetOperations: eB,
        reservedJoins: tB,
        reservedPhrases: nB,
        reservedKeywords: ZF,
        reservedFunctionNames: qF,
        // Trino also supports {- ... -} parenthesis.
        // The formatting of these currently works out as a result of { and -
        // not getting a space added in-between.
        // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-syntax
        extraParens: [
            "[]",
            "{}"
        ],
        // https://trino.io/docs/current/language/types.html#string
        // https://trino.io/docs/current/language/types.html#varbinary
        stringTypes: [
            {
                quote: "''-qq",
                prefixes: [
                    "U&"
                ]
            },
            {
                quote: "''-raw",
                prefixes: [
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        // https://trino.io/docs/current/language/reserved.html
        identTypes: [
            '""-qq'
        ],
        paramTypes: {
            positional: !0
        },
        operators: [
            "%",
            "->",
            "=>",
            ":",
            "||",
            // Row pattern syntax
            "|",
            "^",
            "$"
        ]
    },
    formatOptions: {
        onelineClauses: _1
    }
}, sB = ke({
    // https://docs.microsoft.com/en-us/sql/t-sql/functions/functions?view=sql-server-ver15
    aggregate: [
        "APPROX_COUNT_DISTINCT",
        "AVG",
        "CHECKSUM_AGG",
        "COUNT",
        "COUNT_BIG",
        "GROUPING",
        "GROUPING_ID",
        "MAX",
        "MIN",
        "STDEV",
        "STDEVP",
        "SUM",
        "VAR",
        "VARP"
    ],
    analytic: [
        "CUME_DIST",
        "FIRST_VALUE",
        "LAG",
        "LAST_VALUE",
        "LEAD",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "PERCENT_RANK",
        "Collation - COLLATIONPROPERTY",
        "Collation - TERTIARY_WEIGHTS"
    ],
    configuration: [
        "@@DBTS",
        "@@LANGID",
        "@@LANGUAGE",
        "@@LOCK_TIMEOUT",
        "@@MAX_CONNECTIONS",
        "@@MAX_PRECISION",
        "@@NESTLEVEL",
        "@@OPTIONS",
        "@@REMSERVER",
        "@@SERVERNAME",
        "@@SERVICENAME",
        "@@SPID",
        "@@TEXTSIZE",
        "@@VERSION"
    ],
    conversion: [
        "CAST",
        "CONVERT",
        "PARSE",
        "TRY_CAST",
        "TRY_CONVERT",
        "TRY_PARSE"
    ],
    cryptographic: [
        "ASYMKEY_ID",
        "ASYMKEYPROPERTY",
        "CERTPROPERTY",
        "CERT_ID",
        "CRYPT_GEN_RANDOM",
        "DECRYPTBYASYMKEY",
        "DECRYPTBYCERT",
        "DECRYPTBYKEY",
        "DECRYPTBYKEYAUTOASYMKEY",
        "DECRYPTBYKEYAUTOCERT",
        "DECRYPTBYPASSPHRASE",
        "ENCRYPTBYASYMKEY",
        "ENCRYPTBYCERT",
        "ENCRYPTBYKEY",
        "ENCRYPTBYPASSPHRASE",
        "HASHBYTES",
        "IS_OBJECTSIGNED",
        "KEY_GUID",
        "KEY_ID",
        "KEY_NAME",
        "SIGNBYASYMKEY",
        "SIGNBYCERT",
        "SYMKEYPROPERTY",
        "VERIFYSIGNEDBYCERT",
        "VERIFYSIGNEDBYASYMKEY"
    ],
    cursor: [
        "@@CURSOR_ROWS",
        "@@FETCH_STATUS",
        "CURSOR_STATUS"
    ],
    dataType: [
        "DATALENGTH",
        "IDENT_CURRENT",
        "IDENT_INCR",
        "IDENT_SEED",
        "IDENTITY",
        "SQL_VARIANT_PROPERTY"
    ],
    datetime: [
        "@@DATEFIRST",
        "CURRENT_TIMESTAMP",
        "CURRENT_TIMEZONE",
        "CURRENT_TIMEZONE_ID",
        "DATEADD",
        "DATEDIFF",
        "DATEDIFF_BIG",
        "DATEFROMPARTS",
        "DATENAME",
        "DATEPART",
        "DATETIME2FROMPARTS",
        "DATETIMEFROMPARTS",
        "DATETIMEOFFSETFROMPARTS",
        "DAY",
        "EOMONTH",
        "GETDATE",
        "GETUTCDATE",
        "ISDATE",
        "MONTH",
        "SMALLDATETIMEFROMPARTS",
        "SWITCHOFFSET",
        "SYSDATETIME",
        "SYSDATETIMEOFFSET",
        "SYSUTCDATETIME",
        "TIMEFROMPARTS",
        "TODATETIMEOFFSET",
        "YEAR",
        "JSON",
        "ISJSON",
        "JSON_VALUE",
        "JSON_QUERY",
        "JSON_MODIFY"
    ],
    mathematical: [
        "ABS",
        "ACOS",
        "ASIN",
        "ATAN",
        "ATN2",
        "CEILING",
        "COS",
        "COT",
        "DEGREES",
        "EXP",
        "FLOOR",
        "LOG",
        "LOG10",
        "PI",
        "POWER",
        "RADIANS",
        "RAND",
        "ROUND",
        "SIGN",
        "SIN",
        "SQRT",
        "SQUARE",
        "TAN",
        "CHOOSE",
        "GREATEST",
        "IIF",
        "LEAST"
    ],
    metadata: [
        "@@PROCID",
        "APP_NAME",
        "APPLOCK_MODE",
        "APPLOCK_TEST",
        "ASSEMBLYPROPERTY",
        "COL_LENGTH",
        "COL_NAME",
        "COLUMNPROPERTY",
        "DATABASEPROPERTYEX",
        "DB_ID",
        "DB_NAME",
        "FILE_ID",
        "FILE_IDEX",
        "FILE_NAME",
        "FILEGROUP_ID",
        "FILEGROUP_NAME",
        "FILEGROUPPROPERTY",
        "FILEPROPERTY",
        "FILEPROPERTYEX",
        "FULLTEXTCATALOGPROPERTY",
        "FULLTEXTSERVICEPROPERTY",
        "INDEX_COL",
        "INDEXKEY_PROPERTY",
        "INDEXPROPERTY",
        "NEXT VALUE FOR",
        "OBJECT_DEFINITION",
        "OBJECT_ID",
        "OBJECT_NAME",
        "OBJECT_SCHEMA_NAME",
        "OBJECTPROPERTY",
        "OBJECTPROPERTYEX",
        "ORIGINAL_DB_NAME",
        "PARSENAME",
        "SCHEMA_ID",
        "SCHEMA_NAME",
        "SCOPE_IDENTITY",
        "SERVERPROPERTY",
        "STATS_DATE",
        "TYPE_ID",
        "TYPE_NAME",
        "TYPEPROPERTY"
    ],
    ranking: [
        "DENSE_RANK",
        "NTILE",
        "RANK",
        "ROW_NUMBER",
        "PUBLISHINGSERVERNAME"
    ],
    security: [
        "CERTENCODED",
        "CERTPRIVATEKEY",
        "CURRENT_USER",
        "DATABASE_PRINCIPAL_ID",
        "HAS_DBACCESS",
        "HAS_PERMS_BY_NAME",
        "IS_MEMBER",
        "IS_ROLEMEMBER",
        "IS_SRVROLEMEMBER",
        "LOGINPROPERTY",
        "ORIGINAL_LOGIN",
        "PERMISSIONS",
        "PWDENCRYPT",
        "PWDCOMPARE",
        "SESSION_USER",
        "SESSIONPROPERTY",
        "SUSER_ID",
        "SUSER_NAME",
        "SUSER_SID",
        "SUSER_SNAME",
        "SYSTEM_USER",
        "USER",
        "USER_ID",
        "USER_NAME"
    ],
    string: [
        "ASCII",
        "CHAR",
        "CHARINDEX",
        "CONCAT",
        "CONCAT_WS",
        "DIFFERENCE",
        "FORMAT",
        "LEFT",
        "LEN",
        "LOWER",
        "LTRIM",
        "NCHAR",
        "PATINDEX",
        "QUOTENAME",
        "REPLACE",
        "REPLICATE",
        "REVERSE",
        "RIGHT",
        "RTRIM",
        "SOUNDEX",
        "SPACE",
        "STR",
        "STRING_AGG",
        "STRING_ESCAPE",
        "STUFF",
        "SUBSTRING",
        "TRANSLATE",
        "TRIM",
        "UNICODE",
        "UPPER"
    ],
    system: [
        "$PARTITION",
        "@@ERROR",
        "@@IDENTITY",
        "@@PACK_RECEIVED",
        "@@ROWCOUNT",
        "@@TRANCOUNT",
        "BINARY_CHECKSUM",
        "CHECKSUM",
        "COMPRESS",
        "CONNECTIONPROPERTY",
        "CONTEXT_INFO",
        "CURRENT_REQUEST_ID",
        "CURRENT_TRANSACTION_ID",
        "DECOMPRESS",
        "ERROR_LINE",
        "ERROR_MESSAGE",
        "ERROR_NUMBER",
        "ERROR_PROCEDURE",
        "ERROR_SEVERITY",
        "ERROR_STATE",
        "FORMATMESSAGE",
        "GET_FILESTREAM_TRANSACTION_CONTEXT",
        "GETANSINULL",
        "HOST_ID",
        "HOST_NAME",
        "ISNULL",
        "ISNUMERIC",
        "MIN_ACTIVE_ROWVERSION",
        "NEWID",
        "NEWSEQUENTIALID",
        "ROWCOUNT_BIG",
        "SESSION_CONTEXT",
        "XACT_STATE"
    ],
    statistical: [
        "@@CONNECTIONS",
        "@@CPU_BUSY",
        "@@IDLE",
        "@@IO_BUSY",
        "@@PACK_SENT",
        "@@PACKET_ERRORS",
        "@@TIMETICKS",
        "@@TOTAL_ERRORS",
        "@@TOTAL_READ",
        "@@TOTAL_WRITE",
        "TEXTPTR",
        "TEXTVALID"
    ],
    trigger: [
        "COLUMNS_UPDATED",
        "EVENTDATA",
        "TRIGGER_NESTLEVEL",
        "UPDATE"
    ],
    // Shorthand functions to use in place of CASE expression
    caseAbbrev: [
        "COALESCE",
        "NULLIF"
    ],
    // Parameterized types
    // https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15
    dataTypes: [
        "DECIMAL",
        "NUMERIC",
        "FLOAT",
        "REAL",
        "DATETIME2",
        "DATETIMEOFFSET",
        "TIME",
        "CHAR",
        "VARCHAR",
        "NCHAR",
        "NVARCHAR",
        "BINARY",
        "VARBINARY"
    ]
}), iB = ke({
    // https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-ver15
    standard: [
        "ADD",
        "ALL",
        "ALTER",
        "AND",
        "ANY",
        "AS",
        "ASC",
        "AUTHORIZATION",
        "BACKUP",
        "BEGIN",
        "BETWEEN",
        "BREAK",
        "BROWSE",
        "BULK",
        "BY",
        "CASCADE",
        "CHECK",
        "CHECKPOINT",
        "CLOSE",
        "CLUSTERED",
        "COALESCE",
        "COLLATE",
        "COLUMN",
        "COMMIT",
        "COMPUTE",
        "CONSTRAINT",
        "CONTAINS",
        "CONTAINSTABLE",
        "CONTINUE",
        "CONVERT",
        "CREATE",
        "CROSS",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "CURSOR",
        "DATABASE",
        "DBCC",
        "DEALLOCATE",
        "DECLARE",
        "DEFAULT",
        "DELETE",
        "DENY",
        "DESC",
        "DISK",
        "DISTINCT",
        "DISTRIBUTED",
        "DOUBLE",
        "DROP",
        "DUMP",
        "ERRLVL",
        "ESCAPE",
        "EXEC",
        "EXECUTE",
        "EXISTS",
        "EXIT",
        "EXTERNAL",
        "FETCH",
        "FILE",
        "FILLFACTOR",
        "FOR",
        "FOREIGN",
        "FREETEXT",
        "FREETEXTTABLE",
        "FROM",
        "FULL",
        "FUNCTION",
        "GOTO",
        "GRANT",
        "GROUP",
        "HAVING",
        "HOLDLOCK",
        "IDENTITY",
        "IDENTITYCOL",
        "IDENTITY_INSERT",
        "IF",
        "IN",
        "INDEX",
        "INNER",
        "INSERT",
        "INTERSECT",
        "INTO",
        "IS",
        "JOIN",
        "KEY",
        "KILL",
        "LEFT",
        "LIKE",
        "LINENO",
        "LOAD",
        "MERGE",
        "NATIONAL",
        "NOCHECK",
        "NONCLUSTERED",
        "NOT",
        "NULL",
        "NULLIF",
        "OF",
        "OFF",
        "OFFSETS",
        "ON",
        "OPEN",
        "OPENDATASOURCE",
        "OPENQUERY",
        "OPENROWSET",
        "OPENXML",
        "OPTION",
        "OR",
        "ORDER",
        "OUTER",
        "OVER",
        "PERCENT",
        "PIVOT",
        "PLAN",
        "PRECISION",
        "PRIMARY",
        "PRINT",
        "PROC",
        "PROCEDURE",
        "PUBLIC",
        "RAISERROR",
        "READ",
        "READTEXT",
        "RECONFIGURE",
        "REFERENCES",
        "REPLICATION",
        "RESTORE",
        "RESTRICT",
        "RETURN",
        "REVERT",
        "REVOKE",
        "RIGHT",
        "ROLLBACK",
        "ROWCOUNT",
        "ROWGUIDCOL",
        "RULE",
        "SAVE",
        "SCHEMA",
        "SECURITYAUDIT",
        "SELECT",
        "SEMANTICKEYPHRASETABLE",
        "SEMANTICSIMILARITYDETAILSTABLE",
        "SEMANTICSIMILARITYTABLE",
        "SESSION_USER",
        "SET",
        "SETUSER",
        "SHUTDOWN",
        "SOME",
        "STATISTICS",
        "SYSTEM_USER",
        "TABLE",
        "TABLESAMPLE",
        "TEXTSIZE",
        "THEN",
        "TO",
        "TOP",
        "TRAN",
        "TRANSACTION",
        "TRIGGER",
        "TRUNCATE",
        "TRY_CONVERT",
        "TSEQUAL",
        "UNION",
        "UNIQUE",
        "UNPIVOT",
        "UPDATE",
        "UPDATETEXT",
        "USE",
        "USER",
        "VALUES",
        "VARYING",
        "VIEW",
        "WAITFOR",
        "WHERE",
        "WHILE",
        "WITH",
        "WITHIN GROUP",
        "WRITETEXT"
    ],
    odbc: [
        "ABSOLUTE",
        "ACTION",
        "ADA",
        "ADD",
        "ALL",
        "ALLOCATE",
        "ALTER",
        "AND",
        "ANY",
        "ARE",
        "AS",
        "ASC",
        "ASSERTION",
        "AT",
        "AUTHORIZATION",
        "AVG",
        "BEGIN",
        "BETWEEN",
        "BIT",
        "BIT_LENGTH",
        "BOTH",
        "BY",
        "CASCADE",
        "CASCADED",
        "CAST",
        "CATALOG",
        "CHAR",
        "CHARACTER",
        "CHARACTER_LENGTH",
        "CHAR_LENGTH",
        "CHECK",
        "CLOSE",
        "COALESCE",
        "COLLATE",
        "COLLATION",
        "COLUMN",
        "COMMIT",
        "CONNECT",
        "CONNECTION",
        "CONSTRAINT",
        "CONSTRAINTS",
        "CONTINUE",
        "CONVERT",
        "CORRESPONDING",
        "COUNT",
        "CREATE",
        "CROSS",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "CURSOR",
        "DATE",
        "DAY",
        "DEALLOCATE",
        "DEC",
        "DECIMAL",
        "DECLARE",
        "DEFAULT",
        "DEFERRABLE",
        "DEFERRED",
        "DELETE",
        "DESC",
        "DESCRIBE",
        "DESCRIPTOR",
        "DIAGNOSTICS",
        "DISCONNECT",
        "DISTINCT",
        "DOMAIN",
        "DOUBLE",
        "DROP",
        "END-EXEC",
        "ESCAPE",
        "EXCEPTION",
        "EXEC",
        "EXECUTE",
        "EXISTS",
        "EXTERNAL",
        "EXTRACT",
        "FALSE",
        "FETCH",
        "FIRST",
        "FLOAT",
        "FOR",
        "FOREIGN",
        "FORTRAN",
        "FOUND",
        "FROM",
        "FULL",
        "GET",
        "GLOBAL",
        "GO",
        "GOTO",
        "GRANT",
        "GROUP",
        "HAVING",
        "HOUR",
        "IDENTITY",
        "IMMEDIATE",
        "IN",
        "INCLUDE",
        "INDEX",
        "INDICATOR",
        "INITIALLY",
        "INNER",
        "INPUT",
        "INSENSITIVE",
        "INSERT",
        "INT",
        "INTEGER",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "IS",
        "ISOLATION",
        "JOIN",
        "KEY",
        "LANGUAGE",
        "LAST",
        "LEADING",
        "LEFT",
        "LEVEL",
        "LIKE",
        "LOCAL",
        "LOWER",
        "MATCH",
        "MAX",
        "MIN",
        "MINUTE",
        "MODULE",
        "MONTH",
        "NAMES",
        "NATIONAL",
        "NATURAL",
        "NCHAR",
        "NEXT",
        "NO",
        "NONE",
        "NOT",
        "NULL",
        "NULLIF",
        "NUMERIC",
        "OCTET_LENGTH",
        "OF",
        "ONLY",
        "OPEN",
        "OPTION",
        "OR",
        "ORDER",
        "OUTER",
        "OUTPUT",
        "OVERLAPS",
        "PAD",
        "PARTIAL",
        "PASCAL",
        "POSITION",
        "PRECISION",
        "PREPARE",
        "PRESERVE",
        "PRIMARY",
        "PRIOR",
        "PRIVILEGES",
        "PROCEDURE",
        "PUBLIC",
        "READ",
        "REAL",
        "REFERENCES",
        "RELATIVE",
        "RESTRICT",
        "REVOKE",
        "RIGHT",
        "ROLLBACK",
        "ROWS",
        "SCHEMA",
        "SCROLL",
        "SECOND",
        "SECTION",
        "SELECT",
        "SESSION",
        "SESSION_USER",
        "SET",
        "SIZE",
        "SMALLINT",
        "SOME",
        "SPACE",
        "SQL",
        "SQLCA",
        "SQLCODE",
        "SQLERROR",
        "SQLSTATE",
        "SQLWARNING",
        "SUBSTRING",
        "SUM",
        "SYSTEM_USER",
        "TABLE",
        "TEMPORARY",
        "TIME",
        "TIMESTAMP",
        "TIMEZONE_HOUR",
        "TIMEZONE_MINUTE",
        "TO",
        "TRAILING",
        "TRANSACTION",
        "TRANSLATE",
        "TRANSLATION",
        "TRIM",
        "TRUE",
        "UNION",
        "UNIQUE",
        "UNKNOWN",
        "UPDATE",
        "UPPER",
        "USAGE",
        "USER",
        "VALUE",
        "VALUES",
        "VARCHAR",
        "VARYING",
        "VIEW",
        "WHENEVER",
        "WHERE",
        "WITH",
        "WORK",
        "WRITE",
        "YEAR",
        "ZONE"
    ]
}), aB = Q([
    "SELECT [ALL | DISTINCT]"
]), oB = Q([
    // queries
    "WITH",
    "INTO",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "WINDOW",
    "PARTITION BY",
    "ORDER BY",
    "OFFSET",
    "FETCH {FIRST | NEXT}",
    // Data manipulation
    // - insert:
    "INSERT [INTO]",
    "VALUES",
    // - update:
    "SET",
    // - merge:
    "MERGE [INTO]",
    "WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]",
    "UPDATE SET",
    // Data definition
    "CREATE [OR ALTER] [MATERIALIZED] VIEW",
    "CREATE TABLE",
    "CREATE [OR ALTER] {PROC | PROCEDURE}"
]), N1 = Q([
    // - update:
    "UPDATE",
    "WHERE CURRENT OF",
    // - delete:
    "DELETE [FROM]",
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE",
    "ADD",
    "DROP COLUMN [IF EXISTS]",
    "ALTER COLUMN",
    // - truncate:
    "TRUNCATE TABLE",
    // https://docs.microsoft.com/en-us/sql/t-sql/statements/statements?view=sql-server-ver15
    "ADD SENSITIVITY CLASSIFICATION",
    "ADD SIGNATURE",
    "AGGREGATE",
    "ANSI_DEFAULTS",
    "ANSI_NULLS",
    "ANSI_NULL_DFLT_OFF",
    "ANSI_NULL_DFLT_ON",
    "ANSI_PADDING",
    "ANSI_WARNINGS",
    "APPLICATION ROLE",
    "ARITHABORT",
    "ARITHIGNORE",
    "ASSEMBLY",
    "ASYMMETRIC KEY",
    "AUTHORIZATION",
    "AVAILABILITY GROUP",
    "BACKUP",
    "BACKUP CERTIFICATE",
    "BACKUP MASTER KEY",
    "BACKUP SERVICE MASTER KEY",
    "BEGIN CONVERSATION TIMER",
    "BEGIN DIALOG CONVERSATION",
    "BROKER PRIORITY",
    "BULK INSERT",
    "CERTIFICATE",
    "CLOSE MASTER KEY",
    "CLOSE SYMMETRIC KEY",
    "COLLATE",
    "COLUMN ENCRYPTION KEY",
    "COLUMN MASTER KEY",
    "COLUMNSTORE INDEX",
    "CONCAT_NULL_YIELDS_NULL",
    "CONTEXT_INFO",
    "CONTRACT",
    "CREDENTIAL",
    "CRYPTOGRAPHIC PROVIDER",
    "CURSOR_CLOSE_ON_COMMIT",
    "DATABASE",
    "DATABASE AUDIT SPECIFICATION",
    "DATABASE ENCRYPTION KEY",
    "DATABASE HADR",
    "DATABASE SCOPED CONFIGURATION",
    "DATABASE SCOPED CREDENTIAL",
    "DATABASE SET",
    "DATEFIRST",
    "DATEFORMAT",
    "DEADLOCK_PRIORITY",
    "DENY",
    "DENY XML",
    "DISABLE TRIGGER",
    "ENABLE TRIGGER",
    "END CONVERSATION",
    "ENDPOINT",
    "EVENT NOTIFICATION",
    "EVENT SESSION",
    "EXECUTE AS",
    "EXTERNAL DATA SOURCE",
    "EXTERNAL FILE FORMAT",
    "EXTERNAL LANGUAGE",
    "EXTERNAL LIBRARY",
    "EXTERNAL RESOURCE POOL",
    "EXTERNAL TABLE",
    "FIPS_FLAGGER",
    "FMTONLY",
    "FORCEPLAN",
    "FULLTEXT CATALOG",
    "FULLTEXT INDEX",
    "FULLTEXT STOPLIST",
    "FUNCTION",
    "GET CONVERSATION GROUP",
    "GET_TRANSMISSION_STATUS",
    "GRANT",
    "GRANT XML",
    "IDENTITY_INSERT",
    "IMPLICIT_TRANSACTIONS",
    "INDEX",
    "LANGUAGE",
    "LOCK_TIMEOUT",
    "LOGIN",
    "MASTER KEY",
    "MESSAGE TYPE",
    "MOVE CONVERSATION",
    "NOCOUNT",
    "NOEXEC",
    "NUMERIC_ROUNDABORT",
    "OFFSETS",
    "OPEN MASTER KEY",
    "OPEN SYMMETRIC KEY",
    "PARSEONLY",
    "PARTITION FUNCTION",
    "PARTITION SCHEME",
    "PROCEDURE",
    "QUERY_GOVERNOR_COST_LIMIT",
    "QUEUE",
    "QUOTED_IDENTIFIER",
    "RECEIVE",
    "REMOTE SERVICE BINDING",
    "REMOTE_PROC_TRANSACTIONS",
    "RESOURCE GOVERNOR",
    "RESOURCE POOL",
    "RESTORE",
    "RESTORE FILELISTONLY",
    "RESTORE HEADERONLY",
    "RESTORE LABELONLY",
    "RESTORE MASTER KEY",
    "RESTORE REWINDONLY",
    "RESTORE SERVICE MASTER KEY",
    "RESTORE VERIFYONLY",
    "REVERT",
    "REVOKE",
    "REVOKE XML",
    "ROLE",
    "ROUTE",
    "ROWCOUNT",
    "RULE",
    "SCHEMA",
    "SEARCH PROPERTY LIST",
    "SECURITY POLICY",
    "SELECTIVE XML INDEX",
    "SEND",
    "SENSITIVITY CLASSIFICATION",
    "SEQUENCE",
    "SERVER AUDIT",
    "SERVER AUDIT SPECIFICATION",
    "SERVER CONFIGURATION",
    "SERVER ROLE",
    "SERVICE",
    "SERVICE MASTER KEY",
    "SETUSER",
    "SHOWPLAN_ALL",
    "SHOWPLAN_TEXT",
    "SHOWPLAN_XML",
    "SIGNATURE",
    "SPATIAL INDEX",
    "STATISTICS",
    "STATISTICS IO",
    "STATISTICS PROFILE",
    "STATISTICS TIME",
    "STATISTICS XML",
    "SYMMETRIC KEY",
    "SYNONYM",
    "TABLE",
    "TABLE IDENTITY",
    "TEXTSIZE",
    "TRANSACTION ISOLATION LEVEL",
    "TRIGGER",
    "TYPE",
    "UPDATE STATISTICS",
    "USER",
    "WORKLOAD GROUP",
    "XACT_ABORT",
    "XML INDEX",
    "XML SCHEMA COLLECTION"
]), lB = Q([
    "UNION [ALL]",
    "EXCEPT",
    "INTERSECT"
]), cB = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    // non-standard joins
    "{CROSS | OUTER} APPLY"
]), uB = Q([
    "ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]",
    "{ROWS | RANGE} BETWEEN"
]), EB = {
    tokenizerOptions: {
        reservedSelect: aB,
        reservedClauses: [
            ...oB,
            ...N1
        ],
        reservedSetOperations: lB,
        reservedJoins: cB,
        reservedPhrases: uB,
        reservedKeywords: iB,
        reservedFunctionNames: sB,
        nestedBlockComments: !0,
        stringTypes: [
            {
                quote: "''-qq",
                prefixes: [
                    "N"
                ]
            }
        ],
        identTypes: [
            '""-qq',
            "[]"
        ],
        identChars: {
            first: "#@",
            rest: "#@$"
        },
        paramTypes: {
            named: [
                "@"
            ],
            quoted: [
                "@"
            ]
        },
        operators: [
            "%",
            "&",
            "|",
            "^",
            "~",
            "!<",
            "!>",
            "+=",
            "-=",
            "*=",
            "/=",
            "%=",
            "|=",
            "&=",
            "^=",
            "::"
        ]
    },
    formatOptions: {
        alwaysDenseOperators: [
            "::"
        ],
        onelineClauses: N1
    }
}, dB = ke({
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/restricted-keywords/list-of-restricted-keywords.html
    all: [
        "ABORT",
        "ABSOLUTE",
        "ACCESS",
        "ACCESSIBLE",
        "ACCOUNT",
        "ACTION",
        "ACTIVE",
        "ADD",
        "ADMIN",
        "AFTER",
        "AGAINST",
        "AGGREGATE",
        "AGGREGATES",
        "AGGREGATOR",
        "AGGREGATOR_ID",
        "AGGREGATOR_PLAN_HASH",
        "AGGREGATORS",
        "ALGORITHM",
        "ALL",
        "ALSO",
        "ALTER",
        "ALWAYS",
        "ANALYZE",
        "AND",
        "ANY",
        "ARGHISTORY",
        "ARRANGE",
        "ARRANGEMENT",
        "ARRAY",
        "AS",
        "ASC",
        "ASCII",
        "ASENSITIVE",
        "ASM",
        "ASSERTION",
        "ASSIGNMENT",
        "AST",
        "ASYMMETRIC",
        "ASYNC",
        "AT",
        "ATTACH",
        "ATTRIBUTE",
        "AUTHORIZATION",
        "AUTO",
        "AUTO_INCREMENT",
        "AUTO_REPROVISION",
        "AUTOSTATS",
        "AUTOSTATS_CARDINALITY_MODE",
        "AUTOSTATS_ENABLED",
        "AUTOSTATS_HISTOGRAM_MODE",
        "AUTOSTATS_SAMPLING",
        "AVAILABILITY",
        "AVG",
        "AVG_ROW_LENGTH",
        "AVRO",
        "AZURE",
        "BACKGROUND",
        "_BACKGROUND_THREADS_FOR_CLEANUP",
        "BACKUP",
        "BACKUP_HISTORY",
        "BACKUP_ID",
        "BACKWARD",
        "BATCH",
        "BATCHES",
        "BATCH_INTERVAL",
        "_BATCH_SIZE_LIMIT",
        "BEFORE",
        "BEGIN",
        "BETWEEN",
        "BIGINT",
        "BINARY",
        "_BINARY",
        "BIT",
        "BLOB",
        "BOOL",
        "BOOLEAN",
        "BOOTSTRAP",
        "BOTH",
        "_BT",
        "BTREE",
        "BUCKET_COUNT",
        "BUCKETS",
        "BY",
        "BYTE",
        "BYTE_LENGTH",
        "CACHE",
        "CALL",
        "CALL_FOR_PIPELINE",
        "CALLED",
        "CAPTURE",
        "CASCADE",
        "CASCADED",
        "CASE",
        "CATALOG",
        "CHAIN",
        "CHANGE",
        "CHAR",
        "CHARACTER",
        "CHARACTERISTICS",
        "CHARSET",
        "CHECK",
        "CHECKPOINT",
        "_CHECK_CAN_CONNECT",
        "_CHECK_CONSISTENCY",
        "CHECKSUM",
        "_CHECKSUM",
        "CLASS",
        "CLEAR",
        "CLIENT",
        "CLIENT_FOUND_ROWS",
        "CLOSE",
        "CLUSTER",
        "CLUSTERED",
        "CNF",
        "COALESCE",
        "COLLATE",
        "COLLATION",
        "COLUMN",
        "COLUMNAR",
        "COLUMNS",
        "COLUMNSTORE",
        "COLUMNSTORE_SEGMENT_ROWS",
        "COMMENT",
        "COMMENTS",
        "COMMIT",
        "COMMITTED",
        "_COMMIT_LOG_TAIL",
        "COMPACT",
        "COMPILE",
        "COMPRESSED",
        "COMPRESSION",
        "CONCURRENT",
        "CONCURRENTLY",
        "CONDITION",
        "CONFIGURATION",
        "CONNECTION",
        "CONNECTIONS",
        "CONFIG",
        "CONSTRAINT",
        "CONTAINS",
        "CONTENT",
        "CONTINUE",
        "_CONTINUE_REPLAY",
        "CONVERSION",
        "CONVERT",
        "COPY",
        "_CORE",
        "COST",
        "CREATE",
        "CREDENTIALS",
        "CROSS",
        "CUBE",
        "CSV",
        "CUME_DIST",
        "CURRENT",
        "CURRENT_CATALOG",
        "CURRENT_DATE",
        "CURRENT_SCHEMA",
        "CURRENT_SECURITY_GROUPS",
        "CURRENT_SECURITY_ROLES",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "CURSOR",
        "CYCLE",
        "DATA",
        "DATABASE",
        "DATABASES",
        "DATE",
        "DATETIME",
        "DAY",
        "DAY_HOUR",
        "DAY_MICROSECOND",
        "DAY_MINUTE",
        "DAY_SECOND",
        "DEALLOCATE",
        "DEC",
        "DECIMAL",
        "DECLARE",
        "DEFAULT",
        "DEFAULTS",
        "DEFERRABLE",
        "DEFERRED",
        "DEFINED",
        "DEFINER",
        "DELAYED",
        "DELAY_KEY_WRITE",
        "DELETE",
        "DELIMITER",
        "DELIMITERS",
        "DENSE_RANK",
        "DESC",
        "DESCRIBE",
        "DETACH",
        "DETERMINISTIC",
        "DICTIONARY",
        "DIFFERENTIAL",
        "DIRECTORY",
        "DISABLE",
        "DISCARD",
        "_DISCONNECT",
        "DISK",
        "DISTINCT",
        "DISTINCTROW",
        "DISTRIBUTED_JOINS",
        "DIV",
        "DO",
        "DOCUMENT",
        "DOMAIN",
        "DOUBLE",
        "DROP",
        "_DROP_PROFILE",
        "DUAL",
        "DUMP",
        "DUPLICATE",
        "DURABILITY",
        "DYNAMIC",
        "EARLIEST",
        "EACH",
        "ECHO",
        "ELECTION",
        "ELSE",
        "ELSEIF",
        "ENABLE",
        "ENCLOSED",
        "ENCODING",
        "ENCRYPTED",
        "END",
        "ENGINE",
        "ENGINES",
        "ENUM",
        "ERRORS",
        "ESCAPE",
        "ESCAPED",
        "ESTIMATE",
        "EVENT",
        "EVENTS",
        "EXCEPT",
        "EXCLUDE",
        "EXCLUDING",
        "EXCLUSIVE",
        "EXECUTE",
        "EXISTS",
        "EXIT",
        "EXPLAIN",
        "EXTENDED",
        "EXTENSION",
        "EXTERNAL",
        "EXTERNAL_HOST",
        "EXTERNAL_PORT",
        "EXTRACTOR",
        "EXTRACTORS",
        "EXTRA_JOIN",
        "_FAILOVER",
        "FAILED_LOGIN_ATTEMPTS",
        "FAILURE",
        "FALSE",
        "FAMILY",
        "FAULT",
        "FETCH",
        "FIELDS",
        "FILE",
        "FILES",
        "FILL",
        "FIX_ALTER",
        "FIXED",
        "FLOAT",
        "FLOAT4",
        "FLOAT8",
        "FLUSH",
        "FOLLOWING",
        "FOR",
        "FORCE",
        "FORCE_COMPILED_MODE",
        "FORCE_INTERPRETER_MODE",
        "FOREGROUND",
        "FOREIGN",
        "FORMAT",
        "FORWARD",
        "FREEZE",
        "FROM",
        "FS",
        "_FSYNC",
        "FULL",
        "FULLTEXT",
        "FUNCTION",
        "FUNCTIONS",
        "GC",
        "GCS",
        "GET_FORMAT",
        "_GC",
        "_GCX",
        "GENERATE",
        "GEOGRAPHY",
        "GEOGRAPHYPOINT",
        "GEOMETRY",
        "GEOMETRYPOINT",
        "GLOBAL",
        "_GLOBAL_VERSION_TIMESTAMP",
        "GRANT",
        "GRANTED",
        "GRANTS",
        "GROUP",
        "GROUPING",
        "GROUPS",
        "GZIP",
        "HANDLE",
        "HANDLER",
        "HARD_CPU_LIMIT_PERCENTAGE",
        "HASH",
        "HAS_TEMP_TABLES",
        "HAVING",
        "HDFS",
        "HEADER",
        "HEARTBEAT_NO_LOGGING",
        "HIGH_PRIORITY",
        "HISTOGRAM",
        "HOLD",
        "HOLDING",
        "HOST",
        "HOSTS",
        "HOUR",
        "HOUR_MICROSECOND",
        "HOUR_MINUTE",
        "HOUR_SECOND",
        "IDENTIFIED",
        "IDENTITY",
        "IF",
        "IGNORE",
        "ILIKE",
        "IMMEDIATE",
        "IMMUTABLE",
        "IMPLICIT",
        "IMPORT",
        "IN",
        "INCLUDING",
        "INCREMENT",
        "INCREMENTAL",
        "INDEX",
        "INDEXES",
        "INFILE",
        "INHERIT",
        "INHERITS",
        "_INIT_PROFILE",
        "INIT",
        "INITIALIZE",
        "INITIALLY",
        "INJECT",
        "INLINE",
        "INNER",
        "INOUT",
        "INPUT",
        "INSENSITIVE",
        "INSERT",
        "INSERT_METHOD",
        "INSTANCE",
        "INSTEAD",
        "IN",
        "INT",
        "INT1",
        "INT2",
        "INT3",
        "INT4",
        "INT8",
        "INTEGER",
        "_INTERNAL_DYNAMIC_TYPECAST",
        "INTERPRETER_MODE",
        "INTERSECT",
        "INTERVAL",
        "INTO",
        "INVOKER",
        "ISOLATION",
        "ITERATE",
        "JOIN",
        "JSON",
        "KAFKA",
        "KEY",
        "KEY_BLOCK_SIZE",
        "KEYS",
        "KILL",
        "KILLALL",
        "LABEL",
        "LAG",
        "LANGUAGE",
        "LARGE",
        "LAST",
        "LAST_VALUE",
        "LATERAL",
        "LATEST",
        "LC_COLLATE",
        "LC_CTYPE",
        "LEAD",
        "LEADING",
        "LEAF",
        "LEAKPROOF",
        "LEAVE",
        "LEAVES",
        "LEFT",
        "LEVEL",
        "LICENSE",
        "LIKE",
        "LIMIT",
        "LINES",
        "LISTEN",
        "LLVM",
        "LOADDATA_WHERE",
        "LOAD",
        "LOCAL",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "LOCATION",
        "LOCK",
        "LONG",
        "LONGBLOB",
        "LONGTEXT",
        "LOOP",
        "LOW_PRIORITY",
        "_LS",
        "LZ4",
        "MANAGEMENT",
        "_MANAGEMENT_THREAD",
        "MAPPING",
        "MASTER",
        "MATCH",
        "MATERIALIZED",
        "MAXVALUE",
        "MAX_CONCURRENCY",
        "MAX_ERRORS",
        "MAX_PARTITIONS_PER_BATCH",
        "MAX_QUEUE_DEPTH",
        "MAX_RETRIES_PER_BATCH_PARTITION",
        "MAX_ROWS",
        "MBC",
        "MPL",
        "MEDIUMBLOB",
        "MEDIUMINT",
        "MEDIUMTEXT",
        "MEMBER",
        "MEMORY",
        "MEMORY_PERCENTAGE",
        "_MEMSQL_TABLE_ID_LOOKUP",
        "MEMSQL",
        "MEMSQL_DESERIALIZE",
        "MEMSQL_IMITATING_KAFKA",
        "MEMSQL_SERIALIZE",
        "MERGE",
        "METADATA",
        "MICROSECOND",
        "MIDDLEINT",
        "MIN_ROWS",
        "MINUS",
        "MINUTE_MICROSECOND",
        "MINUTE_SECOND",
        "MINVALUE",
        "MOD",
        "MODE",
        "MODEL",
        "MODIFIES",
        "MODIFY",
        "MONTH",
        "MOVE",
        "MPL",
        "NAMES",
        "NAMED",
        "NAMESPACE",
        "NATIONAL",
        "NATURAL",
        "NCHAR",
        "NEXT",
        "NO",
        "NODE",
        "NONE",
        "NO_QUERY_REWRITE",
        "NOPARAM",
        "NOT",
        "NOTHING",
        "NOTIFY",
        "NOWAIT",
        "NO_WRITE_TO_BINLOG",
        "NO_QUERY_REWRITE",
        "NORELY",
        "NTH_VALUE",
        "NTILE",
        "NULL",
        "NULLCOLS",
        "NULLS",
        "NUMERIC",
        "NVARCHAR",
        "OBJECT",
        "OF",
        "OFF",
        "OFFLINE",
        "OFFSET",
        "OFFSETS",
        "OIDS",
        "ON",
        "ONLINE",
        "ONLY",
        "OPEN",
        "OPERATOR",
        "OPTIMIZATION",
        "OPTIMIZE",
        "OPTIMIZER",
        "OPTIMIZER_STATE",
        "OPTION",
        "OPTIONS",
        "OPTIONALLY",
        "OR",
        "ORDER",
        "ORDERED_SERIALIZE",
        "ORPHAN",
        "OUT",
        "OUT_OF_ORDER",
        "OUTER",
        "OUTFILE",
        "OVER",
        "OVERLAPS",
        "OVERLAY",
        "OWNED",
        "OWNER",
        "PACK_KEYS",
        "PAIRED",
        "PARSER",
        "PARQUET",
        "PARTIAL",
        "PARTITION",
        "PARTITION_ID",
        "PARTITIONING",
        "PARTITIONS",
        "PASSING",
        "PASSWORD",
        "PASSWORD_LOCK_TIME",
        "PAUSE",
        "_PAUSE_REPLAY",
        "PERIODIC",
        "PERSISTED",
        "PIPELINE",
        "PIPELINES",
        "PLACING",
        "PLAN",
        "PLANS",
        "PLANCACHE",
        "PLUGINS",
        "POOL",
        "POOLS",
        "PORT",
        "PRECEDING",
        "PRECISION",
        "PREPARE",
        "PRESERVE",
        "PRIMARY",
        "PRIOR",
        "PRIVILEGES",
        "PROCEDURAL",
        "PROCEDURE",
        "PROCEDURES",
        "PROCESS",
        "PROCESSLIST",
        "PROFILE",
        "PROFILES",
        "PROGRAM",
        "PROMOTE",
        "PROXY",
        "PURGE",
        "QUARTER",
        "QUERIES",
        "QUERY",
        "QUERY_TIMEOUT",
        "QUEUE",
        "RANGE",
        "RANK",
        "READ",
        "_READ",
        "READS",
        "REAL",
        "REASSIGN",
        "REBALANCE",
        "RECHECK",
        "RECORD",
        "RECURSIVE",
        "REDUNDANCY",
        "REDUNDANT",
        "REF",
        "REFERENCE",
        "REFERENCES",
        "REFRESH",
        "REGEXP",
        "REINDEX",
        "RELATIVE",
        "RELEASE",
        "RELOAD",
        "RELY",
        "REMOTE",
        "REMOVE",
        "RENAME",
        "REPAIR",
        "_REPAIR_TABLE",
        "REPEAT",
        "REPEATABLE",
        "_REPL",
        "_REPROVISIONING",
        "REPLACE",
        "REPLICA",
        "REPLICATE",
        "REPLICATING",
        "REPLICATION",
        "REQUIRE",
        "RESOURCE",
        "RESOURCE_POOL",
        "RESET",
        "RESTART",
        "RESTORE",
        "RESTRICT",
        "RESULT",
        "_RESURRECT",
        "RETRY",
        "RETURN",
        "RETURNING",
        "RETURNS",
        "REVERSE",
        "RG_POOL",
        "REVOKE",
        "RIGHT",
        "RIGHT_ANTI_JOIN",
        "RIGHT_SEMI_JOIN",
        "RIGHT_STRAIGHT_JOIN",
        "RLIKE",
        "ROLES",
        "ROLLBACK",
        "ROLLUP",
        "ROUTINE",
        "ROW",
        "ROW_COUNT",
        "ROW_FORMAT",
        "ROW_NUMBER",
        "ROWS",
        "ROWSTORE",
        "RULE",
        "_RPC",
        "RUNNING",
        "S3",
        "SAFE",
        "SAVE",
        "SAVEPOINT",
        "SCALAR",
        "SCHEMA",
        "SCHEMAS",
        "SCHEMA_BINDING",
        "SCROLL",
        "SEARCH",
        "SECOND",
        "SECOND_MICROSECOND",
        "SECURITY",
        "SELECT",
        "SEMI_JOIN",
        "_SEND_THREADS",
        "SENSITIVE",
        "SEPARATOR",
        "SEQUENCE",
        "SEQUENCES",
        "SERIAL",
        "SERIALIZABLE",
        "SERIES",
        "SERVICE_USER",
        "SERVER",
        "SESSION",
        "SESSION_USER",
        "SET",
        "SETOF",
        "SECURITY_LISTS_INTERSECT",
        "SHA",
        "SHARD",
        "SHARDED",
        "SHARDED_ID",
        "SHARE",
        "SHOW",
        "SHUTDOWN",
        "SIGNAL",
        "SIGNED",
        "SIMILAR",
        "SIMPLE",
        "SITE",
        "SKIP",
        "SKIPPED_BATCHES",
        "__SLEEP",
        "SMALLINT",
        "SNAPSHOT",
        "_SNAPSHOT",
        "_SNAPSHOTS",
        "SOFT_CPU_LIMIT_PERCENTAGE",
        "SOME",
        "SONAME",
        "SPARSE",
        "SPATIAL",
        "SPATIAL_CHECK_INDEX",
        "SPECIFIC",
        "SQL",
        "SQL_BIG_RESULT",
        "SQL_BUFFER_RESULT",
        "SQL_CACHE",
        "SQL_CALC_FOUND_ROWS",
        "SQLEXCEPTION",
        "SQL_MODE",
        "SQL_NO_CACHE",
        "SQL_NO_LOGGING",
        "SQL_SMALL_RESULT",
        "SQLSTATE",
        "SQLWARNING",
        "STDIN",
        "STDOUT",
        "STOP",
        "STORAGE",
        "STRAIGHT_JOIN",
        "STRICT",
        "STRING",
        "STRIP",
        "SUCCESS",
        "SUPER",
        "SYMMETRIC",
        "SYNC_SNAPSHOT",
        "SYNC",
        "_SYNC",
        "_SYNC2",
        "_SYNC_PARTITIONS",
        "_SYNC_SNAPSHOT",
        "SYNCHRONIZE",
        "SYSID",
        "SYSTEM",
        "TABLE",
        "TABLE_CHECKSUM",
        "TABLES",
        "TABLESPACE",
        "TAGS",
        "TARGET_SIZE",
        "TASK",
        "TEMP",
        "TEMPLATE",
        "TEMPORARY",
        "TEMPTABLE",
        "_TERM_BUMP",
        "TERMINATE",
        "TERMINATED",
        "TEXT",
        "THEN",
        "TIME",
        "TIMEOUT",
        "TIMESTAMP",
        "TIMESTAMPADD",
        "TIMESTAMPDIFF",
        "TIMEZONE",
        "TINYBLOB",
        "TINYINT",
        "TINYTEXT",
        "TO",
        "TRACELOGS",
        "TRADITIONAL",
        "TRAILING",
        "TRANSFORM",
        "TRANSACTION",
        "_TRANSACTIONS_EXPERIMENTAL",
        "TREAT",
        "TRIGGER",
        "TRIGGERS",
        "TRUE",
        "TRUNC",
        "TRUNCATE",
        "TRUSTED",
        "TWO_PHASE",
        "_TWOPCID",
        "TYPE",
        "TYPES",
        "UNBOUNDED",
        "UNCOMMITTED",
        "UNDEFINED",
        "UNDO",
        "UNENCRYPTED",
        "UNENFORCED",
        "UNHOLD",
        "UNICODE",
        "UNION",
        "UNIQUE",
        "_UNITTEST",
        "UNKNOWN",
        "UNLISTEN",
        "_UNLOAD",
        "UNLOCK",
        "UNLOGGED",
        "UNPIVOT",
        "UNSIGNED",
        "UNTIL",
        "UPDATE",
        "UPGRADE",
        "USAGE",
        "USE",
        "USER",
        "USERS",
        "USING",
        "UTC_DATE",
        "UTC_TIME",
        "UTC_TIMESTAMP",
        "_UTF8",
        "VACUUM",
        "VALID",
        "VALIDATE",
        "VALIDATOR",
        "VALUE",
        "VALUES",
        "VARBINARY",
        "VARCHAR",
        "VARCHARACTER",
        "VARIABLES",
        "VARIADIC",
        "VARYING",
        "VERBOSE",
        "VIEW",
        "VOID",
        "VOLATILE",
        "VOTING",
        "WAIT",
        "_WAKE",
        "WARNINGS",
        "WEEK",
        "WHEN",
        "WHERE",
        "WHILE",
        "WHITESPACE",
        "WINDOW",
        "WITH",
        "WITHOUT",
        "WITHIN",
        "_WM_HEARTBEAT",
        "WORK",
        "WORKLOAD",
        "WRAPPER",
        "WRITE",
        "XACT_ID",
        "XOR",
        "YEAR",
        "YEAR_MONTH",
        "YES",
        "ZEROFILL",
        "ZONE"
    ]
}), fB = ke({
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/vector-functions/vector-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/window-functions/window-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/string-functions/string-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/conditional-functions/conditional-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/numeric-functions/numeric-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/geospatial-functions/geospatial-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/json-functions/json-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/information-functions/information-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/aggregate-functions/aggregate-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/time-series-functions/time-series-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/identifier-generation-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/date-and-time-functions/date-and-time-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/distinct-count-estimation-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/full-text-search-functions/full-text-search-functions.html
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/regular-expression-functions.html
    all: [
        "ABS",
        "ACOS",
        "ADDDATE",
        "ADDTIME",
        "AES_DECRYPT",
        "AES_ENCRYPT",
        "ANY_VALUE",
        "APPROX_COUNT_DISTINCT",
        "APPROX_COUNT_DISTINCT_ACCUMULATE",
        "APPROX_COUNT_DISTINCT_COMBINE",
        "APPROX_COUNT_DISTINCT_ESTIMATE",
        "APPROX_GEOGRAPHY_INTERSECTS",
        "APPROX_PERCENTILE",
        "ASCII",
        "ASIN",
        "ATAN",
        "ATAN2",
        "AVG",
        "BIN",
        "BINARY",
        "BIT_AND",
        "BIT_COUNT",
        "BIT_OR",
        "BIT_XOR",
        "CAST",
        "CEIL",
        "CEILING",
        "CHAR",
        "CHARACTER_LENGTH",
        "CHAR_LENGTH",
        "CHARSET",
        "COALESCE",
        "COERCIBILITY",
        "COLLATION",
        "COLLECT",
        "CONCAT",
        "CONCAT_WS",
        "CONNECTION_ID",
        "CONV",
        "CONVERT",
        "CONVERT_TZ",
        "COS",
        "COT",
        "COUNT",
        "CUME_DIST",
        "CURDATE",
        "CURRENT_DATE",
        "CURRENT_ROLE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "CURTIME",
        "DATABASE",
        "DATE",
        "DATE_ADD",
        "DATEDIFF",
        "DATE_FORMAT",
        "DATE_SUB",
        "DATE_TRUNC",
        "DAY",
        "DAYNAME",
        "DAYOFMONTH",
        "DAYOFWEEK",
        "DAYOFYEAR",
        "DECODE",
        "DEFAULT",
        "DEGREES",
        "DENSE_RANK",
        "DIV",
        "DOT_PRODUCT",
        "ELT",
        "EUCLIDEAN_DISTANCE",
        "EXP",
        "EXTRACT",
        "FIELD",
        "FIRST",
        "FIRST_VALUE",
        "FLOOR",
        "FORMAT",
        "FOUND_ROWS",
        "FROM_BASE64",
        "FROM_DAYS",
        "FROM_UNIXTIME",
        "GEOGRAPHY_AREA",
        "GEOGRAPHY_CONTAINS",
        "GEOGRAPHY_DISTANCE",
        "GEOGRAPHY_INTERSECTS",
        "GEOGRAPHY_LATITUDE",
        "GEOGRAPHY_LENGTH",
        "GEOGRAPHY_LONGITUDE",
        "GEOGRAPHY_POINT",
        "GEOGRAPHY_WITHIN_DISTANCE",
        "GEOMETRY_AREA",
        "GEOMETRY_CONTAINS",
        "GEOMETRY_DISTANCE",
        "GEOMETRY_FILTER",
        "GEOMETRY_INTERSECTS",
        "GEOMETRY_LENGTH",
        "GEOMETRY_POINT",
        "GEOMETRY_WITHIN_DISTANCE",
        "GEOMETRY_X",
        "GEOMETRY_Y",
        "GREATEST",
        "GROUPING",
        "GROUP_CONCAT",
        "HEX",
        "HIGHLIGHT",
        "HOUR",
        "ICU_VERSION",
        "IF",
        "IFNULL",
        "INET_ATON",
        "INET_NTOA",
        "INET6_ATON",
        "INET6_NTOA",
        "INITCAP",
        "INSERT",
        "INSTR",
        "INTERVAL",
        "IS",
        "IS NULL",
        "JSON_AGG",
        "JSON_ARRAY_CONTAINS_DOUBLE",
        "JSON_ARRAY_CONTAINS_JSON",
        "JSON_ARRAY_CONTAINS_STRING",
        "JSON_ARRAY_PUSH_DOUBLE",
        "JSON_ARRAY_PUSH_JSON",
        "JSON_ARRAY_PUSH_STRING",
        "JSON_DELETE_KEY",
        "JSON_EXTRACT_DOUBLE",
        "JSON_EXTRACT_JSON",
        "JSON_EXTRACT_STRING",
        "JSON_EXTRACT_BIGINT",
        "JSON_GET_TYPE",
        "JSON_LENGTH",
        "JSON_SET_DOUBLE",
        "JSON_SET_JSON",
        "JSON_SET_STRING",
        "JSON_SPLICE_DOUBLE",
        "JSON_SPLICE_JSON",
        "JSON_SPLICE_STRING",
        "LAG",
        "LAST_DAY",
        "LAST_VALUE",
        "LCASE",
        "LEAD",
        "LEAST",
        "LEFT",
        "LENGTH",
        "LIKE",
        "LN",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "LOCATE",
        "LOG",
        "LOG10",
        "LOG2",
        "LPAD",
        "LTRIM",
        "MATCH",
        "MAX",
        "MD5",
        "MEDIAN",
        "MICROSECOND",
        "MIN",
        "MINUTE",
        "MOD",
        "MONTH",
        "MONTHNAME",
        "MONTHS_BETWEEN",
        "NOT",
        "NOW",
        "NTH_VALUE",
        "NTILE",
        "NULLIF",
        "OCTET_LENGTH",
        "PERCENT_RANK",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "PI",
        "PIVOT",
        "POSITION",
        "POW",
        "POWER",
        "QUARTER",
        "QUOTE",
        "RADIANS",
        "RAND",
        "RANK",
        "REGEXP",
        "REPEAT",
        "REPLACE",
        "REVERSE",
        "RIGHT",
        "RLIKE",
        "ROUND",
        "ROW_COUNT",
        "ROW_NUMBER",
        "RPAD",
        "RTRIM",
        "SCALAR",
        "SCHEMA",
        "SEC_TO_TIME",
        "SHA1",
        "SHA2",
        "SIGMOID",
        "SIGN",
        "SIN",
        "SLEEP",
        "SPLIT",
        "SOUNDEX",
        "SOUNDS LIKE",
        "SOURCE_POS_WAIT",
        "SPACE",
        "SQRT",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STR_TO_DATE",
        "SUBDATE",
        "SUBSTR",
        "SUBSTRING",
        "SUBSTRING_INDEX",
        "SUM",
        "SYS_GUID",
        "TAN",
        "TIME",
        "TIMEDIFF",
        "TIME_BUCKET",
        "TIME_FORMAT",
        "TIMESTAMP",
        "TIMESTAMPADD",
        "TIMESTAMPDIFF",
        "TIME_TO_SEC",
        "TO_BASE64",
        "TO_CHAR",
        "TO_DAYS",
        "TO_JSON",
        "TO_NUMBER",
        "TO_SECONDS",
        "TO_TIMESTAMP",
        "TRIM",
        "TRUNC",
        "TRUNCATE",
        "UCASE",
        "UNHEX",
        "UNIX_TIMESTAMP",
        "UPDATEXML",
        "UPPER",
        "USER",
        "UTC_DATE",
        "UTC_TIME",
        "UTC_TIMESTAMP",
        "UUID",
        "VALUES",
        "VARIANCE",
        "VAR_POP",
        "VAR_SAMP",
        "VECTOR_SUB",
        "VERSION",
        "WEEK",
        "WEEKDAY",
        "WEEKOFYEAR",
        "YEAR",
        // Data types with parameters
        // https://docs.singlestore.com/managed-service/en/reference/sql-reference/data-types.html
        "BIT",
        "TINYINT",
        "SMALLINT",
        "MEDIUMINT",
        "INT",
        "INTEGER",
        "BIGINT",
        "DECIMAL",
        "DEC",
        "NUMERIC",
        "FIXED",
        "FLOAT",
        "DOUBLE",
        "DOUBLE PRECISION",
        "REAL",
        "DATETIME",
        "TIMESTAMP",
        "TIME",
        "YEAR",
        "CHAR",
        "NATIONAL CHAR",
        "VARCHAR",
        "NATIONAL VARCHAR",
        "BINARY",
        "VARBINARY",
        "BLOB",
        "TEXT",
        "ENUM"
    ]
}), pB = Q([
    "SELECT [ALL | DISTINCT | DISTINCTROW]"
]), TB = Q([
    // queries
    "WITH",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "PARTITION BY",
    "ORDER BY",
    "LIMIT",
    "OFFSET",
    // Data manipulation
    // - insert:
    "INSERT [IGNORE] [INTO]",
    "VALUES",
    "REPLACE [INTO]",
    // - update:
    "SET",
    // Data definition
    "CREATE VIEW",
    "CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]",
    "CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]",
    "CREATE [OR REPLACE] [EXTERNAL] FUNCTION"
]), I1 = Q([
    // - update:
    "UPDATE",
    // - delete:
    "DELETE [FROM]",
    // - drop table:
    "DROP [TEMPORARY] TABLE [IF EXISTS]",
    // - alter table:
    "ALTER [ONLINE] TABLE",
    "ADD [COLUMN]",
    "ADD [UNIQUE] {INDEX | KEY}",
    "DROP [COLUMN]",
    "MODIFY [COLUMN]",
    "CHANGE",
    "RENAME [TO | AS]",
    // - truncate:
    "TRUNCATE [TABLE]",
    // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html
    "ADD AGGREGATOR",
    "ADD LEAF",
    "AGGREGATOR SET AS MASTER",
    "ALTER DATABASE",
    "ALTER PIPELINE",
    "ALTER RESOURCE POOL",
    "ALTER USER",
    "ALTER VIEW",
    "ANALYZE TABLE",
    "ATTACH DATABASE",
    "ATTACH LEAF",
    "ATTACH LEAF ALL",
    "BACKUP DATABASE",
    "BINLOG",
    "BOOTSTRAP AGGREGATOR",
    "CACHE INDEX",
    "CALL",
    "CHANGE",
    "CHANGE MASTER TO",
    "CHANGE REPLICATION FILTER",
    "CHANGE REPLICATION SOURCE TO",
    "CHECK BLOB CHECKSUM",
    "CHECK TABLE",
    "CHECKSUM TABLE",
    "CLEAR ORPHAN DATABASES",
    "CLONE",
    "COMMIT",
    "CREATE DATABASE",
    "CREATE GROUP",
    "CREATE INDEX",
    "CREATE LINK",
    "CREATE MILESTONE",
    "CREATE PIPELINE",
    "CREATE RESOURCE POOL",
    "CREATE ROLE",
    "CREATE USER",
    "DEALLOCATE PREPARE",
    "DESCRIBE",
    "DETACH DATABASE",
    "DETACH PIPELINE",
    "DROP DATABASE",
    "DROP FUNCTION",
    "DROP INDEX",
    "DROP LINK",
    "DROP PIPELINE",
    "DROP PROCEDURE",
    "DROP RESOURCE POOL",
    "DROP ROLE",
    "DROP USER",
    "DROP VIEW",
    "EXECUTE",
    "EXPLAIN",
    "FLUSH",
    "FORCE",
    "GRANT",
    "HANDLER",
    "HELP",
    "KILL CONNECTION",
    "KILLALL QUERIES",
    "LOAD DATA",
    "LOAD INDEX INTO CACHE",
    "LOAD XML",
    "LOCK INSTANCE FOR BACKUP",
    "LOCK TABLES",
    "MASTER_POS_WAIT",
    "OPTIMIZE TABLE",
    "PREPARE",
    "PURGE BINARY LOGS",
    "REBALANCE PARTITIONS",
    "RELEASE SAVEPOINT",
    "REMOVE AGGREGATOR",
    "REMOVE LEAF",
    "REPAIR TABLE",
    "REPLACE",
    "REPLICATE DATABASE",
    "RESET",
    "RESET MASTER",
    "RESET PERSIST",
    "RESET REPLICA",
    "RESET SLAVE",
    "RESTART",
    "RESTORE DATABASE",
    "RESTORE REDUNDANCY",
    "REVOKE",
    "ROLLBACK",
    "ROLLBACK TO SAVEPOINT",
    "SAVEPOINT",
    "SET CHARACTER SET",
    "SET DEFAULT ROLE",
    "SET NAMES",
    "SET PASSWORD",
    "SET RESOURCE GROUP",
    "SET ROLE",
    "SET TRANSACTION",
    "SHOW",
    "SHOW CHARACTER SET",
    "SHOW COLLATION",
    "SHOW COLUMNS",
    "SHOW CREATE DATABASE",
    "SHOW CREATE FUNCTION",
    "SHOW CREATE PIPELINE",
    "SHOW CREATE PROCEDURE",
    "SHOW CREATE TABLE",
    "SHOW CREATE USER",
    "SHOW CREATE VIEW",
    "SHOW DATABASES",
    "SHOW ENGINE",
    "SHOW ENGINES",
    "SHOW ERRORS",
    "SHOW FUNCTION CODE",
    "SHOW FUNCTION STATUS",
    "SHOW GRANTS",
    "SHOW INDEX",
    "SHOW MASTER STATUS",
    "SHOW OPEN TABLES",
    "SHOW PLUGINS",
    "SHOW PRIVILEGES",
    "SHOW PROCEDURE CODE",
    "SHOW PROCEDURE STATUS",
    "SHOW PROCESSLIST",
    "SHOW PROFILE",
    "SHOW PROFILES",
    "SHOW RELAYLOG EVENTS",
    "SHOW REPLICA STATUS",
    "SHOW REPLICAS",
    "SHOW SLAVE",
    "SHOW SLAVE HOSTS",
    "SHOW STATUS",
    "SHOW TABLE STATUS",
    "SHOW TABLES",
    "SHOW VARIABLES",
    "SHOW WARNINGS",
    "SHUTDOWN",
    "SNAPSHOT DATABASE",
    "SOURCE_POS_WAIT",
    "START GROUP_REPLICATION",
    "START PIPELINE",
    "START REPLICA",
    "START SLAVE",
    "START TRANSACTION",
    "STOP GROUP_REPLICATION",
    "STOP PIPELINE",
    "STOP REPLICA",
    "STOP REPLICATING",
    "STOP SLAVE",
    "TEST PIPELINE",
    "UNLOCK INSTANCE",
    "UNLOCK TABLES",
    "USE",
    "XA",
    // flow control
    "ITERATE",
    "LEAVE",
    "LOOP",
    "REPEAT",
    "RETURN",
    "WHILE"
]), hB = Q([
    "UNION [ALL | DISTINCT]",
    "EXCEPT",
    "INTERSECT",
    "MINUS"
]), AB = Q([
    "JOIN",
    "{LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{INNER | CROSS} JOIN",
    "NATURAL {LEFT | RIGHT} [OUTER] JOIN",
    // non-standard joins
    "STRAIGHT_JOIN"
]), SB = Q([
    "ON DELETE",
    "ON UPDATE",
    "CHARACTER SET",
    "{ROWS | RANGE} BETWEEN"
]), RB = {
    tokenizerOptions: {
        reservedSelect: pB,
        reservedClauses: [
            ...TB,
            ...I1
        ],
        reservedSetOperations: hB,
        reservedJoins: AB,
        reservedPhrases: SB,
        reservedKeywords: dB,
        reservedFunctionNames: fB,
        // TODO: support _binary"some string" prefix
        stringTypes: [
            '""-qq-bs',
            "''-qq-bs",
            {
                quote: "''-raw",
                prefixes: [
                    "B",
                    "X"
                ],
                requirePrefix: !0
            }
        ],
        identTypes: [
            "``"
        ],
        identChars: {
            first: "$",
            rest: "$",
            allowFirstCharNumber: !0
        },
        variableTypes: [
            {
                regex: "@@?[A-Za-z0-9_$]+"
            },
            {
                quote: "``",
                prefixes: [
                    "@"
                ],
                requirePrefix: !0
            }
        ],
        lineCommentTypes: [
            "--",
            "#"
        ],
        operators: [
            ":=",
            "&",
            "|",
            "^",
            "~",
            "<<",
            ">>",
            "<=>",
            "&&",
            "||",
            "::",
            "::$",
            "::%",
            ":>",
            "!:>"
        ],
        postProcess: mB
    },
    formatOptions: {
        alwaysDenseOperators: [
            "::",
            "::$",
            "::%"
        ],
        onelineClauses: I1
    }
};
function mB(e) {
    return e.map((t, n)=>{
        const r = e[n + 1] || ji;
        return li.SET(t) && r.text === "(" ? {
            ...t,
            type: Z.RESERVED_FUNCTION_NAME
        } : t;
    });
}
const _B = ke({
    // https://docs.snowflake.com/en/sql-reference-functions.html
    //
    // https://docs.snowflake.com/en/sql-reference/functions-all.html
    // 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)
    // 2. split all lines that contain ',' or '/' into multiple lines
    // 3. remove all '— Deprecated' parts from the strings
    // 4. delete all strings that end with '<object_type>', they are already covered in the list
    // 5. remove all strings that contain '[', they are operators not functions
    // 6. fix all values that contain '*'
    // 7. delete operatos ':', '::', '||'
    //
    // Steps 1-5 can be combined by the following script in the developer console:
    // $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1
    //   .map(x => x.split(x.includes(',') ? ',' : '/')).flat().map(x => x.trim()) // Step 2
    //   .map(x => x.replace('— Deprecated', '')) // Step 3
    //   .filter(x => !x.endsWith('<object_type>')) // Step 4
    //   .filter(x => !x.includes('[')) // Step 5
    all: [
        "ABS",
        "ACOS",
        "ACOSH",
        "ADD_MONTHS",
        "ALL_USER_NAMES",
        "ANY_VALUE",
        "APPROX_COUNT_DISTINCT",
        "APPROX_PERCENTILE",
        "APPROX_PERCENTILE_ACCUMULATE",
        "APPROX_PERCENTILE_COMBINE",
        "APPROX_PERCENTILE_ESTIMATE",
        "APPROX_TOP_K",
        "APPROX_TOP_K_ACCUMULATE",
        "APPROX_TOP_K_COMBINE",
        "APPROX_TOP_K_ESTIMATE",
        "APPROXIMATE_JACCARD_INDEX",
        "APPROXIMATE_SIMILARITY",
        "ARRAY_AGG",
        "ARRAY_APPEND",
        "ARRAY_CAT",
        "ARRAY_COMPACT",
        "ARRAY_CONSTRUCT",
        "ARRAY_CONSTRUCT_COMPACT",
        "ARRAY_CONTAINS",
        "ARRAY_INSERT",
        "ARRAY_INTERSECTION",
        "ARRAY_POSITION",
        "ARRAY_PREPEND",
        "ARRAY_SIZE",
        "ARRAY_SLICE",
        "ARRAY_TO_STRING",
        "ARRAY_UNION_AGG",
        "ARRAY_UNIQUE_AGG",
        "ARRAYS_OVERLAP",
        "AS_ARRAY",
        "AS_BINARY",
        "AS_BOOLEAN",
        "AS_CHAR",
        "AS_VARCHAR",
        "AS_DATE",
        "AS_DECIMAL",
        "AS_NUMBER",
        "AS_DOUBLE",
        "AS_REAL",
        "AS_INTEGER",
        "AS_OBJECT",
        "AS_TIME",
        "AS_TIMESTAMP_LTZ",
        "AS_TIMESTAMP_NTZ",
        "AS_TIMESTAMP_TZ",
        "ASCII",
        "ASIN",
        "ASINH",
        "ATAN",
        "ATAN2",
        "ATANH",
        "AUTO_REFRESH_REGISTRATION_HISTORY",
        "AUTOMATIC_CLUSTERING_HISTORY",
        "AVG",
        "BASE64_DECODE_BINARY",
        "BASE64_DECODE_STRING",
        "BASE64_ENCODE",
        "BIT_LENGTH",
        "BITAND",
        "BITAND_AGG",
        "BITMAP_BIT_POSITION",
        "BITMAP_BUCKET_NUMBER",
        "BITMAP_CONSTRUCT_AGG",
        "BITMAP_COUNT",
        "BITMAP_OR_AGG",
        "BITNOT",
        "BITOR",
        "BITOR_AGG",
        "BITSHIFTLEFT",
        "BITSHIFTRIGHT",
        "BITXOR",
        "BITXOR_AGG",
        "BOOLAND",
        "BOOLAND_AGG",
        "BOOLNOT",
        "BOOLOR",
        "BOOLOR_AGG",
        "BOOLXOR",
        "BOOLXOR_AGG",
        "BUILD_SCOPED_FILE_URL",
        "BUILD_STAGE_FILE_URL",
        "CASE",
        "CAST",
        "CBRT",
        "CEIL",
        "CHARINDEX",
        "CHECK_JSON",
        "CHECK_XML",
        "CHR",
        "CHAR",
        "COALESCE",
        "COLLATE",
        "COLLATION",
        "COMPLETE_TASK_GRAPHS",
        "COMPRESS",
        "CONCAT",
        "CONCAT_WS",
        "CONDITIONAL_CHANGE_EVENT",
        "CONDITIONAL_TRUE_EVENT",
        "CONTAINS",
        "CONVERT_TIMEZONE",
        "COPY_HISTORY",
        "CORR",
        "COS",
        "COSH",
        "COT",
        "COUNT",
        "COUNT_IF",
        "COVAR_POP",
        "COVAR_SAMP",
        "CUME_DIST",
        "CURRENT_ACCOUNT",
        "CURRENT_AVAILABLE_ROLES",
        "CURRENT_CLIENT",
        "CURRENT_DATABASE",
        "CURRENT_DATE",
        "CURRENT_IP_ADDRESS",
        "CURRENT_REGION",
        "CURRENT_ROLE",
        "CURRENT_SCHEMA",
        "CURRENT_SCHEMAS",
        "CURRENT_SECONDARY_ROLES",
        "CURRENT_SESSION",
        "CURRENT_STATEMENT",
        "CURRENT_TASK_GRAPHS",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_TRANSACTION",
        "CURRENT_USER",
        "CURRENT_VERSION",
        "CURRENT_WAREHOUSE",
        "DATA_TRANSFER_HISTORY",
        "DATABASE_REFRESH_HISTORY",
        "DATABASE_REFRESH_PROGRESS",
        "DATABASE_REFRESH_PROGRESS_BY_JOB",
        "DATABASE_STORAGE_USAGE_HISTORY",
        "DATE_FROM_PARTS",
        "DATE_PART",
        "DATE_TRUNC",
        "DATEADD",
        "DATEDIFF",
        "DAYNAME",
        "DECODE",
        "DECOMPRESS_BINARY",
        "DECOMPRESS_STRING",
        "DECRYPT",
        "DECRYPT_RAW",
        "DEGREES",
        "DENSE_RANK",
        "DIV0",
        "EDITDISTANCE",
        "ENCRYPT",
        "ENCRYPT_RAW",
        "ENDSWITH",
        "EQUAL_NULL",
        "EXP",
        "EXPLAIN_JSON",
        "EXTERNAL_FUNCTIONS_HISTORY",
        "EXTERNAL_TABLE_FILES",
        "EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY",
        "EXTRACT",
        "EXTRACT_SEMANTIC_CATEGORIES",
        "FACTORIAL",
        "FIRST_VALUE",
        "FLATTEN",
        "FLOOR",
        "GENERATE_COLUMN_DESCRIPTION",
        "GENERATOR",
        "GET",
        "GET_ABSOLUTE_PATH",
        "GET_DDL",
        "GET_IGNORE_CASE",
        "GET_OBJECT_REFERENCES",
        "GET_PATH",
        "GET_PRESIGNED_URL",
        "GET_RELATIVE_PATH",
        "GET_STAGE_LOCATION",
        "GETBIT",
        "GREATEST",
        "GROUPING",
        "GROUPING_ID",
        "HASH",
        "HASH_AGG",
        "HAVERSINE",
        "HEX_DECODE_BINARY",
        "HEX_DECODE_STRING",
        "HEX_ENCODE",
        "HLL",
        "HLL_ACCUMULATE",
        "HLL_COMBINE",
        "HLL_ESTIMATE",
        "HLL_EXPORT",
        "HLL_IMPORT",
        "HOUR",
        "MINUTE",
        "SECOND",
        "IFF",
        "IFNULL",
        "ILIKE",
        "ILIKE ANY",
        "INFER_SCHEMA",
        "INITCAP",
        "INSERT",
        "INVOKER_ROLE",
        "INVOKER_SHARE",
        "IS_ARRAY",
        "IS_BINARY",
        "IS_BOOLEAN",
        "IS_CHAR",
        "IS_VARCHAR",
        "IS_DATE",
        "IS_DATE_VALUE",
        "IS_DECIMAL",
        "IS_DOUBLE",
        "IS_REAL",
        "IS_GRANTED_TO_INVOKER_ROLE",
        "IS_INTEGER",
        "IS_NULL_VALUE",
        "IS_OBJECT",
        "IS_ROLE_IN_SESSION",
        "IS_TIME",
        "IS_TIMESTAMP_LTZ",
        "IS_TIMESTAMP_NTZ",
        "IS_TIMESTAMP_TZ",
        "JAROWINKLER_SIMILARITY",
        "JSON_EXTRACT_PATH_TEXT",
        "KURTOSIS",
        "LAG",
        "LAST_DAY",
        "LAST_QUERY_ID",
        "LAST_TRANSACTION",
        "LAST_VALUE",
        "LEAD",
        "LEAST",
        "LEFT",
        "LENGTH",
        "LEN",
        "LIKE",
        "LIKE ALL",
        "LIKE ANY",
        "LISTAGG",
        "LN",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "LOG",
        "LOGIN_HISTORY",
        "LOGIN_HISTORY_BY_USER",
        "LOWER",
        "LPAD",
        "LTRIM",
        "MATERIALIZED_VIEW_REFRESH_HISTORY",
        "MD5",
        "MD5_HEX",
        "MD5_BINARY",
        "MD5_NUMBER — Obsoleted",
        "MD5_NUMBER_LOWER64",
        "MD5_NUMBER_UPPER64",
        "MEDIAN",
        "MIN",
        "MAX",
        "MINHASH",
        "MINHASH_COMBINE",
        "MOD",
        "MODE",
        "MONTHNAME",
        "MONTHS_BETWEEN",
        "NEXT_DAY",
        "NORMAL",
        "NTH_VALUE",
        "NTILE",
        "NULLIF",
        "NULLIFZERO",
        "NVL",
        "NVL2",
        "OBJECT_AGG",
        "OBJECT_CONSTRUCT",
        "OBJECT_CONSTRUCT_KEEP_NULL",
        "OBJECT_DELETE",
        "OBJECT_INSERT",
        "OBJECT_KEYS",
        "OBJECT_PICK",
        "OCTET_LENGTH",
        "PARSE_IP",
        "PARSE_JSON",
        "PARSE_URL",
        "PARSE_XML",
        "PERCENT_RANK",
        "PERCENTILE_CONT",
        "PERCENTILE_DISC",
        "PI",
        "PIPE_USAGE_HISTORY",
        "POLICY_CONTEXT",
        "POLICY_REFERENCES",
        "POSITION",
        "POW",
        "POWER",
        "PREVIOUS_DAY",
        "QUERY_ACCELERATION_HISTORY",
        "QUERY_HISTORY",
        "QUERY_HISTORY_BY_SESSION",
        "QUERY_HISTORY_BY_USER",
        "QUERY_HISTORY_BY_WAREHOUSE",
        "RADIANS",
        "RANDOM",
        "RANDSTR",
        "RANK",
        "RATIO_TO_REPORT",
        "REGEXP",
        "REGEXP_COUNT",
        "REGEXP_INSTR",
        "REGEXP_LIKE",
        "REGEXP_REPLACE",
        "REGEXP_SUBSTR",
        "REGEXP_SUBSTR_ALL",
        "REGR_AVGX",
        "REGR_AVGY",
        "REGR_COUNT",
        "REGR_INTERCEPT",
        "REGR_R2",
        "REGR_SLOPE",
        "REGR_SXX",
        "REGR_SXY",
        "REGR_SYY",
        "REGR_VALX",
        "REGR_VALY",
        "REPEAT",
        "REPLACE",
        "REPLICATION_GROUP_REFRESH_HISTORY",
        "REPLICATION_GROUP_REFRESH_PROGRESS",
        "REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB",
        "REPLICATION_GROUP_USAGE_HISTORY",
        "REPLICATION_USAGE_HISTORY",
        "REST_EVENT_HISTORY",
        "RESULT_SCAN",
        "REVERSE",
        "RIGHT",
        "RLIKE",
        "ROUND",
        "ROW_NUMBER",
        "RPAD",
        "RTRIM",
        "RTRIMMED_LENGTH",
        "SEARCH_OPTIMIZATION_HISTORY",
        "SEQ1",
        "SEQ2",
        "SEQ4",
        "SEQ8",
        "SERVERLESS_TASK_HISTORY",
        "SHA1",
        "SHA1_HEX",
        "SHA1_BINARY",
        "SHA2",
        "SHA2_HEX",
        "SHA2_BINARY",
        "SIGN",
        "SIN",
        "SINH",
        "SKEW",
        "SOUNDEX",
        "SPACE",
        "SPLIT",
        "SPLIT_PART",
        "SPLIT_TO_TABLE",
        "SQRT",
        "SQUARE",
        "ST_AREA",
        "ST_ASEWKB",
        "ST_ASEWKT",
        "ST_ASGEOJSON",
        "ST_ASWKB",
        "ST_ASBINARY",
        "ST_ASWKT",
        "ST_ASTEXT",
        "ST_AZIMUTH",
        "ST_CENTROID",
        "ST_COLLECT",
        "ST_CONTAINS",
        "ST_COVEREDBY",
        "ST_COVERS",
        "ST_DIFFERENCE",
        "ST_DIMENSION",
        "ST_DISJOINT",
        "ST_DISTANCE",
        "ST_DWITHIN",
        "ST_ENDPOINT",
        "ST_ENVELOPE",
        "ST_GEOGFROMGEOHASH",
        "ST_GEOGPOINTFROMGEOHASH",
        "ST_GEOGRAPHYFROMWKB",
        "ST_GEOGRAPHYFROMWKT",
        "ST_GEOHASH",
        "ST_GEOMETRYFROMWKB",
        "ST_GEOMETRYFROMWKT",
        "ST_HAUSDORFFDISTANCE",
        "ST_INTERSECTION",
        "ST_INTERSECTS",
        "ST_LENGTH",
        "ST_MAKEGEOMPOINT",
        "ST_GEOM_POINT",
        "ST_MAKELINE",
        "ST_MAKEPOINT",
        "ST_POINT",
        "ST_MAKEPOLYGON",
        "ST_POLYGON",
        "ST_NPOINTS",
        "ST_NUMPOINTS",
        "ST_PERIMETER",
        "ST_POINTN",
        "ST_SETSRID",
        "ST_SIMPLIFY",
        "ST_SRID",
        "ST_STARTPOINT",
        "ST_SYMDIFFERENCE",
        "ST_UNION",
        "ST_WITHIN",
        "ST_X",
        "ST_XMAX",
        "ST_XMIN",
        "ST_Y",
        "ST_YMAX",
        "ST_YMIN",
        "STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY",
        "STAGE_STORAGE_USAGE_HISTORY",
        "STARTSWITH",
        "STDDEV",
        "STDDEV_POP",
        "STDDEV_SAMP",
        "STRIP_NULL_VALUE",
        "STRTOK",
        "STRTOK_SPLIT_TO_TABLE",
        "STRTOK_TO_ARRAY",
        "SUBSTR",
        "SUBSTRING",
        "SUM",
        "SYSDATE",
        "SYSTEM$ABORT_SESSION",
        "SYSTEM$ABORT_TRANSACTION",
        "SYSTEM$AUTHORIZE_PRIVATELINK",
        "SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS",
        "SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS",
        "SYSTEM$CANCEL_ALL_QUERIES",
        "SYSTEM$CANCEL_QUERY",
        "SYSTEM$CLUSTERING_DEPTH",
        "SYSTEM$CLUSTERING_INFORMATION",
        "SYSTEM$CLUSTERING_RATIO ",
        "SYSTEM$CURRENT_USER_TASK_NAME",
        "SYSTEM$DATABASE_REFRESH_HISTORY ",
        "SYSTEM$DATABASE_REFRESH_PROGRESS",
        "SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ",
        "SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE",
        "SYSTEM$DISABLE_DATABASE_REPLICATION",
        "SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE",
        "SYSTEM$ESTIMATE_QUERY_ACCELERATION",
        "SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS",
        "SYSTEM$EXPLAIN_JSON_TO_TEXT",
        "SYSTEM$EXPLAIN_PLAN_JSON",
        "SYSTEM$EXTERNAL_TABLE_PIPE_STATUS",
        "SYSTEM$GENERATE_SAML_CSR",
        "SYSTEM$GENERATE_SCIM_ACCESS_TOKEN",
        "SYSTEM$GET_AWS_SNS_IAM_POLICY",
        "SYSTEM$GET_PREDECESSOR_RETURN_VALUE",
        "SYSTEM$GET_PRIVATELINK",
        "SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS",
        "SYSTEM$GET_PRIVATELINK_CONFIG",
        "SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO",
        "SYSTEM$GET_TAG",
        "SYSTEM$GET_TAG_ALLOWED_VALUES",
        "SYSTEM$GET_TAG_ON_CURRENT_COLUMN",
        "SYSTEM$GET_TAG_ON_CURRENT_TABLE",
        "SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER",
        "SYSTEM$LAST_CHANGE_COMMIT_TIME",
        "SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME",
        "SYSTEM$MIGRATE_SAML_IDP_REGISTRATION",
        "SYSTEM$PIPE_FORCE_RESUME",
        "SYSTEM$PIPE_STATUS",
        "SYSTEM$REVOKE_PRIVATELINK",
        "SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS",
        "SYSTEM$SET_RETURN_VALUE",
        "SYSTEM$SHOW_OAUTH_CLIENT_SECRETS",
        "SYSTEM$STREAM_GET_TABLE_TIMESTAMP",
        "SYSTEM$STREAM_HAS_DATA",
        "SYSTEM$TASK_DEPENDENTS_ENABLE",
        "SYSTEM$TYPEOF",
        "SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS",
        "SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN",
        "SYSTEM$WAIT",
        "SYSTEM$WHITELIST",
        "SYSTEM$WHITELIST_PRIVATELINK",
        "TAG_REFERENCES",
        "TAG_REFERENCES_ALL_COLUMNS",
        "TAG_REFERENCES_WITH_LINEAGE",
        "TAN",
        "TANH",
        "TASK_DEPENDENTS",
        "TASK_HISTORY",
        "TIME_FROM_PARTS",
        "TIME_SLICE",
        "TIMEADD",
        "TIMEDIFF",
        "TIMESTAMP_FROM_PARTS",
        "TIMESTAMPADD",
        "TIMESTAMPDIFF",
        "TO_ARRAY",
        "TO_BINARY",
        "TO_BOOLEAN",
        "TO_CHAR",
        "TO_VARCHAR",
        "TO_DATE",
        "DATE",
        "TO_DECIMAL",
        "TO_NUMBER",
        "TO_NUMERIC",
        "TO_DOUBLE",
        "TO_GEOGRAPHY",
        "TO_GEOMETRY",
        "TO_JSON",
        "TO_OBJECT",
        "TO_TIME",
        "TIME",
        "TO_TIMESTAMP",
        "TO_TIMESTAMP_LTZ",
        "TO_TIMESTAMP_NTZ",
        "TO_TIMESTAMP_TZ",
        "TO_VARIANT",
        "TO_XML",
        "TRANSLATE",
        "TRIM",
        "TRUNCATE",
        "TRUNC",
        "TRUNC",
        "TRY_BASE64_DECODE_BINARY",
        "TRY_BASE64_DECODE_STRING",
        "TRY_CAST",
        "TRY_HEX_DECODE_BINARY",
        "TRY_HEX_DECODE_STRING",
        "TRY_PARSE_JSON",
        "TRY_TO_BINARY",
        "TRY_TO_BOOLEAN",
        "TRY_TO_DATE",
        "TRY_TO_DECIMAL",
        "TRY_TO_NUMBER",
        "TRY_TO_NUMERIC",
        "TRY_TO_DOUBLE",
        "TRY_TO_GEOGRAPHY",
        "TRY_TO_GEOMETRY",
        "TRY_TO_TIME",
        "TRY_TO_TIMESTAMP",
        "TRY_TO_TIMESTAMP_LTZ",
        "TRY_TO_TIMESTAMP_NTZ",
        "TRY_TO_TIMESTAMP_TZ",
        "TYPEOF",
        "UNICODE",
        "UNIFORM",
        "UPPER",
        "UUID_STRING",
        "VALIDATE",
        "VALIDATE_PIPE_LOAD",
        "VAR_POP",
        "VAR_SAMP",
        "VARIANCE",
        "VARIANCE_SAMP",
        "VARIANCE_POP",
        "WAREHOUSE_LOAD_HISTORY",
        "WAREHOUSE_METERING_HISTORY",
        "WIDTH_BUCKET",
        "XMLGET",
        "YEAR",
        "YEAROFWEEK",
        "YEAROFWEEKISO",
        "DAY",
        "DAYOFMONTH",
        "DAYOFWEEK",
        "DAYOFWEEKISO",
        "DAYOFYEAR",
        "WEEK",
        "WEEK",
        "WEEKOFYEAR",
        "WEEKISO",
        "MONTH",
        "QUARTER",
        "ZEROIFNULL",
        "ZIPF"
    ]
}), NB = ke({
    // https://docs.snowflake.com/en/sql-reference/reserved-keywords.html
    //
    // run in console on this page: $x('//tbody/tr/*[1]/p/text()').map(x => x.nodeValue)
    all: [
        "ACCOUNT",
        "ALL",
        "ALTER",
        "AND",
        "ANY",
        "AS",
        "BETWEEN",
        "BY",
        "CASE",
        "CAST",
        "CHECK",
        "COLUMN",
        "CONNECT",
        "CONNECTION",
        "CONSTRAINT",
        "CREATE",
        "CROSS",
        "CURRENT",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "DATABASE",
        "DELETE",
        "DISTINCT",
        "DROP",
        "ELSE",
        "EXISTS",
        "FALSE",
        "FOLLOWING",
        "FOR",
        "FROM",
        "FULL",
        "GRANT",
        "GROUP",
        "GSCLUSTER",
        "HAVING",
        "ILIKE",
        "IN",
        "INCREMENT",
        "INNER",
        "INSERT",
        "INTERSECT",
        "INTO",
        "IS",
        "ISSUE",
        "JOIN",
        "LATERAL",
        "LEFT",
        "LIKE",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "MINUS",
        "NATURAL",
        "NOT",
        "NULL",
        "OF",
        "ON",
        "OR",
        "ORDER",
        "ORGANIZATION",
        "QUALIFY",
        "REGEXP",
        "REVOKE",
        "RIGHT",
        "RLIKE",
        "ROW",
        "ROWS",
        "SAMPLE",
        "SCHEMA",
        "SELECT",
        "SET",
        "SOME",
        "START",
        "TABLE",
        "TABLESAMPLE",
        "THEN",
        "TO",
        "TRIGGER",
        "TRUE",
        "TRY_CAST",
        "UNION",
        "UNIQUE",
        "UPDATE",
        "USING",
        "VALUES",
        "VIEW",
        "WHEN",
        "WHENEVER",
        "WHERE",
        "WITH"
    ]
}), IB = Q([
    "SELECT [ALL | DISTINCT]"
]), OB = Q([
    // queries
    "WITH [RECURSIVE]",
    "FROM",
    "WHERE",
    "GROUP BY",
    "HAVING",
    "PARTITION BY",
    "ORDER BY",
    "QUALIFY",
    "LIMIT",
    "OFFSET",
    "FETCH [FIRST | NEXT]",
    // Data manipulation
    // - insert:
    "INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]",
    "{THEN | ELSE} INTO",
    "VALUES",
    // - update:
    "SET",
    // Data definition
    // - view
    "CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]",
    // - create/drop/merge table
    "CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]",
    "CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]",
    "CLUSTER BY",
    "[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}",
    "COPY GRANTS",
    "USING TEMPLATE",
    "MERGE INTO",
    "WHEN MATCHED [AND]",
    "THEN {UPDATE SET | DELETE}",
    "WHEN NOT MATCHED THEN INSERT"
]), O1 = Q([
    // - update:
    "UPDATE",
    // - delete:
    "DELETE FROM",
    // - drop table:
    "DROP TABLE [IF EXISTS]",
    // - alter table:
    "ALTER TABLE [IF EXISTS]",
    "RENAME TO",
    "SWAP WITH",
    "[SUSPEND | RESUME] RECLUSTER",
    "DROP CLUSTERING KEY",
    "ADD [COLUMN]",
    "RENAME COLUMN",
    "{ALTER | MODIFY} [COLUMN]",
    "DROP [COLUMN]",
    "{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]",
    "RENAME CONSTRAINT",
    "{ADD | DROP} SEARCH OPTIMIZATION",
    "{SET | UNSET} TAG",
    // Actually TAG is optional, but that conflicts with UPDATE..SET statement
    "{ADD | DROP} ROW ACCESS POLICY",
    "DROP ALL ROW ACCESS POLICIES",
    "{SET | DROP} DEFAULT",
    // for alter column
    "{SET | DROP} NOT NULL",
    // for alter column
    "[SET DATA] TYPE",
    // for alter column
    "[UNSET] COMMENT",
    // for alter column
    "{SET | UNSET} MASKING POLICY",
    // for alter column
    // - truncate:
    "TRUNCATE [TABLE] [IF EXISTS]",
    // other
    // https://docs.snowflake.com/en/sql-reference/sql-all.html
    //
    // 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)
    // 2. delete all lines that contain a sting like '(.*)', they are already covered in the list
    // 3. delete all lines that contain a sting like '<.*>', they are already covered in the list
    // 4. delete all lines that contain '…', they are part of a regex statement that can't be covered here
    // 5. Manually add 'COPY INTO'
    // 6. Remove all lines that are already in `reservedClauses`
    //
    // Steps 1-4 can be combined by the following script in the developer console:
    // $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1
    //   filter(x => !x.match(/\(.*\)/) && !x.match(/…/) && !x.match(/<.*>/)) // Step 2-4
    "ALTER ACCOUNT",
    "ALTER API INTEGRATION",
    "ALTER CONNECTION",
    "ALTER DATABASE",
    "ALTER EXTERNAL TABLE",
    "ALTER FAILOVER GROUP",
    "ALTER FILE FORMAT",
    "ALTER FUNCTION",
    "ALTER INTEGRATION",
    "ALTER MASKING POLICY",
    "ALTER MATERIALIZED VIEW",
    "ALTER NETWORK POLICY",
    "ALTER NOTIFICATION INTEGRATION",
    "ALTER PIPE",
    "ALTER PROCEDURE",
    "ALTER REPLICATION GROUP",
    "ALTER RESOURCE MONITOR",
    "ALTER ROLE",
    "ALTER ROW ACCESS POLICY",
    "ALTER SCHEMA",
    "ALTER SECURITY INTEGRATION",
    "ALTER SEQUENCE",
    "ALTER SESSION",
    "ALTER SESSION POLICY",
    "ALTER SHARE",
    "ALTER STAGE",
    "ALTER STORAGE INTEGRATION",
    "ALTER STREAM",
    "ALTER TAG",
    "ALTER TASK",
    "ALTER USER",
    "ALTER VIEW",
    "ALTER WAREHOUSE",
    "BEGIN",
    "CALL",
    "COMMIT",
    "COPY INTO",
    "CREATE ACCOUNT",
    "CREATE API INTEGRATION",
    "CREATE CONNECTION",
    "CREATE DATABASE",
    "CREATE EXTERNAL FUNCTION",
    "CREATE EXTERNAL TABLE",
    "CREATE FAILOVER GROUP",
    "CREATE FILE FORMAT",
    "CREATE FUNCTION",
    "CREATE INTEGRATION",
    "CREATE MANAGED ACCOUNT",
    "CREATE MASKING POLICY",
    "CREATE MATERIALIZED VIEW",
    "CREATE NETWORK POLICY",
    "CREATE NOTIFICATION INTEGRATION",
    "CREATE PIPE",
    "CREATE PROCEDURE",
    "CREATE REPLICATION GROUP",
    "CREATE RESOURCE MONITOR",
    "CREATE ROLE",
    "CREATE ROW ACCESS POLICY",
    "CREATE SCHEMA",
    "CREATE SECURITY INTEGRATION",
    "CREATE SEQUENCE",
    "CREATE SESSION POLICY",
    "CREATE SHARE",
    "CREATE STAGE",
    "CREATE STORAGE INTEGRATION",
    "CREATE STREAM",
    "CREATE TAG",
    "CREATE TASK",
    "CREATE USER",
    "CREATE WAREHOUSE",
    "DELETE",
    "DESCRIBE DATABASE",
    "DESCRIBE EXTERNAL TABLE",
    "DESCRIBE FILE FORMAT",
    "DESCRIBE FUNCTION",
    "DESCRIBE INTEGRATION",
    "DESCRIBE MASKING POLICY",
    "DESCRIBE MATERIALIZED VIEW",
    "DESCRIBE NETWORK POLICY",
    "DESCRIBE PIPE",
    "DESCRIBE PROCEDURE",
    "DESCRIBE RESULT",
    "DESCRIBE ROW ACCESS POLICY",
    "DESCRIBE SCHEMA",
    "DESCRIBE SEQUENCE",
    "DESCRIBE SESSION POLICY",
    "DESCRIBE SHARE",
    "DESCRIBE STAGE",
    "DESCRIBE STREAM",
    "DESCRIBE TABLE",
    "DESCRIBE TASK",
    "DESCRIBE TRANSACTION",
    "DESCRIBE USER",
    "DESCRIBE VIEW",
    "DESCRIBE WAREHOUSE",
    "DROP CONNECTION",
    "DROP DATABASE",
    "DROP EXTERNAL TABLE",
    "DROP FAILOVER GROUP",
    "DROP FILE FORMAT",
    "DROP FUNCTION",
    "DROP INTEGRATION",
    "DROP MANAGED ACCOUNT",
    "DROP MASKING POLICY",
    "DROP MATERIALIZED VIEW",
    "DROP NETWORK POLICY",
    "DROP PIPE",
    "DROP PROCEDURE",
    "DROP REPLICATION GROUP",
    "DROP RESOURCE MONITOR",
    "DROP ROLE",
    "DROP ROW ACCESS POLICY",
    "DROP SCHEMA",
    "DROP SEQUENCE",
    "DROP SESSION POLICY",
    "DROP SHARE",
    "DROP STAGE",
    "DROP STREAM",
    "DROP TAG",
    "DROP TASK",
    "DROP USER",
    "DROP VIEW",
    "DROP WAREHOUSE",
    "EXECUTE IMMEDIATE",
    "EXECUTE TASK",
    "EXPLAIN",
    "GET",
    "GRANT OWNERSHIP",
    "GRANT ROLE",
    "INSERT",
    "LIST",
    "MERGE",
    "PUT",
    "REMOVE",
    "REVOKE ROLE",
    "ROLLBACK",
    "SHOW COLUMNS",
    "SHOW CONNECTIONS",
    "SHOW DATABASES",
    "SHOW DATABASES IN FAILOVER GROUP",
    "SHOW DATABASES IN REPLICATION GROUP",
    "SHOW DELEGATED AUTHORIZATIONS",
    "SHOW EXTERNAL FUNCTIONS",
    "SHOW EXTERNAL TABLES",
    "SHOW FAILOVER GROUPS",
    "SHOW FILE FORMATS",
    "SHOW FUNCTIONS",
    "SHOW GLOBAL ACCOUNTS",
    "SHOW GRANTS",
    "SHOW INTEGRATIONS",
    "SHOW LOCKS",
    "SHOW MANAGED ACCOUNTS",
    "SHOW MASKING POLICIES",
    "SHOW MATERIALIZED VIEWS",
    "SHOW NETWORK POLICIES",
    "SHOW OBJECTS",
    "SHOW ORGANIZATION ACCOUNTS",
    "SHOW PARAMETERS",
    "SHOW PIPES",
    "SHOW PRIMARY KEYS",
    "SHOW PROCEDURES",
    "SHOW REGIONS",
    "SHOW REPLICATION ACCOUNTS",
    "SHOW REPLICATION DATABASES",
    "SHOW REPLICATION GROUPS",
    "SHOW RESOURCE MONITORS",
    "SHOW ROLES",
    "SHOW ROW ACCESS POLICIES",
    "SHOW SCHEMAS",
    "SHOW SEQUENCES",
    "SHOW SESSION POLICIES",
    "SHOW SHARES",
    "SHOW SHARES IN FAILOVER GROUP",
    "SHOW SHARES IN REPLICATION GROUP",
    "SHOW STAGES",
    "SHOW STREAMS",
    "SHOW TABLES",
    "SHOW TAGS",
    "SHOW TASKS",
    "SHOW TRANSACTIONS",
    "SHOW USER FUNCTIONS",
    "SHOW USERS",
    "SHOW VARIABLES",
    "SHOW VIEWS",
    "SHOW WAREHOUSES",
    "TRUNCATE MATERIALIZED VIEW",
    "UNDROP DATABASE",
    "UNDROP SCHEMA",
    "UNDROP TABLE",
    "UNDROP TAG",
    "UNSET",
    "USE DATABASE",
    "USE ROLE",
    "USE SCHEMA",
    "USE SECONDARY ROLES",
    "USE WAREHOUSE"
]), CB = Q([
    "UNION [ALL]",
    "MINUS",
    "EXCEPT",
    "INTERSECT"
]), gB = Q([
    "[INNER] JOIN",
    "[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN",
    "{CROSS | NATURAL} JOIN"
]), LB = Q([
    "{ROWS | RANGE} BETWEEN",
    "ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"
]), yB = {
    tokenizerOptions: {
        reservedSelect: IB,
        reservedClauses: [
            ...OB,
            ...O1
        ],
        reservedSetOperations: CB,
        reservedJoins: gB,
        reservedPhrases: LB,
        reservedKeywords: NB,
        reservedFunctionNames: _B,
        stringTypes: [
            "$$",
            "''-qq-bs"
        ],
        identTypes: [
            '""-qq'
        ],
        variableTypes: [
            // for accessing columns at certain positons in the table
            {
                regex: "[$][1-9]\\d*"
            },
            // identifier style syntax
            {
                regex: "[$][_a-zA-Z][_a-zA-Z0-9$]*"
            }
        ],
        extraParens: [
            "[]"
        ],
        identChars: {
            rest: "$"
        },
        lineCommentTypes: [
            "--",
            "//"
        ],
        operators: [
            // Modulo
            "%",
            // Type cast
            "::",
            // String concat
            "||",
            // Get Path
            ":",
            // Generators: https://docs.snowflake.com/en/sql-reference/functions/generator.html#generator
            "=>"
        ]
    },
    formatOptions: {
        alwaysDenseOperators: [
            ":",
            "::"
        ],
        onelineClauses: O1
    }
}, vB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    bigquery: o9,
    db2: R9,
    hive: L9,
    mariadb: x9,
    mysql: W9,
    n1ql: $9,
    plsql: oF,
    postgresql: hF,
    redshift: OF,
    singlestoredb: RB,
    snowflake: yB,
    spark: MF,
    sql: JF,
    sqlite: HF,
    transactsql: EB,
    trino: rB
}, Symbol.toStringTag, {
    value: "Module"
})), _r = (e)=>e.replace(/[.*+?^${}()|[\]\\]/gu, "\\$&"), C1 = /\s+/uy, na = (e)=>new RegExp(`(?:${e})`, "uy"), bB = (e)=>e.split("").map((t)=>/ /gu.test(t) ? "\\s+" : `[${t.toUpperCase()}${t.toLowerCase()}]`).join(""), PB = (e)=>e + "(?:-" + e + ")*", MB = ({ prefixes: e, requirePrefix: t })=>`(?:${e.map(bB).join("|")}${t ? "" : "|"})`, DB = (e)=>new RegExp(`(?:${e.map(_r).join("|")}).*?(?=\r
|\r|
|$)`, "uy"), g1 = (e, t = [])=>{
    const n = e === "open" ? 0 : 1, r = [
        "()",
        ...t
    ].map((s)=>s[n]);
    return na(r.map(_r).join("|"));
}, wB = (e)=>na(`${mg(e).map(_r).join("|")}`), xB = ({ rest: e, dashes: t })=>e || t ? `(?![${e || ""}${t ? "-" : ""}])` : "", mi = (e, t = {})=>{
    if (e.length === 0) return /^\b$/u;
    const n = xB(t), r = mg(e).map(_r).join("|").replace(/ /gu, "\\s+");
    return new RegExp(`(?:${r})${n}\\b`, "iuy");
}, yf = (e, t)=>{
    if (!e.length) return;
    const n = e.map(_r).join("|");
    return na(`(?:${n})(?:${t})`);
}, UB = ()=>{
    const e = {
        "<": ">",
        "[": "]",
        "(": ")",
        "{": "}"
    }, t = "{left}(?:(?!{right}').)*?{right}", n = Object.entries(e).map(([a, o])=>t.replace(/{left}/g, _r(a)).replace(/{right}/g, _r(o))), r = _r(Object.keys(e).join(""));
    return `[Qq]'(?:${String.raw`(?<tag>[^\s${r}])(?:(?!\k<tag>').)*?\k<tag>`}|${n.join("|")})'`;
}, L1 = {
    // - backtick quoted (using `` to escape)
    "``": "(?:`[^`]*`)+",
    // - Transact-SQL square bracket quoted (using ]] to escape)
    "[]": String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,
    // double-quoted
    '""-qq': String.raw`(?:"[^"]*")+`,
    // with repeated quote escapes
    '""-bs': String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,
    // with backslash escapes
    '""-qq-bs': String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,
    // with repeated quote or backslash escapes
    '""-raw': String.raw`(?:"[^"]*")`,
    // no escaping
    // single-quoted
    "''-qq": String.raw`(?:'[^']*')+`,
    // with repeated quote escapes
    "''-bs": String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,
    // with backslash escapes
    "''-qq-bs": String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,
    // with repeated quote or backslash escapes
    "''-raw": String.raw`(?:'[^']*')`,
    // no escaping
    // PostgreSQL dollar-quoted
    $$: String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,
    // BigQuery '''triple-quoted''' (using \' to escape)
    "'''..'''": String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,
    // BigQuery """triple-quoted""" (using \" to escape)
    '""".."""': String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,
    // Hive and Spark variables: ${name}
    "{}": String.raw`(?:\{[^\}]*\})`,
    // Oracle q'' strings: q'<text>' q'|text|' ...
    "q''": UB()
}, Ig = (e)=>typeof e == "string" ? L1[e] : "regex" in e ? e.regex : MB(e) + L1[e.quote], FB = (e)=>na(e.map((t)=>"regex" in t ? t.regex : Ig(t)).join("|")), Og = (e)=>e.map(Ig).join("|"), y1 = (e)=>na(Og(e)), BB = (e = {})=>na(Cg(e)), Cg = ({ first: e, rest: t, dashes: n, allowFirstCharNumber: r } = {})=>{
    const s = "\\p{Alphabetic}\\p{Mark}_", i = "\\p{Decimal_Number}", a = _r(e ?? ""), o = _r(t ?? ""), l = r ? `[${s}${i}${a}][${s}${i}${o}]*` : `[${s}${a}][${s}${i}${o}]*`;
    return n ? PB(l) : l;
};
function gg(e, t) {
    const n = e.slice(0, t).split(/\n/);
    return {
        line: n.length,
        col: n[n.length - 1].length + 1
    };
}
class GB {
    // Current position in string
    constructor(t){
        Cn(this, "input", "");
        // The input SQL string to process
        Cn(this, "index", 0);
        this.rules = t;
    }
    /**
   * Takes a SQL string and breaks it into tokens.
   * Each token is an object with type and value.
   *
   * @param {string} input - The SQL string
   * @returns {Token[]} output token stream
   */ tokenize(t) {
        this.input = t, this.index = 0;
        const n = [];
        let r;
        for(; this.index < this.input.length;){
            const s = this.getWhitespace();
            if (this.index < this.input.length) {
                if (r = this.getNextToken(), !r) throw this.createParseError();
                n.push({
                    ...r,
                    precedingWhitespace: s
                });
            }
        }
        return n;
    }
    createParseError() {
        const t = this.input.slice(this.index, this.index + 10), { line: n, col: r } = gg(this.input, this.index);
        return new Error(`Parse error: Unexpected "${t}" at line ${n} column ${r}`);
    }
    getWhitespace() {
        C1.lastIndex = this.index;
        const t = C1.exec(this.input);
        if (t) return this.index += t[0].length, t[0];
    }
    getNextToken() {
        for (const t of this.rules){
            const n = this.match(t);
            if (n) return n;
        }
    }
    // Attempts to match token rule regex at current position in input
    match(t) {
        t.regex.lastIndex = this.index;
        const n = t.regex.exec(this.input);
        if (n) {
            const r = n[0], s = {
                type: t.type,
                raw: r,
                text: t.text ? t.text(r) : r,
                start: this.index
            };
            return t.key && (s.key = t.key(r)), this.index += r.length, s;
        }
    }
}
const v1 = /\/\*/uy, kB = /([^/*]|\*[^/]|\/[^*])+/uy, HB = /\*\//uy;
class YB {
    constructor(){
        Cn(this, "lastIndex", 0);
    }
    exec(t) {
        let n = "", r, s = 0;
        if (r = this.matchSection(v1, t)) n += r, s++;
        else return null;
        for(; s > 0;)if (r = this.matchSection(v1, t)) n += r, s++;
        else if (r = this.matchSection(HB, t)) n += r, s--;
        else if (r = this.matchSection(kB, t)) n += r;
        else return null;
        return [
            n
        ];
    }
    matchSection(t, n) {
        t.lastIndex = this.lastIndex;
        const r = t.exec(n);
        return r && (this.lastIndex += r[0].length), r ? r[0] : null;
    }
}
class VB {
    constructor(t){
        this.cfg = t, this.rulesBeforeParams = this.buildRulesBeforeParams(t), this.rulesAfterParams = this.buildRulesAfterParams(t);
    }
    tokenize(t, n) {
        const r = [
            ...this.rulesBeforeParams,
            ...this.buildParamRules(this.cfg, n),
            ...this.rulesAfterParams
        ], s = new GB(r).tokenize(t);
        return this.cfg.postProcess ? this.cfg.postProcess(s) : s;
    }
    // These rules can be cached as they only depend on
    // the Tokenizer config options specified for each SQL dialect
    buildRulesBeforeParams(t) {
        return this.validRules([
            {
                type: Z.BLOCK_COMMENT,
                regex: t.nestedBlockComments ? new YB() : /(\/\*[^]*?\*\/)/uy
            },
            {
                type: Z.LINE_COMMENT,
                regex: DB(t.lineCommentTypes ?? [
                    "--"
                ])
            },
            {
                type: Z.QUOTED_IDENTIFIER,
                regex: y1(t.identTypes)
            },
            {
                type: Z.NUMBER,
                regex: /(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?!\w)/uy
            },
            // RESERVED_PHRASE is matched before all other keyword tokens
            // to e.g. prioritize matching "TIMESTAMP WITH TIME ZONE" phrase over "WITH" clause.
            {
                type: Z.RESERVED_PHRASE,
                regex: mi(t.reservedPhrases ?? [], t.identChars),
                text: Xt
            },
            {
                type: Z.CASE,
                regex: /CASE\b/iuy,
                text: Xt
            },
            {
                type: Z.END,
                regex: /END\b/iuy,
                text: Xt
            },
            {
                type: Z.BETWEEN,
                regex: /BETWEEN\b/iuy,
                text: Xt
            },
            {
                type: Z.LIMIT,
                regex: t.reservedClauses.includes("LIMIT") ? /LIMIT\b/iuy : void 0,
                text: Xt
            },
            {
                type: Z.RESERVED_CLAUSE,
                regex: mi(t.reservedClauses, t.identChars),
                text: Xt
            },
            {
                type: Z.RESERVED_SELECT,
                regex: mi(t.reservedSelect, t.identChars),
                text: Xt
            },
            {
                type: Z.RESERVED_SET_OPERATION,
                regex: mi(t.reservedSetOperations, t.identChars),
                text: Xt
            },
            {
                type: Z.WHEN,
                regex: /WHEN\b/iuy,
                text: Xt
            },
            {
                type: Z.ELSE,
                regex: /ELSE\b/iuy,
                text: Xt
            },
            {
                type: Z.THEN,
                regex: /THEN\b/iuy,
                text: Xt
            },
            {
                type: Z.RESERVED_JOIN,
                regex: mi(t.reservedJoins, t.identChars),
                text: Xt
            },
            {
                type: Z.AND,
                regex: /AND\b/iuy,
                text: Xt
            },
            {
                type: Z.OR,
                regex: /OR\b/iuy,
                text: Xt
            },
            {
                type: Z.XOR,
                regex: t.supportsXor ? /XOR\b/iuy : void 0,
                text: Xt
            },
            {
                type: Z.RESERVED_FUNCTION_NAME,
                regex: mi(t.reservedFunctionNames, t.identChars),
                text: Xt
            },
            {
                type: Z.RESERVED_KEYWORD,
                regex: mi(t.reservedKeywords, t.identChars),
                text: Xt
            }
        ]);
    }
    // These rules can also be cached as they only depend on
    // the Tokenizer config options specified for each SQL dialect
    buildRulesAfterParams(t) {
        return this.validRules([
            {
                type: Z.VARIABLE,
                regex: t.variableTypes ? FB(t.variableTypes) : void 0
            },
            {
                type: Z.STRING,
                regex: y1(t.stringTypes)
            },
            {
                type: Z.IDENTIFIER,
                regex: BB(t.identChars)
            },
            {
                type: Z.DELIMITER,
                regex: /[;]/uy
            },
            {
                type: Z.COMMA,
                regex: /[,]/y
            },
            {
                type: Z.OPEN_PAREN,
                regex: g1("open", t.extraParens)
            },
            {
                type: Z.CLOSE_PAREN,
                regex: g1("close", t.extraParens)
            },
            {
                type: Z.OPERATOR,
                regex: wB([
                    // standard operators
                    "+",
                    "-",
                    "/",
                    ">",
                    "<",
                    "=",
                    "<>",
                    "<=",
                    ">=",
                    "!=",
                    ...t.operators ?? []
                ])
            },
            {
                type: Z.ASTERISK,
                regex: /[*]/uy
            },
            {
                type: Z.DOT,
                regex: /[.]/uy
            }
        ]);
    }
    // These rules can't be blindly cached as the paramTypesOverrides object
    // can differ on each invocation of the format() function.
    buildParamRules(t, n) {
        var r, s, i, a, o;
        const l = {
            named: (n == null ? void 0 : n.named) || ((r = t.paramTypes) === null || r === void 0 ? void 0 : r.named) || [],
            quoted: (n == null ? void 0 : n.quoted) || ((s = t.paramTypes) === null || s === void 0 ? void 0 : s.quoted) || [],
            numbered: (n == null ? void 0 : n.numbered) || ((i = t.paramTypes) === null || i === void 0 ? void 0 : i.numbered) || [],
            positional: typeof (n == null ? void 0 : n.positional) == "boolean" ? n.positional : (a = t.paramTypes) === null || a === void 0 ? void 0 : a.positional,
            custom: (n == null ? void 0 : n.custom) || ((o = t.paramTypes) === null || o === void 0 ? void 0 : o.custom) || []
        };
        return this.validRules([
            {
                type: Z.NAMED_PARAMETER,
                regex: yf(l.named, Cg(t.paramChars || t.identChars)),
                key: (c)=>c.slice(1)
            },
            {
                type: Z.QUOTED_PARAMETER,
                regex: yf(l.quoted, Og(t.identTypes)),
                key: (c)=>(({ tokenKey: u, quoteChar: E })=>u.replace(new RegExp(_r("\\" + E), "gu"), E))({
                        tokenKey: c.slice(2, -1),
                        quoteChar: c.slice(-1)
                    })
            },
            {
                type: Z.NUMBERED_PARAMETER,
                regex: yf(l.numbered, "[0-9]+"),
                key: (c)=>c.slice(1)
            },
            {
                type: Z.POSITIONAL_PARAMETER,
                regex: l.positional ? /[?]/y : void 0
            },
            ...l.custom.map((c)=>({
                    type: Z.CUSTOM_PARAMETER,
                    regex: na(c.regex),
                    key: c.key ?? ((u)=>u)
                }))
        ]);
    }
    // filters out rules for token types whose regex is undefined
    validRules(t) {
        return t.filter((n)=>!!n.regex);
    }
}
const Xt = (e)=>Ng(e.toUpperCase()), b1 = /* @__PURE__ */ new Map(), WB = (e)=>{
    let t = b1.get(e);
    return t || (t = jB(e), b1.set(e, t)), t;
}, jB = (e)=>({
        tokenizer: new VB(e.tokenizerOptions),
        formatOptions: XB(e.formatOptions)
    }), XB = (e)=>({
        alwaysDenseOperators: e.alwaysDenseOperators || [],
        onelineClauses: Object.fromEntries(e.onelineClauses.map((t)=>[
                t,
                !0
            ]))
    });
function P1(e) {
    return e.indentStyle === "tabularLeft" || e.indentStyle === "tabularRight" ? " ".repeat(10) : e.useTabs ? "	" : " ".repeat(e.tabWidth);
}
function wo(e) {
    return e.indentStyle === "tabularLeft" || e.indentStyle === "tabularRight";
}
class KB {
    constructor(t){
        this.params = t, this.index = 0;
    }
    /**
   * Returns param value that matches given placeholder with param key.
   */ get({ key: t, text: n }) {
        return this.params ? t ? this.params[t] : this.params[this.index++] : n;
    }
    /**
   * Returns index of current positional parameter.
   */ getPositionalParameterIndex() {
        return this.index;
    }
    /**
   * Sets index of current positional parameter.
   */ setPositionalParameterIndex(t) {
        this.index = t;
    }
}
var Lg = {
    exports: {}
};
(function(e) {
    (function(t, n) {
        e.exports ? e.exports = n() : t.nearley = n();
    })(at, function() {
        function t(c, u, E) {
            return this.id = ++t.highestId, this.name = c, this.symbols = u, this.postprocess = E, this;
        }
        t.highestId = 0, t.prototype.toString = function(c) {
            var u = typeof c > "u" ? this.symbols.map(l).join(" ") : this.symbols.slice(0, c).map(l).join(" ") + " ● " + this.symbols.slice(c).map(l).join(" ");
            return this.name + " → " + u;
        };
        function n(c, u, E, p) {
            this.rule = c, this.dot = u, this.reference = E, this.data = [], this.wantedBy = p, this.isComplete = this.dot === c.symbols.length;
        }
        n.prototype.toString = function() {
            return "{" + this.rule.toString(this.dot) + "}, from: " + (this.reference || 0);
        }, n.prototype.nextState = function(c) {
            var u = new n(this.rule, this.dot + 1, this.reference, this.wantedBy);
            return u.left = this, u.right = c, u.isComplete && (u.data = u.build(), u.right = void 0), u;
        }, n.prototype.build = function() {
            var c = [], u = this;
            do c.push(u.right.data), u = u.left;
            while (u.left)
            return c.reverse(), c;
        }, n.prototype.finish = function() {
            this.rule.postprocess && (this.data = this.rule.postprocess(this.data, this.reference, a.fail));
        };
        function r(c, u) {
            this.grammar = c, this.index = u, this.states = [], this.wants = {}, this.scannable = [], this.completed = {};
        }
        r.prototype.process = function(c) {
            for(var u = this.states, E = this.wants, p = this.completed, A = 0; A < u.length; A++){
                var R = u[A];
                if (R.isComplete) {
                    if (R.finish(), R.data !== a.fail) {
                        for(var C = R.wantedBy, O = C.length; O--;){
                            var d = C[O];
                            this.complete(d, R);
                        }
                        if (R.reference === this.index) {
                            var f = R.rule.name;
                            (this.completed[f] = this.completed[f] || []).push(R);
                        }
                    }
                } else {
                    var f = R.rule.symbols[R.dot];
                    if (typeof f != "string") {
                        this.scannable.push(R);
                        continue;
                    }
                    if (E[f]) {
                        if (E[f].push(R), p.hasOwnProperty(f)) for(var _ = p[f], O = 0; O < _.length; O++){
                            var h = _[O];
                            this.complete(R, h);
                        }
                    } else E[f] = [
                        R
                    ], this.predict(f);
                }
            }
        }, r.prototype.predict = function(c) {
            for(var u = this.grammar.byName[c] || [], E = 0; E < u.length; E++){
                var p = u[E], A = this.wants[c], R = new n(p, 0, this.index, A);
                this.states.push(R);
            }
        }, r.prototype.complete = function(c, u) {
            var E = c.nextState(u);
            this.states.push(E);
        };
        function s(c, u) {
            this.rules = c, this.start = u || this.rules[0].name;
            var E = this.byName = {};
            this.rules.forEach(function(p) {
                E.hasOwnProperty(p.name) || (E[p.name] = []), E[p.name].push(p);
            });
        }
        s.fromCompiled = function(p, u) {
            var E = p.Lexer;
            p.ParserStart && (u = p.ParserStart, p = p.ParserRules);
            var p = p.map(function(R) {
                return new t(R.name, R.symbols, R.postprocess);
            }), A = new s(p, u);
            return A.lexer = E, A;
        };
        function i() {
            this.reset("");
        }
        i.prototype.reset = function(c, u) {
            this.buffer = c, this.index = 0, this.line = u ? u.line : 1, this.lastLineBreak = u ? -u.col : 0;
        }, i.prototype.next = function() {
            if (this.index < this.buffer.length) {
                var c = this.buffer[this.index++];
                return c === `
` && (this.line += 1, this.lastLineBreak = this.index), {
                    value: c
                };
            }
        }, i.prototype.save = function() {
            return {
                line: this.line,
                col: this.index - this.lastLineBreak
            };
        }, i.prototype.formatError = function(c, u) {
            var E = this.buffer;
            if (typeof E == "string") {
                var p = E.split(`
`).slice(Math.max(0, this.line - 5), this.line);
                E.indexOf(`
`, this.index);
                var A = this.index - this.lastLineBreak, R = String(this.line).length;
                return u += " at line " + this.line + " col " + A + `:

`, u += p.map(function(O, d) {
                    return C(this.line - p.length + d + 1, R) + " " + O;
                }, this).join(`
`), u += `
` + C("", R + A) + `^
`, u;
            } else return u + " at index " + (this.index - 1);
            "TURBOPACK unreachable";
            function C(O, d) {
                var f = String(O);
                return Array(d - f.length + 1).join(" ") + f;
            }
        };
        function a(c, u, E) {
            if (c instanceof s) var p = c, E = u;
            else var p = s.fromCompiled(c, u);
            this.grammar = p, this.options = {
                keepHistory: !1,
                lexer: p.lexer || new i()
            };
            for(var A in E || {})this.options[A] = E[A];
            this.lexer = this.options.lexer, this.lexerState = void 0;
            var R = new r(p, 0);
            this.table = [
                R
            ], R.wants[p.start] = [], R.predict(p.start), R.process(), this.current = 0;
        }
        a.fail = {}, a.prototype.feed = function(c) {
            var u = this.lexer;
            u.reset(c, this.lexerState);
            for(var E;;){
                try {
                    if (E = u.next(), !E) break;
                } catch (N) {
                    var C = new r(this.grammar, this.current + 1);
                    this.table.push(C);
                    var p = new Error(this.reportLexerError(N));
                    throw p.offset = this.current, p.token = N.token, p;
                }
                var A = this.table[this.current];
                this.options.keepHistory || delete this.table[this.current - 1];
                var R = this.current + 1, C = new r(this.grammar, R);
                this.table.push(C);
                for(var O = E.text !== void 0 ? E.text : E.value, d = u.constructor === i ? E.value : E, f = A.scannable, _ = f.length; _--;){
                    var h = f[_], I = h.rule.symbols[h.dot];
                    if (I.test ? I.test(d) : I.type ? I.type === E.type : I.literal === O) {
                        var T = h.nextState({
                            data: d,
                            token: E,
                            isToken: !0,
                            reference: R - 1
                        });
                        C.states.push(T);
                    }
                }
                if (C.process(), C.states.length === 0) {
                    var p = new Error(this.reportError(E));
                    throw p.offset = this.current, p.token = E, p;
                }
                this.options.keepHistory && (A.lexerState = u.save()), this.current++;
            }
            return A && (this.lexerState = u.save()), this.results = this.finish(), this;
        }, a.prototype.reportLexerError = function(c) {
            var u, E, p = c.token;
            return p ? (u = "input " + JSON.stringify(p.text[0]) + " (lexer error)", E = this.lexer.formatError(p, "Syntax error")) : (u = "input (lexer error)", E = c.message), this.reportErrorCommon(E, u);
        }, a.prototype.reportError = function(c) {
            var u = (c.type ? c.type + " token: " : "") + JSON.stringify(c.value !== void 0 ? c.value : c), E = this.lexer.formatError(c, "Syntax error");
            return this.reportErrorCommon(E, u);
        }, a.prototype.reportErrorCommon = function(c, u) {
            var E = [];
            E.push(c);
            var p = this.table.length - 2, A = this.table[p], R = A.states.filter(function(O) {
                var d = O.rule.symbols[O.dot];
                return d && typeof d != "string";
            });
            if (R.length === 0) E.push("Unexpected " + u + `. I did not expect any more input. Here is the state of my parse table:
`), this.displayStateStack(A.states, E);
            else {
                E.push("Unexpected " + u + `. Instead, I was expecting to see one of the following:
`);
                var C = R.map(function(O) {
                    return this.buildFirstStateStack(O, []) || [
                        O
                    ];
                }, this);
                C.forEach(function(O) {
                    var d = O[0], f = d.rule.symbols[d.dot], _ = this.getSymbolDisplay(f);
                    E.push("A " + _ + " based on:"), this.displayStateStack(O, E);
                }, this);
            }
            return E.push(""), E.join(`
`);
        }, a.prototype.displayStateStack = function(c, u) {
            for(var E, p = 0, A = 0; A < c.length; A++){
                var R = c[A], C = R.rule.toString(R.dot);
                C === E ? p++ : (p > 0 && u.push("    ^ " + p + " more lines identical to this"), p = 0, u.push("    " + C)), E = C;
            }
        }, a.prototype.getSymbolDisplay = function(c) {
            return o(c);
        }, a.prototype.buildFirstStateStack = function(c, u) {
            if (u.indexOf(c) !== -1) return null;
            if (c.wantedBy.length === 0) return [
                c
            ];
            var E = c.wantedBy[0], p = [
                c
            ].concat(u), A = this.buildFirstStateStack(E, p);
            return A === null ? null : [
                c
            ].concat(A);
        }, a.prototype.save = function() {
            var c = this.table[this.current];
            return c.lexerState = this.lexerState, c;
        }, a.prototype.restore = function(c) {
            var u = c.index;
            this.current = u, this.table[u] = c, this.table.splice(u + 1), this.lexerState = c.lexerState, this.results = this.finish();
        }, a.prototype.rewind = function(c) {
            if (!this.options.keepHistory) throw new Error("set option `keepHistory` to enable rewinding");
            this.restore(this.table[c]);
        }, a.prototype.finish = function() {
            var c = [], u = this.grammar.start, E = this.table[this.table.length - 1];
            return E.states.forEach(function(p) {
                p.rule.name === u && p.dot === p.rule.symbols.length && p.reference === 0 && p.data !== a.fail && c.push(p);
            }), c.map(function(p) {
                return p.data;
            });
        };
        function o(c) {
            var u = typeof c;
            if (u === "string") return c;
            if (u === "object") {
                if (c.literal) return JSON.stringify(c.literal);
                if (c instanceof RegExp) return "character matching " + c;
                if (c.type) return c.type + " token";
                if (c.test) return "token matching " + String(c.test);
                throw new Error("Unknown symbol type: " + c);
            }
        }
        function l(c) {
            var u = typeof c;
            if (u === "string") return c;
            if (u === "object") {
                if (c.literal) return JSON.stringify(c.literal);
                if (c instanceof RegExp) return c.toString();
                if (c.type) return "%" + c.type;
                if (c.test) return "<" + String(c.test) + ">";
                throw new Error("Unknown symbol type: " + c);
            }
        }
        return {
            Parser: a,
            Grammar: s,
            Rule: t
        };
    });
})(Lg);
var zB = Lg.exports;
const JB = /* @__PURE__ */ Ts(zB);
function qB(e) {
    return e.map(ZB).map(QB).map($B).map(eG);
}
const ZB = (e, t, n)=>{
    if (Sg(e.type)) {
        const r = tG(n, t);
        if (r && r.text === ".") return {
            ...e,
            type: Z.IDENTIFIER,
            text: e.raw
        };
    }
    return e;
}, QB = (e, t, n)=>{
    if (e.type === Z.RESERVED_FUNCTION_NAME) {
        const r = dd(n, t);
        if (!r || !nG(r)) return {
            ...e,
            type: Z.RESERVED_KEYWORD
        };
    }
    return e;
}, $B = (e, t, n)=>{
    if (e.type === Z.IDENTIFIER) {
        const r = dd(n, t);
        if (r && yg(r)) return {
            ...e,
            type: Z.ARRAY_IDENTIFIER
        };
    }
    return e;
}, eG = (e, t, n)=>{
    if (e.type === Z.RESERVED_KEYWORD) {
        const r = dd(n, t);
        if (r && yg(r)) return {
            ...e,
            type: Z.ARRAY_KEYWORD
        };
    }
    return e;
}, tG = (e, t)=>dd(e, t, -1), dd = (e, t, n = 1)=>{
    let r = 1;
    for(; e[t + r * n] && rG(e[t + r * n]);)r++;
    return e[t + r * n];
}, nG = (e)=>e.type === Z.OPEN_PAREN && e.text === "(", yg = (e)=>e.type === Z.OPEN_PAREN && e.text === "[", rG = (e)=>e.type === Z.BLOCK_COMMENT || e.type === Z.LINE_COMMENT;
class vg {
    constructor(t){
        Cn(this, "index", 0);
        Cn(this, "tokens", []);
        Cn(this, "input", "");
        this.tokenize = t;
    }
    reset(t, n) {
        this.input = t, this.index = 0, this.tokens = this.tokenize(t);
    }
    next() {
        return this.tokens[this.index++];
    }
    save() {}
    formatError(t) {
        const { line: n, col: r } = gg(this.input, t.start);
        return `Parse error at token: ${t.text} at line ${n} column ${r}`;
    }
    has(t) {
        return t in Z;
    }
}
let de;
(function(e) {
    e.statement = "statement", e.clause = "clause", e.set_operation = "set_operation", e.function_call = "function_call", e.array_subscript = "array_subscript", e.property_access = "property_access", e.parenthesis = "parenthesis", e.between_predicate = "between_predicate", e.case_expression = "case_expression", e.case_when = "case_when", e.case_else = "case_else", e.limit_clause = "limit_clause", e.all_columns_asterisk = "all_columns_asterisk", e.literal = "literal", e.identifier = "identifier", e.keyword = "keyword", e.parameter = "parameter", e.operator = "operator", e.comma = "comma", e.line_comment = "line_comment", e.block_comment = "block_comment";
})(de || (de = {}));
function vf(e) {
    return e[0];
}
const Se = new vg((e)=>[]), la = ([[e]])=>e, Ut = (e)=>({
        type: de.keyword,
        tokenType: e.type,
        text: e.text,
        raw: e.raw
    }), Kt = (e, { leading: t, trailing: n })=>(t != null && t.length && (e = {
        ...e,
        leadingComments: t
    }), n != null && n.length && (e = {
        ...e,
        trailingComments: n
    }), e), sG = (e, { leading: t, trailing: n })=>{
    if (t != null && t.length) {
        const [r, ...s] = e;
        e = [
            Kt(r, {
                leading: t
            }),
            ...s
        ];
    }
    if (n != null && n.length) {
        const r = e.slice(0, -1), s = e[e.length - 1];
        e = [
            ...r,
            Kt(s, {
                trailing: n
            })
        ];
    }
    return e;
}, iG = {
    Lexer: Se,
    ParserRules: [
        {
            name: "main$ebnf$1",
            symbols: []
        },
        {
            name: "main$ebnf$1",
            symbols: [
                "main$ebnf$1",
                "statement"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "main",
            symbols: [
                "main$ebnf$1"
            ],
            postprocess: ([e])=>{
                const t = e[e.length - 1];
                return t && !t.hasSemicolon ? t.children.length > 0 ? e : e.slice(0, -1) : e;
            }
        },
        {
            name: "statement$subexpression$1",
            symbols: [
                Se.has("DELIMITER") ? {
                    type: "DELIMITER"
                } : DELIMITER
            ]
        },
        {
            name: "statement$subexpression$1",
            symbols: [
                Se.has("EOF") ? {
                    type: "EOF"
                } : EOF
            ]
        },
        {
            name: "statement",
            symbols: [
                "expressions_or_clauses",
                "statement$subexpression$1"
            ],
            postprocess: ([e, [t]])=>({
                    type: de.statement,
                    children: e,
                    hasSemicolon: t.type === Z.DELIMITER
                })
        },
        {
            name: "expressions_or_clauses$ebnf$1",
            symbols: []
        },
        {
            name: "expressions_or_clauses$ebnf$1",
            symbols: [
                "expressions_or_clauses$ebnf$1",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "expressions_or_clauses$ebnf$2",
            symbols: []
        },
        {
            name: "expressions_or_clauses$ebnf$2",
            symbols: [
                "expressions_or_clauses$ebnf$2",
                "clause"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "expressions_or_clauses",
            symbols: [
                "expressions_or_clauses$ebnf$1",
                "expressions_or_clauses$ebnf$2"
            ],
            postprocess: ([e, t])=>[
                    ...e,
                    ...t
                ]
        },
        {
            name: "clause$subexpression$1",
            symbols: [
                "limit_clause"
            ]
        },
        {
            name: "clause$subexpression$1",
            symbols: [
                "select_clause"
            ]
        },
        {
            name: "clause$subexpression$1",
            symbols: [
                "other_clause"
            ]
        },
        {
            name: "clause$subexpression$1",
            symbols: [
                "set_operation"
            ]
        },
        {
            name: "clause",
            symbols: [
                "clause$subexpression$1"
            ],
            postprocess: la
        },
        {
            name: "limit_clause$ebnf$1$subexpression$1$ebnf$1",
            symbols: [
                "free_form_sql"
            ]
        },
        {
            name: "limit_clause$ebnf$1$subexpression$1$ebnf$1",
            symbols: [
                "limit_clause$ebnf$1$subexpression$1$ebnf$1",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "limit_clause$ebnf$1$subexpression$1",
            symbols: [
                Se.has("COMMA") ? {
                    type: "COMMA"
                } : COMMA,
                "limit_clause$ebnf$1$subexpression$1$ebnf$1"
            ]
        },
        {
            name: "limit_clause$ebnf$1",
            symbols: [
                "limit_clause$ebnf$1$subexpression$1"
            ],
            postprocess: vf
        },
        {
            name: "limit_clause$ebnf$1",
            symbols: [],
            postprocess: ()=>null
        },
        {
            name: "limit_clause",
            symbols: [
                Se.has("LIMIT") ? {
                    type: "LIMIT"
                } : LIMIT,
                "_",
                "expression_chain_",
                "limit_clause$ebnf$1"
            ],
            postprocess: ([e, t, n, r])=>{
                if (r) {
                    const [s, i] = r;
                    return {
                        type: de.limit_clause,
                        limitKw: Kt(Ut(e), {
                            trailing: t
                        }),
                        offset: n,
                        count: i
                    };
                } else return {
                    type: de.limit_clause,
                    limitKw: Kt(Ut(e), {
                        trailing: t
                    }),
                    count: n
                };
            }
        },
        {
            name: "select_clause$subexpression$1$ebnf$1",
            symbols: []
        },
        {
            name: "select_clause$subexpression$1$ebnf$1",
            symbols: [
                "select_clause$subexpression$1$ebnf$1",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "select_clause$subexpression$1",
            symbols: [
                "all_columns_asterisk",
                "select_clause$subexpression$1$ebnf$1"
            ]
        },
        {
            name: "select_clause$subexpression$1$ebnf$2",
            symbols: []
        },
        {
            name: "select_clause$subexpression$1$ebnf$2",
            symbols: [
                "select_clause$subexpression$1$ebnf$2",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "select_clause$subexpression$1",
            symbols: [
                "asteriskless_free_form_sql",
                "select_clause$subexpression$1$ebnf$2"
            ]
        },
        {
            name: "select_clause",
            symbols: [
                Se.has("RESERVED_SELECT") ? {
                    type: "RESERVED_SELECT"
                } : RESERVED_SELECT,
                "select_clause$subexpression$1"
            ],
            postprocess: ([e, [t, n]])=>({
                    type: de.clause,
                    nameKw: Ut(e),
                    children: [
                        t,
                        ...n
                    ]
                })
        },
        {
            name: "select_clause",
            symbols: [
                Se.has("RESERVED_SELECT") ? {
                    type: "RESERVED_SELECT"
                } : RESERVED_SELECT
            ],
            postprocess: ([e])=>({
                    type: de.clause,
                    nameKw: Ut(e),
                    children: []
                })
        },
        {
            name: "all_columns_asterisk",
            symbols: [
                Se.has("ASTERISK") ? {
                    type: "ASTERISK"
                } : ASTERISK
            ],
            postprocess: ()=>({
                    type: de.all_columns_asterisk
                })
        },
        {
            name: "other_clause$ebnf$1",
            symbols: []
        },
        {
            name: "other_clause$ebnf$1",
            symbols: [
                "other_clause$ebnf$1",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "other_clause",
            symbols: [
                Se.has("RESERVED_CLAUSE") ? {
                    type: "RESERVED_CLAUSE"
                } : RESERVED_CLAUSE,
                "other_clause$ebnf$1"
            ],
            postprocess: ([e, t])=>({
                    type: de.clause,
                    nameKw: Ut(e),
                    children: t
                })
        },
        {
            name: "set_operation$ebnf$1",
            symbols: []
        },
        {
            name: "set_operation$ebnf$1",
            symbols: [
                "set_operation$ebnf$1",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "set_operation",
            symbols: [
                Se.has("RESERVED_SET_OPERATION") ? {
                    type: "RESERVED_SET_OPERATION"
                } : RESERVED_SET_OPERATION,
                "set_operation$ebnf$1"
            ],
            postprocess: ([e, t])=>({
                    type: de.set_operation,
                    nameKw: Ut(e),
                    children: t
                })
        },
        {
            name: "expression_chain_$ebnf$1",
            symbols: [
                "expression_with_comments_"
            ]
        },
        {
            name: "expression_chain_$ebnf$1",
            symbols: [
                "expression_chain_$ebnf$1",
                "expression_with_comments_"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "expression_chain_",
            symbols: [
                "expression_chain_$ebnf$1"
            ],
            postprocess: vf
        },
        {
            name: "expression_chain$ebnf$1",
            symbols: []
        },
        {
            name: "expression_chain$ebnf$1",
            symbols: [
                "expression_chain$ebnf$1",
                "_expression_with_comments"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "expression_chain",
            symbols: [
                "expression",
                "expression_chain$ebnf$1"
            ],
            postprocess: ([e, t])=>[
                    e,
                    ...t
                ]
        },
        {
            name: "andless_expression_chain$ebnf$1",
            symbols: []
        },
        {
            name: "andless_expression_chain$ebnf$1",
            symbols: [
                "andless_expression_chain$ebnf$1",
                "_andless_expression_with_comments"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "andless_expression_chain",
            symbols: [
                "andless_expression",
                "andless_expression_chain$ebnf$1"
            ],
            postprocess: ([e, t])=>[
                    e,
                    ...t
                ]
        },
        {
            name: "expression_with_comments_",
            symbols: [
                "expression",
                "_"
            ],
            postprocess: ([e, t])=>Kt(e, {
                    trailing: t
                })
        },
        {
            name: "_expression_with_comments",
            symbols: [
                "_",
                "expression"
            ],
            postprocess: ([e, t])=>Kt(t, {
                    leading: e
                })
        },
        {
            name: "_andless_expression_with_comments",
            symbols: [
                "_",
                "andless_expression"
            ],
            postprocess: ([e, t])=>Kt(t, {
                    leading: e
                })
        },
        {
            name: "free_form_sql$subexpression$1",
            symbols: [
                "asteriskless_free_form_sql"
            ]
        },
        {
            name: "free_form_sql$subexpression$1",
            symbols: [
                "asterisk"
            ]
        },
        {
            name: "free_form_sql",
            symbols: [
                "free_form_sql$subexpression$1"
            ],
            postprocess: la
        },
        {
            name: "asteriskless_free_form_sql$subexpression$1",
            symbols: [
                "asteriskless_andless_expression"
            ]
        },
        {
            name: "asteriskless_free_form_sql$subexpression$1",
            symbols: [
                "logic_operator"
            ]
        },
        {
            name: "asteriskless_free_form_sql$subexpression$1",
            symbols: [
                "between_predicate"
            ]
        },
        {
            name: "asteriskless_free_form_sql$subexpression$1",
            symbols: [
                "comma"
            ]
        },
        {
            name: "asteriskless_free_form_sql$subexpression$1",
            symbols: [
                "comment"
            ]
        },
        {
            name: "asteriskless_free_form_sql$subexpression$1",
            symbols: [
                "other_keyword"
            ]
        },
        {
            name: "asteriskless_free_form_sql",
            symbols: [
                "asteriskless_free_form_sql$subexpression$1"
            ],
            postprocess: la
        },
        {
            name: "expression$subexpression$1",
            symbols: [
                "andless_expression"
            ]
        },
        {
            name: "expression$subexpression$1",
            symbols: [
                "logic_operator"
            ]
        },
        {
            name: "expression",
            symbols: [
                "expression$subexpression$1"
            ],
            postprocess: la
        },
        {
            name: "andless_expression$subexpression$1",
            symbols: [
                "asteriskless_andless_expression"
            ]
        },
        {
            name: "andless_expression$subexpression$1",
            symbols: [
                "asterisk"
            ]
        },
        {
            name: "andless_expression",
            symbols: [
                "andless_expression$subexpression$1"
            ],
            postprocess: la
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "array_subscript"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "case_expression"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "function_call"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "property_access"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "parenthesis"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "curly_braces"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "square_brackets"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "operator"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "identifier"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "parameter"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "literal"
            ]
        },
        {
            name: "asteriskless_andless_expression$subexpression$1",
            symbols: [
                "keyword"
            ]
        },
        {
            name: "asteriskless_andless_expression",
            symbols: [
                "asteriskless_andless_expression$subexpression$1"
            ],
            postprocess: la
        },
        {
            name: "array_subscript",
            symbols: [
                Se.has("ARRAY_IDENTIFIER") ? {
                    type: "ARRAY_IDENTIFIER"
                } : ARRAY_IDENTIFIER,
                "_",
                "square_brackets"
            ],
            postprocess: ([e, t, n])=>({
                    type: de.array_subscript,
                    array: Kt({
                        type: de.identifier,
                        text: e.text
                    }, {
                        trailing: t
                    }),
                    parenthesis: n
                })
        },
        {
            name: "array_subscript",
            symbols: [
                Se.has("ARRAY_KEYWORD") ? {
                    type: "ARRAY_KEYWORD"
                } : ARRAY_KEYWORD,
                "_",
                "square_brackets"
            ],
            postprocess: ([e, t, n])=>({
                    type: de.array_subscript,
                    array: Kt(Ut(e), {
                        trailing: t
                    }),
                    parenthesis: n
                })
        },
        {
            name: "function_call",
            symbols: [
                Se.has("RESERVED_FUNCTION_NAME") ? {
                    type: "RESERVED_FUNCTION_NAME"
                } : RESERVED_FUNCTION_NAME,
                "_",
                "parenthesis"
            ],
            postprocess: ([e, t, n])=>({
                    type: de.function_call,
                    nameKw: Kt(Ut(e), {
                        trailing: t
                    }),
                    parenthesis: n
                })
        },
        {
            name: "parenthesis",
            symbols: [
                {
                    literal: "("
                },
                "expressions_or_clauses",
                {
                    literal: ")"
                }
            ],
            postprocess: ([e, t, n])=>({
                    type: de.parenthesis,
                    children: t,
                    openParen: "(",
                    closeParen: ")"
                })
        },
        {
            name: "curly_braces$ebnf$1",
            symbols: []
        },
        {
            name: "curly_braces$ebnf$1",
            symbols: [
                "curly_braces$ebnf$1",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "curly_braces",
            symbols: [
                {
                    literal: "{"
                },
                "curly_braces$ebnf$1",
                {
                    literal: "}"
                }
            ],
            postprocess: ([e, t, n])=>({
                    type: de.parenthesis,
                    children: t,
                    openParen: "{",
                    closeParen: "}"
                })
        },
        {
            name: "square_brackets$ebnf$1",
            symbols: []
        },
        {
            name: "square_brackets$ebnf$1",
            symbols: [
                "square_brackets$ebnf$1",
                "free_form_sql"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "square_brackets",
            symbols: [
                {
                    literal: "["
                },
                "square_brackets$ebnf$1",
                {
                    literal: "]"
                }
            ],
            postprocess: ([e, t, n])=>({
                    type: de.parenthesis,
                    children: t,
                    openParen: "[",
                    closeParen: "]"
                })
        },
        {
            name: "property_access$subexpression$1",
            symbols: [
                "identifier"
            ]
        },
        {
            name: "property_access$subexpression$1",
            symbols: [
                "array_subscript"
            ]
        },
        {
            name: "property_access$subexpression$1",
            symbols: [
                "all_columns_asterisk"
            ]
        },
        {
            name: "property_access",
            symbols: [
                "expression",
                "_",
                Se.has("DOT") ? {
                    type: "DOT"
                } : DOT,
                "_",
                "property_access$subexpression$1"
            ],
            postprocess: // Allowing property to be <array_subscript> is currently a hack.
            // A better way would be to allow <property_access> on the left side of array_subscript,
            // but we currently can't do that because of another hack that requires
            // %ARRAY_IDENTIFIER on the left side of <array_subscript>.
            ([e, t, n, r, [s]])=>({
                    type: de.property_access,
                    object: Kt(e, {
                        trailing: t
                    }),
                    property: Kt(s, {
                        leading: r
                    })
                })
        },
        {
            name: "between_predicate",
            symbols: [
                Se.has("BETWEEN") ? {
                    type: "BETWEEN"
                } : BETWEEN,
                "_",
                "andless_expression_chain",
                "_",
                Se.has("AND") ? {
                    type: "AND"
                } : AND,
                "_",
                "andless_expression"
            ],
            postprocess: ([e, t, n, r, s, i, a])=>({
                    type: de.between_predicate,
                    betweenKw: Ut(e),
                    expr1: sG(n, {
                        leading: t,
                        trailing: r
                    }),
                    andKw: Ut(s),
                    expr2: [
                        Kt(a, {
                            leading: i
                        })
                    ]
                })
        },
        {
            name: "case_expression$ebnf$1",
            symbols: [
                "expression_chain_"
            ],
            postprocess: vf
        },
        {
            name: "case_expression$ebnf$1",
            symbols: [],
            postprocess: ()=>null
        },
        {
            name: "case_expression$ebnf$2",
            symbols: []
        },
        {
            name: "case_expression$ebnf$2",
            symbols: [
                "case_expression$ebnf$2",
                "case_clause"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "case_expression",
            symbols: [
                Se.has("CASE") ? {
                    type: "CASE"
                } : CASE,
                "_",
                "case_expression$ebnf$1",
                "case_expression$ebnf$2",
                Se.has("END") ? {
                    type: "END"
                } : END
            ],
            postprocess: ([e, t, n, r, s])=>({
                    type: de.case_expression,
                    caseKw: Kt(Ut(e), {
                        trailing: t
                    }),
                    endKw: Ut(s),
                    expr: n || [],
                    clauses: r
                })
        },
        {
            name: "case_clause",
            symbols: [
                Se.has("WHEN") ? {
                    type: "WHEN"
                } : WHEN,
                "_",
                "expression_chain_",
                Se.has("THEN") ? {
                    type: "THEN"
                } : THEN,
                "_",
                "expression_chain_"
            ],
            postprocess: ([e, t, n, r, s, i])=>({
                    type: de.case_when,
                    whenKw: Kt(Ut(e), {
                        trailing: t
                    }),
                    thenKw: Kt(Ut(r), {
                        trailing: s
                    }),
                    condition: n,
                    result: i
                })
        },
        {
            name: "case_clause",
            symbols: [
                Se.has("ELSE") ? {
                    type: "ELSE"
                } : ELSE,
                "_",
                "expression_chain_"
            ],
            postprocess: ([e, t, n])=>({
                    type: de.case_else,
                    elseKw: Kt(Ut(e), {
                        trailing: t
                    }),
                    result: n
                })
        },
        {
            name: "comma$subexpression$1",
            symbols: [
                Se.has("COMMA") ? {
                    type: "COMMA"
                } : COMMA
            ]
        },
        {
            name: "comma",
            symbols: [
                "comma$subexpression$1"
            ],
            postprocess: ([[e]])=>({
                    type: de.comma
                })
        },
        {
            name: "asterisk$subexpression$1",
            symbols: [
                Se.has("ASTERISK") ? {
                    type: "ASTERISK"
                } : ASTERISK
            ]
        },
        {
            name: "asterisk",
            symbols: [
                "asterisk$subexpression$1"
            ],
            postprocess: ([[e]])=>({
                    type: de.operator,
                    text: e.text
                })
        },
        {
            name: "operator$subexpression$1",
            symbols: [
                Se.has("OPERATOR") ? {
                    type: "OPERATOR"
                } : OPERATOR
            ]
        },
        {
            name: "operator",
            symbols: [
                "operator$subexpression$1"
            ],
            postprocess: ([[e]])=>({
                    type: de.operator,
                    text: e.text
                })
        },
        {
            name: "identifier$subexpression$1",
            symbols: [
                Se.has("IDENTIFIER") ? {
                    type: "IDENTIFIER"
                } : IDENTIFIER
            ]
        },
        {
            name: "identifier$subexpression$1",
            symbols: [
                Se.has("QUOTED_IDENTIFIER") ? {
                    type: "QUOTED_IDENTIFIER"
                } : QUOTED_IDENTIFIER
            ]
        },
        {
            name: "identifier$subexpression$1",
            symbols: [
                Se.has("VARIABLE") ? {
                    type: "VARIABLE"
                } : VARIABLE
            ]
        },
        {
            name: "identifier",
            symbols: [
                "identifier$subexpression$1"
            ],
            postprocess: ([[e]])=>({
                    type: de.identifier,
                    text: e.text
                })
        },
        {
            name: "parameter$subexpression$1",
            symbols: [
                Se.has("NAMED_PARAMETER") ? {
                    type: "NAMED_PARAMETER"
                } : NAMED_PARAMETER
            ]
        },
        {
            name: "parameter$subexpression$1",
            symbols: [
                Se.has("QUOTED_PARAMETER") ? {
                    type: "QUOTED_PARAMETER"
                } : QUOTED_PARAMETER
            ]
        },
        {
            name: "parameter$subexpression$1",
            symbols: [
                Se.has("NUMBERED_PARAMETER") ? {
                    type: "NUMBERED_PARAMETER"
                } : NUMBERED_PARAMETER
            ]
        },
        {
            name: "parameter$subexpression$1",
            symbols: [
                Se.has("POSITIONAL_PARAMETER") ? {
                    type: "POSITIONAL_PARAMETER"
                } : POSITIONAL_PARAMETER
            ]
        },
        {
            name: "parameter$subexpression$1",
            symbols: [
                Se.has("CUSTOM_PARAMETER") ? {
                    type: "CUSTOM_PARAMETER"
                } : CUSTOM_PARAMETER
            ]
        },
        {
            name: "parameter",
            symbols: [
                "parameter$subexpression$1"
            ],
            postprocess: ([[e]])=>({
                    type: de.parameter,
                    key: e.key,
                    text: e.text
                })
        },
        {
            name: "literal$subexpression$1",
            symbols: [
                Se.has("NUMBER") ? {
                    type: "NUMBER"
                } : NUMBER
            ]
        },
        {
            name: "literal$subexpression$1",
            symbols: [
                Se.has("STRING") ? {
                    type: "STRING"
                } : STRING
            ]
        },
        {
            name: "literal",
            symbols: [
                "literal$subexpression$1"
            ],
            postprocess: ([[e]])=>({
                    type: de.literal,
                    text: e.text
                })
        },
        {
            name: "keyword$subexpression$1",
            symbols: [
                Se.has("RESERVED_KEYWORD") ? {
                    type: "RESERVED_KEYWORD"
                } : RESERVED_KEYWORD
            ]
        },
        {
            name: "keyword$subexpression$1",
            symbols: [
                Se.has("RESERVED_PHRASE") ? {
                    type: "RESERVED_PHRASE"
                } : RESERVED_PHRASE
            ]
        },
        {
            name: "keyword$subexpression$1",
            symbols: [
                Se.has("RESERVED_JOIN") ? {
                    type: "RESERVED_JOIN"
                } : RESERVED_JOIN
            ]
        },
        {
            name: "keyword",
            symbols: [
                "keyword$subexpression$1"
            ],
            postprocess: ([[e]])=>Ut(e)
        },
        {
            name: "logic_operator$subexpression$1",
            symbols: [
                Se.has("AND") ? {
                    type: "AND"
                } : AND
            ]
        },
        {
            name: "logic_operator$subexpression$1",
            symbols: [
                Se.has("OR") ? {
                    type: "OR"
                } : OR
            ]
        },
        {
            name: "logic_operator$subexpression$1",
            symbols: [
                Se.has("XOR") ? {
                    type: "XOR"
                } : XOR
            ]
        },
        {
            name: "logic_operator",
            symbols: [
                "logic_operator$subexpression$1"
            ],
            postprocess: ([[e]])=>Ut(e)
        },
        {
            name: "other_keyword$subexpression$1",
            symbols: [
                Se.has("WHEN") ? {
                    type: "WHEN"
                } : WHEN
            ]
        },
        {
            name: "other_keyword$subexpression$1",
            symbols: [
                Se.has("THEN") ? {
                    type: "THEN"
                } : THEN
            ]
        },
        {
            name: "other_keyword$subexpression$1",
            symbols: [
                Se.has("ELSE") ? {
                    type: "ELSE"
                } : ELSE
            ]
        },
        {
            name: "other_keyword$subexpression$1",
            symbols: [
                Se.has("END") ? {
                    type: "END"
                } : END
            ]
        },
        {
            name: "other_keyword",
            symbols: [
                "other_keyword$subexpression$1"
            ],
            postprocess: ([[e]])=>Ut(e)
        },
        {
            name: "_$ebnf$1",
            symbols: []
        },
        {
            name: "_$ebnf$1",
            symbols: [
                "_$ebnf$1",
                "comment"
            ],
            postprocess: (e)=>e[0].concat([
                    e[1]
                ])
        },
        {
            name: "_",
            symbols: [
                "_$ebnf$1"
            ],
            postprocess: ([e])=>e
        },
        {
            name: "comment",
            symbols: [
                Se.has("LINE_COMMENT") ? {
                    type: "LINE_COMMENT"
                } : LINE_COMMENT
            ],
            postprocess: ([e])=>({
                    type: de.line_comment,
                    text: e.text,
                    precedingWhitespace: e.precedingWhitespace
                })
        },
        {
            name: "comment",
            symbols: [
                Se.has("BLOCK_COMMENT") ? {
                    type: "BLOCK_COMMENT"
                } : BLOCK_COMMENT
            ],
            postprocess: ([e])=>({
                    type: de.block_comment,
                    text: e.text,
                    precedingWhitespace: e.precedingWhitespace
                })
        }
    ],
    ParserStart: "main"
}, { Parser: aG, Grammar: oG } = JB;
function lG(e) {
    let t = {};
    const n = new vg((s)=>[
            ...qB(e.tokenize(s, t)),
            Ag(s.length)
        ]), r = new aG(oG.fromCompiled(iG), {
        lexer: n
    });
    return {
        parse: (s, i)=>{
            t = i;
            const { results: a } = r.feed(s);
            if (a.length === 1) return a[0];
            throw a.length === 0 ? new Error("Parse error: Invalid SQL") : new Error(`Parse error: Ambiguous grammar
${JSON.stringify(a, void 0, 2)}`);
        }
    };
}
const cG = /^\s+/u;
function uG(e, t, n) {
    return EG(e.split(`
`)).flatMap((r)=>{
        if (r.length === 1) return r;
        if (t === "tabular") return dG(r);
        if (t === "before") return pG(r, n);
        throw new Error(`Unexpected commaPosition: ${t}`);
    }).join(`
`);
}
function EG(e) {
    const t = [];
    for(let n = 0; n < e.length; n++){
        const r = [
            e[n]
        ];
        for(; e[n].match(/.*,(\s*(--.*)?$)/);)n++, r.push(e[n]);
        t.push(r);
    }
    return t;
}
function dG(e) {
    const t = _g(AG(e)) - 1;
    return e.map((n, r)=>r === e.length - 1 ? n : fG(n, t));
}
function fG(e, t) {
    const [, n, r] = e.match(/^(.*?),(\s*--.*)?$/) || [], s = " ".repeat(t - n.length);
    return `${n}${s},${r ?? ""}`;
}
function pG(e, t) {
    return hG(e).map((n, r)=>{
        if (r === 0) return n;
        const [s] = n.match(cG) || [
            ""
        ];
        return TG(s, t) + t.replace(/ {2}$/, ", ") + // add comma to the end of last indent
        n.trimStart();
    });
}
function TG(e, t) {
    return e.replace(new RegExp(t + "$"), "");
}
function hG(e) {
    return e.map((t)=>t.replace(/,(\s*(--.*)?$)/, "$1"));
}
function AG(e) {
    return e.map((t)=>t.replace(/\s*--.*/, ""));
}
function SG(e) {
    const t = e.split(`
`);
    let n = [];
    for(let r = 0; r < t.length; r++){
        if (t[r].match(/^\s*SELECT/i)) {
            let s = [];
            if (t[r].match(/.*,$/)) s = [
                t[r]
            ];
            else {
                if (n.push(t[r]), t[r].match(/^\s*SELECT\s+.+(?!,$)/i)) continue;
                s.push(t[++r]);
            }
            for(; t[r++].match(/.*,$/);)s.push(t[r]);
            const i = s.map((o)=>({
                    line: o,
                    matches: o.match(/(^.*?\S) (AS )?(\S+,?$)/i)
                })).map(({ line: o, matches: l })=>l ? {
                    precedingText: l[1],
                    as: l[2],
                    alias: l[3]
                } : {
                    precedingText: o
                }), a = _g(i.map(({ precedingText: o })=>o.replace(/\s*,\s*$/, "")));
            s = i.map(({ precedingText: o, as: l, alias: c })=>o + (c ? " ".repeat(a - o.length + 1) + (l ?? "") + c : "")), n = [
                ...n,
                ...s
            ];
        }
        n.push(t[r]);
    }
    return n.join(`
`);
}
let K;
(function(e) {
    e[e.SPACE = 0] = "SPACE", e[e.NO_SPACE = 1] = "NO_SPACE", e[e.NO_NEWLINE = 2] = "NO_NEWLINE", e[e.NEWLINE = 3] = "NEWLINE", e[e.MANDATORY_NEWLINE = 4] = "MANDATORY_NEWLINE", e[e.INDENT = 5] = "INDENT", e[e.SINGLE_INDENT = 6] = "SINGLE_INDENT";
})(K || (K = {}));
class bg {
    constructor(t){
        Cn(this, "items", []);
        this.indentation = t;
    }
    /**
   * Appends token strings and whitespace modifications to SQL string.
   */ add(...t) {
        for (const n of t)switch(n){
            case K.SPACE:
                this.items.push(K.SPACE);
                break;
            case K.NO_SPACE:
                this.trimHorizontalWhitespace();
                break;
            case K.NO_NEWLINE:
                this.trimWhitespace();
                break;
            case K.NEWLINE:
                this.trimHorizontalWhitespace(), this.addNewline(K.NEWLINE);
                break;
            case K.MANDATORY_NEWLINE:
                this.trimHorizontalWhitespace(), this.addNewline(K.MANDATORY_NEWLINE);
                break;
            case K.INDENT:
                this.addIndentation();
                break;
            case K.SINGLE_INDENT:
                this.items.push(K.SINGLE_INDENT);
                break;
            default:
                this.items.push(n);
        }
    }
    trimHorizontalWhitespace() {
        for(; RG(rl(this.items));)this.items.pop();
    }
    trimWhitespace() {
        for(; mG(rl(this.items));)this.items.pop();
    }
    addNewline(t) {
        if (this.items.length > 0) switch(rl(this.items)){
            case K.NEWLINE:
                this.items.pop(), this.items.push(t);
                break;
            case K.MANDATORY_NEWLINE:
                break;
            default:
                this.items.push(t);
                break;
        }
    }
    addIndentation() {
        for(let t = 0; t < this.indentation.getLevel(); t++)this.items.push(K.SINGLE_INDENT);
    }
    /**
   * Returns the final SQL string.
   */ toString() {
        return this.items.map((t)=>this.itemToString(t)).join("");
    }
    /**
   * Returns the internal layout data
   */ getLayoutItems() {
        return this.items;
    }
    itemToString(t) {
        switch(t){
            case K.SPACE:
                return " ";
            case K.NEWLINE:
            case K.MANDATORY_NEWLINE:
                return `
`;
            case K.SINGLE_INDENT:
                return this.indentation.getSingleIndent();
            default:
                return t;
        }
    }
}
const RG = (e)=>e === K.SPACE || e === K.SINGLE_INDENT, mG = (e)=>e === K.SPACE || e === K.SINGLE_INDENT || e === K.NEWLINE;
function _G(e, t) {
    if (t === "standard") return e;
    let n = [];
    return e.length >= 10 && e.includes(" ") && ([e, ...n] = e.split(" ")), t === "tabularLeft" ? e = e.padEnd(9, " ") : e = e.padStart(9, " "), e + [
        "",
        ...n
    ].join(" ");
}
function NG(e) {
    return qU(e) || e === Z.RESERVED_CLAUSE || e === Z.RESERVED_SELECT || e === Z.RESERVED_SET_OPERATION || e === Z.RESERVED_JOIN || e === Z.LIMIT;
}
const bf = "top-level", IG = "block-level";
class Pg {
    /**
   * @param {string} indent A string to indent with
   */ constructor(t){
        Cn(this, "indentTypes", []);
        this.indent = t;
    }
    /**
   * Returns indentation string for single indentation step.
   */ getSingleIndent() {
        return this.indent;
    }
    /**
   * Returns current indentation level
   */ getLevel() {
        return this.indentTypes.length;
    }
    /**
   * Increases indentation by one top-level indent.
   */ increaseTopLevel() {
        this.indentTypes.push(bf);
    }
    /**
   * Increases indentation by one block-level indent.
   */ increaseBlockLevel() {
        this.indentTypes.push(IG);
    }
    /**
   * Decreases indentation by one top-level indent.
   * Does nothing when the previous indent is not top-level.
   */ decreaseTopLevel() {
        this.indentTypes.length > 0 && rl(this.indentTypes) === bf && this.indentTypes.pop();
    }
    /**
   * Decreases indentation by one block-level indent.
   * If there are top-level indents within the block-level indent,
   * throws away these as well.
   */ decreaseBlockLevel() {
        for(; this.indentTypes.length > 0 && this.indentTypes.pop() === bf;);
    }
}
class OG extends bg {
    constructor(n){
        super(new Pg(""));
        Cn(this, "length", 0);
        // Keeps track of the trailing whitespace,
        // so that we can decrease length when encountering WS.NO_SPACE,
        // but only when there actually is a space to remove.
        Cn(this, "trailingSpace", !1);
        this.expressionWidth = n;
    }
    add(...n) {
        if (n.forEach((r)=>this.addToLength(r)), this.length > this.expressionWidth) throw new LT();
        super.add(...n);
    }
    addToLength(n) {
        if (typeof n == "string") this.length += n.length, this.trailingSpace = !1;
        else {
            if (n === K.MANDATORY_NEWLINE || n === K.NEWLINE) throw new LT();
            n === K.INDENT || n === K.SINGLE_INDENT || n === K.SPACE ? this.trailingSpace || (this.length++, this.trailingSpace = !0) : (n === K.NO_NEWLINE || n === K.NO_SPACE) && this.trailingSpace && (this.trailingSpace = !1, this.length--);
        }
    }
}
class LT extends Error {
}
class hE {
    constructor({ cfg: t, dialectCfg: n, params: r, layout: s, inline: i = !1 }){
        Cn(this, "inline", !1);
        Cn(this, "nodes", []);
        Cn(this, "index", -1);
        this.cfg = t, this.dialectCfg = n, this.inline = i, this.params = r, this.layout = s;
    }
    format(t) {
        for(this.nodes = t, this.index = 0; this.index < this.nodes.length; this.index++)this.formatNode(this.nodes[this.index]);
        return this.layout;
    }
    formatNode(t) {
        this.formatComments(t.leadingComments), this.formatNodeWithoutComments(t), this.formatComments(t.trailingComments);
    }
    formatNodeWithoutComments(t) {
        switch(t.type){
            case de.function_call:
                return this.formatFunctionCall(t);
            case de.array_subscript:
                return this.formatArraySubscript(t);
            case de.property_access:
                return this.formatPropertyAccess(t);
            case de.parenthesis:
                return this.formatParenthesis(t);
            case de.between_predicate:
                return this.formatBetweenPredicate(t);
            case de.case_expression:
                return this.formatCaseExpression(t);
            case de.case_when:
                return this.formatCaseWhen(t);
            case de.case_else:
                return this.formatCaseElse(t);
            case de.clause:
                return this.formatClause(t);
            case de.set_operation:
                return this.formatSetOperation(t);
            case de.limit_clause:
                return this.formatLimitClause(t);
            case de.all_columns_asterisk:
                return this.formatAllColumnsAsterisk(t);
            case de.literal:
                return this.formatLiteral(t);
            case de.identifier:
                return this.formatIdentifier(t);
            case de.parameter:
                return this.formatParameter(t);
            case de.operator:
                return this.formatOperator(t);
            case de.comma:
                return this.formatComma(t);
            case de.line_comment:
                return this.formatLineComment(t);
            case de.block_comment:
                return this.formatBlockComment(t);
            case de.keyword:
                return this.formatKeywordNode(t);
        }
    }
    formatFunctionCall(t) {
        this.withComments(t.nameKw, ()=>{
            this.layout.add(this.showKw(t.nameKw));
        }), this.formatNode(t.parenthesis);
    }
    formatArraySubscript(t) {
        this.withComments(t.array, ()=>{
            this.layout.add(t.array.type === de.keyword ? this.showKw(t.array) : t.array.text);
        }), this.formatNode(t.parenthesis);
    }
    formatPropertyAccess(t) {
        this.formatNode(t.object), this.layout.add(K.NO_SPACE, "."), this.formatNode(t.property);
    }
    formatParenthesis(t) {
        const n = this.formatInlineExpression(t.children);
        n ? (this.layout.add(t.openParen), this.layout.add(...n.getLayoutItems()), this.layout.add(K.NO_SPACE, t.closeParen, K.SPACE)) : (this.layout.add(t.openParen, K.NEWLINE), wo(this.cfg) ? (this.layout.add(K.INDENT), this.layout = this.formatSubExpression(t.children)) : (this.layout.indentation.increaseBlockLevel(), this.layout.add(K.INDENT), this.layout = this.formatSubExpression(t.children), this.layout.indentation.decreaseBlockLevel()), this.layout.add(K.NEWLINE, K.INDENT, t.closeParen, K.SPACE));
    }
    formatBetweenPredicate(t) {
        this.layout.add(this.showKw(t.betweenKw), K.SPACE), this.layout = this.formatSubExpression(t.expr1), this.layout.add(K.NO_SPACE, K.SPACE, this.showNonTabularKw(t.andKw), K.SPACE), this.layout = this.formatSubExpression(t.expr2), this.layout.add(K.SPACE);
    }
    formatCaseExpression(t) {
        this.formatNode(t.caseKw), this.layout.indentation.increaseBlockLevel(), this.layout = this.formatSubExpression(t.expr), this.layout = this.formatSubExpression(t.clauses), this.layout.indentation.decreaseBlockLevel(), this.layout.add(K.NEWLINE, K.INDENT), this.formatNode(t.endKw);
    }
    formatCaseWhen(t) {
        this.layout.add(K.NEWLINE, K.INDENT), this.formatNode(t.whenKw), this.layout = this.formatSubExpression(t.condition), this.formatNode(t.thenKw), this.layout = this.formatSubExpression(t.result);
    }
    formatCaseElse(t) {
        this.layout.add(K.NEWLINE, K.INDENT), this.formatNode(t.elseKw), this.layout = this.formatSubExpression(t.result);
    }
    formatClause(t) {
        this.isOnelineClause(t) ? this.formatClauseInOnelineStyle(t) : wo(this.cfg) ? this.formatClauseInTabularStyle(t) : this.formatClauseInIndentedStyle(t);
    }
    isOnelineClause(t) {
        return this.dialectCfg.onelineClauses[t.nameKw.text];
    }
    formatClauseInIndentedStyle(t) {
        this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t.nameKw), K.NEWLINE), this.layout.indentation.increaseTopLevel(), this.layout.add(K.INDENT), this.layout = this.formatSubExpression(t.children), this.layout.indentation.decreaseTopLevel();
    }
    formatClauseInOnelineStyle(t) {
        this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t.nameKw), K.SPACE), this.layout = this.formatSubExpression(t.children);
    }
    formatClauseInTabularStyle(t) {
        this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t.nameKw), K.SPACE), this.layout.indentation.increaseTopLevel(), this.layout = this.formatSubExpression(t.children), this.layout.indentation.decreaseTopLevel();
    }
    formatSetOperation(t) {
        this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t.nameKw), K.NEWLINE), this.layout.add(K.INDENT), this.layout = this.formatSubExpression(t.children);
    }
    formatLimitClause(t) {
        this.withComments(t.limitKw, ()=>{
            this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t.limitKw));
        }), this.layout.indentation.increaseTopLevel(), wo(this.cfg) ? this.layout.add(K.SPACE) : this.layout.add(K.NEWLINE, K.INDENT), t.offset ? (this.layout = this.formatSubExpression(t.offset), this.layout.add(K.NO_SPACE, ",", K.SPACE), this.layout = this.formatSubExpression(t.count)) : this.layout = this.formatSubExpression(t.count), this.layout.indentation.decreaseTopLevel();
    }
    formatAllColumnsAsterisk(t) {
        this.layout.add("*", K.SPACE);
    }
    formatLiteral(t) {
        this.layout.add(t.text, K.SPACE);
    }
    formatIdentifier(t) {
        this.layout.add(t.text, K.SPACE);
    }
    formatParameter(t) {
        this.layout.add(this.params.get(t), K.SPACE);
    }
    formatOperator({ text: t }) {
        this.cfg.denseOperators || this.dialectCfg.alwaysDenseOperators.includes(t) ? this.layout.add(K.NO_SPACE, t) : t === ":" ? this.layout.add(K.NO_SPACE, t, K.SPACE) : this.layout.add(t, K.SPACE);
    }
    formatComma(t) {
        this.inline ? this.layout.add(K.NO_SPACE, ",", K.SPACE) : this.layout.add(K.NO_SPACE, ",", K.NEWLINE, K.INDENT);
    }
    withComments(t, n) {
        this.formatComments(t.leadingComments), n(), this.formatComments(t.trailingComments);
    }
    formatComments(t) {
        t && t.forEach((n)=>{
            n.type === de.line_comment ? this.formatLineComment(n) : this.formatBlockComment(n);
        });
    }
    formatLineComment(t) {
        Lf(t.precedingWhitespace || "") ? this.layout.add(K.NEWLINE, K.INDENT, t.text, K.MANDATORY_NEWLINE, K.INDENT) : this.layout.getLayoutItems().length > 0 ? this.layout.add(K.NO_NEWLINE, K.SPACE, t.text, K.MANDATORY_NEWLINE, K.INDENT) : this.layout.add(t.text, K.MANDATORY_NEWLINE, K.INDENT);
    }
    formatBlockComment(t) {
        this.isMultilineBlockComment(t) ? (this.splitBlockComment(t.text).forEach((n)=>{
            this.layout.add(K.NEWLINE, K.INDENT, n);
        }), this.layout.add(K.NEWLINE, K.INDENT)) : this.layout.add(t.text, K.SPACE);
    }
    isMultilineBlockComment(t) {
        return Lf(t.text) || Lf(t.precedingWhitespace || "");
    }
    isDocComment(t) {
        const n = t.split(/\n/);
        return(// first line starts with /* or /**
        /^\/\*\*?$/.test(n[0]) && // intermediate lines start with *
        n.slice(1, n.length - 1).every((r)=>/^\s*\*/.test(r)) && // last line ends with */
        /^\s*\*\/$/.test(rl(n)));
    }
    // Breaks up block comment to multiple lines.
    // For example this doc-comment (dots representing leading whitespace):
    //
    //   ..../**
    //   .....* Some description here
    //   .....* and here too
    //   .....*/
    //
    // gets broken to this array (note the leading single spaces):
    //
    //   [ '/**',
    //     '.* Some description here',
    //     '.* and here too',
    //     '.*/' ]
    //
    // However, a normal comment (non-doc-comment) like this:
    //
    //   ..../*
    //   ....Some description here
    //   ....*/
    //
    // gets broken to this array (no leading spaces):
    //
    //   [ '/*',
    //     'Some description here',
    //     '*/' ]
    //
    splitBlockComment(t) {
        return this.isDocComment(t) ? t.split(/\n/).map((n)=>/^\s*\*/.test(n) ? " " + n.replace(/^\s*/, "") : n) : t.split(/\n/).map((n)=>n.replace(/^\s*/, ""));
    }
    formatSubExpression(t) {
        return new hE({
            cfg: this.cfg,
            dialectCfg: this.dialectCfg,
            params: this.params,
            layout: this.layout,
            inline: this.inline
        }).format(t);
    }
    formatInlineExpression(t) {
        const n = this.params.getPositionalParameterIndex();
        try {
            return new hE({
                cfg: this.cfg,
                dialectCfg: this.dialectCfg,
                params: this.params,
                layout: new OG(this.cfg.expressionWidth),
                inline: !0
            }).format(t);
        } catch (r) {
            if (r instanceof LT) {
                this.params.setPositionalParameterIndex(n);
                return;
            } else throw r;
        }
    }
    formatKeywordNode(t) {
        switch(t.tokenType){
            case Z.RESERVED_JOIN:
                return this.formatJoin(t);
            case Z.AND:
            case Z.OR:
            case Z.XOR:
                return this.formatLogicalOperator(t);
            default:
                return this.formatKeyword(t);
        }
    }
    formatJoin(t) {
        wo(this.cfg) ? (this.layout.indentation.decreaseTopLevel(), this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t), K.SPACE), this.layout.indentation.increaseTopLevel()) : this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t), K.SPACE);
    }
    formatKeyword(t) {
        this.layout.add(this.showKw(t), K.SPACE);
    }
    formatLogicalOperator(t) {
        this.cfg.logicalOperatorNewline === "before" ? wo(this.cfg) ? (this.layout.indentation.decreaseTopLevel(), this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t), K.SPACE), this.layout.indentation.increaseTopLevel()) : this.layout.add(K.NEWLINE, K.INDENT, this.showKw(t), K.SPACE) : this.layout.add(this.showKw(t), K.NEWLINE, K.INDENT);
    }
    showKw(t) {
        return NG(t.tokenType) ? _G(this.showNonTabularKw(t), this.cfg.indentStyle) : this.showNonTabularKw(t);
    }
    // Like showKw(), but skips tabular formatting
    showNonTabularKw(t) {
        switch(this.cfg.keywordCase){
            case "preserve":
                return Ng(t.raw);
            case "upper":
                return t.text;
            case "lower":
                return t.text.toLowerCase();
        }
    }
}
class CG {
    constructor(t, n){
        this.dialect = t, this.cfg = n, this.params = new KB(this.cfg.params);
    }
    /**
   * Formats an SQL query.
   * @param {string} query - The SQL query string to be formatted
   * @return {string} The formatter query
   */ format(t) {
        const n = this.parse(t), r = this.formatAst(n);
        return this.postFormat(r).trimEnd();
    }
    parse(t) {
        return lG(this.dialect.tokenizer).parse(t, this.cfg.paramTypes || {});
    }
    formatAst(t) {
        return t.map((n)=>this.formatStatement(n)).join(`
`.repeat(this.cfg.linesBetweenQueries + 1));
    }
    formatStatement(t) {
        const n = new hE({
            cfg: this.cfg,
            dialectCfg: this.dialect.formatOptions,
            params: this.params,
            layout: new bg(new Pg(P1(this.cfg)))
        }).format(t.children);
        return t.hasSemicolon && (this.cfg.newlineBeforeSemicolon ? n.add(K.NEWLINE, ";") : n.add(K.NO_NEWLINE, ";")), n.toString();
    }
    postFormat(t) {
        return this.cfg.tabulateAlias && (t = SG(t)), (this.cfg.commaPosition === "before" || this.cfg.commaPosition === "tabular") && (t = uG(t, this.cfg.commaPosition, P1(this.cfg))), t;
    }
}
class Ii extends Error {
}
function gG(e) {
    if ("multilineLists" in e) throw new Ii("multilineLists config is no more supported.");
    if ("newlineBeforeOpenParen" in e) throw new Ii("newlineBeforeOpenParen config is no more supported.");
    if ("newlineBeforeCloseParen" in e) throw new Ii("newlineBeforeCloseParen config is no more supported.");
    if ("aliasAs" in e) throw new Ii("aliasAs config is no more supported.");
    if (e.expressionWidth <= 0) throw new Ii(`expressionWidth config must be positive number. Received ${e.expressionWidth} instead.`);
    if (e.commaPosition === "before" && e.useTabs) throw new Ii("commaPosition: before does not work when tabs are used for indentation.");
    return e.params && !LG(e.params) && console.warn('WARNING: All "params" option values should be strings.'), e;
}
function LG(e) {
    return (e instanceof Array ? e : Object.values(e)).every((n)=>typeof n == "string");
}
const Mg = {
    bigquery: "bigquery",
    db2: "db2",
    hive: "hive",
    mariadb: "mariadb",
    mysql: "mysql",
    n1ql: "n1ql",
    plsql: "plsql",
    postgresql: "postgresql",
    redshift: "redshift",
    spark: "spark",
    sqlite: "sqlite",
    sql: "sql",
    trino: "trino",
    transactsql: "transactsql",
    tsql: "transactsql",
    // alias for transactsq
    singlestoredb: "singlestoredb",
    snowflake: "snowflake"
}, yG = Object.keys(Mg), vG = {
    tabWidth: 2,
    useTabs: !1,
    keywordCase: "preserve",
    indentStyle: "standard",
    logicalOperatorNewline: "before",
    tabulateAlias: !1,
    commaPosition: "after",
    expressionWidth: 50,
    linesBetweenQueries: 1,
    denseOperators: !1,
    newlineBeforeSemicolon: !1
}, bG = (e, t = {})=>{
    if (typeof t.language == "string" && !yG.includes(t.language)) throw new Ii(`Unsupported SQL dialect: ${t.language}`);
    const n = Mg[t.language || "sql"];
    return PG(e, {
        ...t,
        dialect: vB[n]
    });
}, PG = (e, { dialect: t, ...n })=>{
    if (typeof e != "string") throw new Error("Invalid query argument. Expected string, instead got " + typeof e);
    const r = gG({
        ...vG,
        ...n
    });
    return new CG(WB(t), r).format(e);
};
function MG({ handleResize: e, isResizing: t, setIsResizing: n, direction: r = "column", className: s = "", children: i, style: a, ...o }) {
    const l = L.useRef(0), c = L.useRef(null), u = (A)=>{
        if (!(A.target instanceof HTMLDivElement)) return;
        const R = Date.now();
        if (R - l.current <= 16) return;
        if (c.current === null) {
            c.current = {
                x: A.clientX,
                y: A.clientY
            };
            return;
        }
        const O = A.clientX - c.current.x, d = A.clientY - c.current.y;
        (O !== 0 || d !== 0) && (c.current = {
            x: A.clientX,
            y: A.clientY
        }, l.current = R, requestAnimationFrame(()=>{
            e(A);
        }));
    }, E = (A)=>{
        var O;
        A.preventDefault(), c.current = {
            x: A.clientX,
            y: A.clientY
        };
        const R = document.getElementById("sentry-spotlight-root"), C = (O = R == null ? void 0 : R.shadowRoot) == null ? void 0 : O.querySelector(".spotlight-debugger");
        C == null || C.classList.add(`resizing-${r}`), n(!0), document.addEventListener("mousemove", u), document.addEventListener("mouseup", p);
    }, p = ()=>{
        var C;
        c.current = null;
        const A = document.getElementById("sentry-spotlight-root"), R = (C = A == null ? void 0 : A.shadowRoot) == null ? void 0 : C.querySelector(".spotlight-debugger");
        R == null || R.classList.remove("resizing-column"), R == null || R.classList.remove("resizing-row"), n(!1), document.removeEventListener("mousemove", u), document.removeEventListener("mouseup", p);
    };
    return /* @__PURE__ */ m.jsx("div", {
        className: he("resizer", t ? "is-resizing" : "", s),
        style: a,
        onClick: (A)=>A.preventDefault(),
        onMouseDown: E,
        ...o,
        children: i
    });
}
function DG({ handleResize: e, isResizing: t, setIsResizing: n, direction: r = "column", ...s }) {
    const [i, a] = L.useState(!1);
    return /* @__PURE__ */ m.jsx(MG, {
        handleResize: e,
        isResizing: t,
        setIsResizing: n,
        direction: r,
        className: he("span-resizer absolute left-0 top-0 h-full w-1", r === "column" ? "cursor-col-resize" : "cursor-row-resize", t || i ? "bg-primary-500" : "bg-transparent"),
        style: {
            transform: t || i ? "translateX(-2px)" : "none"
        },
        onMouseEnter: ()=>a(!0),
        onMouseLeave: ()=>a(!1),
        ...s
    });
}
const wG = ({ span: e, startTimestamp: t, totalDuration: n, depth: r = 1, traceContext: s, totalTransactions: i = 0, spanNodeWidth: a, setSpanNodeWidth: o = ()=>{} })=>{
    var I, T;
    const { spanId: l } = qi(), { query: c, matchesQuery: u, showOnlyMatched: E } = CA(), p = L.useRef(null), A = e.children ? e.children.length : 0, [R, C] = L.useState((e.transaction && i > 1 || r >= 10 || A > 10 || ((I = e.tags) == null ? void 0 : I.source) === "profile") && r !== 1), [O, d] = L.useState(!1), f = e.timestamp - e.start_timestamp, _ = (N)=>{
        if (p.current) {
            const g = p.current.getBoundingClientRect(), S = (N.clientX - g.left) / g.width * 100;
            o(S);
        }
    }, h = !E && c && u(e);
    return /* @__PURE__ */ m.jsxs("li", {
        ref: p,
        children: [
            /* @__PURE__ */ m.jsxs(Dn, {
                className: he("hover:bg-primary-700 group flex rounded-sm text-sm", h ? "bg-primary-200 bg-opacity-20" : "", l === e.span_id ? "bg-primary-900" : "", ((T = e.tags) == null ? void 0 : T.source) === "profile" ? "text-lime-500" : ""),
                style: {
                    pointerEvents: O ? "none" : "auto"
                },
                to: `/traces/${e.trace_id}/spans/${e.span_id}`,
                children: [
                    /* @__PURE__ */ m.jsxs("div", {
                        className: he("node group-hover:bg-primary-700 rounded-sm", h ? "bg-transparent" : "", e.status && e.status !== "ok" ? "text-red-400" : "", l === e.span_id ? "bg-primary-900" : "bg-primary-950"),
                        style: {
                            width: `${a}%`
                        },
                        children: [
                            A > 0 && /* @__PURE__ */ m.jsxs("div", {
                                className: "bg-primary-600 z-10 mr-1 flex items-center gap-1 rounded-lg px-1 text-xs font-bold text-white",
                                onClick: (N)=>{
                                    N.preventDefault(), C((g)=>!g);
                                },
                                children: [
                                    A,
                                    /* @__PURE__ */ m.jsx(VO, {
                                        width: 12,
                                        height: 12,
                                        className: he("transition", R ? "rotate-0" : "rotate-180")
                                    })
                                ]
                            }),
                            e.transaction && /* @__PURE__ */ m.jsx(Js, {
                                size: 16,
                                platform: e.transaction.platform
                            }),
                            e.op && /* @__PURE__ */ m.jsxs(m.Fragment, {
                                children: [
                                    /* @__PURE__ */ m.jsx("span", {
                                        className: "font-bold",
                                        children: e.op
                                    }),
                                    /* @__PURE__ */ m.jsx("span", {
                                        className: "text-primary-400",
                                        children: "–"
                                    })
                                ]
                            }),
                            /* @__PURE__ */ m.jsx("span", {
                                className: "block truncate",
                                title: e.description || e.span_id,
                                children: e.description || e.span_id
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsxs("div", {
                        className: he("waterfall group-hover:bg-primary-700 rounded-sm", h ? "!bg-transparent" : ""),
                        style: {
                            left: `${a}%`
                        },
                        children: [
                            /* @__PURE__ */ m.jsx(DG, {
                                setIsResizing: d,
                                isResizing: O,
                                handleResize: _
                            }),
                            /* @__PURE__ */ m.jsx("div", {
                                className: "bg-primary-900 absolute -m-0.5 w-full p-0.5",
                                style: {
                                    left: `calc(min(${(e.start_timestamp - t) / n * 100}%, 95% - 1px) + 4px)`,
                                    width: `max(1px, ${f / n * 95}%)`
                                },
                                children: /* @__PURE__ */ m.jsx("span", {
                                    className: he("whitespace-nowrap", HO(f)),
                                    children: vt(f)
                                })
                            })
                        ]
                    })
                ]
            }),
            !R && /* @__PURE__ */ m.jsx(gA, {
                traceContext: s,
                tree: e.children || [],
                startTimestamp: t,
                totalDuration: n,
                depth: A > 1 ? r + 1 : r,
                totalTransactions: i,
                spanNodeWidth: a,
                setSpanNodeWidth: o
            })
        ]
    }, e.span_id);
};
function gA({ traceContext: e, tree: t, startTimestamp: n, totalDuration: r, depth: s = 1, totalTransactions: i, spanNodeWidth: a, setSpanNodeWidth: o }) {
    const { query: l, matchesQuery: c, showOnlyMatched: u } = CA(), E = L.useMemo({
        "gA.useMemo[E]": ()=>{
            if (!l) return t;
            if (u) {
                const p = /* @__PURE__ */ new Map(), A = {
                    "gA.useMemo[E].A": (R)=>{
                        var O;
                        if (p.has(R.span_id)) return p.get(R.span_id);
                        const C = c(R) || (((O = R.children) == null ? void 0 : O.some({
                            "gA.useMemo[E].A": (d)=>A(d)
                        }["gA.useMemo[E].A"])) ?? !1);
                        return p.set(R.span_id, C), C;
                    }
                }["gA.useMemo[E].A"];
                return t.filter({
                    "gA.useMemo[E]": (R)=>A(R)
                }["gA.useMemo[E]"]);
            }
            return t;
        }
    }["gA.useMemo[E]"], [
        l,
        t,
        u,
        c
    ]);
    return !t || !t.length ? null : /* @__PURE__ */ m.jsx("ul", {
        className: he(t.length > 1 && "deep", "tree"),
        children: E.map((p)=>/* @__PURE__ */ m.jsx(wG, {
                traceContext: e,
                depth: s,
                span: p,
                totalTransactions: i,
                startTimestamp: n,
                totalDuration: r,
                spanNodeWidth: a,
                setSpanNodeWidth: o
            }, p.span_id))
    });
}
function xG({ desc: e, dbType: t }) {
    if (e.startsWith("{") || t === "mongodb") try {
        return /* @__PURE__ */ m.jsx(xa, {
            data: JSON.parse(e)
        });
    } catch  {}
    let n = e;
    if (e.match(/^(SELECT|INSERT|UPDATE|DELETE|TRUNCATE|ALTER) /i)) try {
        n = bG(e.replace(/([\s,(])(%[a-z])([\s,)])/gim, "$1?$3"), {
            language: t || "sql"
        });
    } catch (r) {
        console.error(r);
    }
    return /* @__PURE__ */ m.jsx("pre", {
        className: "text-primary-300 whitespace-pre-wrap break-words font-mono text-sm",
        children: n
    });
}
function UG(e, t) {
    return typeof t == "number" ? e.indexOf("size") !== -1 || e.indexOf("length") !== -1 ? jO(t) : t.toLocaleString() : `${t}`;
}
function FG({ span: e }) {
    var r, s;
    let t = null, n = null;
    return e.op && BO.test(e.op) && e.description ? (n = "Query", t = /* @__PURE__ */ m.jsx(xG, {
        desc: e.description,
        dbType: (r = e.data) == null ? void 0 : r["db.system"]
    })) : e.op === "resource.img" && ((s = e.description) == null ? void 0 : s.indexOf("/")) === 0 ? (n = "Preview", t = /* @__PURE__ */ m.jsx("a", {
        href: e.description,
        className: "border-primary-950 hover:border-primary-700 -m-2 inline-block max-w-sm cursor-pointer rounded border p-1",
        children: /* @__PURE__ */ m.jsx("img", {
            src: e.description,
            alt: "preview",
            style: {
                maxHeight: 300
            }
        })
    })) : e.description ? (n = "Description", t = /* @__PURE__ */ m.jsx("pre", {
        className: "text-primary-300 whitespace-pre-wrap break-words font-mono text-sm",
        children: e.description
    })) : t = /* @__PURE__ */ m.jsx("div", {
        className: "text-primary-300",
        children: "No description recorded for this span."
    }), /* @__PURE__ */ m.jsxs("div", {
        children: [
            n && /* @__PURE__ */ m.jsx("h2", {
                className: "mb-2 font-bold uppercase",
                children: n
            }),
            t
        ]
    });
}
function BG({ traceContext: e, span: t, startTimestamp: n, totalDuration: r, totalTransactions: s }) {
    var E;
    const [i, a] = L.useState(50), o = t.start_timestamp - n, l = mt((p)=>p.getEventsByTrace), c = t.timestamp - t.start_timestamp, u = t.trace_id ? l(t.trace_id).filter(qa) : [];
    return /* @__PURE__ */ m.jsxs(FO, {
        backto: `/traces/${t.trace_id}`,
        children: [
            /* @__PURE__ */ m.jsx(UO, {
                title: "Span Details",
                subtitle: /* @__PURE__ */ m.jsxs(m.Fragment, {
                    children: [
                        t.op && /* @__PURE__ */ m.jsxs(m.Fragment, {
                            children: [
                                t.op,
                                " ",
                                /* @__PURE__ */ m.jsx("span", {
                                    className: "text-primary-500",
                                    children: "—"
                                }),
                                " "
                            ]
                        }),
                        t.span_id
                    ]
                }),
                backto: `/traces/${t.trace_id}`
            }),
            /* @__PURE__ */ m.jsxs("div", {
                className: "space-y-6",
                children: [
                    /* @__PURE__ */ m.jsx("div", {
                        children: /* @__PURE__ */ m.jsxs("div", {
                            className: "flex flex-col space-y-4",
                            children: [
                                /* @__PURE__ */ m.jsxs("div", {
                                    className: "text-primary-300 flex flex-1 items-center gap-x-1",
                                    children: [
                                        /* @__PURE__ */ m.jsx(hg, {
                                            date: t.start_timestamp
                                        }),
                                        /* @__PURE__ */ m.jsx("span", {
                                            children: "—"
                                        }),
                                        /* @__PURE__ */ m.jsxs("span", {
                                            children: [
                                                /* @__PURE__ */ m.jsx("strong", {
                                                    children: vt(o)
                                                }),
                                                " into trace"
                                            ]
                                        })
                                    ]
                                }),
                                /* @__PURE__ */ m.jsx("div", {
                                    className: "flex-1",
                                    children: /* @__PURE__ */ m.jsx("div", {
                                        className: "border-primary-800 relative h-8 border py-1",
                                        children: /* @__PURE__ */ m.jsx("div", {
                                            className: "bg-primary-800 absolute bottom-0 top-0 -m-0.5 flex w-full items-center p-0.5",
                                            style: {
                                                left: `min(${o / r * 100}%, 100% - 1px)`,
                                                width: `max(1px, ${c / r * 100}%)`
                                            },
                                            children: /* @__PURE__ */ m.jsx("span", {
                                                className: "whitespace-nowrap",
                                                children: vt(c)
                                            })
                                        })
                                    })
                                })
                            ]
                        })
                    }),
                    u.length > 0 && /* @__PURE__ */ m.jsxs("div", {
                        className: "flex flex-col items-start",
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "mb-2 font-bold uppercase",
                                children: "Related Errors"
                            }),
                            u.map((p)=>/* @__PURE__ */ m.jsx(Dn, {
                                    className: "cursor-pointer underline",
                                    to: `/errors/${p.event_id}`,
                                    children: /* @__PURE__ */ m.jsx(CO, {
                                        event: p
                                    })
                                }, p.event_id))
                        ]
                    }),
                    /* @__PURE__ */ m.jsx(FG, {
                        span: t
                    }),
                    /* @__PURE__ */ m.jsxs("div", {
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "mb-2 font-bold uppercase",
                                children: "Tags"
                            }),
                            t.tags && Object.keys(t.tags).length ? /* @__PURE__ */ m.jsx(Je, {
                                className: "w-full text-sm",
                                children: /* @__PURE__ */ m.jsx(Je.Body, {
                                    children: Object.entries(t.tags).map(([p, A])=>/* @__PURE__ */ m.jsxs("tr", {
                                            className: "text-primary-300",
                                            children: [
                                                /* @__PURE__ */ m.jsx("th", {
                                                    className: " w-1/12 py-0.5 pr-4 text-left font-mono font-normal",
                                                    children: /* @__PURE__ */ m.jsx("div", {
                                                        className: "w-full truncate",
                                                        children: p
                                                    })
                                                }),
                                                /* @__PURE__ */ m.jsx("td", {
                                                    className: "py-0.5",
                                                    children: /* @__PURE__ */ m.jsx("pre", {
                                                        className: "whitespace-nowrap font-mono",
                                                        children: JSON.stringify(A, void 0, 2)
                                                    })
                                                })
                                            ]
                                        }, p))
                                })
                            }) : /* @__PURE__ */ m.jsx("div", {
                                className: "text-primary-300",
                                children: "No tags recorded for this span."
                            })
                        ]
                    }),
                    /* @__PURE__ */ m.jsxs("div", {
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "mb-2 font-bold uppercase",
                                children: "Context"
                            }),
                            /* @__PURE__ */ m.jsx(Je, {
                                className: "w-full text-sm",
                                children: /* @__PURE__ */ m.jsx(Je.Body, {
                                    children: [
                                        [
                                            "status",
                                            t.status || ""
                                        ],
                                        [
                                            "trace",
                                            t.trace_id
                                        ],
                                        [
                                            "span",
                                            t.span_id
                                        ],
                                        [
                                            "parent",
                                            t.parent_span_id ? /* @__PURE__ */ m.jsx(Dn, {
                                                className: "underline",
                                                to: `/traces/${t.trace_id}/spans/${t.parent_span_id}`,
                                                children: t.parent_span_id
                                            }, `link-to-${t.parent_span_id}`) : ""
                                        ],
                                        [
                                            "op",
                                            t.op
                                        ]
                                    ].map(([p, A])=>/* @__PURE__ */ m.jsxs("tr", {
                                            className: "text-primary-300",
                                            children: [
                                                /* @__PURE__ */ m.jsx("th", {
                                                    className: " w-1/12 py-0.5 pr-4 text-left font-mono font-normal",
                                                    children: /* @__PURE__ */ m.jsx("div", {
                                                        className: "w-full truncate",
                                                        children: p
                                                    })
                                                }),
                                                /* @__PURE__ */ m.jsx("td", {
                                                    className: "py-0.5",
                                                    children: /* @__PURE__ */ m.jsx("pre", {
                                                        className: "whitespace-nowrap font-mono",
                                                        children: A
                                                    })
                                                })
                                            ]
                                        }, p))
                                })
                            })
                        ]
                    }),
                    t.data && /* @__PURE__ */ m.jsxs("div", {
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "mb-2 font-bold uppercase",
                                children: "Data"
                            }),
                            /* @__PURE__ */ m.jsx(Je, {
                                className: "w-full text-sm",
                                children: /* @__PURE__ */ m.jsx(Je.Body, {
                                    children: Object.entries(t.data).map(([p, A])=>/* @__PURE__ */ m.jsxs("tr", {
                                            className: "text-primary-300",
                                            children: [
                                                /* @__PURE__ */ m.jsx("th", {
                                                    className: " w-1/12 py-0.5 pr-4 text-left font-mono font-normal",
                                                    children: /* @__PURE__ */ m.jsx("div", {
                                                        className: "w-full truncate",
                                                        children: p
                                                    })
                                                }),
                                                /* @__PURE__ */ m.jsx("td", {
                                                    className: "py-0.5",
                                                    children: /* @__PURE__ */ m.jsx("pre", {
                                                        className: "whitespace-nowrap font-mono",
                                                        children: UG(p, A)
                                                    })
                                                })
                                            ]
                                        }, p))
                                })
                            })
                        ]
                    }),
                    (((E = t.children) == null ? void 0 : E.length) ?? 0) > 0 && /* @__PURE__ */ m.jsxs("div", {
                        children: [
                            /* @__PURE__ */ m.jsx("h2", {
                                className: "mb-2 font-bold uppercase",
                                children: "Sub-tree"
                            }),
                            /* @__PURE__ */ m.jsx(gA, {
                                traceContext: e,
                                tree: [
                                    t
                                ],
                                startTimestamp: n,
                                totalDuration: r,
                                totalTransactions: s,
                                spanNodeWidth: i,
                                setSpanNodeWidth: a
                            })
                        ]
                    })
                ]
            })
        ]
    });
}
const GG = 50;
function kG({ trace: e, startTimestamp: t, totalDuration: n }) {
    const { setQuery: r, showOnlyMatched: s, setShowOnlyMatched: i } = CA(), { inputValue: a, showReset: o, handleChange: l, handleReset: c } = JU(r, 500), [u, E] = L.useState(GG);
    return e.spans.size === 0 ? null : /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsxs("div", {
                className: "mx-6 mb-4 mt-2 flex gap-2",
                children: [
                    /* @__PURE__ */ m.jsxs("div", {
                        className: "bg-primary-950 text-primary-50 border-primary-600 hover:border-primary-500 relative flex h-auto w-full flex-1 gap-2 rounded-md border py-1 pl-4 pr-6 outline-none transition-all",
                        children: [
                            /* @__PURE__ */ m.jsx("input", {
                                className: "text-primary-50 h-auto w-full flex-1 bg-transparent outline-none transition-all",
                                onChange: l,
                                value: a,
                                placeholder: "Search in Trace"
                            }),
                            o ? /* @__PURE__ */ m.jsx(XU, {
                                onClick: c,
                                className: "fill-primary-50 absolute right-1 top-[5px] cursor-pointer",
                                height: 20,
                                width: 20
                            }) : null
                        ]
                    }),
                    /* @__PURE__ */ m.jsx("button", {
                        className: `rounded border px-2 py-1 text-sm ${s ? "bg-primary-600 border-white text-white" : "bg-primary-800 text-primary-300  border-primary-500 hover:bg-primary-700"}`,
                        onClick: ()=>i(!s),
                        children: "Only Show Matches"
                    })
                ]
            }),
            /* @__PURE__ */ m.jsx("div", {
                className: "min-h-0 flex-1 overflow-y-auto overflow-x-hidden px-2 pb-6",
                children: /* @__PURE__ */ m.jsx(gA, {
                    traceContext: e,
                    tree: e.spanTree,
                    startTimestamp: t,
                    totalDuration: n,
                    totalTransactions: (e.transactions || []).length,
                    spanNodeWidth: u,
                    setSpanNodeWidth: E
                })
            })
        ]
    });
}
function HG({ traceId: e }) {
    const { spanId: t } = qi(), r = mt((o)=>o.getTraceById)(e), s = t ? r.spans.get(t) : void 0, i = r.start_timestamp, a = r.timestamp - i;
    return /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsx("div", {
                className: "px-6 py-4",
                children: /* @__PURE__ */ m.jsxs("div", {
                    className: "text-primary-300 flex flex-1 items-center gap-x-1",
                    children: [
                        /* @__PURE__ */ m.jsx("div", {
                            className: "text-primary-200",
                            children: /* @__PURE__ */ m.jsx(hg, {
                                date: r.start_timestamp
                            })
                        }),
                        /* @__PURE__ */ m.jsx("span", {
                            children: "—"
                        }),
                        /* @__PURE__ */ m.jsxs("span", {
                            children: [
                                /* @__PURE__ */ m.jsx("strong", {
                                    className: "text-primary-200 font-bold",
                                    children: YO(r)
                                }),
                                " recorded in",
                                " ",
                                /* @__PURE__ */ m.jsxs("strong", {
                                    className: "text-primary-200 font-bold",
                                    children: [
                                        r.spans.size.toLocaleString(),
                                        " spans"
                                    ]
                                })
                            ]
                        })
                    ]
                })
            }),
            /* @__PURE__ */ m.jsx(kG, {
                trace: r,
                startTimestamp: i,
                totalDuration: a
            }),
            s ? /* @__PURE__ */ m.jsx(BG, {
                traceContext: r,
                startTimestamp: i,
                totalDuration: a,
                span: s,
                totalTransactions: (r.transactions || []).length
            }) : null
        ]
    });
}
function M1(e) {
    return /* @__PURE__ */ m.jsx(KU, {
        children: /* @__PURE__ */ m.jsx(HG, {
            ...e
        })
    });
}
function YG() {
    const { traceId: e } = qi(), t = td(e), n = mt((a)=>a.getTraceById);
    if (!e) return /* @__PURE__ */ m.jsx("p", {
        className: "text-primary-300 p-6",
        children: "Unknown trace id"
    });
    const r = n(e);
    if (!r) return /* @__PURE__ */ m.jsxs("p", {
        className: "text-primary-300 p-6",
        children: [
            "Trace not found. Check for more",
            " ",
            /* @__PURE__ */ m.jsx(Dn, {
                to: "/traces",
                className: "underline",
                children: "traces"
            })
        ]
    });
    const s = t.filter((a)=>{
        var o, l, c, u;
        return qa(a) && ((l = (o = a.contexts) == null ? void 0 : o.trace) != null && l.trace_id ? oi((u = (c = a.contexts) == null ? void 0 : c.trace) == null ? void 0 : u.trace_id) : null) !== !1;
    }).length, i = [
        Tn("details", "Details"),
        Tn("context", "Context"),
        Tn("errors", "Errors", {
            notificationCount: {
                count: s,
                severe: s > 0
            }
        })
    ];
    return /* @__PURE__ */ m.jsxs(m.Fragment, {
        children: [
            /* @__PURE__ */ m.jsx(jU, {
                trace: r
            }),
            /* @__PURE__ */ m.jsx(HE, {
                tabs: i,
                nested: !0
            }),
            /* @__PURE__ */ m.jsx("div", {
                className: "flex min-h-0 flex-1 flex-col overflow-y-auto overflow-x-hidden",
                children: /* @__PURE__ */ m.jsxs(Rs, {
                    children: [
                        /* @__PURE__ */ m.jsx(ze, {
                            path: "details",
                            element: /* @__PURE__ */ m.jsx(M1, {
                                traceId: e
                            })
                        }),
                        /* @__PURE__ */ m.jsx(ze, {
                            path: "spans/:spanId",
                            element: /* @__PURE__ */ m.jsx(M1, {
                                traceId: e
                            })
                        }),
                        /* @__PURE__ */ m.jsx(ze, {
                            path: "context",
                            element: /* @__PURE__ */ m.jsx(PO, {
                                event: r.rootTransaction || r.transactions[0]
                            })
                        }),
                        /* @__PURE__ */ m.jsx(ze, {
                            path: "errors",
                            element: /* @__PURE__ */ m.jsx(wO, {
                                traceId: e
                            })
                        }),
                        /* @__PURE__ */ m.jsx(ze, {
                            path: "*",
                            element: /* @__PURE__ */ m.jsx(QN, {
                                to: `/traces/${e}/details`,
                                replace: !0
                            })
                        })
                    ]
                })
            })
        ]
    });
}
function VG() {
    const { allTraces: e, localTraces: t } = Zh(), n = ZE(), [r, s] = L.useState(!n.experiments["sentry:focus-local-events"]), i = r ? e : t, a = e.length - i.length;
    return /* @__PURE__ */ m.jsx(m.Fragment, {
        children: e.length !== 0 ? /* @__PURE__ */ m.jsxs(QE, {
            children: [
                a > 0 && /* @__PURE__ */ m.jsx(qh, {
                    itemCount: a,
                    onClick: ()=>{
                        s(!0);
                    }
                }),
                i.map((o)=>/* @__PURE__ */ m.jsxs(Dn, {
                        className: "hover:bg-primary-900 flex cursor-pointer items-center gap-x-4 px-6 py-2",
                        to: `/traces/${o.trace_id}`,
                        children: [
                            /* @__PURE__ */ m.jsx(fg, {
                                trace: o
                            }),
                            /* @__PURE__ */ m.jsxs("div", {
                                className: "text-primary-300 flex w-48 flex-col truncate font-mono text-sm",
                                children: [
                                    /* @__PURE__ */ m.jsxs("div", {
                                        className: "flex items-center gap-x-2",
                                        children: [
                                            /* @__PURE__ */ m.jsx("div", {
                                                children: Cl(o.trace_id)
                                            }),
                                            oi(o.trace_id) ? /* @__PURE__ */ m.jsx(Jh, {
                                                title: "This trace is part of your local session.",
                                                children: "Local"
                                            }) : null
                                        ]
                                    }),
                                    /* @__PURE__ */ m.jsx($E, {
                                        date: o.start_timestamp
                                    })
                                ]
                            }),
                            /* @__PURE__ */ m.jsx(pg, {
                                trace: o
                            }),
                            /* @__PURE__ */ m.jsx("div", {
                                className: "flex flex-col truncate font-mono",
                                children: /* @__PURE__ */ m.jsxs("div", {
                                    className: "text-primary-300 flex space-x-2 text-sm",
                                    children: [
                                        /* @__PURE__ */ m.jsx("div", {
                                            className: he(o.status === "ok" ? "text-green-400" : o.status ? "text-red-400" : ""),
                                            children: o.status || ""
                                        }),
                                        /* @__PURE__ */ m.jsx("div", {
                                            children: "—"
                                        }),
                                        /* @__PURE__ */ m.jsx("div", {
                                            children: YO(o)
                                        }),
                                        /* @__PURE__ */ m.jsx("div", {
                                            children: "—"
                                        }),
                                        /* @__PURE__ */ m.jsxs("div", {
                                            children: [
                                                o.spans.size.toLocaleString(),
                                                " spans, ",
                                                o.transactions.length.toLocaleString(),
                                                " txns"
                                            ]
                                        })
                                    ]
                                })
                            })
                        ]
                    }, o.trace_id))
            ]
        }) : /* @__PURE__ */ m.jsx("div", {
            className: "text-primary-300 p-6",
            children: "Looks like there's no traces recorded matching this query. 🤔"
        })
    });
}
function WG() {
    return /* @__PURE__ */ m.jsx(ed, {
        children: /* @__PURE__ */ m.jsxs(Rs, {
            children: [
                /* @__PURE__ */ m.jsx(ze, {
                    path: "/:traceId/*",
                    element: /* @__PURE__ */ m.jsx(YG, {})
                }),
                /* @__PURE__ */ m.jsx(ze, {
                    path: "/",
                    element: /* @__PURE__ */ m.jsx(VG, {})
                })
            ]
        })
    });
}
const jG = "application/x-sentry-envelope";
function XG(e = {}) {
    return {
        name: "sentry",
        forwardedContentType: [
            jG
        ],
        setup: ({ open: t, sidecarUrl: n })=>{
            e.retries == null && (e.retries = 10);
            const r = mt.getState();
            let s;
            n && (s = EI(n, "/stream"), r.setSidecarUrl(s)), Pe("Setting up Sentry integration for Spotlight"), Dg(e, s && new URL("/stream", s).href), e.openLastError && r.subscribe("event", (a)=>{
                a.exception && setTimeout(()=>t(`/errors/${a.event_id}`), 0);
            });
            const i = (a)=>{
                Pe("Sentry Event", a.detail.event_id), a.detail.event && r.pushEvent(a.detail.event).then(()=>t(`/errors/${a.detail.event.event_id}`));
            };
            return kE("sentry:showError", i), ()=>{
                o5("sentry:showError", i);
            };
        },
        processEvent: (t)=>zG(t),
        tabs: ()=>{
            const n = mt.getState().getEvents().reduce((s, i)=>{
                var a, o, l, c;
                return s + Number(qa(i) && ((o = (a = i.contexts) == null ? void 0 : a.trace) != null && o.trace_id ? oi((c = (l = i.contexts) == null ? void 0 : l.trace) == null ? void 0 : c.trace_id) : null) !== !1);
            }, 0), r = DO().length;
            return [
                Tn("traces", "Traces", {
                    notificationCount: {
                        count: r
                    },
                    content: WG
                }),
                Tn("errors", "Errors", {
                    notificationCount: {
                        count: n,
                        severe: n > 0
                    },
                    content: p4
                }),
                Tn("insights", "Insights", {
                    content: Z4
                })
            ];
        },
        reset: ()=>{
            mt.getState().resetData();
        }
    };
}
function KG(e) {
    let t = e.indexOf(10);
    return t === -1 && (t = e.length), t;
}
function zG(e) {
    let t = typeof e.data == "string" ? Uint8Array.from(e.data, (a)=>a.charCodeAt(0)) : e.data;
    function n(a) {
        const o = a ?? KG(t), l = t.subarray(0, o);
        return t = t.subarray(o + 1), l;
    }
    const r = pf(n()), s = [];
    for(; t.length;){
        const a = pf(n()), o = a.length, l = n(o);
        let c;
        try {
            c = pf(l), a.type && (c.type = a.type);
        } catch (u) {
            c = l, Pe(u);
        }
        s.push([
            a,
            c
        ]);
    }
    const i = [
        r,
        s
    ];
    return mt.getState().pushEnvelope({
        envelope: i,
        rawEnvelope: e
    }), {
        event: i,
        rawEvent: e
    };
}
function Dg(e, t) {
    if (e.injectIntoSDK === !1) return;
    const n = window.__SENTRY__, r = n && JG(n);
    if (!r) {
        Pe("Couldn't find a Sentry SDK client. Make sure you're using a Sentry SDK with version >=7.99.0 or 8.x"), e.retries && (Pe(`Will retry ${e.retries} more time(s) at 100ms intervals...`), e.retries--, setTimeout(()=>{
            Dg(e, t);
        }, 500));
        return;
    }
    if (!r.getDsn()) {
        Pe("Sentry SDK doesn't have a valid DSN. Enabling SDK integrations for just Spotlight.");
        try {
            const s = r.getOptions().integrations;
            for (const i of s)r.addIntegration(i);
        } catch (s) {
            pS("Failed to enable all SDK integrations for Spotlight", s), Pe("Please open an issue with the error at: https://github.com/getsentry/spotlight/issues/new/choose");
        }
    }
    r._dsn = void 0, r._options || (r._options = {}), r._options.tracesSampler = ()=>1, r._options.sampleRate = 1;
    try {
        const s = Object.keys(r._integrations).find((i)=>/spotlight/i.test(i));
        if (s) {
            Pe(`Skipping adding integration as there's already a Spotlight integration enabled in Sentry SDK: ${s}`);
            return;
        }
        r.addIntegration(cM()), r.addIntegration(dg({
            sidecarUrl: t
        }));
    } catch (s) {
        pS("Failed to add Spotlight integration to Sentry", s), Pe("Please open an issue with the error at: https://github.com/getsentry/spotlight/issues/new/choose");
    }
    Pe("Added Spotlight integration to Sentry SDK");
}
function JG(e) {
    var t, n, r;
    if (e.version) {
        const s = e[e.version], i = typeof ((t = s == null ? void 0 : s.stack) == null ? void 0 : t.getScope) == "function" ? (r = (n = s == null ? void 0 : s.stack) == null ? void 0 : n.getScope) == null ? void 0 : r.call(n) : void 0;
        if (typeof (i == null ? void 0 : i.getClient) == "function") return i.getClient();
    }
    if (e.hub) {
        const s = e.hub;
        if (typeof s.getClient == "function") return s.getClient();
    }
}
function qG(e) {
    const t = {
        ...e
    };
    return oO(t, "react"), QI("react", {
        version: L.version
    }), mw(t);
}
const ZG = /* @__PURE__ */ new WeakSet();
function QG(e, t) {
    const n = lU({
        ...e,
        instrumentPageLoad: !1,
        instrumentNavigation: !1
    }), { instrumentPageLoad: r = !0, instrumentNavigation: s = !0 } = e;
    return {
        ...n,
        setup () {},
        afterAllSetup (i) {
            n.afterAllSetup(i);
            const a = ce && ce.location && ce.location.pathname;
            r && a && IA(i, {
                name: a,
                attributes: {
                    [Sr]: "url",
                    [si]: "pageload",
                    [Dt]: `auto.pageload.react.reactrouter_v${t}`
                }
            }), s && ZG.add(i);
        }
    };
}
function $G(e) {
    return QG(e, "6");
}
var yT = {}, D1 = $y;
yT.createRoot = D1.createRoot, yT.hydrateRoot = D1.hydrateRoot;
function ek(e, t = {}) {
    const n = {}, r = performance.getEntriesByType("navigation");
    if (r.length > 0) {
        const l = r[0].serverTiming;
        if (l && l.length > 0) for (const { name: c, description: u } of l)(c === "sentryTrace" || c === "baggage") && (n[c] = u);
    }
    const s = Object.keys(n).length === 2, i = [
        // See docs for support of different versions of variation of react router
        // https://docs.sentry.io/platforms/javascript/guides/react/configuration/integrations/react-router/
        $G({
            instrumentPageLoad: !s,
            useEffect: L.useEffect,
            useLocation: Ss,
            useNavigationType: Cv,
            createRoutesFromChildren: qu,
            matchRoutes: WN
        }),
        J7(),
        GU()
    ], a = document.location.hash.slice(1);
    if (a.startsWith("spotlight")) {
        const l = a.indexOf("="), c = l > -1 ? decodeURIComponent(a.slice(l + 1)) : void 0;
        i.push(dg({
            sidecarUrl: c
        }));
    }
    const o = qG({
        transport: AU(oA),
        dsn: "https://51bcd92dba1128934afd1c5726c84442@o1.ingest.us.sentry.io/4508404727283713",
        environment: "production",
        release: "spotlight@2.15.1",
        integrations: i,
        tracesSampleRate: 1,
        tracePropagationTargets: [
            /^\//,
            document.location.origin
        ],
        profilesSampleRate: 1,
        // Capture Replay for 1% of all sessions,
        // plus for 100% of sessions with an error
        // Learn more at
        // https://docs.sentry.io/platforms/javascript/session-replay/configuration/#general-integration-configuration
        replaysSessionSampleRate: 0.01,
        replaysOnErrorSampleRate: 1,
        ...t
    });
    s && o && IA(o, {
        name: e
    }, n);
}
function tk({ processedEvents: e }) {
    const t = e || [];
    return /* @__PURE__ */ m.jsxs("div", {
        className: "divide-primary-900 bg-primary-950 divide-y p-4",
        children: [
            /* @__PURE__ */ m.jsx("h1", {
                className: "mb-2 text-xl",
                children: "Console Logs"
            }),
            /* @__PURE__ */ m.jsx("div", {
                className: "flex flex-col gap-2",
                children: t.map((n)=>/* @__PURE__ */ m.jsxs("div", {
                        className: "bg-primary-500 py-4 pl-4",
                        children: [
                            /* @__PURE__ */ m.jsx("span", {
                                className: "bg-primary-600 p-2 font-bold",
                                children: n.type.toUpperCase()
                            }),
                            /* @__PURE__ */ m.jsx("span", {
                                className: "ml-4 font-mono",
                                children: n.msg
                            })
                        ]
                    }, n.msg))
            })
        ]
    });
}
const wg = "application/x-spotlight-console";
function bY() {
    const e = Ol();
    return {
        name: "console",
        forwardedContentType: [
            wg
        ],
        tabs: ({ processedEvents: t })=>[
                {
                    id: "console",
                    title: "Browser Console Logs",
                    notificationCount: {
                        count: t.length
                    },
                    content: tk
                }
            ],
        setup: ()=>{
            Pf("log", e), Pf("warn", e), Pf("error", e);
        },
        processEvent ({ data: t }) {
            return {
                event: JSON.parse(t.toString())
            };
        }
    };
}
function Pf(e, t) {
    const n = window;
    n.__spotlight || (n.__spotlight = {}), n.__spotlight.console || (n.__spotlight.console = {});
    const r = n.__spotlight.console;
    r[e] || (r[e] = window.console[e]);
    const s = r[e];
    window.console[e] = (...i)=>{
        const a = nk(i);
        return Hl("event", {
            contentType: wg,
            data: JSON.stringify({
                type: e,
                args: a,
                msg: a.join(" "),
                sessionId: t
            })
        }), s.call(window, ...i);
    };
}
function nk(e) {
    return e.map((t)=>t === null ? "null" : t === void 0 ? "undefined" : typeof t == "string" ? t : rk(t));
}
function rk(e) {
    try {
        return JSON.stringify(e);
    } catch  {
        return "[serialization error]";
    }
}
var xg = {
    exports: {}
}, xo = {}, jc = {
    exports: {}
}, Mf = {}, Df = {}, w1;
function LA() {
    if (w1) return Df;
    w1 = 1;
    function e(r) {
        this.__parent = r, this.__character_count = 0, this.__indent_count = -1, this.__alignment_count = 0, this.__wrap_point_index = 0, this.__wrap_point_character_count = 0, this.__wrap_point_indent_count = -1, this.__wrap_point_alignment_count = 0, this.__items = [];
    }
    e.prototype.clone_empty = function() {
        var r = new e(this.__parent);
        return r.set_indent(this.__indent_count, this.__alignment_count), r;
    }, e.prototype.item = function(r) {
        return r < 0 ? this.__items[this.__items.length + r] : this.__items[r];
    }, e.prototype.has_match = function(r) {
        for(var s = this.__items.length - 1; s >= 0; s--)if (this.__items[s].match(r)) return !0;
        return !1;
    }, e.prototype.set_indent = function(r, s) {
        this.is_empty() && (this.__indent_count = r || 0, this.__alignment_count = s || 0, this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count));
    }, e.prototype._set_wrap_point = function() {
        this.__parent.wrap_line_length && (this.__wrap_point_index = this.__items.length, this.__wrap_point_character_count = this.__character_count, this.__wrap_point_indent_count = this.__parent.next_line.__indent_count, this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count);
    }, e.prototype._should_wrap = function() {
        return this.__wrap_point_index && this.__character_count > this.__parent.wrap_line_length && this.__wrap_point_character_count > this.__parent.next_line.__character_count;
    }, e.prototype._allow_wrap = function() {
        if (this._should_wrap()) {
            this.__parent.add_new_line();
            var r = this.__parent.current_line;
            return r.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count), r.__items = this.__items.slice(this.__wrap_point_index), this.__items = this.__items.slice(0, this.__wrap_point_index), r.__character_count += this.__character_count - this.__wrap_point_character_count, this.__character_count = this.__wrap_point_character_count, r.__items[0] === " " && (r.__items.splice(0, 1), r.__character_count -= 1), !0;
        }
        return !1;
    }, e.prototype.is_empty = function() {
        return this.__items.length === 0;
    }, e.prototype.last = function() {
        return this.is_empty() ? null : this.__items[this.__items.length - 1];
    }, e.prototype.push = function(r) {
        this.__items.push(r);
        var s = r.lastIndexOf(`
`);
        s !== -1 ? this.__character_count = r.length - s : this.__character_count += r.length;
    }, e.prototype.pop = function() {
        var r = null;
        return this.is_empty() || (r = this.__items.pop(), this.__character_count -= r.length), r;
    }, e.prototype._remove_indent = function() {
        this.__indent_count > 0 && (this.__indent_count -= 1, this.__character_count -= this.__parent.indent_size);
    }, e.prototype._remove_wrap_indent = function() {
        this.__wrap_point_indent_count > 0 && (this.__wrap_point_indent_count -= 1);
    }, e.prototype.trim = function() {
        for(; this.last() === " ";)this.__items.pop(), this.__character_count -= 1;
    }, e.prototype.toString = function() {
        var r = "";
        return this.is_empty() ? this.__parent.indent_empty_lines && (r = this.__parent.get_indent_string(this.__indent_count)) : (r = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count), r += this.__items.join("")), r;
    };
    function t(r, s) {
        this.__cache = [
            ""
        ], this.__indent_size = r.indent_size, this.__indent_string = r.indent_char, r.indent_with_tabs || (this.__indent_string = new Array(r.indent_size + 1).join(r.indent_char)), s = s || "", r.indent_level > 0 && (s = new Array(r.indent_level + 1).join(this.__indent_string)), this.__base_string = s, this.__base_string_length = s.length;
    }
    t.prototype.get_indent_size = function(r, s) {
        var i = this.__base_string_length;
        return s = s || 0, r < 0 && (i = 0), i += r * this.__indent_size, i += s, i;
    }, t.prototype.get_indent_string = function(r, s) {
        var i = this.__base_string;
        return s = s || 0, r < 0 && (r = 0, i = ""), s += r * this.__indent_size, this.__ensure_cache(s), i += this.__cache[s], i;
    }, t.prototype.__ensure_cache = function(r) {
        for(; r >= this.__cache.length;)this.__add_column();
    }, t.prototype.__add_column = function() {
        var r = this.__cache.length, s = 0, i = "";
        this.__indent_size && r >= this.__indent_size && (s = Math.floor(r / this.__indent_size), r -= s * this.__indent_size, i = new Array(s + 1).join(this.__indent_string)), r && (i += new Array(r + 1).join(" ")), this.__cache.push(i);
    };
    function n(r, s) {
        this.__indent_cache = new t(r, s), this.raw = !1, this._end_with_newline = r.end_with_newline, this.indent_size = r.indent_size, this.wrap_line_length = r.wrap_line_length, this.indent_empty_lines = r.indent_empty_lines, this.__lines = [], this.previous_line = null, this.current_line = null, this.next_line = new e(this), this.space_before_token = !1, this.non_breaking_space = !1, this.previous_token_wrapped = !1, this.__add_outputline();
    }
    return n.prototype.__add_outputline = function() {
        this.previous_line = this.current_line, this.current_line = this.next_line.clone_empty(), this.__lines.push(this.current_line);
    }, n.prototype.get_line_number = function() {
        return this.__lines.length;
    }, n.prototype.get_indent_string = function(r, s) {
        return this.__indent_cache.get_indent_string(r, s);
    }, n.prototype.get_indent_size = function(r, s) {
        return this.__indent_cache.get_indent_size(r, s);
    }, n.prototype.is_empty = function() {
        return !this.previous_line && this.current_line.is_empty();
    }, n.prototype.add_new_line = function(r) {
        return this.is_empty() || !r && this.just_added_newline() ? !1 : (this.raw || this.__add_outputline(), !0);
    }, n.prototype.get_code = function(r) {
        this.trim(!0);
        var s = this.current_line.pop();
        s && (s[s.length - 1] === `
` && (s = s.replace(/\n+$/g, "")), this.current_line.push(s)), this._end_with_newline && this.__add_outputline();
        var i = this.__lines.join(`
`);
        return r !== `
` && (i = i.replace(/[\n]/g, r)), i;
    }, n.prototype.set_wrap_point = function() {
        this.current_line._set_wrap_point();
    }, n.prototype.set_indent = function(r, s) {
        return r = r || 0, s = s || 0, this.next_line.set_indent(r, s), this.__lines.length > 1 ? (this.current_line.set_indent(r, s), !0) : (this.current_line.set_indent(), !1);
    }, n.prototype.add_raw_token = function(r) {
        for(var s = 0; s < r.newlines; s++)this.__add_outputline();
        this.current_line.set_indent(-1), this.current_line.push(r.whitespace_before), this.current_line.push(r.text), this.space_before_token = !1, this.non_breaking_space = !1, this.previous_token_wrapped = !1;
    }, n.prototype.add_token = function(r) {
        this.__add_space_before_token(), this.current_line.push(r), this.space_before_token = !1, this.non_breaking_space = !1, this.previous_token_wrapped = this.current_line._allow_wrap();
    }, n.prototype.__add_space_before_token = function() {
        this.space_before_token && !this.just_added_newline() && (this.non_breaking_space || this.set_wrap_point(), this.current_line.push(" "));
    }, n.prototype.remove_indent = function(r) {
        for(var s = this.__lines.length; r < s;)this.__lines[r]._remove_indent(), r++;
        this.current_line._remove_wrap_indent();
    }, n.prototype.trim = function(r) {
        for(r = r === void 0 ? !1 : r, this.current_line.trim(); r && this.__lines.length > 1 && this.current_line.is_empty();)this.__lines.pop(), this.current_line = this.__lines[this.__lines.length - 1], this.current_line.trim();
        this.previous_line = this.__lines.length > 1 ? this.__lines[this.__lines.length - 2] : null;
    }, n.prototype.just_added_newline = function() {
        return this.current_line.is_empty();
    }, n.prototype.just_added_blankline = function() {
        return this.is_empty() || this.current_line.is_empty() && this.previous_line.is_empty();
    }, n.prototype.ensure_empty_line_above = function(r, s) {
        for(var i = this.__lines.length - 2; i >= 0;){
            var a = this.__lines[i];
            if (a.is_empty()) break;
            if (a.item(0).indexOf(r) !== 0 && a.item(-1) !== s) {
                this.__lines.splice(i + 1, 0, new e(this)), this.previous_line = this.__lines[this.__lines.length - 2];
                break;
            }
            i--;
        }
    }, Df.Output = n, Df;
}
var wf = {}, x1;
function Ug() {
    if (x1) return wf;
    x1 = 1;
    function e(t, n, r, s) {
        this.type = t, this.text = n, this.comments_before = null, this.newlines = r || 0, this.whitespace_before = s || "", this.parent = null, this.next = null, this.previous = null, this.opened = null, this.closed = null, this.directives = null;
    }
    return wf.Token = e, wf;
}
var xf = {}, U1;
function Fg() {
    return U1 || (U1 = 1, function(e) {
        var t = "\\x23\\x24\\x40\\x41-\\x5a\\x5f\\x61-\\x7a", n = "\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a", r = "\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc", s = "\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f", i = "\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\}", a = "(?:" + i + "|[" + t + r + "])", o = "(?:" + i + "|[" + n + r + s + "])*";
        e.identifier = new RegExp(a + o, "g"), e.identifierStart = new RegExp(a), e.identifierMatch = new RegExp("(?:" + i + "|[" + n + r + s + "])+"), e.newline = /[\n\r\u2028\u2029]/, e.lineBreak = new RegExp(`\r
|` + e.newline.source), e.allLineBreaks = new RegExp(e.lineBreak.source, "g");
    }(xf)), xf;
}
var Uf = {}, Uo = {}, F1;
function yA() {
    if (F1) return Uo;
    F1 = 1;
    function e(r, s) {
        this.raw_options = t(r, s), this.disabled = this._get_boolean("disabled"), this.eol = this._get_characters("eol", "auto"), this.end_with_newline = this._get_boolean("end_with_newline"), this.indent_size = this._get_number("indent_size", 4), this.indent_char = this._get_characters("indent_char", " "), this.indent_level = this._get_number("indent_level"), this.preserve_newlines = this._get_boolean("preserve_newlines", !0), this.max_preserve_newlines = this._get_number("max_preserve_newlines", 32786), this.preserve_newlines || (this.max_preserve_newlines = 0), this.indent_with_tabs = this._get_boolean("indent_with_tabs", this.indent_char === "	"), this.indent_with_tabs && (this.indent_char = "	", this.indent_size === 1 && (this.indent_size = 4)), this.wrap_line_length = this._get_number("wrap_line_length", this._get_number("max_char")), this.indent_empty_lines = this._get_boolean("indent_empty_lines"), this.templating = this._get_selection_list("templating", [
            "auto",
            "none",
            "angular",
            "django",
            "erb",
            "handlebars",
            "php",
            "smarty"
        ], [
            "auto"
        ]);
    }
    e.prototype._get_array = function(r, s) {
        var i = this.raw_options[r], a = s || [];
        return typeof i == "object" ? i !== null && typeof i.concat == "function" && (a = i.concat()) : typeof i == "string" && (a = i.split(/[^a-zA-Z0-9_\/\-]+/)), a;
    }, e.prototype._get_boolean = function(r, s) {
        var i = this.raw_options[r], a = i === void 0 ? !!s : !!i;
        return a;
    }, e.prototype._get_characters = function(r, s) {
        var i = this.raw_options[r], a = s || "";
        return typeof i == "string" && (a = i.replace(/\\r/, "\r").replace(/\\n/, `
`).replace(/\\t/, "	")), a;
    }, e.prototype._get_number = function(r, s) {
        var i = this.raw_options[r];
        s = parseInt(s, 10), isNaN(s) && (s = 0);
        var a = parseInt(i, 10);
        return isNaN(a) && (a = s), a;
    }, e.prototype._get_selection = function(r, s, i) {
        var a = this._get_selection_list(r, s, i);
        if (a.length !== 1) throw new Error("Invalid Option Value: The option '" + r + `' can only be one of the following values:
` + s + `
You passed in: '` + this.raw_options[r] + "'");
        return a[0];
    }, e.prototype._get_selection_list = function(r, s, i) {
        if (!s || s.length === 0) throw new Error("Selection list cannot be empty.");
        if (i = i || [
            s[0]
        ], !this._is_valid_selection(i, s)) throw new Error("Invalid Default Value!");
        var a = this._get_array(r, i);
        if (!this._is_valid_selection(a, s)) throw new Error("Invalid Option Value: The option '" + r + `' can contain only the following values:
` + s + `
You passed in: '` + this.raw_options[r] + "'");
        return a;
    }, e.prototype._is_valid_selection = function(r, s) {
        return r.length && s.length && !r.some(function(i) {
            return s.indexOf(i) === -1;
        });
    };
    function t(r, s) {
        var i = {};
        r = n(r);
        var a;
        for(a in r)a !== s && (i[a] = r[a]);
        if (s && r[s]) for(a in r[s])i[a] = r[s][a];
        return i;
    }
    function n(r) {
        var s = {}, i;
        for(i in r){
            var a = i.replace(/-/g, "_");
            s[a] = r[i];
        }
        return s;
    }
    return Uo.Options = e, Uo.normalizeOpts = n, Uo.mergeOpts = t, Uo;
}
var B1;
function Bg() {
    if (B1) return Uf;
    B1 = 1;
    var e = yA().Options, t = [
        "before-newline",
        "after-newline",
        "preserve-newline"
    ];
    function n(r) {
        e.call(this, r, "js");
        var s = this.raw_options.brace_style || null;
        s === "expand-strict" ? this.raw_options.brace_style = "expand" : s === "collapse-preserve-inline" ? this.raw_options.brace_style = "collapse,preserve-inline" : this.raw_options.braces_on_own_line !== void 0 && (this.raw_options.brace_style = this.raw_options.braces_on_own_line ? "expand" : "collapse");
        var i = this._get_selection_list("brace_style", [
            "collapse",
            "expand",
            "end-expand",
            "none",
            "preserve-inline"
        ]);
        this.brace_preserve_inline = !1, this.brace_style = "collapse";
        for(var a = 0; a < i.length; a++)i[a] === "preserve-inline" ? this.brace_preserve_inline = !0 : this.brace_style = i[a];
        this.unindent_chained_methods = this._get_boolean("unindent_chained_methods"), this.break_chained_methods = this._get_boolean("break_chained_methods"), this.space_in_paren = this._get_boolean("space_in_paren"), this.space_in_empty_paren = this._get_boolean("space_in_empty_paren"), this.jslint_happy = this._get_boolean("jslint_happy"), this.space_after_anon_function = this._get_boolean("space_after_anon_function"), this.space_after_named_function = this._get_boolean("space_after_named_function"), this.keep_array_indentation = this._get_boolean("keep_array_indentation"), this.space_before_conditional = this._get_boolean("space_before_conditional", !0), this.unescape_strings = this._get_boolean("unescape_strings"), this.e4x = this._get_boolean("e4x"), this.comma_first = this._get_boolean("comma_first"), this.operator_position = this._get_selection("operator_position", t), this.test_output_raw = this._get_boolean("test_output_raw"), this.jslint_happy && (this.space_after_anon_function = !0);
    }
    return n.prototype = new e(), Uf.Options = n, Uf;
}
var ca = {}, Ff = {}, G1;
function vA() {
    if (G1) return Ff;
    G1 = 1;
    var e = RegExp.prototype.hasOwnProperty("sticky");
    function t(n) {
        this.__input = n || "", this.__input_length = this.__input.length, this.__position = 0;
    }
    return t.prototype.restart = function() {
        this.__position = 0;
    }, t.prototype.back = function() {
        this.__position > 0 && (this.__position -= 1);
    }, t.prototype.hasNext = function() {
        return this.__position < this.__input_length;
    }, t.prototype.next = function() {
        var n = null;
        return this.hasNext() && (n = this.__input.charAt(this.__position), this.__position += 1), n;
    }, t.prototype.peek = function(n) {
        var r = null;
        return n = n || 0, n += this.__position, n >= 0 && n < this.__input_length && (r = this.__input.charAt(n)), r;
    }, t.prototype.__match = function(n, r) {
        n.lastIndex = r;
        var s = n.exec(this.__input);
        return s && !(e && n.sticky) && s.index !== r && (s = null), s;
    }, t.prototype.test = function(n, r) {
        return r = r || 0, r += this.__position, r >= 0 && r < this.__input_length ? !!this.__match(n, r) : !1;
    }, t.prototype.testChar = function(n, r) {
        var s = this.peek(r);
        return n.lastIndex = 0, s !== null && n.test(s);
    }, t.prototype.match = function(n) {
        var r = this.__match(n, this.__position);
        return r ? this.__position += r[0].length : r = null, r;
    }, t.prototype.read = function(n, r, s) {
        var i = "", a;
        return n && (a = this.match(n), a && (i += a[0])), r && (a || !n) && (i += this.readUntil(r, s)), i;
    }, t.prototype.readUntil = function(n, r) {
        var s = "", i = this.__position;
        n.lastIndex = this.__position;
        var a = n.exec(this.__input);
        return a ? (i = a.index, r && (i += a[0].length)) : i = this.__input_length, s = this.__input.substring(this.__position, i), this.__position = i, s;
    }, t.prototype.readUntilAfter = function(n) {
        return this.readUntil(n, !0);
    }, t.prototype.get_regexp = function(n, r) {
        var s = null, i = "g";
        return r && e && (i = "y"), typeof n == "string" && n !== "" ? s = new RegExp(n, i) : n && (s = new RegExp(n.source, i)), s;
    }, t.prototype.get_literal_regexp = function(n) {
        return RegExp(n.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"));
    }, t.prototype.peekUntilAfter = function(n) {
        var r = this.__position, s = this.readUntilAfter(n);
        return this.__position = r, s;
    }, t.prototype.lookBack = function(n) {
        var r = this.__position - 1;
        return r >= n.length && this.__input.substring(r - n.length, r).toLowerCase() === n;
    }, Ff.InputScanner = t, Ff;
}
var Xc = {}, Bf = {}, k1;
function sk() {
    if (k1) return Bf;
    k1 = 1;
    function e(t) {
        this.__tokens = [], this.__tokens_length = this.__tokens.length, this.__position = 0, this.__parent_token = t;
    }
    return e.prototype.restart = function() {
        this.__position = 0;
    }, e.prototype.isEmpty = function() {
        return this.__tokens_length === 0;
    }, e.prototype.hasNext = function() {
        return this.__position < this.__tokens_length;
    }, e.prototype.next = function() {
        var t = null;
        return this.hasNext() && (t = this.__tokens[this.__position], this.__position += 1), t;
    }, e.prototype.peek = function(t) {
        var n = null;
        return t = t || 0, t += this.__position, t >= 0 && t < this.__tokens_length && (n = this.__tokens[t]), n;
    }, e.prototype.add = function(t) {
        this.__parent_token && (t.parent = this.__parent_token), this.__tokens.push(t), this.__tokens_length += 1;
    }, Bf.TokenStream = e, Bf;
}
var Gf = {}, kf = {}, H1;
function fd() {
    if (H1) return kf;
    H1 = 1;
    function e(t, n) {
        this._input = t, this._starting_pattern = null, this._match_pattern = null, this._until_pattern = null, this._until_after = !1, n && (this._starting_pattern = this._input.get_regexp(n._starting_pattern, !0), this._match_pattern = this._input.get_regexp(n._match_pattern, !0), this._until_pattern = this._input.get_regexp(n._until_pattern), this._until_after = n._until_after);
    }
    return e.prototype.read = function() {
        var t = this._input.read(this._starting_pattern);
        return (!this._starting_pattern || t) && (t += this._input.read(this._match_pattern, this._until_pattern, this._until_after)), t;
    }, e.prototype.read_match = function() {
        return this._input.match(this._match_pattern);
    }, e.prototype.until_after = function(t) {
        var n = this._create();
        return n._until_after = !0, n._until_pattern = this._input.get_regexp(t), n._update(), n;
    }, e.prototype.until = function(t) {
        var n = this._create();
        return n._until_after = !1, n._until_pattern = this._input.get_regexp(t), n._update(), n;
    }, e.prototype.starting_with = function(t) {
        var n = this._create();
        return n._starting_pattern = this._input.get_regexp(t, !0), n._update(), n;
    }, e.prototype.matching = function(t) {
        var n = this._create();
        return n._match_pattern = this._input.get_regexp(t, !0), n._update(), n;
    }, e.prototype._create = function() {
        return new e(this._input, this);
    }, e.prototype._update = function() {}, kf.Pattern = e, kf;
}
var Y1;
function ik() {
    if (Y1) return Gf;
    Y1 = 1;
    var e = fd().Pattern;
    function t(n, r) {
        e.call(this, n, r), r ? this._line_regexp = this._input.get_regexp(r._line_regexp) : this.__set_whitespace_patterns("", ""), this.newline_count = 0, this.whitespace_before_token = "";
    }
    return t.prototype = new e(), t.prototype.__set_whitespace_patterns = function(n, r) {
        n += "\\t ", r += "\\n\\r", this._match_pattern = this._input.get_regexp("[" + n + r + "]+", !0), this._newline_regexp = this._input.get_regexp("\\r\\n|[" + r + "]");
    }, t.prototype.read = function() {
        this.newline_count = 0, this.whitespace_before_token = "";
        var n = this._input.read(this._match_pattern);
        if (n === " ") this.whitespace_before_token = " ";
        else if (n) {
            var r = this.__split(this._newline_regexp, n);
            this.newline_count = r.length - 1, this.whitespace_before_token = r[this.newline_count];
        }
        return n;
    }, t.prototype.matching = function(n, r) {
        var s = this._create();
        return s.__set_whitespace_patterns(n, r), s._update(), s;
    }, t.prototype._create = function() {
        return new t(this._input, this);
    }, t.prototype.__split = function(n, r) {
        n.lastIndex = 0;
        for(var s = 0, i = [], a = n.exec(r); a;)i.push(r.substring(s, a.index)), s = a.index + a[0].length, a = n.exec(r);
        return s < r.length ? i.push(r.substring(s, r.length)) : i.push(""), i;
    }, Gf.WhitespacePattern = t, Gf;
}
var V1;
function AE() {
    if (V1) return Xc;
    V1 = 1;
    var e = vA().InputScanner, t = Ug().Token, n = sk().TokenStream, r = ik().WhitespacePattern, s = {
        START: "TK_START",
        RAW: "TK_RAW",
        EOF: "TK_EOF"
    }, i = function(a, o) {
        this._input = new e(a), this._options = o || {}, this.__tokens = null, this._patterns = {}, this._patterns.whitespace = new r(this._input);
    };
    return i.prototype.tokenize = function() {
        this._input.restart(), this.__tokens = new n(), this._reset();
        for(var a, o = new t(s.START, ""), l = null, c = [], u = new n(); o.type !== s.EOF;){
            for(a = this._get_next_token(o, l); this._is_comment(a);)u.add(a), a = this._get_next_token(o, l);
            u.isEmpty() || (a.comments_before = u, u = new n()), a.parent = l, this._is_opening(a) ? (c.push(l), l = a) : l && this._is_closing(a, l) && (a.opened = l, l.closed = a, l = c.pop(), a.parent = l), a.previous = o, o.next = a, this.__tokens.add(a), o = a;
        }
        return this.__tokens;
    }, i.prototype._is_first_token = function() {
        return this.__tokens.isEmpty();
    }, i.prototype._reset = function() {}, i.prototype._get_next_token = function(a, o) {
        this._readWhitespace();
        var l = this._input.read(/.+/g);
        return l ? this._create_token(s.RAW, l) : this._create_token(s.EOF, "");
    }, i.prototype._is_comment = function(a) {
        return !1;
    }, i.prototype._is_opening = function(a) {
        return !1;
    }, i.prototype._is_closing = function(a, o) {
        return !1;
    }, i.prototype._create_token = function(a, o) {
        var l = new t(a, o, this._patterns.whitespace.newline_count, this._patterns.whitespace.whitespace_before_token);
        return l;
    }, i.prototype._readWhitespace = function() {
        return this._patterns.whitespace.read();
    }, Xc.Tokenizer = i, Xc.TOKEN = s, Xc;
}
var Hf = {}, W1;
function bA() {
    if (W1) return Hf;
    W1 = 1;
    function e(t, n) {
        t = typeof t == "string" ? t : t.source, n = typeof n == "string" ? n : n.source, this.__directives_block_pattern = new RegExp(t + / beautify( \w+[:]\w+)+ /.source + n, "g"), this.__directive_pattern = / (\w+)[:](\w+)/g, this.__directives_end_ignore_pattern = new RegExp(t + /\sbeautify\signore:end\s/.source + n, "g");
    }
    return e.prototype.get_directives = function(t) {
        if (!t.match(this.__directives_block_pattern)) return null;
        var n = {};
        this.__directive_pattern.lastIndex = 0;
        for(var r = this.__directive_pattern.exec(t); r;)n[r[1]] = r[2], r = this.__directive_pattern.exec(t);
        return n;
    }, e.prototype.readIgnored = function(t) {
        return t.readUntilAfter(this.__directives_end_ignore_pattern);
    }, Hf.Directives = e, Hf;
}
var Yf = {}, j1;
function Gg() {
    if (j1) return Yf;
    j1 = 1;
    var e = fd().Pattern, t = {
        django: !1,
        erb: !1,
        handlebars: !1,
        php: !1,
        smarty: !1,
        angular: !1
    };
    function n(r, s) {
        e.call(this, r, s), this.__template_pattern = null, this._disabled = Object.assign({}, t), this._excluded = Object.assign({}, t), s && (this.__template_pattern = this._input.get_regexp(s.__template_pattern), this._excluded = Object.assign(this._excluded, s._excluded), this._disabled = Object.assign(this._disabled, s._disabled));
        var i = new e(r);
        this.__patterns = {
            handlebars_comment: i.starting_with(/{{!--/).until_after(/--}}/),
            handlebars_unescaped: i.starting_with(/{{{/).until_after(/}}}/),
            handlebars: i.starting_with(/{{/).until_after(/}}/),
            php: i.starting_with(/<\?(?:[= ]|php)/).until_after(/\?>/),
            erb: i.starting_with(/<%[^%]/).until_after(/[^%]%>/),
            // django coflicts with handlebars a bit.
            django: i.starting_with(/{%/).until_after(/%}/),
            django_value: i.starting_with(/{{/).until_after(/}}/),
            django_comment: i.starting_with(/{#/).until_after(/#}/),
            smarty: i.starting_with(/{(?=[^}{\s\n])/).until_after(/[^\s\n]}/),
            smarty_comment: i.starting_with(/{\*/).until_after(/\*}/),
            smarty_literal: i.starting_with(/{literal}/).until_after(/{\/literal}/)
        };
    }
    return n.prototype = new e(), n.prototype._create = function() {
        return new n(this._input, this);
    }, n.prototype._update = function() {
        this.__set_templated_pattern();
    }, n.prototype.disable = function(r) {
        var s = this._create();
        return s._disabled[r] = !0, s._update(), s;
    }, n.prototype.read_options = function(r) {
        var s = this._create();
        for(var i in t)s._disabled[i] = r.templating.indexOf(i) === -1;
        return s._update(), s;
    }, n.prototype.exclude = function(r) {
        var s = this._create();
        return s._excluded[r] = !0, s._update(), s;
    }, n.prototype.read = function() {
        var r = "";
        this._match_pattern ? r = this._input.read(this._starting_pattern) : r = this._input.read(this._starting_pattern, this.__template_pattern);
        for(var s = this._read_template(); s;)this._match_pattern ? s += this._input.read(this._match_pattern) : s += this._input.readUntil(this.__template_pattern), r += s, s = this._read_template();
        return this._until_after && (r += this._input.readUntilAfter(this._until_pattern)), r;
    }, n.prototype.__set_templated_pattern = function() {
        var r = [];
        this._disabled.php || r.push(this.__patterns.php._starting_pattern.source), this._disabled.handlebars || r.push(this.__patterns.handlebars._starting_pattern.source), this._disabled.erb || r.push(this.__patterns.erb._starting_pattern.source), this._disabled.django || (r.push(this.__patterns.django._starting_pattern.source), r.push(this.__patterns.django_value._starting_pattern.source), r.push(this.__patterns.django_comment._starting_pattern.source)), this._disabled.smarty || r.push(this.__patterns.smarty._starting_pattern.source), this._until_pattern && r.push(this._until_pattern.source), this.__template_pattern = this._input.get_regexp("(?:" + r.join("|") + ")");
    }, n.prototype._read_template = function() {
        var r = "", s = this._input.peek();
        if (s === "<") {
            var i = this._input.peek(1);
            !this._disabled.php && !this._excluded.php && i === "?" && (r = r || this.__patterns.php.read()), !this._disabled.erb && !this._excluded.erb && i === "%" && (r = r || this.__patterns.erb.read());
        } else s === "{" && (!this._disabled.handlebars && !this._excluded.handlebars && (r = r || this.__patterns.handlebars_comment.read(), r = r || this.__patterns.handlebars_unescaped.read(), r = r || this.__patterns.handlebars.read()), this._disabled.django || (!this._excluded.django && !this._excluded.handlebars && (r = r || this.__patterns.django_value.read()), this._excluded.django || (r = r || this.__patterns.django_comment.read(), r = r || this.__patterns.django.read())), this._disabled.smarty || this._disabled.django && this._disabled.handlebars && (r = r || this.__patterns.smarty_comment.read(), r = r || this.__patterns.smarty_literal.read(), r = r || this.__patterns.smarty.read()));
        return r;
    }, Yf.TemplatablePattern = n, Yf;
}
var X1;
function Kc() {
    if (X1) return ca;
    X1 = 1;
    var e = vA().InputScanner, t = AE().Tokenizer, n = AE().TOKEN, r = bA().Directives, s = Fg(), i = fd().Pattern, a = Gg().TemplatablePattern;
    function o(T, N) {
        return N.indexOf(T) !== -1;
    }
    var l = {
        START_EXPR: "TK_START_EXPR",
        END_EXPR: "TK_END_EXPR",
        START_BLOCK: "TK_START_BLOCK",
        END_BLOCK: "TK_END_BLOCK",
        WORD: "TK_WORD",
        RESERVED: "TK_RESERVED",
        SEMICOLON: "TK_SEMICOLON",
        STRING: "TK_STRING",
        EQUALS: "TK_EQUALS",
        OPERATOR: "TK_OPERATOR",
        COMMA: "TK_COMMA",
        BLOCK_COMMENT: "TK_BLOCK_COMMENT",
        COMMENT: "TK_COMMENT",
        DOT: "TK_DOT",
        UNKNOWN: "TK_UNKNOWN",
        START: n.START,
        RAW: n.RAW,
        EOF: n.EOF
    }, c = new r(/\/\*/, /\*\//), u = /0[xX][0123456789abcdefABCDEF_]*n?|0[oO][01234567_]*n?|0[bB][01_]*n?|\d[\d_]*n|(?:\.\d[\d_]*|\d[\d_]*\.?[\d_]*)(?:[eE][+-]?[\d_]+)?/, E = /[0-9]/, p = /[^\d\.]/, A = ">>> === !== &&= ??= ||= << && >= ** != == <= >> || ?? |> < / - + > : & % ? ^ | *".split(" "), R = ">>>= ... >>= <<= === >>> !== **= &&= ??= ||= => ^= :: /= << <= == && -= >= >> != -- += ** || ?? ++ %= &= *= |= |> = ! ? > < : / ^ - + * & % ~ |";
    R = R.replace(/[-[\]{}()*+?.,\\^$|#]/g, "\\$&"), R = "\\?\\.(?!\\d) " + R, R = R.replace(/ /g, "|");
    var C = new RegExp(R), O = "continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export".split(","), d = O.concat([
        "do",
        "in",
        "of",
        "else",
        "get",
        "set",
        "new",
        "catch",
        "finally",
        "typeof",
        "yield",
        "async",
        "await",
        "from",
        "as",
        "class",
        "extends"
    ]), f = new RegExp("^(?:" + d.join("|") + ")$"), _, h = function(T, N) {
        t.call(this, T, N), this._patterns.whitespace = this._patterns.whitespace.matching(/\u00A0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff/.source, /\u2028\u2029/.source);
        var g = new i(this._input), b = new a(this._input).read_options(this._options);
        this.__patterns = {
            template: b,
            identifier: b.starting_with(s.identifier).matching(s.identifierMatch),
            number: g.matching(u),
            punct: g.matching(C),
            // comment ends just before nearest linefeed or end of file
            comment: g.starting_with(/\/\//).until(/[\n\r\u2028\u2029]/),
            //  /* ... */ comment ends with nearest */ or end of file
            block_comment: g.starting_with(/\/\*/).until_after(/\*\//),
            html_comment_start: g.matching(/<!--/),
            html_comment_end: g.matching(/-->/),
            include: g.starting_with(/#include/).until_after(s.lineBreak),
            shebang: g.starting_with(/#!/).until_after(s.lineBreak),
            xml: g.matching(/[\s\S]*?<(\/?)([-a-zA-Z:0-9_.]+|{[^}]+?}|!\[CDATA\[[^\]]*?\]\]|)(\s*{[^}]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{([^{}]|{[^}]+?})+?}))*\s*(\/?)\s*>/),
            single_quote: b.until(/['\\\n\r\u2028\u2029]/),
            double_quote: b.until(/["\\\n\r\u2028\u2029]/),
            template_text: b.until(/[`\\$]/),
            template_expression: b.until(/[`}\\]/)
        };
    };
    h.prototype = new t(), h.prototype._is_comment = function(T) {
        return T.type === l.COMMENT || T.type === l.BLOCK_COMMENT || T.type === l.UNKNOWN;
    }, h.prototype._is_opening = function(T) {
        return T.type === l.START_BLOCK || T.type === l.START_EXPR;
    }, h.prototype._is_closing = function(T, N) {
        return (T.type === l.END_BLOCK || T.type === l.END_EXPR) && N && (T.text === "]" && N.text === "[" || T.text === ")" && N.text === "(" || T.text === "}" && N.text === "{");
    }, h.prototype._reset = function() {
        _ = !1;
    }, h.prototype._get_next_token = function(T, N) {
        var g = null;
        this._readWhitespace();
        var b = this._input.peek();
        return b === null ? this._create_token(l.EOF, "") : (g = g || this._read_non_javascript(b), g = g || this._read_string(b), g = g || this._read_pair(b, this._input.peek(1)), g = g || this._read_word(T), g = g || this._read_singles(b), g = g || this._read_comment(b), g = g || this._read_regexp(b, T), g = g || this._read_xml(b, T), g = g || this._read_punctuation(), g = g || this._create_token(l.UNKNOWN, this._input.next()), g);
    }, h.prototype._read_word = function(T) {
        var N;
        if (N = this.__patterns.identifier.read(), N !== "") return N = N.replace(s.allLineBreaks, `
`), !(T.type === l.DOT || T.type === l.RESERVED && (T.text === "set" || T.text === "get")) && f.test(N) ? (N === "in" || N === "of") && (T.type === l.WORD || T.type === l.STRING) ? this._create_token(l.OPERATOR, N) : this._create_token(l.RESERVED, N) : this._create_token(l.WORD, N);
        if (N = this.__patterns.number.read(), N !== "") return this._create_token(l.WORD, N);
    }, h.prototype._read_singles = function(T) {
        var N = null;
        return T === "(" || T === "[" ? N = this._create_token(l.START_EXPR, T) : T === ")" || T === "]" ? N = this._create_token(l.END_EXPR, T) : T === "{" ? N = this._create_token(l.START_BLOCK, T) : T === "}" ? N = this._create_token(l.END_BLOCK, T) : T === ";" ? N = this._create_token(l.SEMICOLON, T) : T === "." && p.test(this._input.peek(1)) ? N = this._create_token(l.DOT, T) : T === "," && (N = this._create_token(l.COMMA, T)), N && this._input.next(), N;
    }, h.prototype._read_pair = function(T, N) {
        var g = null;
        return T === "#" && N === "{" && (g = this._create_token(l.START_BLOCK, T + N)), g && (this._input.next(), this._input.next()), g;
    }, h.prototype._read_punctuation = function() {
        var T = this.__patterns.punct.read();
        if (T !== "") return T === "=" ? this._create_token(l.EQUALS, T) : T === "?." ? this._create_token(l.DOT, T) : this._create_token(l.OPERATOR, T);
    }, h.prototype._read_non_javascript = function(T) {
        var N = "";
        if (T === "#") {
            if (this._is_first_token() && (N = this.__patterns.shebang.read(), N)) return this._create_token(l.UNKNOWN, N.trim() + `
`);
            if (N = this.__patterns.include.read(), N) return this._create_token(l.UNKNOWN, N.trim() + `
`);
            T = this._input.next();
            var g = "#";
            if (this._input.hasNext() && this._input.testChar(E)) {
                do T = this._input.next(), g += T;
                while (this._input.hasNext() && T !== "#" && T !== "=")
                return T === "#" || (this._input.peek() === "[" && this._input.peek(1) === "]" ? (g += "[]", this._input.next(), this._input.next()) : this._input.peek() === "{" && this._input.peek(1) === "}" && (g += "{}", this._input.next(), this._input.next())), this._create_token(l.WORD, g);
            }
            this._input.back();
        } else if (T === "<" && this._is_first_token()) {
            if (N = this.__patterns.html_comment_start.read(), N) {
                for(; this._input.hasNext() && !this._input.testChar(s.newline);)N += this._input.next();
                return _ = !0, this._create_token(l.COMMENT, N);
            }
        } else if (_ && T === "-" && (N = this.__patterns.html_comment_end.read(), N)) return _ = !1, this._create_token(l.COMMENT, N);
        return null;
    }, h.prototype._read_comment = function(T) {
        var N = null;
        if (T === "/") {
            var g = "";
            if (this._input.peek(1) === "*") {
                g = this.__patterns.block_comment.read();
                var b = c.get_directives(g);
                b && b.ignore === "start" && (g += c.readIgnored(this._input)), g = g.replace(s.allLineBreaks, `
`), N = this._create_token(l.BLOCK_COMMENT, g), N.directives = b;
            } else this._input.peek(1) === "/" && (g = this.__patterns.comment.read(), N = this._create_token(l.COMMENT, g));
        }
        return N;
    }, h.prototype._read_string = function(T) {
        if (T === "`" || T === "'" || T === '"') {
            var N = this._input.next();
            return this.has_char_escapes = !1, T === "`" ? N += this._read_string_recursive("`", !0, "${") : N += this._read_string_recursive(T), this.has_char_escapes && this._options.unescape_strings && (N = I(N)), this._input.peek() === T && (N += this._input.next()), N = N.replace(s.allLineBreaks, `
`), this._create_token(l.STRING, N);
        }
        return null;
    }, h.prototype._allow_regexp_or_xml = function(T) {
        return T.type === l.RESERVED && o(T.text, [
            "return",
            "case",
            "throw",
            "else",
            "do",
            "typeof",
            "yield"
        ]) || T.type === l.END_EXPR && T.text === ")" && T.opened.previous.type === l.RESERVED && o(T.opened.previous.text, [
            "if",
            "while",
            "for"
        ]) || o(T.type, [
            l.COMMENT,
            l.START_EXPR,
            l.START_BLOCK,
            l.START,
            l.END_BLOCK,
            l.OPERATOR,
            l.EQUALS,
            l.EOF,
            l.SEMICOLON,
            l.COMMA
        ]);
    }, h.prototype._read_regexp = function(T, N) {
        if (T === "/" && this._allow_regexp_or_xml(N)) {
            for(var g = this._input.next(), b = !1, S = !1; this._input.hasNext() && (b || S || this._input.peek() !== T) && !this._input.testChar(s.newline);)g += this._input.peek(), b ? b = !1 : (b = this._input.peek() === "\\", this._input.peek() === "[" ? S = !0 : this._input.peek() === "]" && (S = !1)), this._input.next();
            return this._input.peek() === T && (g += this._input.next(), g += this._input.read(s.identifier)), this._create_token(l.STRING, g);
        }
        return null;
    }, h.prototype._read_xml = function(T, N) {
        if (this._options.e4x && T === "<" && this._allow_regexp_or_xml(N)) {
            var g = "", b = this.__patterns.xml.read_match();
            if (b) {
                for(var S = b[2].replace(/^{\s+/, "{").replace(/\s+}$/, "}"), P = S.indexOf("{") === 0, w = 0; b;){
                    var G = !!b[1], k = b[2], Y = !!b[b.length - 1] || k.slice(0, 8) === "![CDATA[";
                    if (!Y && (k === S || P && k.replace(/^{\s+/, "{").replace(/\s+}$/, "}")) && (G ? --w : ++w), g += b[0], w <= 0) break;
                    b = this.__patterns.xml.read_match();
                }
                return b || (g += this._input.match(/[\s\S]*/g)[0]), g = g.replace(s.allLineBreaks, `
`), this._create_token(l.STRING, g);
            }
        }
        return null;
    };
    function I(T) {
        for(var N = "", g = 0, b = new e(T), S = null; b.hasNext();)if (S = b.match(/([\s]|[^\\]|\\\\)+/g), S && (N += S[0]), b.peek() === "\\") {
            if (b.next(), b.peek() === "x") S = b.match(/x([0-9A-Fa-f]{2})/g);
            else if (b.peek() === "u") S = b.match(/u([0-9A-Fa-f]{4})/g), S || (S = b.match(/u\{([0-9A-Fa-f]+)\}/g));
            else {
                N += "\\", b.hasNext() && (N += b.next());
                continue;
            }
            if (!S || (g = parseInt(S[1], 16), g > 126 && g <= 255 && S[0].indexOf("x") === 0)) return T;
            g >= 0 && g < 32 || g > 1114111 ? N += "\\" + S[0] : g === 34 || g === 39 || g === 92 ? N += "\\" + String.fromCharCode(g) : N += String.fromCharCode(g);
        }
        return N;
    }
    return h.prototype._read_string_recursive = function(T, N, g) {
        var b, S;
        T === "'" ? S = this.__patterns.single_quote : T === '"' ? S = this.__patterns.double_quote : T === "`" ? S = this.__patterns.template_text : T === "}" && (S = this.__patterns.template_expression);
        for(var P = S.read(), w = ""; this._input.hasNext();){
            if (w = this._input.next(), w === T || !N && s.newline.test(w)) {
                this._input.back();
                break;
            } else w === "\\" && this._input.hasNext() ? (b = this._input.peek(), b === "x" || b === "u" ? this.has_char_escapes = !0 : b === "\r" && this._input.peek(1) === `
` && this._input.next(), w += this._input.next()) : g && (g === "${" && w === "$" && this._input.peek() === "{" && (w += this._input.next()), g === w && (T === "`" ? w += this._read_string_recursive("}", N, "`") : w += this._read_string_recursive("`", N, "${"), this._input.hasNext() && (w += this._input.next())));
            w += S.read(), P += w;
        }
        return P;
    }, ca.Tokenizer = h, ca.TOKEN = l, ca.positionable_operators = A.slice(), ca.line_starters = O.slice(), ca;
}
var K1;
function ak() {
    if (K1) return Mf;
    K1 = 1;
    var e = LA().Output, t = Ug().Token, n = Fg(), r = Bg().Options, s = Kc().Tokenizer, i = Kc().line_starters, a = Kc().positionable_operators, o = Kc().TOKEN;
    function l(S, P) {
        return P.indexOf(S) !== -1;
    }
    function c(S) {
        return S.replace(/^\s+/g, "");
    }
    function u(S) {
        for(var P = {}, w = 0; w < S.length; w++)P[S[w].replace(/-/g, "_")] = S[w];
        return P;
    }
    function E(S, P) {
        return S && S.type === o.RESERVED && S.text === P;
    }
    function p(S, P) {
        return S && S.type === o.RESERVED && l(S.text, P);
    }
    var A = [
        "case",
        "return",
        "do",
        "if",
        "throw",
        "else",
        "await",
        "break",
        "continue",
        "async"
    ], R = [
        "before-newline",
        "after-newline",
        "preserve-newline"
    ], C = u(R), O = [
        C.before_newline,
        C.preserve_newline
    ], d = {
        BlockStatement: "BlockStatement",
        // 'BLOCK'
        Statement: "Statement",
        // 'STATEMENT'
        ObjectLiteral: "ObjectLiteral",
        // 'OBJECT',
        ArrayLiteral: "ArrayLiteral",
        //'[EXPRESSION]',
        ForInitializer: "ForInitializer",
        //'(FOR-EXPRESSION)',
        Conditional: "Conditional",
        //'(COND-EXPRESSION)',
        Expression: "Expression"
    };
    function f(S, P) {
        P.multiline_frame || P.mode === d.ForInitializer || P.mode === d.Conditional || S.remove_indent(P.start_line_index);
    }
    function _(S) {
        S = S.replace(n.allLineBreaks, `
`);
        for(var P = [], w = S.indexOf(`
`); w !== -1;)P.push(S.substring(0, w)), S = S.substring(w + 1), w = S.indexOf(`
`);
        return S.length && P.push(S), P;
    }
    function h(S) {
        return S === d.ArrayLiteral;
    }
    function I(S) {
        return l(S, [
            d.Expression,
            d.ForInitializer,
            d.Conditional
        ]);
    }
    function T(S, P) {
        for(var w = 0; w < S.length; w++){
            var G = S[w].trim();
            if (G.charAt(0) !== P) return !1;
        }
        return !0;
    }
    function N(S, P) {
        for(var w = 0, G = S.length, k; w < G; w++)if (k = S[w], k && k.indexOf(P) !== 0) return !1;
        return !0;
    }
    function g(S, P) {
        P = P || {}, this._source_text = S || "", this._output = null, this._tokens = null, this._last_last_text = null, this._flags = null, this._previous_flags = null, this._flag_store = null, this._options = new r(P);
    }
    g.prototype.create_flags = function(S, P) {
        var w = 0;
        S && (w = S.indentation_level, !this._output.just_added_newline() && S.line_indent_level > w && (w = S.line_indent_level));
        var G = {
            mode: P,
            parent: S,
            last_token: S ? S.last_token : new t(o.START_BLOCK, ""),
            // last token text
            last_word: S ? S.last_word : "",
            // last TOKEN.WORD passed
            declaration_statement: !1,
            declaration_assignment: !1,
            multiline_frame: !1,
            inline_frame: !1,
            if_block: !1,
            else_block: !1,
            class_start_block: !1,
            // class A { INSIDE HERE } or class B extends C { INSIDE HERE }
            do_block: !1,
            do_while: !1,
            import_block: !1,
            in_case_statement: !1,
            // switch(..){ INSIDE HERE }
            in_case: !1,
            // we're on the exact line with "case 0:"
            case_body: !1,
            // the indented case-action block
            case_block: !1,
            // the indented case-action block is wrapped with {}
            indentation_level: w,
            alignment: 0,
            line_indent_level: S ? S.line_indent_level : w,
            start_line_index: this._output.get_line_number(),
            ternary_depth: 0
        };
        return G;
    }, g.prototype._reset = function(S) {
        var P = S.match(/^[\t ]*/)[0];
        this._last_last_text = "", this._output = new e(this._options, P), this._output.raw = this._options.test_output_raw, this._flag_store = [], this.set_mode(d.BlockStatement);
        var w = new s(S, this._options);
        return this._tokens = w.tokenize(), S;
    }, g.prototype.beautify = function() {
        if (this._options.disabled) return this._source_text;
        var S, P = this._reset(this._source_text), w = this._options.eol;
        this._options.eol === "auto" && (w = `
`, P && n.lineBreak.test(P || "") && (w = P.match(n.lineBreak)[0]));
        for(var G = this._tokens.next(); G;)this.handle_token(G), this._last_last_text = this._flags.last_token.text, this._flags.last_token = G, G = this._tokens.next();
        return S = this._output.get_code(w), S;
    }, g.prototype.handle_token = function(S, P) {
        S.type === o.START_EXPR ? this.handle_start_expr(S) : S.type === o.END_EXPR ? this.handle_end_expr(S) : S.type === o.START_BLOCK ? this.handle_start_block(S) : S.type === o.END_BLOCK ? this.handle_end_block(S) : S.type === o.WORD ? this.handle_word(S) : S.type === o.RESERVED ? this.handle_word(S) : S.type === o.SEMICOLON ? this.handle_semicolon(S) : S.type === o.STRING ? this.handle_string(S) : S.type === o.EQUALS ? this.handle_equals(S) : S.type === o.OPERATOR ? this.handle_operator(S) : S.type === o.COMMA ? this.handle_comma(S) : S.type === o.BLOCK_COMMENT ? this.handle_block_comment(S, P) : S.type === o.COMMENT ? this.handle_comment(S, P) : S.type === o.DOT ? this.handle_dot(S) : S.type === o.EOF ? this.handle_eof(S) : S.type === o.UNKNOWN ? this.handle_unknown(S, P) : this.handle_unknown(S, P);
    }, g.prototype.handle_whitespace_and_comments = function(S, P) {
        var w = S.newlines, G = this._options.keep_array_indentation && h(this._flags.mode);
        if (S.comments_before) for(var k = S.comments_before.next(); k;)this.handle_whitespace_and_comments(k, P), this.handle_token(k, P), k = S.comments_before.next();
        if (G) for(var Y = 0; Y < w; Y += 1)this.print_newline(Y > 0, P);
        else if (this._options.max_preserve_newlines && w > this._options.max_preserve_newlines && (w = this._options.max_preserve_newlines), this._options.preserve_newlines && w > 1) {
            this.print_newline(!1, P);
            for(var H = 1; H < w; H += 1)this.print_newline(!0, P);
        }
    };
    var b = [
        "async",
        "break",
        "continue",
        "return",
        "throw",
        "yield"
    ];
    return g.prototype.allow_wrap_or_preserved_newline = function(S, P) {
        if (P = P === void 0 ? !1 : P, !this._output.just_added_newline()) {
            var w = this._options.preserve_newlines && S.newlines || P, G = l(this._flags.last_token.text, a) || l(S.text, a);
            if (G) {
                var k = l(this._flags.last_token.text, a) && l(this._options.operator_position, O) || l(S.text, a);
                w = w && k;
            }
            if (w) this.print_newline(!1, !0);
            else if (this._options.wrap_line_length) {
                if (p(this._flags.last_token, b)) return;
                this._output.set_wrap_point();
            }
        }
    }, g.prototype.print_newline = function(S, P) {
        if (!P && this._flags.last_token.text !== ";" && this._flags.last_token.text !== "," && this._flags.last_token.text !== "=" && (this._flags.last_token.type !== o.OPERATOR || this._flags.last_token.text === "--" || this._flags.last_token.text === "++")) for(var w = this._tokens.peek(); this._flags.mode === d.Statement && !(this._flags.if_block && E(w, "else")) && !this._flags.do_block;)this.restore_mode();
        this._output.add_new_line(S) && (this._flags.multiline_frame = !0);
    }, g.prototype.print_token_line_indentation = function(S) {
        this._output.just_added_newline() && (this._options.keep_array_indentation && S.newlines && (S.text === "[" || h(this._flags.mode)) ? (this._output.current_line.set_indent(-1), this._output.current_line.push(S.whitespace_before), this._output.space_before_token = !1) : this._output.set_indent(this._flags.indentation_level, this._flags.alignment) && (this._flags.line_indent_level = this._flags.indentation_level));
    }, g.prototype.print_token = function(S) {
        if (this._output.raw) {
            this._output.add_raw_token(S);
            return;
        }
        if (this._options.comma_first && S.previous && S.previous.type === o.COMMA && this._output.just_added_newline() && this._output.previous_line.last() === ",") {
            var P = this._output.previous_line.pop();
            this._output.previous_line.is_empty() && (this._output.previous_line.push(P), this._output.trim(!0), this._output.current_line.pop(), this._output.trim()), this.print_token_line_indentation(S), this._output.add_token(","), this._output.space_before_token = !0;
        }
        this.print_token_line_indentation(S), this._output.non_breaking_space = !0, this._output.add_token(S.text), this._output.previous_token_wrapped && (this._flags.multiline_frame = !0);
    }, g.prototype.indent = function() {
        this._flags.indentation_level += 1, this._output.set_indent(this._flags.indentation_level, this._flags.alignment);
    }, g.prototype.deindent = function() {
        this._flags.indentation_level > 0 && (!this._flags.parent || this._flags.indentation_level > this._flags.parent.indentation_level) && (this._flags.indentation_level -= 1, this._output.set_indent(this._flags.indentation_level, this._flags.alignment));
    }, g.prototype.set_mode = function(S) {
        this._flags ? (this._flag_store.push(this._flags), this._previous_flags = this._flags) : this._previous_flags = this.create_flags(null, S), this._flags = this.create_flags(this._previous_flags, S), this._output.set_indent(this._flags.indentation_level, this._flags.alignment);
    }, g.prototype.restore_mode = function() {
        this._flag_store.length > 0 && (this._previous_flags = this._flags, this._flags = this._flag_store.pop(), this._previous_flags.mode === d.Statement && f(this._output, this._previous_flags), this._output.set_indent(this._flags.indentation_level, this._flags.alignment));
    }, g.prototype.start_of_object_property = function() {
        return this._flags.parent.mode === d.ObjectLiteral && this._flags.mode === d.Statement && (this._flags.last_token.text === ":" && this._flags.ternary_depth === 0 || p(this._flags.last_token, [
            "get",
            "set"
        ]));
    }, g.prototype.start_of_statement = function(S) {
        var P = !1;
        return P = P || p(this._flags.last_token, [
            "var",
            "let",
            "const"
        ]) && S.type === o.WORD, P = P || E(this._flags.last_token, "do"), P = P || !(this._flags.parent.mode === d.ObjectLiteral && this._flags.mode === d.Statement) && p(this._flags.last_token, b) && !S.newlines, P = P || E(this._flags.last_token, "else") && !(E(S, "if") && !S.comments_before), P = P || this._flags.last_token.type === o.END_EXPR && (this._previous_flags.mode === d.ForInitializer || this._previous_flags.mode === d.Conditional), P = P || this._flags.last_token.type === o.WORD && this._flags.mode === d.BlockStatement && !this._flags.in_case && !(S.text === "--" || S.text === "++") && this._last_last_text !== "function" && S.type !== o.WORD && S.type !== o.RESERVED, P = P || this._flags.mode === d.ObjectLiteral && (this._flags.last_token.text === ":" && this._flags.ternary_depth === 0 || p(this._flags.last_token, [
            "get",
            "set"
        ])), P ? (this.set_mode(d.Statement), this.indent(), this.handle_whitespace_and_comments(S, !0), this.start_of_object_property() || this.allow_wrap_or_preserved_newline(S, p(S, [
            "do",
            "for",
            "if",
            "while"
        ])), !0) : !1;
    }, g.prototype.handle_start_expr = function(S) {
        this.start_of_statement(S) || this.handle_whitespace_and_comments(S);
        var P = d.Expression;
        if (S.text === "[") {
            if (this._flags.last_token.type === o.WORD || this._flags.last_token.text === ")") {
                p(this._flags.last_token, i) && (this._output.space_before_token = !0), this.print_token(S), this.set_mode(P), this.indent(), this._options.space_in_paren && (this._output.space_before_token = !0);
                return;
            }
            P = d.ArrayLiteral, h(this._flags.mode) && (this._flags.last_token.text === "[" || this._flags.last_token.text === "," && (this._last_last_text === "]" || this._last_last_text === "}")) && (this._options.keep_array_indentation || this.print_newline()), l(this._flags.last_token.type, [
                o.START_EXPR,
                o.END_EXPR,
                o.WORD,
                o.OPERATOR,
                o.DOT
            ]) || (this._output.space_before_token = !0);
        } else {
            if (this._flags.last_token.type === o.RESERVED) this._flags.last_token.text === "for" ? (this._output.space_before_token = this._options.space_before_conditional, P = d.ForInitializer) : l(this._flags.last_token.text, [
                "if",
                "while",
                "switch"
            ]) ? (this._output.space_before_token = this._options.space_before_conditional, P = d.Conditional) : l(this._flags.last_word, [
                "await",
                "async"
            ]) ? this._output.space_before_token = !0 : this._flags.last_token.text === "import" && S.whitespace_before === "" ? this._output.space_before_token = !1 : (l(this._flags.last_token.text, i) || this._flags.last_token.text === "catch") && (this._output.space_before_token = !0);
            else if (this._flags.last_token.type === o.EQUALS || this._flags.last_token.type === o.OPERATOR) this.start_of_object_property() || this.allow_wrap_or_preserved_newline(S);
            else if (this._flags.last_token.type === o.WORD) {
                this._output.space_before_token = !1;
                var w = this._tokens.peek(-3);
                if (this._options.space_after_named_function && w) {
                    var G = this._tokens.peek(-4);
                    p(w, [
                        "async",
                        "function"
                    ]) || w.text === "*" && p(G, [
                        "async",
                        "function"
                    ]) ? this._output.space_before_token = !0 : this._flags.mode === d.ObjectLiteral ? (w.text === "{" || w.text === "," || w.text === "*" && (G.text === "{" || G.text === ",")) && (this._output.space_before_token = !0) : this._flags.parent && this._flags.parent.class_start_block && (this._output.space_before_token = !0);
                }
            } else this.allow_wrap_or_preserved_newline(S);
            (this._flags.last_token.type === o.RESERVED && (this._flags.last_word === "function" || this._flags.last_word === "typeof") || this._flags.last_token.text === "*" && (l(this._last_last_text, [
                "function",
                "yield"
            ]) || this._flags.mode === d.ObjectLiteral && l(this._last_last_text, [
                "{",
                ","
            ]))) && (this._output.space_before_token = this._options.space_after_anon_function);
        }
        this._flags.last_token.text === ";" || this._flags.last_token.type === o.START_BLOCK ? this.print_newline() : (this._flags.last_token.type === o.END_EXPR || this._flags.last_token.type === o.START_EXPR || this._flags.last_token.type === o.END_BLOCK || this._flags.last_token.text === "." || this._flags.last_token.type === o.COMMA) && this.allow_wrap_or_preserved_newline(S, S.newlines), this.print_token(S), this.set_mode(P), this._options.space_in_paren && (this._output.space_before_token = !0), this.indent();
    }, g.prototype.handle_end_expr = function(S) {
        for(; this._flags.mode === d.Statement;)this.restore_mode();
        this.handle_whitespace_and_comments(S), this._flags.multiline_frame && this.allow_wrap_or_preserved_newline(S, S.text === "]" && h(this._flags.mode) && !this._options.keep_array_indentation), this._options.space_in_paren && (this._flags.last_token.type === o.START_EXPR && !this._options.space_in_empty_paren ? (this._output.trim(), this._output.space_before_token = !1) : this._output.space_before_token = !0), this.deindent(), this.print_token(S), this.restore_mode(), f(this._output, this._previous_flags), this._flags.do_while && this._previous_flags.mode === d.Conditional && (this._previous_flags.mode = d.Expression, this._flags.do_block = !1, this._flags.do_while = !1);
    }, g.prototype.handle_start_block = function(S) {
        this.handle_whitespace_and_comments(S);
        var P = this._tokens.peek(), w = this._tokens.peek(1);
        this._flags.last_word === "switch" && this._flags.last_token.type === o.END_EXPR ? (this.set_mode(d.BlockStatement), this._flags.in_case_statement = !0) : this._flags.case_body ? this.set_mode(d.BlockStatement) : w && (l(w.text, [
            ":",
            ","
        ]) && l(P.type, [
            o.STRING,
            o.WORD,
            o.RESERVED
        ]) || l(P.text, [
            "get",
            "set",
            "..."
        ]) && l(w.type, [
            o.WORD,
            o.RESERVED
        ])) ? l(this._last_last_text, [
            "class",
            "interface"
        ]) && !l(w.text, [
            ":",
            ","
        ]) ? this.set_mode(d.BlockStatement) : this.set_mode(d.ObjectLiteral) : this._flags.last_token.type === o.OPERATOR && this._flags.last_token.text === "=>" ? this.set_mode(d.BlockStatement) : l(this._flags.last_token.type, [
            o.EQUALS,
            o.START_EXPR,
            o.COMMA,
            o.OPERATOR
        ]) || p(this._flags.last_token, [
            "return",
            "throw",
            "import",
            "default"
        ]) ? this.set_mode(d.ObjectLiteral) : this.set_mode(d.BlockStatement), this._flags.last_token && p(this._flags.last_token.previous, [
            "class",
            "extends"
        ]) && (this._flags.class_start_block = !0);
        var G = !P.comments_before && P.text === "}", k = G && this._flags.last_word === "function" && this._flags.last_token.type === o.END_EXPR;
        if (this._options.brace_preserve_inline) {
            var Y = 0, H = null;
            this._flags.inline_frame = !0;
            do if (Y += 1, H = this._tokens.peek(Y - 1), H.newlines) {
                this._flags.inline_frame = !1;
                break;
            }
            while (H.type !== o.EOF && !(H.type === o.END_BLOCK && H.opened === S))
        }
        (this._options.brace_style === "expand" || this._options.brace_style === "none" && S.newlines) && !this._flags.inline_frame ? this._flags.last_token.type !== o.OPERATOR && (k || this._flags.last_token.type === o.EQUALS || p(this._flags.last_token, A) && this._flags.last_token.text !== "else") ? this._output.space_before_token = !0 : this.print_newline(!1, !0) : (h(this._previous_flags.mode) && (this._flags.last_token.type === o.START_EXPR || this._flags.last_token.type === o.COMMA) && ((this._flags.last_token.type === o.COMMA || this._options.space_in_paren) && (this._output.space_before_token = !0), (this._flags.last_token.type === o.COMMA || this._flags.last_token.type === o.START_EXPR && this._flags.inline_frame) && (this.allow_wrap_or_preserved_newline(S), this._previous_flags.multiline_frame = this._previous_flags.multiline_frame || this._flags.multiline_frame, this._flags.multiline_frame = !1)), this._flags.last_token.type !== o.OPERATOR && this._flags.last_token.type !== o.START_EXPR && (l(this._flags.last_token.type, [
            o.START_BLOCK,
            o.SEMICOLON
        ]) && !this._flags.inline_frame ? this.print_newline() : this._output.space_before_token = !0)), this.print_token(S), this.indent(), !G && !(this._options.brace_preserve_inline && this._flags.inline_frame) && this.print_newline();
    }, g.prototype.handle_end_block = function(S) {
        for(this.handle_whitespace_and_comments(S); this._flags.mode === d.Statement;)this.restore_mode();
        var P = this._flags.last_token.type === o.START_BLOCK;
        this._flags.inline_frame && !P ? this._output.space_before_token = !0 : this._options.brace_style === "expand" ? P || this.print_newline() : P || (h(this._flags.mode) && this._options.keep_array_indentation ? (this._options.keep_array_indentation = !1, this.print_newline(), this._options.keep_array_indentation = !0) : this.print_newline()), this.restore_mode(), this.print_token(S);
    }, g.prototype.handle_word = function(S) {
        if (S.type === o.RESERVED) {
            if (l(S.text, [
                "set",
                "get"
            ]) && this._flags.mode !== d.ObjectLiteral) S.type = o.WORD;
            else if (S.text === "import" && l(this._tokens.peek().text, [
                "(",
                "."
            ])) S.type = o.WORD;
            else if (l(S.text, [
                "as",
                "from"
            ]) && !this._flags.import_block) S.type = o.WORD;
            else if (this._flags.mode === d.ObjectLiteral) {
                var P = this._tokens.peek();
                P.text === ":" && (S.type = o.WORD);
            }
        }
        if (this.start_of_statement(S) ? p(this._flags.last_token, [
            "var",
            "let",
            "const"
        ]) && S.type === o.WORD && (this._flags.declaration_statement = !0) : S.newlines && !I(this._flags.mode) && (this._flags.last_token.type !== o.OPERATOR || this._flags.last_token.text === "--" || this._flags.last_token.text === "++") && this._flags.last_token.type !== o.EQUALS && (this._options.preserve_newlines || !p(this._flags.last_token, [
            "var",
            "let",
            "const",
            "set",
            "get"
        ])) ? (this.handle_whitespace_and_comments(S), this.print_newline()) : this.handle_whitespace_and_comments(S), this._flags.do_block && !this._flags.do_while) if (E(S, "while")) {
            this._output.space_before_token = !0, this.print_token(S), this._output.space_before_token = !0, this._flags.do_while = !0;
            return;
        } else this.print_newline(), this._flags.do_block = !1;
        if (this._flags.if_block) if (!this._flags.else_block && E(S, "else")) this._flags.else_block = !0;
        else {
            for(; this._flags.mode === d.Statement;)this.restore_mode();
            this._flags.if_block = !1, this._flags.else_block = !1;
        }
        if (this._flags.in_case_statement && p(S, [
            "case",
            "default"
        ])) {
            this.print_newline(), !this._flags.case_block && (this._flags.case_body || this._options.jslint_happy) && this.deindent(), this._flags.case_body = !1, this.print_token(S), this._flags.in_case = !0;
            return;
        }
        if ((this._flags.last_token.type === o.COMMA || this._flags.last_token.type === o.START_EXPR || this._flags.last_token.type === o.EQUALS || this._flags.last_token.type === o.OPERATOR) && !this.start_of_object_property() && !(l(this._flags.last_token.text, [
            "+",
            "-"
        ]) && this._last_last_text === ":" && this._flags.parent.mode === d.ObjectLiteral) && this.allow_wrap_or_preserved_newline(S), E(S, "function")) {
            (l(this._flags.last_token.text, [
                "}",
                ";"
            ]) || this._output.just_added_newline() && !(l(this._flags.last_token.text, [
                "(",
                "[",
                "{",
                ":",
                "=",
                ","
            ]) || this._flags.last_token.type === o.OPERATOR)) && !this._output.just_added_blankline() && !S.comments_before && (this.print_newline(), this.print_newline(!0)), this._flags.last_token.type === o.RESERVED || this._flags.last_token.type === o.WORD ? p(this._flags.last_token, [
                "get",
                "set",
                "new",
                "export"
            ]) || p(this._flags.last_token, b) ? this._output.space_before_token = !0 : E(this._flags.last_token, "default") && this._last_last_text === "export" ? this._output.space_before_token = !0 : this._flags.last_token.text === "declare" ? this._output.space_before_token = !0 : this.print_newline() : this._flags.last_token.type === o.OPERATOR || this._flags.last_token.text === "=" ? this._output.space_before_token = !0 : !this._flags.multiline_frame && (I(this._flags.mode) || h(this._flags.mode)) || this.print_newline(), this.print_token(S), this._flags.last_word = S.text;
            return;
        }
        var w = "NONE";
        if (this._flags.last_token.type === o.END_BLOCK ? this._previous_flags.inline_frame ? w = "SPACE" : p(S, [
            "else",
            "catch",
            "finally",
            "from"
        ]) ? this._options.brace_style === "expand" || this._options.brace_style === "end-expand" || this._options.brace_style === "none" && S.newlines ? w = "NEWLINE" : (w = "SPACE", this._output.space_before_token = !0) : w = "NEWLINE" : this._flags.last_token.type === o.SEMICOLON && this._flags.mode === d.BlockStatement ? w = "NEWLINE" : this._flags.last_token.type === o.SEMICOLON && I(this._flags.mode) ? w = "SPACE" : this._flags.last_token.type === o.STRING ? w = "NEWLINE" : this._flags.last_token.type === o.RESERVED || this._flags.last_token.type === o.WORD || this._flags.last_token.text === "*" && (l(this._last_last_text, [
            "function",
            "yield"
        ]) || this._flags.mode === d.ObjectLiteral && l(this._last_last_text, [
            "{",
            ","
        ])) ? w = "SPACE" : this._flags.last_token.type === o.START_BLOCK ? this._flags.inline_frame ? w = "SPACE" : w = "NEWLINE" : this._flags.last_token.type === o.END_EXPR && (this._output.space_before_token = !0, w = "NEWLINE"), p(S, i) && this._flags.last_token.text !== ")" && (this._flags.inline_frame || this._flags.last_token.text === "else" || this._flags.last_token.text === "export" ? w = "SPACE" : w = "NEWLINE"), p(S, [
            "else",
            "catch",
            "finally"
        ])) if ((!(this._flags.last_token.type === o.END_BLOCK && this._previous_flags.mode === d.BlockStatement) || this._options.brace_style === "expand" || this._options.brace_style === "end-expand" || this._options.brace_style === "none" && S.newlines) && !this._flags.inline_frame) this.print_newline();
        else {
            this._output.trim(!0);
            var G = this._output.current_line;
            G.last() !== "}" && this.print_newline(), this._output.space_before_token = !0;
        }
        else w === "NEWLINE" ? p(this._flags.last_token, A) ? this._output.space_before_token = !0 : this._flags.last_token.text === "declare" && p(S, [
            "var",
            "let",
            "const"
        ]) ? this._output.space_before_token = !0 : this._flags.last_token.type !== o.END_EXPR ? (this._flags.last_token.type !== o.START_EXPR || !p(S, [
            "var",
            "let",
            "const"
        ])) && this._flags.last_token.text !== ":" && (E(S, "if") && E(S.previous, "else") ? this._output.space_before_token = !0 : this.print_newline()) : p(S, i) && this._flags.last_token.text !== ")" && this.print_newline() : this._flags.multiline_frame && h(this._flags.mode) && this._flags.last_token.text === "," && this._last_last_text === "}" ? this.print_newline() : w === "SPACE" && (this._output.space_before_token = !0);
        S.previous && (S.previous.type === o.WORD || S.previous.type === o.RESERVED) && (this._output.space_before_token = !0), this.print_token(S), this._flags.last_word = S.text, S.type === o.RESERVED && (S.text === "do" ? this._flags.do_block = !0 : S.text === "if" ? this._flags.if_block = !0 : S.text === "import" ? this._flags.import_block = !0 : this._flags.import_block && E(S, "from") && (this._flags.import_block = !1));
    }, g.prototype.handle_semicolon = function(S) {
        this.start_of_statement(S) ? this._output.space_before_token = !1 : this.handle_whitespace_and_comments(S);
        for(var P = this._tokens.peek(); this._flags.mode === d.Statement && !(this._flags.if_block && E(P, "else")) && !this._flags.do_block;)this.restore_mode();
        this._flags.import_block && (this._flags.import_block = !1), this.print_token(S);
    }, g.prototype.handle_string = function(S) {
        S.text.startsWith("`") && S.newlines === 0 && S.whitespace_before === "" && (S.previous.text === ")" || this._flags.last_token.type === o.WORD) || (this.start_of_statement(S) ? this._output.space_before_token = !0 : (this.handle_whitespace_and_comments(S), this._flags.last_token.type === o.RESERVED || this._flags.last_token.type === o.WORD || this._flags.inline_frame ? this._output.space_before_token = !0 : this._flags.last_token.type === o.COMMA || this._flags.last_token.type === o.START_EXPR || this._flags.last_token.type === o.EQUALS || this._flags.last_token.type === o.OPERATOR ? this.start_of_object_property() || this.allow_wrap_or_preserved_newline(S) : S.text.startsWith("`") && this._flags.last_token.type === o.END_EXPR && (S.previous.text === "]" || S.previous.text === ")") && S.newlines === 0 ? this._output.space_before_token = !0 : this.print_newline())), this.print_token(S);
    }, g.prototype.handle_equals = function(S) {
        this.start_of_statement(S) || this.handle_whitespace_and_comments(S), this._flags.declaration_statement && (this._flags.declaration_assignment = !0), this._output.space_before_token = !0, this.print_token(S), this._output.space_before_token = !0;
    }, g.prototype.handle_comma = function(S) {
        this.handle_whitespace_and_comments(S, !0), this.print_token(S), this._output.space_before_token = !0, this._flags.declaration_statement ? (I(this._flags.parent.mode) && (this._flags.declaration_assignment = !1), this._flags.declaration_assignment ? (this._flags.declaration_assignment = !1, this.print_newline(!1, !0)) : this._options.comma_first && this.allow_wrap_or_preserved_newline(S)) : this._flags.mode === d.ObjectLiteral || this._flags.mode === d.Statement && this._flags.parent.mode === d.ObjectLiteral ? (this._flags.mode === d.Statement && this.restore_mode(), this._flags.inline_frame || this.print_newline()) : this._options.comma_first && this.allow_wrap_or_preserved_newline(S);
    }, g.prototype.handle_operator = function(S) {
        var P = S.text === "*" && (p(this._flags.last_token, [
            "function",
            "yield"
        ]) || l(this._flags.last_token.type, [
            o.START_BLOCK,
            o.COMMA,
            o.END_BLOCK,
            o.SEMICOLON
        ])), w = l(S.text, [
            "-",
            "+"
        ]) && (l(this._flags.last_token.type, [
            o.START_BLOCK,
            o.START_EXPR,
            o.EQUALS,
            o.OPERATOR
        ]) || l(this._flags.last_token.text, i) || this._flags.last_token.text === ",");
        if (!this.start_of_statement(S)) {
            var G = !P;
            this.handle_whitespace_and_comments(S, G);
        }
        if (S.text === "*" && this._flags.last_token.type === o.DOT) {
            this.print_token(S);
            return;
        }
        if (S.text === "::") {
            this.print_token(S);
            return;
        }
        if (l(S.text, [
            "-",
            "+"
        ]) && this.start_of_object_property()) {
            this.print_token(S);
            return;
        }
        if (this._flags.last_token.type === o.OPERATOR && l(this._options.operator_position, O) && this.allow_wrap_or_preserved_newline(S), S.text === ":" && this._flags.in_case) {
            this.print_token(S), this._flags.in_case = !1, this._flags.case_body = !0, this._tokens.peek().type !== o.START_BLOCK ? (this.indent(), this.print_newline(), this._flags.case_block = !1) : (this._flags.case_block = !0, this._output.space_before_token = !0);
            return;
        }
        var k = !0, Y = !0, H = !1;
        if (S.text === ":" ? this._flags.ternary_depth === 0 ? k = !1 : (this._flags.ternary_depth -= 1, H = !0) : S.text === "?" && (this._flags.ternary_depth += 1), !w && !P && this._options.preserve_newlines && l(S.text, a)) {
            var F = S.text === ":", x = F && H, X = F && !H;
            switch(this._options.operator_position){
                case C.before_newline:
                    this._output.space_before_token = !X, this.print_token(S), (!F || x) && this.allow_wrap_or_preserved_newline(S), this._output.space_before_token = !0;
                    return;
                case C.after_newline:
                    this._output.space_before_token = !0, !F || x ? this._tokens.peek().newlines ? this.print_newline(!1, !0) : this.allow_wrap_or_preserved_newline(S) : this._output.space_before_token = !1, this.print_token(S), this._output.space_before_token = !0;
                    return;
                case C.preserve_newline:
                    X || this.allow_wrap_or_preserved_newline(S), k = !(this._output.just_added_newline() || X), this._output.space_before_token = k, this.print_token(S), this._output.space_before_token = !0;
                    return;
            }
        }
        if (P) {
            this.allow_wrap_or_preserved_newline(S), k = !1;
            var J = this._tokens.peek();
            Y = J && l(J.type, [
                o.WORD,
                o.RESERVED
            ]);
        } else if (S.text === "...") this.allow_wrap_or_preserved_newline(S), k = this._flags.last_token.type === o.START_BLOCK, Y = !1;
        else if (l(S.text, [
            "--",
            "++",
            "!",
            "~"
        ]) || w) {
            if ((this._flags.last_token.type === o.COMMA || this._flags.last_token.type === o.START_EXPR) && this.allow_wrap_or_preserved_newline(S), k = !1, Y = !1, S.newlines && (S.text === "--" || S.text === "++" || S.text === "~")) {
                var le = p(this._flags.last_token, A) && S.newlines;
                le && (this._previous_flags.if_block || this._previous_flags.else_block) && this.restore_mode(), this.print_newline(le, !0);
            }
            this._flags.last_token.text === ";" && I(this._flags.mode) && (k = !0), this._flags.last_token.type === o.RESERVED ? k = !0 : this._flags.last_token.type === o.END_EXPR ? k = !(this._flags.last_token.text === "]" && (S.text === "--" || S.text === "++")) : this._flags.last_token.type === o.OPERATOR && (k = l(S.text, [
                "--",
                "-",
                "++",
                "+"
            ]) && l(this._flags.last_token.text, [
                "--",
                "-",
                "++",
                "+"
            ]), l(S.text, [
                "+",
                "-"
            ]) && l(this._flags.last_token.text, [
                "--",
                "++"
            ]) && (Y = !0)), (this._flags.mode === d.BlockStatement && !this._flags.inline_frame || this._flags.mode === d.Statement) && (this._flags.last_token.text === "{" || this._flags.last_token.text === ";") && this.print_newline();
        }
        this._output.space_before_token = this._output.space_before_token || k, this.print_token(S), this._output.space_before_token = Y;
    }, g.prototype.handle_block_comment = function(S, P) {
        if (this._output.raw) {
            this._output.add_raw_token(S), S.directives && S.directives.preserve === "end" && (this._output.raw = this._options.test_output_raw);
            return;
        }
        if (S.directives) {
            this.print_newline(!1, P), this.print_token(S), S.directives.preserve === "start" && (this._output.raw = !0), this.print_newline(!1, !0);
            return;
        }
        if (!n.newline.test(S.text) && !S.newlines) {
            this._output.space_before_token = !0, this.print_token(S), this._output.space_before_token = !0;
            return;
        } else this.print_block_commment(S, P);
    }, g.prototype.print_block_commment = function(S, P) {
        var w = _(S.text), G, k = !1, Y = !1, H = S.whitespace_before, F = H.length;
        if (this.print_newline(!1, P), this.print_token_line_indentation(S), this._output.add_token(w[0]), this.print_newline(!1, P), w.length > 1) {
            for(w = w.slice(1), k = T(w, "*"), Y = N(w, H), k && (this._flags.alignment = 1), G = 0; G < w.length; G++)k ? (this.print_token_line_indentation(S), this._output.add_token(c(w[G]))) : Y && w[G] ? (this.print_token_line_indentation(S), this._output.add_token(w[G].substring(F))) : (this._output.current_line.set_indent(-1), this._output.add_token(w[G])), this.print_newline(!1, P);
            this._flags.alignment = 0;
        }
    }, g.prototype.handle_comment = function(S, P) {
        S.newlines ? this.print_newline(!1, P) : this._output.trim(!0), this._output.space_before_token = !0, this.print_token(S), this.print_newline(!1, P);
    }, g.prototype.handle_dot = function(S) {
        this.start_of_statement(S) || this.handle_whitespace_and_comments(S, !0), this._flags.last_token.text.match("^[0-9]+$") && (this._output.space_before_token = !0), p(this._flags.last_token, A) ? this._output.space_before_token = !1 : this.allow_wrap_or_preserved_newline(S, this._flags.last_token.text === ")" && this._options.break_chained_methods), this._options.unindent_chained_methods && this._output.just_added_newline() && this.deindent(), this.print_token(S);
    }, g.prototype.handle_unknown = function(S, P) {
        this.print_token(S), S.text[S.text.length - 1] === `
` && this.print_newline(!1, P);
    }, g.prototype.handle_eof = function(S) {
        for(; this._flags.mode === d.Statement;)this.restore_mode();
        this.handle_whitespace_and_comments(S);
    }, Mf.Beautifier = g, Mf;
}
var z1;
function ok() {
    if (z1) return jc.exports;
    z1 = 1;
    var e = ak().Beautifier, t = Bg().Options;
    function n(r, s) {
        var i = new e(r, s);
        return i.beautify();
    }
    return jc.exports = n, jc.exports.defaultOptions = function() {
        return new t();
    }, jc.exports;
}
var zc = {
    exports: {}
}, Vf = {}, Wf = {}, J1;
function kg() {
    if (J1) return Wf;
    J1 = 1;
    var e = yA().Options;
    function t(n) {
        e.call(this, n, "css"), this.selector_separator_newline = this._get_boolean("selector_separator_newline", !0), this.newline_between_rules = this._get_boolean("newline_between_rules", !0);
        var r = this._get_boolean("space_around_selector_separator");
        this.space_around_combinator = this._get_boolean("space_around_combinator") || r;
        var s = this._get_selection_list("brace_style", [
            "collapse",
            "expand",
            "end-expand",
            "none",
            "preserve-inline"
        ]);
        this.brace_style = "collapse";
        for(var i = 0; i < s.length; i++)s[i] !== "expand" ? this.brace_style = "collapse" : this.brace_style = s[i];
    }
    return t.prototype = new e(), Wf.Options = t, Wf;
}
var q1;
function lk() {
    if (q1) return Vf;
    q1 = 1;
    var e = kg().Options, t = LA().Output, n = vA().InputScanner, r = bA().Directives, s = new r(/\/\*/, /\*\//), i = /\r\n|[\r\n]/, a = /\r\n|[\r\n]/g, o = /\s/, l = /(?:\s|\n)+/g, c = /\/\*(?:[\s\S]*?)((?:\*\/)|$)/g, u = /\/\/(?:[^\n\r\u2028\u2029]*)/g;
    function E(p, A) {
        this._source_text = p || "", this._options = new e(A), this._ch = null, this._input = null, this.NESTED_AT_RULE = {
            page: !0,
            "font-face": !0,
            keyframes: !0,
            // also in CONDITIONAL_GROUP_RULE below
            media: !0,
            supports: !0,
            document: !0
        }, this.CONDITIONAL_GROUP_RULE = {
            media: !0,
            supports: !0,
            document: !0
        }, this.NON_SEMICOLON_NEWLINE_PROPERTY = [
            "grid-template-areas",
            "grid-template"
        ];
    }
    return E.prototype.eatString = function(p) {
        var A = "";
        for(this._ch = this._input.next(); this._ch;){
            if (A += this._ch, this._ch === "\\") A += this._input.next();
            else if (p.indexOf(this._ch) !== -1 || this._ch === `
`) break;
            this._ch = this._input.next();
        }
        return A;
    }, E.prototype.eatWhitespace = function(p) {
        for(var A = o.test(this._input.peek()), R = 0; o.test(this._input.peek());)this._ch = this._input.next(), p && this._ch === `
` && (R === 0 || R < this._options.max_preserve_newlines) && (R++, this._output.add_new_line(!0));
        return A;
    }, E.prototype.foundNestedPseudoClass = function() {
        for(var p = 0, A = 1, R = this._input.peek(A); R;){
            if (R === "{") return !0;
            if (R === "(") p += 1;
            else if (R === ")") {
                if (p === 0) return !1;
                p -= 1;
            } else if (R === ";" || R === "}") return !1;
            A++, R = this._input.peek(A);
        }
        return !1;
    }, E.prototype.print_string = function(p) {
        this._output.set_indent(this._indentLevel), this._output.non_breaking_space = !0, this._output.add_token(p);
    }, E.prototype.preserveSingleSpace = function(p) {
        p && (this._output.space_before_token = !0);
    }, E.prototype.indent = function() {
        this._indentLevel++;
    }, E.prototype.outdent = function() {
        this._indentLevel > 0 && this._indentLevel--;
    }, E.prototype.beautify = function() {
        if (this._options.disabled) return this._source_text;
        var p = this._source_text, A = this._options.eol;
        A === "auto" && (A = `
`, p && i.test(p || "") && (A = p.match(i)[0])), p = p.replace(a, `
`);
        var R = p.match(/^[\t ]*/)[0];
        this._output = new t(this._options, R), this._input = new n(p), this._indentLevel = 0, this._nestedLevel = 0, this._ch = null;
        for(var C = 0, O = !1, d = !1, f = !1, _ = !1, h = !1, I = this._ch, T = !1, N, g, b; N = this._input.read(l), g = N !== "", b = I, this._ch = this._input.next(), this._ch === "\\" && this._input.hasNext() && (this._ch += this._input.next()), I = this._ch, this._ch;)if (this._ch === "/" && this._input.peek() === "*") {
            this._output.add_new_line(), this._input.back();
            var S = this._input.read(c), P = s.get_directives(S);
            P && P.ignore === "start" && (S += s.readIgnored(this._input)), this.print_string(S), this.eatWhitespace(!0), this._output.add_new_line();
        } else if (this._ch === "/" && this._input.peek() === "/") this._output.space_before_token = !0, this._input.back(), this.print_string(this._input.read(u)), this.eatWhitespace(!0);
        else if (this._ch === "$") {
            this.preserveSingleSpace(g), this.print_string(this._ch);
            var w = this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);
            w.match(/[ :]$/) && (w = this.eatString(": ").replace(/\s+$/, ""), this.print_string(w), this._output.space_before_token = !0), C === 0 && w.indexOf(":") !== -1 && (d = !0, this.indent());
        } else if (this._ch === "@") if (this.preserveSingleSpace(g), this._input.peek() === "{") this.print_string(this._ch + this.eatString("}"));
        else {
            this.print_string(this._ch);
            var G = this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);
            G.match(/[ :]$/) && (G = this.eatString(": ").replace(/\s+$/, ""), this.print_string(G), this._output.space_before_token = !0), C === 0 && G.indexOf(":") !== -1 ? (d = !0, this.indent()) : G in this.NESTED_AT_RULE ? (this._nestedLevel += 1, G in this.CONDITIONAL_GROUP_RULE && (f = !0)) : C === 0 && !d && (_ = !0);
        }
        else if (this._ch === "#" && this._input.peek() === "{") this.preserveSingleSpace(g), this.print_string(this._ch + this.eatString("}"));
        else if (this._ch === "{") d && (d = !1, this.outdent()), _ = !1, f ? (f = !1, O = this._indentLevel >= this._nestedLevel) : O = this._indentLevel >= this._nestedLevel - 1, this._options.newline_between_rules && O && this._output.previous_line && this._output.previous_line.item(-1) !== "{" && this._output.ensure_empty_line_above("/", ","), this._output.space_before_token = !0, this._options.brace_style === "expand" ? (this._output.add_new_line(), this.print_string(this._ch), this.indent(), this._output.set_indent(this._indentLevel)) : (b === "(" ? this._output.space_before_token = !1 : b !== "," && this.indent(), this.print_string(this._ch)), this.eatWhitespace(!0), this._output.add_new_line();
        else if (this._ch === "}") this.outdent(), this._output.add_new_line(), b === "{" && this._output.trim(!0), d && (this.outdent(), d = !1), this.print_string(this._ch), O = !1, this._nestedLevel && this._nestedLevel--, this.eatWhitespace(!0), this._output.add_new_line(), this._options.newline_between_rules && !this._output.just_added_blankline() && this._input.peek() !== "}" && this._output.add_new_line(!0), this._input.peek() === ")" && (this._output.trim(!0), this._options.brace_style === "expand" && this._output.add_new_line(!0));
        else if (this._ch === ":") {
            for(var k = 0; k < this.NON_SEMICOLON_NEWLINE_PROPERTY.length; k++)if (this._input.lookBack(this.NON_SEMICOLON_NEWLINE_PROPERTY[k])) {
                T = !0;
                break;
            }
            (O || f) && !(this._input.lookBack("&") || this.foundNestedPseudoClass()) && !this._input.lookBack("(") && !_ && C === 0 ? (this.print_string(":"), d || (d = !0, this._output.space_before_token = !0, this.eatWhitespace(!0), this.indent())) : (this._input.lookBack(" ") && (this._output.space_before_token = !0), this._input.peek() === ":" ? (this._ch = this._input.next(), this.print_string("::")) : this.print_string(":"));
        } else if (this._ch === '"' || this._ch === "'") {
            var Y = b === '"' || b === "'";
            this.preserveSingleSpace(Y || g), this.print_string(this._ch + this.eatString(this._ch)), this.eatWhitespace(!0);
        } else if (this._ch === ";") T = !1, C === 0 ? (d && (this.outdent(), d = !1), _ = !1, this.print_string(this._ch), this.eatWhitespace(!0), this._input.peek() !== "/" && this._output.add_new_line()) : (this.print_string(this._ch), this.eatWhitespace(!0), this._output.space_before_token = !0);
        else if (this._ch === "(") if (this._input.lookBack("url")) this.print_string(this._ch), this.eatWhitespace(), C++, this.indent(), this._ch = this._input.next(), this._ch === ")" || this._ch === '"' || this._ch === "'" ? this._input.back() : this._ch && (this.print_string(this._ch + this.eatString(")")), C && (C--, this.outdent()));
        else {
            var H = !1;
            this._input.lookBack("with") && (H = !0), this.preserveSingleSpace(g || H), this.print_string(this._ch), d && b === "$" && this._options.selector_separator_newline ? (this._output.add_new_line(), h = !0) : (this.eatWhitespace(), C++, this.indent());
        }
        else if (this._ch === ")") C && (C--, this.outdent()), h && this._input.peek() === ";" && this._options.selector_separator_newline && (h = !1, this.outdent(), this._output.add_new_line()), this.print_string(this._ch);
        else if (this._ch === ",") this.print_string(this._ch), this.eatWhitespace(!0), this._options.selector_separator_newline && (!d || h) && C === 0 && !_ ? this._output.add_new_line() : this._output.space_before_token = !0;
        else if ((this._ch === ">" || this._ch === "+" || this._ch === "~") && !d && C === 0) this._options.space_around_combinator ? (this._output.space_before_token = !0, this.print_string(this._ch), this._output.space_before_token = !0) : (this.print_string(this._ch), this.eatWhitespace(), this._ch && o.test(this._ch) && (this._ch = ""));
        else if (this._ch === "]") this.print_string(this._ch);
        else if (this._ch === "[") this.preserveSingleSpace(g), this.print_string(this._ch);
        else if (this._ch === "=") this.eatWhitespace(), this.print_string("="), o.test(this._ch) && (this._ch = "");
        else if (this._ch === "!" && !this._input.lookBack("\\")) this._output.space_before_token = !0, this.print_string(this._ch);
        else {
            var F = b === '"' || b === "'";
            this.preserveSingleSpace(F || g), this.print_string(this._ch), !this._output.just_added_newline() && this._input.peek() === `
` && T && this._output.add_new_line();
        }
        var x = this._output.get_code(A);
        return x;
    }, Vf.Beautifier = E, Vf;
}
var Z1;
function ck() {
    if (Z1) return zc.exports;
    Z1 = 1;
    var e = lk().Beautifier, t = kg().Options;
    function n(r, s) {
        var i = new e(r, s);
        return i.beautify();
    }
    return zc.exports = n, zc.exports.defaultOptions = function() {
        return new t();
    }, zc.exports;
}
var Jc = {
    exports: {}
}, jf = {}, Xf = {}, Q1;
function Hg() {
    if (Q1) return Xf;
    Q1 = 1;
    var e = yA().Options;
    function t(n) {
        e.call(this, n, "html"), this.templating.length === 1 && this.templating[0] === "auto" && (this.templating = [
            "django",
            "erb",
            "handlebars",
            "php"
        ]), this.indent_inner_html = this._get_boolean("indent_inner_html"), this.indent_body_inner_html = this._get_boolean("indent_body_inner_html", !0), this.indent_head_inner_html = this._get_boolean("indent_head_inner_html", !0), this.indent_handlebars = this._get_boolean("indent_handlebars", !0), this.wrap_attributes = this._get_selection("wrap_attributes", [
            "auto",
            "force",
            "force-aligned",
            "force-expand-multiline",
            "aligned-multiple",
            "preserve",
            "preserve-aligned"
        ]), this.wrap_attributes_min_attrs = this._get_number("wrap_attributes_min_attrs", 2), this.wrap_attributes_indent_size = this._get_number("wrap_attributes_indent_size", this.indent_size), this.extra_liners = this._get_array("extra_liners", [
            "head",
            "body",
            "/html"
        ]), this.inline = this._get_array("inline", [
            "a",
            "abbr",
            "area",
            "audio",
            "b",
            "bdi",
            "bdo",
            "br",
            "button",
            "canvas",
            "cite",
            "code",
            "data",
            "datalist",
            "del",
            "dfn",
            "em",
            "embed",
            "i",
            "iframe",
            "img",
            "input",
            "ins",
            "kbd",
            "keygen",
            "label",
            "map",
            "mark",
            "math",
            "meter",
            "noscript",
            "object",
            "output",
            "progress",
            "q",
            "ruby",
            "s",
            "samp",
            /* 'script', */ "select",
            "small",
            "span",
            "strong",
            "sub",
            "sup",
            "svg",
            "template",
            "textarea",
            "time",
            "u",
            "var",
            "video",
            "wbr",
            "text",
            // obsolete inline tags
            "acronym",
            "big",
            "strike",
            "tt"
        ]), this.inline_custom_elements = this._get_boolean("inline_custom_elements", !0), this.void_elements = this._get_array("void_elements", [
            // HTLM void elements - aka self-closing tags - aka singletons
            // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements
            "area",
            "base",
            "br",
            "col",
            "embed",
            "hr",
            "img",
            "input",
            "keygen",
            "link",
            "menuitem",
            "meta",
            "param",
            "source",
            "track",
            "wbr",
            // NOTE: Optional tags are too complex for a simple list
            // they are hard coded in _do_optional_end_element
            // Doctype and xml elements
            "!doctype",
            "?xml",
            // obsolete tags
            // basefont: https://www.computerhope.com/jargon/h/html-basefont-tag.htm
            // isndex: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/isindex
            "basefont",
            "isindex"
        ]), this.unformatted = this._get_array("unformatted", []), this.content_unformatted = this._get_array("content_unformatted", [
            "pre",
            "textarea"
        ]), this.unformatted_content_delimiter = this._get_characters("unformatted_content_delimiter"), this.indent_scripts = this._get_selection("indent_scripts", [
            "normal",
            "keep",
            "separate"
        ]);
    }
    return t.prototype = new e(), Xf.Options = t, Xf;
}
var qc = {}, $1;
function em() {
    if ($1) return qc;
    $1 = 1;
    var e = AE().Tokenizer, t = AE().TOKEN, n = bA().Directives, r = Gg().TemplatablePattern, s = fd().Pattern, i = {
        TAG_OPEN: "TK_TAG_OPEN",
        TAG_CLOSE: "TK_TAG_CLOSE",
        CONTROL_FLOW_OPEN: "TK_CONTROL_FLOW_OPEN",
        CONTROL_FLOW_CLOSE: "TK_CONTROL_FLOW_CLOSE",
        ATTRIBUTE: "TK_ATTRIBUTE",
        EQUALS: "TK_EQUALS",
        VALUE: "TK_VALUE",
        COMMENT: "TK_COMMENT",
        TEXT: "TK_TEXT",
        UNKNOWN: "TK_UNKNOWN",
        START: t.START,
        RAW: t.RAW,
        EOF: t.EOF
    }, a = new n(/<\!--/, /-->/), o = function(l, c) {
        e.call(this, l, c), this._current_tag_name = "";
        var u = new r(this._input).read_options(this._options), E = new s(this._input);
        if (this.__patterns = {
            word: u.until(/[\n\r\t <]/),
            word_control_flow_close_excluded: u.until(/[\n\r\t <}]/),
            single_quote: u.until_after(/'/),
            double_quote: u.until_after(/"/),
            attribute: u.until(/[\n\r\t =>]|\/>/),
            element_name: u.until(/[\n\r\t >\/]/),
            angular_control_flow_start: E.matching(/\@[a-zA-Z]+[^({]*[({]/),
            handlebars_comment: E.starting_with(/{{!--/).until_after(/--}}/),
            handlebars: E.starting_with(/{{/).until_after(/}}/),
            handlebars_open: E.until(/[\n\r\t }]/),
            handlebars_raw_close: E.until(/}}/),
            comment: E.starting_with(/<!--/).until_after(/-->/),
            cdata: E.starting_with(/<!\[CDATA\[/).until_after(/]]>/),
            // https://en.wikipedia.org/wiki/Conditional_comment
            conditional_comment: E.starting_with(/<!\[/).until_after(/]>/),
            processing: E.starting_with(/<\?/).until_after(/\?>/)
        }, this._options.indent_handlebars && (this.__patterns.word = this.__patterns.word.exclude("handlebars"), this.__patterns.word_control_flow_close_excluded = this.__patterns.word_control_flow_close_excluded.exclude("handlebars")), this._unformatted_content_delimiter = null, this._options.unformatted_content_delimiter) {
            var p = this._input.get_literal_regexp(this._options.unformatted_content_delimiter);
            this.__patterns.unformatted_content_delimiter = E.matching(p).until_after(p);
        }
    };
    return o.prototype = new e(), o.prototype._is_comment = function(l) {
        return !1;
    }, o.prototype._is_opening = function(l) {
        return l.type === i.TAG_OPEN || l.type === i.CONTROL_FLOW_OPEN;
    }, o.prototype._is_closing = function(l, c) {
        return l.type === i.TAG_CLOSE && c && ((l.text === ">" || l.text === "/>") && c.text[0] === "<" || l.text === "}}" && c.text[0] === "{" && c.text[1] === "{") || l.type === i.CONTROL_FLOW_CLOSE && l.text === "}" && c.text.endsWith("{");
    }, o.prototype._reset = function() {
        this._current_tag_name = "";
    }, o.prototype._get_next_token = function(l, c) {
        var u = null;
        this._readWhitespace();
        var E = this._input.peek();
        return E === null ? this._create_token(i.EOF, "") : (u = u || this._read_open_handlebars(E, c), u = u || this._read_attribute(E, l, c), u = u || this._read_close(E, c), u = u || this._read_control_flows(E, c), u = u || this._read_raw_content(E, l, c), u = u || this._read_content_word(E, c), u = u || this._read_comment_or_cdata(E), u = u || this._read_processing(E), u = u || this._read_open(E, c), u = u || this._create_token(i.UNKNOWN, this._input.next()), u);
    }, o.prototype._read_comment_or_cdata = function(l) {
        var c = null, u = null, E = null;
        if (l === "<") {
            var p = this._input.peek(1);
            p === "!" && (u = this.__patterns.comment.read(), u ? (E = a.get_directives(u), E && E.ignore === "start" && (u += a.readIgnored(this._input))) : u = this.__patterns.cdata.read()), u && (c = this._create_token(i.COMMENT, u), c.directives = E);
        }
        return c;
    }, o.prototype._read_processing = function(l) {
        var c = null, u = null, E = null;
        if (l === "<") {
            var p = this._input.peek(1);
            (p === "!" || p === "?") && (u = this.__patterns.conditional_comment.read(), u = u || this.__patterns.processing.read()), u && (c = this._create_token(i.COMMENT, u), c.directives = E);
        }
        return c;
    }, o.prototype._read_open = function(l, c) {
        var u = null, E = null;
        return (!c || c.type === i.CONTROL_FLOW_OPEN) && l === "<" && (u = this._input.next(), this._input.peek() === "/" && (u += this._input.next()), u += this.__patterns.element_name.read(), E = this._create_token(i.TAG_OPEN, u)), E;
    }, o.prototype._read_open_handlebars = function(l, c) {
        var u = null, E = null;
        return (!c || c.type === i.CONTROL_FLOW_OPEN) && this._options.indent_handlebars && l === "{" && this._input.peek(1) === "{" && (this._input.peek(2) === "!" ? (u = this.__patterns.handlebars_comment.read(), u = u || this.__patterns.handlebars.read(), E = this._create_token(i.COMMENT, u)) : (u = this.__patterns.handlebars_open.read(), E = this._create_token(i.TAG_OPEN, u))), E;
    }, o.prototype._read_control_flows = function(l, c) {
        var u = "", E = null;
        if (!this._options.templating.includes("angular") || !this._options.indent_handlebars) return E;
        if (l === "@") {
            if (u = this.__patterns.angular_control_flow_start.read(), u === "") return E;
            for(var p = u.endsWith("(") ? 1 : 0, A = 0; !(u.endsWith("{") && p === A);){
                var R = this._input.next();
                if (R === null) break;
                R === "(" ? p++ : R === ")" && A++, u += R;
            }
            E = this._create_token(i.CONTROL_FLOW_OPEN, u);
        } else l === "}" && c && c.type === i.CONTROL_FLOW_OPEN && (u = this._input.next(), E = this._create_token(i.CONTROL_FLOW_CLOSE, u));
        return E;
    }, o.prototype._read_close = function(l, c) {
        var u = null, E = null;
        return c && c.type === i.TAG_OPEN && (c.text[0] === "<" && (l === ">" || l === "/" && this._input.peek(1) === ">") ? (u = this._input.next(), l === "/" && (u += this._input.next()), E = this._create_token(i.TAG_CLOSE, u)) : c.text[0] === "{" && l === "}" && this._input.peek(1) === "}" && (this._input.next(), this._input.next(), E = this._create_token(i.TAG_CLOSE, "}}"))), E;
    }, o.prototype._read_attribute = function(l, c, u) {
        var E = null, p = "";
        if (u && u.text[0] === "<") if (l === "=") E = this._create_token(i.EQUALS, this._input.next());
        else if (l === '"' || l === "'") {
            var A = this._input.next();
            l === '"' ? A += this.__patterns.double_quote.read() : A += this.__patterns.single_quote.read(), E = this._create_token(i.VALUE, A);
        } else p = this.__patterns.attribute.read(), p && (c.type === i.EQUALS ? E = this._create_token(i.VALUE, p) : E = this._create_token(i.ATTRIBUTE, p));
        return E;
    }, o.prototype._is_content_unformatted = function(l) {
        return this._options.void_elements.indexOf(l) === -1 && (this._options.content_unformatted.indexOf(l) !== -1 || this._options.unformatted.indexOf(l) !== -1);
    }, o.prototype._read_raw_content = function(l, c, u) {
        var E = "";
        if (u && u.text[0] === "{") E = this.__patterns.handlebars_raw_close.read();
        else if (c.type === i.TAG_CLOSE && c.opened.text[0] === "<" && c.text[0] !== "/") {
            var p = c.opened.text.substr(1).toLowerCase();
            if (p === "script" || p === "style") {
                var A = this._read_comment_or_cdata(l);
                if (A) return A.type = i.TEXT, A;
                E = this._input.readUntil(new RegExp("</" + p + "[\\n\\r\\t ]*?>", "ig"));
            } else this._is_content_unformatted(p) && (E = this._input.readUntil(new RegExp("</" + p + "[\\n\\r\\t ]*?>", "ig")));
        }
        return E ? this._create_token(i.TEXT, E) : null;
    }, o.prototype._read_content_word = function(l, c) {
        var u = "";
        if (this._options.unformatted_content_delimiter && l === this._options.unformatted_content_delimiter[0] && (u = this.__patterns.unformatted_content_delimiter.read()), u || (u = c && c.type === i.CONTROL_FLOW_OPEN ? this.__patterns.word_control_flow_close_excluded.read() : this.__patterns.word.read()), u) return this._create_token(i.TEXT, u);
    }, qc.Tokenizer = o, qc.TOKEN = i, qc;
}
var tm;
function uk() {
    if (tm) return jf;
    tm = 1;
    var e = Hg().Options, t = LA().Output, n = em().Tokenizer, r = em().TOKEN, s = /\r\n|[\r\n]/, i = /\r\n|[\r\n]/g, a = function(O, d) {
        this.indent_level = 0, this.alignment_size = 0, this.max_preserve_newlines = O.max_preserve_newlines, this.preserve_newlines = O.preserve_newlines, this._output = new t(O, d);
    };
    a.prototype.current_line_has_match = function(O) {
        return this._output.current_line.has_match(O);
    }, a.prototype.set_space_before_token = function(O, d) {
        this._output.space_before_token = O, this._output.non_breaking_space = d;
    }, a.prototype.set_wrap_point = function() {
        this._output.set_indent(this.indent_level, this.alignment_size), this._output.set_wrap_point();
    }, a.prototype.add_raw_token = function(O) {
        this._output.add_raw_token(O);
    }, a.prototype.print_preserved_newlines = function(O) {
        var d = 0;
        O.type !== r.TEXT && O.previous.type !== r.TEXT && (d = O.newlines ? 1 : 0), this.preserve_newlines && (d = O.newlines < this.max_preserve_newlines + 1 ? O.newlines : this.max_preserve_newlines + 1);
        for(var f = 0; f < d; f++)this.print_newline(f > 0);
        return d !== 0;
    }, a.prototype.traverse_whitespace = function(O) {
        return O.whitespace_before || O.newlines ? (this.print_preserved_newlines(O) || (this._output.space_before_token = !0), !0) : !1;
    }, a.prototype.previous_token_wrapped = function() {
        return this._output.previous_token_wrapped;
    }, a.prototype.print_newline = function(O) {
        this._output.add_new_line(O);
    }, a.prototype.print_token = function(O) {
        O.text && (this._output.set_indent(this.indent_level, this.alignment_size), this._output.add_token(O.text));
    }, a.prototype.indent = function() {
        this.indent_level++;
    }, a.prototype.deindent = function() {
        this.indent_level > 0 && (this.indent_level--, this._output.set_indent(this.indent_level, this.alignment_size));
    }, a.prototype.get_full_indent = function(O) {
        return O = this.indent_level + (O || 0), O < 1 ? "" : this._output.get_indent_string(O);
    };
    var o = function(O) {
        for(var d = null, f = O.next; f.type !== r.EOF && O.closed !== f;){
            if (f.type === r.ATTRIBUTE && f.text === "type") {
                f.next && f.next.type === r.EQUALS && f.next.next && f.next.next.type === r.VALUE && (d = f.next.next.text);
                break;
            }
            f = f.next;
        }
        return d;
    }, l = function(O, d) {
        var f = null, _ = null;
        return d.closed ? (O === "script" ? f = "text/javascript" : O === "style" && (f = "text/css"), f = o(d) || f, f.search("text/css") > -1 ? _ = "css" : f.search(/module|((text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect))/) > -1 ? _ = "javascript" : f.search(/(text|application|dojo)\/(x-)?(html)/) > -1 ? _ = "html" : f.search(/test\/null/) > -1 && (_ = "null"), _) : null;
    };
    function c(O, d) {
        return d.indexOf(O) !== -1;
    }
    function u(O, d, f) {
        this.parent = O || null, this.tag = d ? d.tag_name : "", this.indent_level = f || 0, this.parser_token = d || null;
    }
    function E(O) {
        this._printer = O, this._current_frame = null;
    }
    E.prototype.get_parser_token = function() {
        return this._current_frame ? this._current_frame.parser_token : null;
    }, E.prototype.record_tag = function(O) {
        var d = new u(this._current_frame, O, this._printer.indent_level);
        this._current_frame = d;
    }, E.prototype._try_pop_frame = function(O) {
        var d = null;
        return O && (d = O.parser_token, this._printer.indent_level = O.indent_level, this._current_frame = O.parent), d;
    }, E.prototype._get_frame = function(O, d) {
        for(var f = this._current_frame; f && O.indexOf(f.tag) === -1;){
            if (d && d.indexOf(f.tag) !== -1) {
                f = null;
                break;
            }
            f = f.parent;
        }
        return f;
    }, E.prototype.try_pop = function(O, d) {
        var f = this._get_frame([
            O
        ], d);
        return this._try_pop_frame(f);
    }, E.prototype.indent_to_tag = function(O) {
        var d = this._get_frame(O);
        d && (this._printer.indent_level = d.indent_level);
    };
    function p(O, d, f, _) {
        this._source_text = O || "", d = d || {}, this._js_beautify = f, this._css_beautify = _, this._tag_stack = null;
        var h = new e(d, "html");
        this._options = h, this._is_wrap_attributes_force = this._options.wrap_attributes.substr(0, 5) === "force", this._is_wrap_attributes_force_expand_multiline = this._options.wrap_attributes === "force-expand-multiline", this._is_wrap_attributes_force_aligned = this._options.wrap_attributes === "force-aligned", this._is_wrap_attributes_aligned_multiple = this._options.wrap_attributes === "aligned-multiple", this._is_wrap_attributes_preserve = this._options.wrap_attributes.substr(0, 8) === "preserve", this._is_wrap_attributes_preserve_aligned = this._options.wrap_attributes === "preserve-aligned";
    }
    p.prototype.beautify = function() {
        if (this._options.disabled) return this._source_text;
        var O = this._source_text, d = this._options.eol;
        this._options.eol === "auto" && (d = `
`, O && s.test(O) && (d = O.match(s)[0])), O = O.replace(i, `
`);
        var f = O.match(/^[\t ]*/)[0], _ = {
            text: "",
            type: ""
        }, h = new A(), I = new a(this._options, f), T = new n(O, this._options).tokenize();
        this._tag_stack = new E(I);
        for(var N = null, g = T.next(); g.type !== r.EOF;)g.type === r.TAG_OPEN || g.type === r.COMMENT ? (N = this._handle_tag_open(I, g, h, _, T), h = N) : g.type === r.ATTRIBUTE || g.type === r.EQUALS || g.type === r.VALUE || g.type === r.TEXT && !h.tag_complete ? N = this._handle_inside_tag(I, g, h, _) : g.type === r.TAG_CLOSE ? N = this._handle_tag_close(I, g, h) : g.type === r.TEXT ? N = this._handle_text(I, g, h) : g.type === r.CONTROL_FLOW_OPEN ? N = this._handle_control_flow_open(I, g) : g.type === r.CONTROL_FLOW_CLOSE ? N = this._handle_control_flow_close(I, g) : I.add_raw_token(g), _ = N, g = T.next();
        var b = I._output.get_code(d);
        return b;
    }, p.prototype._handle_control_flow_open = function(O, d) {
        var f = {
            text: d.text,
            type: d.type
        };
        return O.set_space_before_token(d.newlines || d.whitespace_before !== "", !0), d.newlines ? O.print_preserved_newlines(d) : O.set_space_before_token(d.newlines || d.whitespace_before !== "", !0), O.print_token(d), O.indent(), f;
    }, p.prototype._handle_control_flow_close = function(O, d) {
        var f = {
            text: d.text,
            type: d.type
        };
        return O.deindent(), d.newlines ? O.print_preserved_newlines(d) : O.set_space_before_token(d.newlines || d.whitespace_before !== "", !0), O.print_token(d), f;
    }, p.prototype._handle_tag_close = function(O, d, f) {
        var _ = {
            text: d.text,
            type: d.type
        };
        return O.alignment_size = 0, f.tag_complete = !0, O.set_space_before_token(d.newlines || d.whitespace_before !== "", !0), f.is_unformatted ? O.add_raw_token(d) : (f.tag_start_char === "<" && (O.set_space_before_token(d.text[0] === "/", !0), this._is_wrap_attributes_force_expand_multiline && f.has_wrapped_attrs && O.print_newline(!1)), O.print_token(d)), f.indent_content && !(f.is_unformatted || f.is_content_unformatted) && (O.indent(), f.indent_content = !1), !f.is_inline_element && !(f.is_unformatted || f.is_content_unformatted) && O.set_wrap_point(), _;
    }, p.prototype._handle_inside_tag = function(O, d, f, _) {
        var h = f.has_wrapped_attrs, I = {
            text: d.text,
            type: d.type
        };
        return O.set_space_before_token(d.newlines || d.whitespace_before !== "", !0), f.is_unformatted ? O.add_raw_token(d) : f.tag_start_char === "{" && d.type === r.TEXT ? O.print_preserved_newlines(d) ? (d.newlines = 0, O.add_raw_token(d)) : O.print_token(d) : (d.type === r.ATTRIBUTE ? O.set_space_before_token(!0) : (d.type === r.EQUALS || d.type === r.VALUE && d.previous.type === r.EQUALS) && O.set_space_before_token(!1), d.type === r.ATTRIBUTE && f.tag_start_char === "<" && ((this._is_wrap_attributes_preserve || this._is_wrap_attributes_preserve_aligned) && (O.traverse_whitespace(d), h = h || d.newlines !== 0), this._is_wrap_attributes_force && f.attr_count >= this._options.wrap_attributes_min_attrs && (_.type !== r.TAG_OPEN || // ie. second attribute and beyond
        this._is_wrap_attributes_force_expand_multiline) && (O.print_newline(!1), h = !0)), O.print_token(d), h = h || O.previous_token_wrapped(), f.has_wrapped_attrs = h), I;
    }, p.prototype._handle_text = function(O, d, f) {
        var _ = {
            text: d.text,
            type: "TK_CONTENT"
        };
        return f.custom_beautifier_name ? this._print_custom_beatifier_text(O, d, f) : f.is_unformatted || f.is_content_unformatted ? O.add_raw_token(d) : (O.traverse_whitespace(d), O.print_token(d)), _;
    }, p.prototype._print_custom_beatifier_text = function(O, d, f) {
        var _ = this;
        if (d.text !== "") {
            var h = d.text, I, T = 1, N = "", g = "";
            f.custom_beautifier_name === "javascript" && typeof this._js_beautify == "function" ? I = this._js_beautify : f.custom_beautifier_name === "css" && typeof this._css_beautify == "function" ? I = this._css_beautify : f.custom_beautifier_name === "html" && (I = function(k, Y) {
                var H = new p(k, Y, _._js_beautify, _._css_beautify);
                return H.beautify();
            }), this._options.indent_scripts === "keep" ? T = 0 : this._options.indent_scripts === "separate" && (T = -O.indent_level);
            var b = O.get_full_indent(T);
            if (h = h.replace(/\n[ \t]*$/, ""), f.custom_beautifier_name !== "html" && h[0] === "<" && h.match(/^(<!--|<!\[CDATA\[)/)) {
                var S = /^(<!--[^\n]*|<!\[CDATA\[)(\n?)([ \t\n]*)([\s\S]*)(-->|]]>)$/.exec(h);
                if (!S) {
                    O.add_raw_token(d);
                    return;
                }
                N = b + S[1] + `
`, h = S[4], S[5] && (g = b + S[5]), h = h.replace(/\n[ \t]*$/, ""), (S[2] || S[3].indexOf(`
`) !== -1) && (S = S[3].match(/[ \t]+$/), S && (d.whitespace_before = S[0]));
            }
            if (h) if (I) {
                var P = function() {
                    this.eol = `
`;
                };
                P.prototype = this._options.raw_options;
                var w = new P();
                h = I(b + h, w);
            } else {
                var G = d.whitespace_before;
                G && (h = h.replace(new RegExp(`
(` + G + ")?", "g"), `
`)), h = b + h.replace(/\n/g, `
` + b);
            }
            N && (h ? h = N + h + `
` + g : h = N + g), O.print_newline(!1), h && (d.text = h, d.whitespace_before = "", d.newlines = 0, O.add_raw_token(d), O.print_newline(!0));
        }
    }, p.prototype._handle_tag_open = function(O, d, f, _, h) {
        var I = this._get_tag_open_token(d);
        if ((f.is_unformatted || f.is_content_unformatted) && !f.is_empty_element && d.type === r.TAG_OPEN && !I.is_start_tag ? (O.add_raw_token(d), I.start_tag_token = this._tag_stack.try_pop(I.tag_name)) : (O.traverse_whitespace(d), this._set_tag_position(O, d, I, f, _), I.is_inline_element || O.set_wrap_point(), O.print_token(d)), I.is_start_tag && this._is_wrap_attributes_force) {
            var T = 0, N;
            do N = h.peek(T), N.type === r.ATTRIBUTE && (I.attr_count += 1), T += 1;
            while (N.type !== r.EOF && N.type !== r.TAG_CLOSE)
        }
        return (this._is_wrap_attributes_force_aligned || this._is_wrap_attributes_aligned_multiple || this._is_wrap_attributes_preserve_aligned) && (I.alignment_size = d.text.length + 1), !I.tag_complete && !I.is_unformatted && (O.alignment_size = I.alignment_size), I;
    };
    var A = function(O, d) {
        if (this.parent = O || null, this.text = "", this.type = "TK_TAG_OPEN", this.tag_name = "", this.is_inline_element = !1, this.is_unformatted = !1, this.is_content_unformatted = !1, this.is_empty_element = !1, this.is_start_tag = !1, this.is_end_tag = !1, this.indent_content = !1, this.multiline_content = !1, this.custom_beautifier_name = null, this.start_tag_token = null, this.attr_count = 0, this.has_wrapped_attrs = !1, this.alignment_size = 0, this.tag_complete = !1, this.tag_start_char = "", this.tag_check = "", !d) this.tag_complete = !0;
        else {
            var f;
            this.tag_start_char = d.text[0], this.text = d.text, this.tag_start_char === "<" ? (f = d.text.match(/^<([^\s>]*)/), this.tag_check = f ? f[1] : "") : (f = d.text.match(/^{{~?(?:[\^]|#\*?)?([^\s}]+)/), this.tag_check = f ? f[1] : "", (d.text.startsWith("{{#>") || d.text.startsWith("{{~#>")) && this.tag_check[0] === ">" && (this.tag_check === ">" && d.next !== null ? this.tag_check = d.next.text.split(" ")[0] : this.tag_check = d.text.split(">")[1])), this.tag_check = this.tag_check.toLowerCase(), d.type === r.COMMENT && (this.tag_complete = !0), this.is_start_tag = this.tag_check.charAt(0) !== "/", this.tag_name = this.is_start_tag ? this.tag_check : this.tag_check.substr(1), this.is_end_tag = !this.is_start_tag || d.closed && d.closed.text === "/>";
            var _ = 2;
            this.tag_start_char === "{" && this.text.length >= 3 && this.text.charAt(2) === "~" && (_ = 3), this.is_end_tag = this.is_end_tag || this.tag_start_char === "{" && (this.text.length < 3 || /[^#\^]/.test(this.text.charAt(_)));
        }
    };
    p.prototype._get_tag_open_token = function(O) {
        var d = new A(this._tag_stack.get_parser_token(), O);
        return d.alignment_size = this._options.wrap_attributes_indent_size, d.is_end_tag = d.is_end_tag || c(d.tag_check, this._options.void_elements), d.is_empty_element = d.tag_complete || d.is_start_tag && d.is_end_tag, d.is_unformatted = !d.tag_complete && c(d.tag_check, this._options.unformatted), d.is_content_unformatted = !d.is_empty_element && c(d.tag_check, this._options.content_unformatted), d.is_inline_element = c(d.tag_name, this._options.inline) || this._options.inline_custom_elements && d.tag_name.includes("-") || d.tag_start_char === "{", d;
    }, p.prototype._set_tag_position = function(O, d, f, _, h) {
        if (f.is_empty_element || (f.is_end_tag ? f.start_tag_token = this._tag_stack.try_pop(f.tag_name) : (this._do_optional_end_element(f) && (f.is_inline_element || O.print_newline(!1)), this._tag_stack.record_tag(f), (f.tag_name === "script" || f.tag_name === "style") && !(f.is_unformatted || f.is_content_unformatted) && (f.custom_beautifier_name = l(f.tag_check, d)))), c(f.tag_check, this._options.extra_liners) && (O.print_newline(!1), O._output.just_added_blankline() || O.print_newline(!0)), f.is_empty_element) {
            if (f.tag_start_char === "{" && f.tag_check === "else") {
                this._tag_stack.indent_to_tag([
                    "if",
                    "unless",
                    "each"
                ]), f.indent_content = !0;
                var I = O.current_line_has_match(/{{#if/);
                I || O.print_newline(!1);
            }
            f.tag_name === "!--" && h.type === r.TAG_CLOSE && _.is_end_tag && f.text.indexOf(`
`) === -1 || (f.is_inline_element || f.is_unformatted || O.print_newline(!1), this._calcluate_parent_multiline(O, f));
        } else if (f.is_end_tag) {
            var T = !1;
            T = f.start_tag_token && f.start_tag_token.multiline_content, T = T || !f.is_inline_element && !(_.is_inline_element || _.is_unformatted) && !(h.type === r.TAG_CLOSE && f.start_tag_token === _) && h.type !== "TK_CONTENT", (f.is_content_unformatted || f.is_unformatted) && (T = !1), T && O.print_newline(!1);
        } else f.indent_content = !f.custom_beautifier_name, f.tag_start_char === "<" && (f.tag_name === "html" ? f.indent_content = this._options.indent_inner_html : f.tag_name === "head" ? f.indent_content = this._options.indent_head_inner_html : f.tag_name === "body" && (f.indent_content = this._options.indent_body_inner_html)), !(f.is_inline_element || f.is_unformatted) && (h.type !== "TK_CONTENT" || f.is_content_unformatted) && O.print_newline(!1), this._calcluate_parent_multiline(O, f);
    }, p.prototype._calcluate_parent_multiline = function(O, d) {
        d.parent && O._output.just_added_newline() && !((d.is_inline_element || d.is_unformatted) && d.parent.is_inline_element) && (d.parent.multiline_content = !0);
    };
    var R = [
        "address",
        "article",
        "aside",
        "blockquote",
        "details",
        "div",
        "dl",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "header",
        "hr",
        "main",
        "menu",
        "nav",
        "ol",
        "p",
        "pre",
        "section",
        "table",
        "ul"
    ], C = [
        "a",
        "audio",
        "del",
        "ins",
        "map",
        "noscript",
        "video"
    ];
    return p.prototype._do_optional_end_element = function(O) {
        var d = null;
        if (!(O.is_empty_element || !O.is_start_tag || !O.parent)) {
            if (O.tag_name === "body") d = d || this._tag_stack.try_pop("head");
            else if (O.tag_name === "li") d = d || this._tag_stack.try_pop("li", [
                "ol",
                "ul",
                "menu"
            ]);
            else if (O.tag_name === "dd" || O.tag_name === "dt") d = d || this._tag_stack.try_pop("dt", [
                "dl"
            ]), d = d || this._tag_stack.try_pop("dd", [
                "dl"
            ]);
            else if (O.parent.tag_name === "p" && R.indexOf(O.tag_name) !== -1) {
                var f = O.parent.parent;
                (!f || C.indexOf(f.tag_name) === -1) && (d = d || this._tag_stack.try_pop("p"));
            } else O.tag_name === "rp" || O.tag_name === "rt" ? (d = d || this._tag_stack.try_pop("rt", [
                "ruby",
                "rtc"
            ]), d = d || this._tag_stack.try_pop("rp", [
                "ruby",
                "rtc"
            ])) : O.tag_name === "optgroup" ? d = d || this._tag_stack.try_pop("optgroup", [
                "select"
            ]) : O.tag_name === "option" ? d = d || this._tag_stack.try_pop("option", [
                "select",
                "datalist",
                "optgroup"
            ]) : O.tag_name === "colgroup" ? d = d || this._tag_stack.try_pop("caption", [
                "table"
            ]) : O.tag_name === "thead" ? (d = d || this._tag_stack.try_pop("caption", [
                "table"
            ]), d = d || this._tag_stack.try_pop("colgroup", [
                "table"
            ])) : O.tag_name === "tbody" || O.tag_name === "tfoot" ? (d = d || this._tag_stack.try_pop("caption", [
                "table"
            ]), d = d || this._tag_stack.try_pop("colgroup", [
                "table"
            ]), d = d || this._tag_stack.try_pop("thead", [
                "table"
            ]), d = d || this._tag_stack.try_pop("tbody", [
                "table"
            ])) : O.tag_name === "tr" ? (d = d || this._tag_stack.try_pop("caption", [
                "table"
            ]), d = d || this._tag_stack.try_pop("colgroup", [
                "table"
            ]), d = d || this._tag_stack.try_pop("tr", [
                "table",
                "thead",
                "tbody",
                "tfoot"
            ])) : (O.tag_name === "th" || O.tag_name === "td") && (d = d || this._tag_stack.try_pop("td", [
                "table",
                "thead",
                "tbody",
                "tfoot",
                "tr"
            ]), d = d || this._tag_stack.try_pop("th", [
                "table",
                "thead",
                "tbody",
                "tfoot",
                "tr"
            ]));
            return O.parent = this._tag_stack.get_parser_token(), d;
        }
    }, jf.Beautifier = p, jf;
}
var nm;
function Ek() {
    if (nm) return Jc.exports;
    nm = 1;
    var e = uk().Beautifier, t = Hg().Options;
    function n(r, s, i, a) {
        var o = new e(r, s, i, a);
        return o.beautify();
    }
    return Jc.exports = n, Jc.exports.defaultOptions = function() {
        return new t();
    }, Jc.exports;
}
var rm;
function dk() {
    if (rm) return xo;
    rm = 1;
    var e = ok(), t = ck(), n = Ek();
    function r(s, i, a, o) {
        return a = a || e, o = o || t, n(s, i, a, o);
    }
    return r.defaultOptions = n.defaultOptions, xo.js = e, xo.css = t, xo.html = r, xo;
}
(function(e) {
    function t(n, r, s) {
        var i = function(a, o) {
            return n.js_beautify(a, o);
        };
        return i.js = n.js_beautify, i.css = r.css_beautify, i.html = s.html_beautify, i.js_beautify = n.js_beautify, i.css_beautify = r.css_beautify, i.html_beautify = s.html_beautify, i;
    }
    (function(n) {
        var r = dk();
        r.js_beautify = r.js, r.css_beautify = r.css, r.html_beautify = r.html, n.exports = t(r, r, r);
    })(e);
})(xg);
var fk = xg.exports, Yg = {
    exports: {}
};
(function(e, t) {
    (function() {
        function n(r, s) {
            var i, a = 0, o = r.length, l, c = "", u, E, p, A, R, C, O, d, f = !0, _ = !1, h;
            i = arguments.length > 1 ? s : {}, typeof i.indent > "u" && (i.indent = "    "), typeof i.openbrace == "string" && (f = i.openbrace === "end-of-line"), typeof i.autosemicolon == "boolean" && (_ = i.autosemicolon);
            function I(P) {
                return P === " " || P === `
` || P === "	" || P === "\r" || P === "\f";
            }
            function T(P) {
                return P === "'" || P === '"';
            }
            function N(P) {
                return u >= "a" && u <= "z" || u >= "A" && u <= "Z" || u >= "0" && u <= "9" || "-_*.:#[]".indexOf(P) >= 0;
            }
            function g() {
                var P;
                for(P = C; P > 0; P -= 1)c += i.indent;
            }
            function b() {
                c = h(c), f ? c += " {" : (c += `
`, g(), c += "{"), E !== `
` && (c += `
`), C += 1;
            }
            function S() {
                var P;
                C -= 1, c = h(c), c.length > 0 && _ && (P = c.charAt(c.length - 1), P !== ";" && P !== "{" && (c += ";")), c += `
`, g(), c += "}", l.push(c), c = "";
            }
            for(String.prototype.trimRight ? h = function(P) {
                return P.trimRight();
            } : h = function(P) {
                return P.replace(/\s+$/, "");
            }, R = {
                Start: 0,
                AtRule: 1,
                Block: 2,
                Selector: 3,
                Ruleset: 4,
                Property: 5,
                Separator: 6,
                Expression: 7,
                URL: 8
            }, C = 0, A = R.Start, d = !1, l = [], r = r.replace(/\r\n/g, `
`); a < o;){
                if (u = r.charAt(a), E = r.charAt(a + 1), a += 1, T(O)) {
                    c += u, u === O && (O = null), u === "\\" && E === O && (c += E, a += 1);
                    continue;
                }
                if (T(u)) {
                    c += u, O = u;
                    continue;
                }
                if (d) {
                    c += u, u === "*" && E === "/" && (d = !1, c += E, a += 1);
                    continue;
                }
                if (u === "/" && E === "*") {
                    d = !0, c += u, c += E, a += 1;
                    continue;
                }
                if (A === R.Start) {
                    if (l.length === 0 && I(u) && c.length === 0) continue;
                    if (u <= " " || u.charCodeAt(0) >= 128) {
                        A = R.Start, c += u;
                        continue;
                    }
                    if (N(u) || u === "@") {
                        if (p = h(c), p.length === 0) l.length > 0 && (c = `

`);
                        else if (p.charAt(p.length - 1) === "}" || p.charAt(p.length - 1) === ";") c = p + `

`;
                        else for(; E = c.charAt(c.length - 1), !(E !== " " && E.charCodeAt(0) !== 9);)c = c.substr(0, c.length - 1);
                        c += u, A = u === "@" ? R.AtRule : R.Selector;
                        continue;
                    }
                }
                if (A === R.AtRule) {
                    if (u === ";") {
                        c += u, A = R.Start;
                        continue;
                    }
                    if (u === "{") {
                        p = h(c), b(), A = p === "@font-face" ? R.Ruleset : R.Block;
                        continue;
                    }
                    c += u;
                    continue;
                }
                if (A === R.Block) {
                    if (N(u)) {
                        if (p = h(c), p.length === 0) l.length > 0 && (c = `

`);
                        else if (p.charAt(p.length - 1) === "}") c = p + `

`;
                        else for(; E = c.charAt(c.length - 1), !(E !== " " && E.charCodeAt(0) !== 9);)c = c.substr(0, c.length - 1);
                        g(), c += u, A = R.Selector;
                        continue;
                    }
                    if (u === "}") {
                        S(), A = R.Start;
                        continue;
                    }
                    c += u;
                    continue;
                }
                if (A === R.Selector) {
                    if (u === "{") {
                        b(), A = R.Ruleset;
                        continue;
                    }
                    if (u === "}") {
                        S(), A = R.Start;
                        continue;
                    }
                    c += u;
                    continue;
                }
                if (A === R.Ruleset) {
                    if (u === "}") {
                        S(), A = R.Start, C > 0 && (A = R.Block);
                        continue;
                    }
                    if (u === `
`) {
                        c = h(c), c += `
`;
                        continue;
                    }
                    if (!I(u)) {
                        c = h(c), c += `
`, g(), c += u, A = R.Property;
                        continue;
                    }
                    c += u;
                    continue;
                }
                if (A === R.Property) {
                    if (u === ":") {
                        c = h(c), c += ": ", A = R.Expression, I(E) && (A = R.Separator);
                        continue;
                    }
                    if (u === "}") {
                        S(), A = R.Start, C > 0 && (A = R.Block);
                        continue;
                    }
                    c += u;
                    continue;
                }
                if (A === R.Separator) {
                    if (!I(u)) {
                        c += u, A = R.Expression;
                        continue;
                    }
                    T(E) && (A = R.Expression);
                    continue;
                }
                if (A === R.Expression) {
                    if (u === "}") {
                        S(), A = R.Start, C > 0 && (A = R.Block);
                        continue;
                    }
                    if (u === ";") {
                        c = h(c), c += `;
`, A = R.Ruleset;
                        continue;
                    }
                    if (c += u, u === "(" && c.charAt(c.length - 2) === "l" && c.charAt(c.length - 3) === "r" && c.charAt(c.length - 4) === "u") {
                        A = R.URL;
                        continue;
                    }
                    continue;
                }
                if (A === R.URL && u === ")" && c.charAt(c.length - 1 !== "\\")) {
                    c += u, A = R.Expression;
                    continue;
                }
                c += u;
            }
            return c = l.join("") + c, c;
        }
        e.exports = n;
    })();
})(Yg);
var pk = Yg.exports;
function Tk(e, t) {
    var n, r, s, i, a, o;
    t = t || {}, r = t.indent_size || 4, s = t.indent_char || " ", a = t.brace_style || "collapse", i = t.max_char == 0 ? 1 / 0 : t.max_char || 70, o = t.unformatted || [
        "a",
        "span",
        "bdo",
        "em",
        "strong",
        "dfn",
        "code",
        "samp",
        "kbd",
        "var",
        "cite",
        "abbr",
        "acronym",
        "q",
        "sub",
        "sup",
        "tt",
        "i",
        "b",
        "big",
        "small",
        "u",
        "s",
        "strike",
        "font",
        "ins",
        "del",
        "pre",
        "address",
        "dt",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6"
    ];
    function l() {
        return this.pos = 0, this.token = "", this.current_mode = "CONTENT", this.tags = {
            //An object to hold tags, their position, and their parent-tags, initiated with default values
            parent: "parent1",
            parentcount: 1,
            parent1: ""
        }, this.tag_type = "", this.token_text = this.last_token = this.last_text = this.token_type = "", this.Utils = {
            //Uilities made available to the various functions
            whitespace: `
\r	 `.split(""),
            single_token: "br,input,link,meta,!doctype,basefont,base,area,hr,wbr,param,img,isindex,?xml,embed,?php,?,?=".split(","),
            //all the single tags for HTML
            extra_liners: "head,body,/html".split(","),
            //for tags that need a line of whitespace before them
            in_array: function(h, I) {
                for(var T = 0; T < I.length; T++)if (h === I[T]) return !0;
                return !1;
            }
        }, this.get_content = function() {
            for(var h = "", I = [], T = !1; this.input.charAt(this.pos) !== "<";){
                if (this.pos >= this.input.length) return I.length ? I.join("") : [
                    "",
                    "TK_EOF"
                ];
                if (h = this.input.charAt(this.pos), this.pos++, this.line_char_count++, this.Utils.in_array(h, this.Utils.whitespace)) {
                    I.length && (T = !0), this.line_char_count--;
                    continue;
                } else if (T) {
                    if (this.line_char_count >= this.max_char) {
                        I.push(`
`);
                        for(var N = 0; N < this.indent_level; N++)I.push(this.indent_string);
                        this.line_char_count = 0;
                    } else I.push(" "), this.line_char_count++;
                    T = !1;
                }
                I.push(h);
            }
            return I.length ? I.join("") : "";
        }, this.get_contents_to = function(h) {
            if (this.pos == this.input.length) return [
                "",
                "TK_EOF"
            ];
            var I = "", T = new RegExp("</" + h + "\\s*>", "igm");
            T.lastIndex = this.pos;
            var N = T.exec(this.input), g = N ? N.index : this.input.length;
            return this.pos < g && (I = this.input.substring(this.pos, g), this.pos = g), I;
        }, this.record_tag = function(h) {
            this.tags[h + "count"] ? (this.tags[h + "count"]++, this.tags[h + this.tags[h + "count"]] = this.indent_level) : (this.tags[h + "count"] = 1, this.tags[h + this.tags[h + "count"]] = this.indent_level), this.tags[h + this.tags[h + "count"] + "parent"] = this.tags.parent, this.tags.parent = h + this.tags[h + "count"];
        }, this.retrieve_tag = function(h) {
            if (this.tags[h + "count"]) {
                for(var I = this.tags.parent; I && h + this.tags[h + "count"] !== I;)I = this.tags[I + "parent"];
                I && (this.indent_level = this.tags[h + this.tags[h + "count"]], this.tags.parent = this.tags[I + "parent"]), delete this.tags[h + this.tags[h + "count"] + "parent"], delete this.tags[h + this.tags[h + "count"]], this.tags[h + "count"] == 1 ? delete this.tags[h + "count"] : this.tags[h + "count"]--;
            }
        }, this.get_tag = function() {
            var h = "", I = [], T = !1, N, g;
            do {
                if (this.pos >= this.input.length) return I.length ? I.join("") : [
                    "",
                    "TK_EOF"
                ];
                if (h = this.input.charAt(this.pos), this.pos++, this.line_char_count++, this.Utils.in_array(h, this.Utils.whitespace)) {
                    T = !0, this.line_char_count--;
                    continue;
                }
                (h === "'" || h === '"') && (!I[1] || I[1] !== "!") && (h += this.get_unformatted(h), T = !0), h === "=" && (T = !1), I.length && I[I.length - 1] !== "=" && h !== ">" && T && (this.line_char_count >= this.max_char ? (this.print_newline(!1, I), this.line_char_count = 0) : (I.push(" "), this.line_char_count++), T = !1), h === "<" && (N = this.pos - 1), I.push(h);
            }while (h !== ">")
            var b = I.join(""), S;
            b.indexOf(" ") != -1 ? S = b.indexOf(" ") : S = b.indexOf(">");
            var P = b.substring(1, S).toLowerCase();
            if (b.charAt(b.length - 2) === "/" || this.Utils.in_array(P, this.Utils.single_token)) this.tag_type = "SINGLE";
            else if (P === "script") this.record_tag(P), this.tag_type = "SCRIPT";
            else if (P === "style") this.record_tag(P), this.tag_type = "STYLE";
            else if (this.Utils.in_array(P, o)) {
                var w = this.get_unformatted("</" + P + ">", b);
                I.push(w), N > 0 && this.Utils.in_array(this.input.charAt(N - 1), this.Utils.whitespace) && I.splice(0, 0, this.input.charAt(N - 1)), g = this.pos - 1, this.Utils.in_array(this.input.charAt(g + 1), this.Utils.whitespace) && I.push(this.input.charAt(g + 1)), this.tag_type = "SINGLE";
            } else if (P.charAt(0) === "!") if (P.indexOf("[if") != -1) {
                if (b.indexOf("!IE") != -1) {
                    var w = this.get_unformatted("-->", b);
                    I.push(w);
                }
                this.tag_type = "START";
            } else if (P.indexOf("[endif") != -1) this.tag_type = "END", this.unindent();
            else if (P.indexOf("[cdata[") != -1) {
                var w = this.get_unformatted("]]>", b);
                I.push(w), this.tag_type = "SINGLE";
            } else {
                var w = this.get_unformatted("-->", b);
                I.push(w), this.tag_type = "SINGLE";
            }
            else P.charAt(0) === "/" ? (this.retrieve_tag(P.substring(1)), this.tag_type = "END") : (this.record_tag(P), this.tag_type = "START"), this.Utils.in_array(P, this.Utils.extra_liners) && this.print_newline(!0, this.output);
            return I.join("");
        }, this.get_unformatted = function(h, I) {
            if (I && I.toLowerCase().indexOf(h) != -1) return "";
            var T = "", N = "", g = !0;
            do {
                if (this.pos >= this.input.length) return N;
                if (T = this.input.charAt(this.pos), this.pos++, this.Utils.in_array(T, this.Utils.whitespace)) {
                    if ("TURBOPACK compile-time falsy", 0) {
                        "TURBOPACK unreachable";
                    }
                    if (T === `
` || T === "\r") {
                        N += `
`, this.line_char_count = 0;
                        continue;
                    }
                }
                N += T, this.line_char_count++, g = !0;
            }while (N.toLowerCase().indexOf(h) == -1)
            return N;
        }, this.get_token = function() {
            var h;
            if (this.last_token === "TK_TAG_SCRIPT" || this.last_token === "TK_TAG_STYLE") {
                var I = this.last_token.substr(7);
                return h = this.get_contents_to(I), typeof h != "string" ? h : [
                    h,
                    "TK_" + I
                ];
            }
            if (this.current_mode === "CONTENT") return h = this.get_content(), typeof h != "string" ? h : [
                h,
                "TK_CONTENT"
            ];
            if (this.current_mode === "TAG") {
                if (h = this.get_tag(), typeof h != "string") return h;
                var T = "TK_TAG_" + this.tag_type;
                return [
                    h,
                    T
                ];
            }
        }, this.get_full_indent = function(h) {
            return h = this.indent_level + h || 0, h < 1 ? "" : Array(h + 1).join(this.indent_string);
        }, this.printer = function(h, I, T, N, g) {
            this.input = h || "", this.output = [], this.indent_character = I, this.indent_string = "", this.indent_size = T, this.brace_style = g, this.indent_level = 0, this.max_char = N, this.line_char_count = 0;
            for(var b = 0; b < this.indent_size; b++)this.indent_string += this.indent_character;
            this.print_newline = function(S, P) {
                if (this.line_char_count = 0, !(!P || !P.length)) {
                    if (!S) for(; this.Utils.in_array(P[P.length - 1], this.Utils.whitespace);)P.pop();
                    P.push(`
`);
                    for(var w = 0; w < this.indent_level; w++)P.push(this.indent_string);
                }
            }, this.print_token = function(S) {
                this.output.push(S);
            }, this.indent = function() {
                this.indent_level++;
            }, this.unindent = function() {
                this.indent_level > 0 && this.indent_level--;
            };
        }, this;
    }
    for(n = new l(), n.printer(e, s, r, i, a);;){
        var c = n.get_token();
        if (n.token_text = c[0], n.token_type = c[1], n.token_type === "TK_EOF") break;
        switch(n.token_type){
            case "TK_TAG_START":
                n.print_newline(!1, n.output), n.print_token(n.token_text), n.indent(), n.current_mode = "CONTENT";
                break;
            case "TK_TAG_STYLE":
            case "TK_TAG_SCRIPT":
                n.print_newline(!1, n.output), n.print_token(n.token_text), n.current_mode = "CONTENT";
                break;
            case "TK_TAG_END":
                if (n.last_token === "TK_CONTENT" && n.last_text === "") {
                    var u = n.token_text.match(/\w+/)[0], E = n.output[n.output.length - 1].match(/<\s*(\w+)/);
                    (E === null || E[1] !== u) && n.print_newline(!0, n.output);
                }
                n.print_token(n.token_text), n.current_mode = "CONTENT";
                break;
            case "TK_TAG_SINGLE":
                var p = n.token_text.match(/^\s*<([a-z]+)/i);
                (!p || !n.Utils.in_array(p[1], o)) && n.print_newline(!1, n.output), n.print_token(n.token_text), n.current_mode = "CONTENT";
                break;
            case "TK_CONTENT":
                n.token_text !== "" && n.print_token(n.token_text), n.current_mode = "TAG";
                break;
            case "TK_STYLE":
            case "TK_SCRIPT":
                if (n.token_text !== "") {
                    n.output.push(`
`);
                    var A = n.token_text;
                    if (n.token_type == "TK_SCRIPT") var R = typeof js_beautify == "function" && js_beautify;
                    else if (n.token_type == "TK_STYLE") var R = typeof css_beautify == "function" && css_beautify;
                    if (t.indent_scripts == "keep") var C = 0;
                    else if (t.indent_scripts == "separate") var C = -n.indent_level;
                    else var C = 1;
                    var O = n.get_full_indent(C);
                    if (R) A = R(A.replace(/^\s*/, O), t);
                    else {
                        var d = A.match(/^\s*/)[0], f = d.match(/[^\n\r]*$/)[0].split(n.indent_string).length - 1, _ = n.get_full_indent(C - f);
                        A = A.replace(/^\s*/, O).replace(/\r\n|\r|\n/g, `
` + _).replace(/\s*$/, "");
                    }
                    A && (n.print_token(A), n.print_newline(!0, n.output));
                }
                n.current_mode = "TAG";
                break;
        }
        n.last_token = n.token_type, n.last_text = n.token_text;
    }
    return n.output.join("");
}
var hk = {
    prettyPrint: Tk
};
const Ak = fk.js_beautify, Sk = pk, Rk = hk.prettyPrint;
let mk = (e)=>~[
        '"',
        "'"
    ].indexOf(e[0]) && ~[
        '"',
        "'"
    ].indexOf(e[e.length - 1]) && e[0] === e[e.length - 1] ? e.substring(1, e.length - 1) : e, _k = (e, t)=>{
    if (!e || !e.length) return "";
    switch(e = mk(e.trim()), t.format){
        case "css":
            return Sk(e, {
                indent: "    ",
                autosemicolon: !0
            });
        case "json":
        case "js":
            return Ak(e, {
                indent_size: 4
            });
        case "html":
        case "xml":
            return Rk(e);
    }
};
var Nk = _k;
const sm = /* @__PURE__ */ Ts(Nk);
var PA = {}, Vg = {
    exports: {}
};
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ (function(e) {
    (function() {
        var t = {}.hasOwnProperty;
        function n() {
            for(var i = "", a = 0; a < arguments.length; a++){
                var o = arguments[a];
                o && (i = s(i, r(o)));
            }
            return i;
        }
        function r(i) {
            if (typeof i == "string" || typeof i == "number") return i;
            if (typeof i != "object") return "";
            if (Array.isArray(i)) return n.apply(null, i);
            if (i.toString !== Object.prototype.toString && !i.toString.toString().includes("[native code]")) return i.toString();
            var a = "";
            for(var o in i)t.call(i, o) && i[o] && (a = s(a, o));
            return a;
        }
        function s(i, a) {
            return a ? i ? i + " " + a : i + a : i;
        }
        e.exports ? (n.default = n, e.exports = n) : window.classNames = n;
    })();
})(Vg);
var Ik = Vg.exports, $s = {}, Wg = {}, ms = {};
(function(e) {
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), e.default = t;
    function t() {}
    t.prototype = {
        /*istanbul ignore start*/ /*istanbul ignore end*/ diff: function(s, i) {
            var a, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, l = o.callback;
            typeof o == "function" && (l = o, o = {}), this.options = o;
            var c = this;
            function u(N) {
                return l ? (setTimeout(function() {
                    l(void 0, N);
                }, 0), !0) : N;
            }
            s = this.castInput(s), i = this.castInput(i), s = this.removeEmpty(this.tokenize(s)), i = this.removeEmpty(this.tokenize(i));
            var E = i.length, p = s.length, A = 1, R = E + p;
            o.maxEditLength && (R = Math.min(R, o.maxEditLength));
            var C = /*istanbul ignore start*/ (a = /*istanbul ignore end*/ o.timeout) !== null && a !== void 0 ? a : 1 / 0, O = Date.now() + C, d = [
                {
                    oldPos: -1,
                    lastComponent: void 0
                }
            ], f = this.extractCommon(d[0], i, s, 0);
            if (d[0].oldPos + 1 >= p && f + 1 >= E) return u([
                {
                    value: this.join(i),
                    count: i.length
                }
            ]);
            var _ = -1 / 0, h = 1 / 0;
            function I() {
                for(var N = Math.max(_, -A); N <= Math.min(h, A); N += 2){
                    var g = /*istanbul ignore start*/ void 0, b = d[N - 1], S = d[N + 1];
                    b && (d[N - 1] = void 0);
                    var P = !1;
                    if (S) {
                        var w = S.oldPos - N;
                        P = S && 0 <= w && w < E;
                    }
                    var G = b && b.oldPos + 1 < p;
                    if (!P && !G) {
                        d[N] = void 0;
                        continue;
                    }
                    if (!G || P && b.oldPos + 1 < S.oldPos ? g = c.addToPath(S, !0, void 0, 0) : g = c.addToPath(b, void 0, !0, 1), f = c.extractCommon(g, i, s, N), g.oldPos + 1 >= p && f + 1 >= E) return u(n(c, g.lastComponent, i, s, c.useLongestToken));
                    d[N] = g, g.oldPos + 1 >= p && (h = Math.min(h, N - 1)), f + 1 >= E && (_ = Math.max(_, N + 1));
                }
                A++;
            }
            if (l) (function N() {
                setTimeout(function() {
                    if (A > R || Date.now() > O) return l();
                    I() || N();
                }, 0);
            })();
            else for(; A <= R && Date.now() <= O;){
                var T = I();
                if (T) return T;
            }
        },
        /*istanbul ignore start*/ /*istanbul ignore end*/ addToPath: function(s, i, a, o) {
            var l = s.lastComponent;
            return l && l.added === i && l.removed === a ? {
                oldPos: s.oldPos + o,
                lastComponent: {
                    count: l.count + 1,
                    added: i,
                    removed: a,
                    previousComponent: l.previousComponent
                }
            } : {
                oldPos: s.oldPos + o,
                lastComponent: {
                    count: 1,
                    added: i,
                    removed: a,
                    previousComponent: l
                }
            };
        },
        /*istanbul ignore start*/ /*istanbul ignore end*/ extractCommon: function(s, i, a, o) {
            for(var l = i.length, c = a.length, u = s.oldPos, E = u - o, p = 0; E + 1 < l && u + 1 < c && this.equals(i[E + 1], a[u + 1]);)E++, u++, p++;
            return p && (s.lastComponent = {
                count: p,
                previousComponent: s.lastComponent
            }), s.oldPos = u, E;
        },
        /*istanbul ignore start*/ /*istanbul ignore end*/ equals: function(s, i) {
            return this.options.comparator ? this.options.comparator(s, i) : s === i || this.options.ignoreCase && s.toLowerCase() === i.toLowerCase();
        },
        /*istanbul ignore start*/ /*istanbul ignore end*/ removeEmpty: function(s) {
            for(var i = [], a = 0; a < s.length; a++)s[a] && i.push(s[a]);
            return i;
        },
        /*istanbul ignore start*/ /*istanbul ignore end*/ castInput: function(s) {
            return s;
        },
        /*istanbul ignore start*/ /*istanbul ignore end*/ tokenize: function(s) {
            return s.split("");
        },
        /*istanbul ignore start*/ /*istanbul ignore end*/ join: function(s) {
            return s.join("");
        }
    };
    function n(r, s, i, a, o) {
        for(var l = [], c; s;)l.push(s), c = s.previousComponent, delete s.previousComponent, s = c;
        l.reverse();
        for(var u = 0, E = l.length, p = 0, A = 0; u < E; u++){
            var R = l[u];
            if (R.removed) {
                if (R.value = r.join(a.slice(A, A + R.count)), A += R.count, u && l[u - 1].added) {
                    var O = l[u - 1];
                    l[u - 1] = l[u], l[u] = O;
                }
            } else {
                if (!R.added && o) {
                    var C = i.slice(p, p + R.count);
                    C = C.map(function(f, _) {
                        var h = a[A + _];
                        return h.length > f.length ? h : f;
                    }), R.value = r.join(C);
                } else R.value = r.join(i.slice(p, p + R.count));
                p += R.count, R.added || (A += R.count);
            }
        }
        var d = l[E - 1];
        return E > 1 && typeof d.value == "string" && (d.added || d.removed) && r.equals("", d.value) && (l[E - 2].value += d.value, l.pop()), l;
    }
})(ms);
var tc = {};
Object.defineProperty(tc, "__esModule", {
    value: !0
});
tc.diffChars = gk;
tc.characterDiff = void 0;
var Ok = Ck(ms);
function Ck(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var jg = new /*istanbul ignore start*/ Ok.default();
tc.characterDiff = jg;
function gk(e, t, n) {
    return jg.diff(e, t, n);
}
var So = {}, pd = {};
Object.defineProperty(pd, "__esModule", {
    value: !0
});
pd.generateOptions = Lk;
function Lk(e, t) {
    if (typeof e == "function") t.callback = e;
    else if (e) for(var n in e)e.hasOwnProperty(n) && (t[n] = e[n]);
    return t;
}
Object.defineProperty(So, "__esModule", {
    value: !0
});
So.diffWords = Pk;
So.diffWordsWithSpace = Mk;
So.wordDiff = void 0;
var yk = bk(ms), vk = pd;
function bk(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var im = /^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/, am = /\S/, nc = new /*istanbul ignore start*/ yk.default();
So.wordDiff = nc;
nc.equals = function(e, t) {
    return this.options.ignoreCase && (e = e.toLowerCase(), t = t.toLowerCase()), e === t || this.options.ignoreWhitespace && !am.test(e) && !am.test(t);
};
nc.tokenize = function(e) {
    for(var t = e.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/), n = 0; n < t.length - 1; n++)!t[n + 1] && t[n + 2] && im.test(t[n]) && im.test(t[n + 2]) && (t[n] += t[n + 2], t.splice(n + 1, 2), n--);
    return t;
};
function Pk(e, t, n) {
    return n = /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, vk.generateOptions)(n, {
        ignoreWhitespace: !0
    }), nc.diff(e, t, n);
}
function Mk(e, t, n) {
    return nc.diff(e, t, n);
}
var hi = {};
Object.defineProperty(hi, "__esModule", {
    value: !0
});
hi.diffLines = Uk;
hi.diffTrimmedLines = Fk;
hi.lineDiff = void 0;
var Dk = xk(ms), wk = pd;
function xk(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var Td = new /*istanbul ignore start*/ Dk.default();
hi.lineDiff = Td;
Td.tokenize = function(e) {
    this.options.stripTrailingCr && (e = e.replace(/\r\n/g, `
`));
    var t = [], n = e.split(/(\n|\r\n)/);
    n[n.length - 1] || n.pop();
    for(var r = 0; r < n.length; r++){
        var s = n[r];
        r % 2 && !this.options.newlineIsToken ? t[t.length - 1] += s : (this.options.ignoreWhitespace && (s = s.trim()), t.push(s));
    }
    return t;
};
function Uk(e, t, n) {
    return Td.diff(e, t, n);
}
function Fk(e, t, n) {
    var r = /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, wk.generateOptions)(n, {
        ignoreWhitespace: !0
    });
    return Td.diff(e, t, r);
}
var rc = {};
Object.defineProperty(rc, "__esModule", {
    value: !0
});
rc.diffSentences = kk;
rc.sentenceDiff = void 0;
var Bk = Gk(ms);
function Gk(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var MA = new /*istanbul ignore start*/ Bk.default();
rc.sentenceDiff = MA;
MA.tokenize = function(e) {
    return e.split(/(\S.+?[.!?])(?=\s+|$)/);
};
function kk(e, t, n) {
    return MA.diff(e, t, n);
}
var sc = {};
Object.defineProperty(sc, "__esModule", {
    value: !0
});
sc.diffCss = Vk;
sc.cssDiff = void 0;
var Hk = Yk(ms);
function Yk(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var DA = new /*istanbul ignore start*/ Hk.default();
sc.cssDiff = DA;
DA.tokenize = function(e) {
    return e.split(/([{}:;,]|\s+)/);
};
function Vk(e, t, n) {
    return DA.diff(e, t, n);
}
var Ro = {};
Object.defineProperty(Ro, "__esModule", {
    value: !0
});
Ro.diffJson = Kk;
Ro.canonicalize = SE;
Ro.jsonDiff = void 0;
var Xg = jk(ms), Wk = hi;
function jk(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function mu(e) {
    "@babel/helpers - typeof";
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? mu = function(n) {
        return typeof n;
    } : mu = function(n) {
        return n && typeof Symbol == "function" && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : typeof n;
    }, mu(e);
}
var Xk = Object.prototype.toString, Xi = new /*istanbul ignore start*/ Xg.default();
Ro.jsonDiff = Xi;
Xi.useLongestToken = !0;
Xi.tokenize = /*istanbul ignore start*/ Wk.lineDiff.tokenize;
Xi.castInput = function(e) {
    var t = /*istanbul ignore end*/ this.options, n = t.undefinedReplacement, r = t.stringifyReplacer, s = r === void 0 ? function(i, a) {
        return /*istanbul ignore end*/ typeof a > "u" ? n : a;
    } : r;
    return typeof e == "string" ? e : JSON.stringify(SE(e, null, null, s), s, "  ");
};
Xi.equals = function(e, t) {
    return /*istanbul ignore start*/ Xg.default.prototype.equals.call(Xi, e.replace(/,([\r\n])/g, "$1"), t.replace(/,([\r\n])/g, "$1"));
};
function Kk(e, t, n) {
    return Xi.diff(e, t, n);
}
function SE(e, t, n, r, s) {
    t = t || [], n = n || [], r && (e = r(s, e));
    var i;
    for(i = 0; i < t.length; i += 1)if (t[i] === e) return n[i];
    var a;
    if (Xk.call(e) === "[object Array]") {
        for(t.push(e), a = new Array(e.length), n.push(a), i = 0; i < e.length; i += 1)a[i] = SE(e[i], t, n, r, s);
        return t.pop(), n.pop(), a;
    }
    if (e && e.toJSON && (e = e.toJSON()), /*istanbul ignore start*/ mu(/*istanbul ignore end*/ e) === "object" && e !== null) {
        t.push(e), a = {}, n.push(a);
        var o = [], l;
        for(l in e)e.hasOwnProperty(l) && o.push(l);
        for(o.sort(), i = 0; i < o.length; i += 1)l = o[i], a[l] = SE(e[l], t, n, r, l);
        t.pop(), n.pop();
    } else a = e;
    return a;
}
var ic = {};
Object.defineProperty(ic, "__esModule", {
    value: !0
});
ic.diffArrays = qk;
ic.arrayDiff = void 0;
var zk = Jk(ms);
function Jk(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var Pl = new /*istanbul ignore start*/ zk.default();
ic.arrayDiff = Pl;
Pl.tokenize = function(e) {
    return e.slice();
};
Pl.join = Pl.removeEmpty = function(e) {
    return e;
};
function qk(e, t, n) {
    return Pl.diff(e, t, n);
}
var hd = {}, ac = {};
Object.defineProperty(ac, "__esModule", {
    value: !0
});
ac.parsePatch = Zk;
function Zk(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = e.split(/\r\n|[\n\v\f\r\x85]/), r = e.match(/\r\n|[\n\v\f\r\x85]/g) || [], s = [], i = 0;
    function a() {
        var c = {};
        for(s.push(c); i < n.length;){
            var u = n[i];
            if (/^(\-\-\-|\+\+\+|@@)\s/.test(u)) break;
            var E = /^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(u);
            E && (c.index = E[1]), i++;
        }
        for(o(c), o(c), c.hunks = []; i < n.length;){
            var p = n[i];
            if (/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(p)) break;
            if (/^@@/.test(p)) c.hunks.push(l());
            else {
                if (p && t.strict) throw new Error("Unknown line " + (i + 1) + " " + JSON.stringify(p));
                i++;
            }
        }
    }
    function o(c) {
        var u = /^(---|\+\+\+)\s+(.*)$/.exec(n[i]);
        if (u) {
            var E = u[1] === "---" ? "old" : "new", p = u[2].split("	", 2), A = p[0].replace(/\\\\/g, "\\");
            /^".*"$/.test(A) && (A = A.substr(1, A.length - 2)), c[E + "FileName"] = A, c[E + "Header"] = (p[1] || "").trim(), i++;
        }
    }
    function l() {
        var c = i, u = n[i++], E = u.split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/), p = {
            oldStart: +E[1],
            oldLines: typeof E[2] > "u" ? 1 : +E[2],
            newStart: +E[3],
            newLines: typeof E[4] > "u" ? 1 : +E[4],
            lines: [],
            linedelimiters: []
        };
        p.oldLines === 0 && (p.oldStart += 1), p.newLines === 0 && (p.newStart += 1);
        for(var A = 0, R = 0; i < n.length && !(n[i].indexOf("--- ") === 0 && i + 2 < n.length && n[i + 1].indexOf("+++ ") === 0 && n[i + 2].indexOf("@@") === 0); i++){
            var C = n[i].length == 0 && i != n.length - 1 ? " " : n[i][0];
            if (C === "+" || C === "-" || C === " " || C === "\\") p.lines.push(n[i]), p.linedelimiters.push(r[i] || `
`), C === "+" ? A++ : C === "-" ? R++ : C === " " && (A++, R++);
            else break;
        }
        if (!A && p.newLines === 1 && (p.newLines = 0), !R && p.oldLines === 1 && (p.oldLines = 0), t.strict) {
            if (A !== p.newLines) throw new Error("Added line count did not match for hunk at line " + (c + 1));
            if (R !== p.oldLines) throw new Error("Removed line count did not match for hunk at line " + (c + 1));
        }
        return p;
    }
    for(; i < n.length;)a();
    return s;
}
var Kg = {};
(function(e) {
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), e.default = t;
    function t(n, r, s) {
        var i = !0, a = !1, o = !1, l = 1;
        return function c() {
            if (i && !o) {
                if (a ? l++ : i = !1, n + l <= s) return l;
                o = !0;
            }
            if (!a) return o || (i = !0), r <= n - l ? -l++ : (a = !0, c());
        };
    }
})(Kg);
Object.defineProperty(hd, "__esModule", {
    value: !0
});
hd.applyPatch = Jg;
hd.applyPatches = eH;
var zg = ac, Qk = $k(Kg);
function $k(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
function Jg(e, t) {
    var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if (typeof t == "string" && (t = /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, zg.parsePatch)(t)), Array.isArray(t)) {
        if (t.length > 1) throw new Error("applyPatch only works with a single input.");
        t = t[0];
    }
    var r = e.split(/\r\n|[\n\v\f\r\x85]/), s = e.match(/\r\n|[\n\v\f\r\x85]/g) || [], i = t.hunks, a = n.compareLine || function(Y, H, F, x) {
        return /*istanbul ignore end*/ H === x;
    }, o = 0, l = n.fuzzFactor || 0, c = 0, u = 0, E, p;
    function A(Y, H) {
        for(var F = 0; F < Y.lines.length; F++){
            var x = Y.lines[F], X = x.length > 0 ? x[0] : " ", J = x.length > 0 ? x.substr(1) : x;
            if (X === " " || X === "-") {
                if (!a(H + 1, r[H], X, J) && (o++, o > l)) return !1;
                H++;
            }
        }
        return !0;
    }
    for(var R = 0; R < i.length; R++){
        for(var C = i[R], O = r.length - C.oldLines, d = 0, f = u + C.oldStart - 1, _ = /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, Qk.default)(f, c, O); d !== void 0; d = _())if (A(C, f + d)) {
            C.offset = u += d;
            break;
        }
        if (d === void 0) return !1;
        c = C.offset + C.oldStart + C.oldLines;
    }
    for(var h = 0, I = 0; I < i.length; I++){
        var T = i[I], N = T.oldStart + T.offset + h - 1;
        h += T.newLines - T.oldLines;
        for(var g = 0; g < T.lines.length; g++){
            var b = T.lines[g], S = b.length > 0 ? b[0] : " ", P = b.length > 0 ? b.substr(1) : b, w = T.linedelimiters && T.linedelimiters[g] || `
`;
            if (S === " ") N++;
            else if (S === "-") r.splice(N, 1), s.splice(N, 1);
            else if (S === "+") r.splice(N, 0, P), s.splice(N, 0, w), N++;
            else if (S === "\\") {
                var G = T.lines[g - 1] ? T.lines[g - 1][0] : null;
                G === "+" ? E = !0 : G === "-" && (p = !0);
            }
        }
    }
    if (E) for(; !r[r.length - 1];)r.pop(), s.pop();
    else p && (r.push(""), s.push(`
`));
    for(var k = 0; k < r.length - 1; k++)r[k] = r[k] + s[k];
    return r.join("");
}
function eH(e, t) {
    typeof e == "string" && (e = /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, zg.parsePatch)(e));
    var n = 0;
    function r() {
        var s = e[n++];
        if (!s) return t.complete();
        t.loadFile(s, function(i, a) {
            if (i) return t.complete(i);
            var o = Jg(a, s, t);
            t.patched(s, o, function(l) {
                if (l) return t.complete(l);
                r();
            });
        });
    }
    r();
}
var Ad = {}, ra = {};
Object.defineProperty(ra, "__esModule", {
    value: !0
});
ra.structuredPatch = qg;
ra.formatPatch = wA;
ra.createTwoFilesPatch = Zg;
ra.createPatch = aH;
var tH = hi;
function Kf(e) {
    return iH(e) || sH(e) || rH(e) || nH();
}
function nH() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function rH(e, t) {
    if (e) {
        if (typeof e == "string") return vT(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return vT(e, t);
    }
}
function sH(e) {
    if (typeof Symbol < "u" && Symbol.iterator in Object(e)) return Array.from(e);
}
function iH(e) {
    if (Array.isArray(e)) return vT(e);
}
function vT(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for(var n = 0, r = new Array(t); n < t; n++)r[n] = e[n];
    return r;
}
function qg(e, t, n, r, s, i, a) {
    a || (a = {}), typeof a.context > "u" && (a.context = 4);
    var o = /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, tH.diffLines)(n, r, a);
    if (!o) return;
    o.push({
        value: "",
        lines: []
    });
    function l(d) {
        return d.map(function(f) {
            return " " + f;
        });
    }
    for(var c = [], u = 0, E = 0, p = [], A = 1, R = 1, C = function(f) {
        var _ = o[f], h = _.lines || _.value.replace(/\n$/, "").split(`
`);
        if (_.lines = h, _.added || _.removed) {
            var I;
            if (!u) {
                var T = o[f - 1];
                u = A, E = R, T && (p = a.context > 0 ? l(T.lines.slice(-a.context)) : [], u -= p.length, E -= p.length);
            }
            (I = /*istanbul ignore end*/ p).push.apply(/*istanbul ignore start*/ I, /*istanbul ignore start*/ Kf(/*istanbul ignore end*/ h.map(function(k) {
                return (_.added ? "+" : "-") + k;
            }))), _.added ? R += h.length : A += h.length;
        } else {
            if (u) if (h.length <= a.context * 2 && f < o.length - 2) {
                var N;
                (N = /*istanbul ignore end*/ p).push.apply(/*istanbul ignore start*/ N, /*istanbul ignore start*/ Kf(/*istanbul ignore end*/ l(h)));
            } else {
                var g, b = Math.min(h.length, a.context);
                (g = /*istanbul ignore end*/ p).push.apply(/*istanbul ignore start*/ g, /*istanbul ignore start*/ Kf(/*istanbul ignore end*/ l(h.slice(0, b))));
                var S = {
                    oldStart: u,
                    oldLines: A - u + b,
                    newStart: E,
                    newLines: R - E + b,
                    lines: p
                };
                if (f >= o.length - 2 && h.length <= a.context) {
                    var P = /\n$/.test(n), w = /\n$/.test(r), G = h.length == 0 && p.length > S.oldLines;
                    !P && G && n.length > 0 && p.splice(S.oldLines, 0, "\\ No newline at end of file"), (!P && !G || !w) && p.push("\\ No newline at end of file");
                }
                c.push(S), u = 0, E = 0, p = [];
            }
            A += h.length, R += h.length;
        }
    }, O = 0; O < o.length; O++)C(/*istanbul ignore end*/ O);
    return {
        oldFileName: e,
        newFileName: t,
        oldHeader: s,
        newHeader: i,
        hunks: c
    };
}
function wA(e) {
    if (Array.isArray(e)) return e.map(wA).join(`
`);
    var t = [];
    e.oldFileName == e.newFileName && t.push("Index: " + e.oldFileName), t.push("==================================================================="), t.push("--- " + e.oldFileName + (typeof e.oldHeader > "u" ? "" : "	" + e.oldHeader)), t.push("+++ " + e.newFileName + (typeof e.newHeader > "u" ? "" : "	" + e.newHeader));
    for(var n = 0; n < e.hunks.length; n++){
        var r = e.hunks[n];
        r.oldLines === 0 && (r.oldStart -= 1), r.newLines === 0 && (r.newStart -= 1), t.push("@@ -" + r.oldStart + "," + r.oldLines + " +" + r.newStart + "," + r.newLines + " @@"), t.push.apply(t, r.lines);
    }
    return t.join(`
`) + `
`;
}
function Zg(e, t, n, r, s, i, a) {
    return wA(qg(e, t, n, r, s, i, a));
}
function aH(e, t, n, r, s, i) {
    return Zg(e, e, t, n, r, s, i);
}
var Sd = {};
Object.defineProperty(Sd, "__esModule", {
    value: !0
});
Sd.arrayEqual = oH;
Sd.arrayStartsWith = Qg;
function oH(e, t) {
    return e.length !== t.length ? !1 : Qg(e, t);
}
function Qg(e, t) {
    if (t.length > e.length) return !1;
    for(var n = 0; n < t.length; n++)if (t[n] !== e[n]) return !1;
    return !0;
}
Object.defineProperty(Ad, "__esModule", {
    value: !0
});
Ad.calcLineCount = $g;
Ad.merge = pH;
var lH = ra, cH = ac, zf = Sd;
function Ua(e) {
    return fH(e) || dH(e) || EH(e) || uH();
}
function uH() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function EH(e, t) {
    if (e) {
        if (typeof e == "string") return bT(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return bT(e, t);
    }
}
function dH(e) {
    if (typeof Symbol < "u" && Symbol.iterator in Object(e)) return Array.from(e);
}
function fH(e) {
    if (Array.isArray(e)) return bT(e);
}
function bT(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for(var n = 0, r = new Array(t); n < t; n++)r[n] = e[n];
    return r;
}
function $g(e) {
    var t = /*istanbul ignore end*/ PT(e.lines), n = t.oldLines, r = t.newLines;
    n !== void 0 ? e.oldLines = n : delete e.oldLines, r !== void 0 ? e.newLines = r : delete e.newLines;
}
function pH(e, t, n) {
    e = om(e, n), t = om(t, n);
    var r = {};
    (e.index || t.index) && (r.index = e.index || t.index), (e.newFileName || t.newFileName) && (lm(e) ? lm(t) ? (r.oldFileName = Zc(r, e.oldFileName, t.oldFileName), r.newFileName = Zc(r, e.newFileName, t.newFileName), r.oldHeader = Zc(r, e.oldHeader, t.oldHeader), r.newHeader = Zc(r, e.newHeader, t.newHeader)) : (r.oldFileName = e.oldFileName, r.newFileName = e.newFileName, r.oldHeader = e.oldHeader, r.newHeader = e.newHeader) : (r.oldFileName = t.oldFileName || e.oldFileName, r.newFileName = t.newFileName || e.newFileName, r.oldHeader = t.oldHeader || e.oldHeader, r.newHeader = t.newHeader || e.newHeader)), r.hunks = [];
    for(var s = 0, i = 0, a = 0, o = 0; s < e.hunks.length || i < t.hunks.length;){
        var l = e.hunks[s] || {
            oldStart: 1 / 0
        }, c = t.hunks[i] || {
            oldStart: 1 / 0
        };
        if (cm(l, c)) r.hunks.push(um(l, a)), s++, o += l.newLines - l.oldLines;
        else if (cm(c, l)) r.hunks.push(um(c, o)), i++, a += c.newLines - c.oldLines;
        else {
            var u = {
                oldStart: Math.min(l.oldStart, c.oldStart),
                oldLines: 0,
                newStart: Math.min(l.newStart + a, c.oldStart + o),
                newLines: 0,
                lines: []
            };
            TH(u, l.oldStart, l.lines, c.oldStart, c.lines), i++, s++, r.hunks.push(u);
        }
    }
    return r;
}
function om(e, t) {
    if (typeof e == "string") {
        if (/^@@/m.test(e) || /^Index:/m.test(e)) return /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, cH.parsePatch)(e)[0];
        if (!t) throw new Error("Must provide a base reference or pass in a patch");
        return /*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, lH.structuredPatch)(void 0, void 0, t, e);
    }
    return e;
}
function lm(e) {
    return e.newFileName && e.newFileName !== e.oldFileName;
}
function Zc(e, t, n) {
    return t === n ? t : (e.conflict = !0, {
        mine: t,
        theirs: n
    });
}
function cm(e, t) {
    return e.oldStart < t.oldStart && e.oldStart + e.oldLines < t.oldStart;
}
function um(e, t) {
    return {
        oldStart: e.oldStart,
        oldLines: e.oldLines,
        newStart: e.newStart + t,
        newLines: e.newLines,
        lines: e.lines
    };
}
function TH(e, t, n, r, s) {
    var i = {
        offset: t,
        lines: n,
        index: 0
    }, a = {
        offset: r,
        lines: s,
        index: 0
    };
    for(dm(e, i, a), dm(e, a, i); i.index < i.lines.length && a.index < a.lines.length;){
        var o = i.lines[i.index], l = a.lines[a.index];
        if ((o[0] === "-" || o[0] === "+") && (l[0] === "-" || l[0] === "+")) hH(e, i, a);
        else if (o[0] === "+" && l[0] === " ") {
            var c;
            (c = /*istanbul ignore end*/ e.lines).push.apply(/*istanbul ignore start*/ c, /*istanbul ignore start*/ Ua(/*istanbul ignore end*/ bi(i)));
        } else if (l[0] === "+" && o[0] === " ") {
            var u;
            (u = /*istanbul ignore end*/ e.lines).push.apply(/*istanbul ignore start*/ u, /*istanbul ignore start*/ Ua(/*istanbul ignore end*/ bi(a)));
        } else o[0] === "-" && l[0] === " " ? Em(e, i, a) : l[0] === "-" && o[0] === " " ? Em(e, a, i, !0) : o === l ? (e.lines.push(o), i.index++, a.index++) : xA(e, bi(i), bi(a));
    }
    fm(e, i), fm(e, a), $g(e);
}
function hH(e, t, n) {
    var r = bi(t), s = bi(n);
    if (pm(r) && pm(s)) {
        if (/*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, zf.arrayStartsWith)(r, s) && Tm(n, r, r.length - s.length)) {
            var i;
            (i = /*istanbul ignore end*/ e.lines).push.apply(/*istanbul ignore start*/ i, /*istanbul ignore start*/ Ua(/*istanbul ignore end*/ r));
            return;
        } else if (/*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, zf.arrayStartsWith)(s, r) && Tm(t, s, s.length - r.length)) {
            var a;
            (a = /*istanbul ignore end*/ e.lines).push.apply(/*istanbul ignore start*/ a, /*istanbul ignore start*/ Ua(/*istanbul ignore end*/ s));
            return;
        }
    } else if (/*istanbul ignore start*/ /*istanbul ignore end*/ /*istanbul ignore start*/ (0, zf.arrayEqual)(r, s)) {
        var o;
        (o = /*istanbul ignore end*/ e.lines).push.apply(/*istanbul ignore start*/ o, /*istanbul ignore start*/ Ua(/*istanbul ignore end*/ r));
        return;
    }
    xA(e, r, s);
}
function Em(e, t, n, r) {
    var s = bi(t), i = AH(n, s);
    if (i.merged) {
        var a;
        (a = /*istanbul ignore end*/ e.lines).push.apply(/*istanbul ignore start*/ a, /*istanbul ignore start*/ Ua(/*istanbul ignore end*/ i.merged));
    } else xA(e, r ? i : s, r ? s : i);
}
function xA(e, t, n) {
    e.conflict = !0, e.lines.push({
        conflict: !0,
        mine: t,
        theirs: n
    });
}
function dm(e, t, n) {
    for(; t.offset < n.offset && t.index < t.lines.length;){
        var r = t.lines[t.index++];
        e.lines.push(r), t.offset++;
    }
}
function fm(e, t) {
    for(; t.index < t.lines.length;){
        var n = t.lines[t.index++];
        e.lines.push(n);
    }
}
function bi(e) {
    for(var t = [], n = e.lines[e.index][0]; e.index < e.lines.length;){
        var r = e.lines[e.index];
        if (n === "-" && r[0] === "+" && (n = "+"), n === r[0]) t.push(r), e.index++;
        else break;
    }
    return t;
}
function AH(e, t) {
    for(var n = [], r = [], s = 0, i = !1, a = !1; s < t.length && e.index < e.lines.length;){
        var o = e.lines[e.index], l = t[s];
        if (l[0] === "+") break;
        if (i = i || o[0] !== " ", r.push(l), s++, o[0] === "+") for(a = !0; o[0] === "+";)n.push(o), o = e.lines[++e.index];
        l.substr(1) === o.substr(1) ? (n.push(o), e.index++) : a = !0;
    }
    if ((t[s] || "")[0] === "+" && i && (a = !0), a) return n;
    for(; s < t.length;)r.push(t[s++]);
    return {
        merged: r,
        changes: n
    };
}
function pm(e) {
    return e.reduce(function(t, n) {
        return t && n[0] === "-";
    }, !0);
}
function Tm(e, t, n) {
    for(var r = 0; r < n; r++){
        var s = t[t.length - n + r].substr(1);
        if (e.lines[e.index + r] !== " " + s) return !1;
    }
    return e.index += n, !0;
}
function PT(e) {
    var t = 0, n = 0;
    return e.forEach(function(r) {
        if (typeof r != "string") {
            var s = PT(r.mine), i = PT(r.theirs);
            t !== void 0 && (s.oldLines === i.oldLines ? t += s.oldLines : t = void 0), n !== void 0 && (s.newLines === i.newLines ? n += s.newLines : n = void 0);
        } else n !== void 0 && (r[0] === "+" || r[0] === " ") && n++, t !== void 0 && (r[0] === "-" || r[0] === " ") && t++;
    }), {
        oldLines: t,
        newLines: n
    };
}
var UA = {};
Object.defineProperty(UA, "__esModule", {
    value: !0
});
UA.reversePatch = eL;
function hm(e, t) {
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter(function(s) {
            return Object.getOwnPropertyDescriptor(e, s).enumerable;
        })), n.push.apply(n, r);
    }
    return n;
}
function Am(e) {
    for(var t = 1; t < arguments.length; t++){
        var n = arguments[t] != null ? arguments[t] : {};
        t % 2 ? hm(Object(n), !0).forEach(function(r) {
            SH(e, r, n[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : hm(Object(n)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
        });
    }
    return e;
}
function SH(e, t, n) {
    return t in e ? Object.defineProperty(e, t, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e;
}
function eL(e) {
    return Array.isArray(e) ? e.map(eL).reverse() : /*istanbul ignore start*/ Am(Am({}, /*istanbul ignore end*/ e), {}, {
        oldFileName: e.newFileName,
        oldHeader: e.newHeader,
        newFileName: e.oldFileName,
        newHeader: e.oldHeader,
        hunks: e.hunks.map(function(t) {
            return {
                oldLines: t.newLines,
                oldStart: t.newStart,
                newLines: t.oldLines,
                newStart: t.oldStart,
                linedelimiters: t.linedelimiters,
                lines: t.lines.map(function(n) {
                    return n.startsWith("-") ? /*istanbul ignore start*/ "+".concat(/*istanbul ignore end*/ n.slice(1)) : n.startsWith("+") ? /*istanbul ignore start*/ "-".concat(/*istanbul ignore end*/ n.slice(1)) : n;
                })
            };
        })
    });
}
var FA = {};
Object.defineProperty(FA, "__esModule", {
    value: !0
});
FA.convertChangesToDMP = RH;
function RH(e) {
    for(var t = [], n, r, s = 0; s < e.length; s++)n = e[s], n.added ? r = 1 : n.removed ? r = -1 : r = 0, t.push([
        r,
        n.value
    ]);
    return t;
}
var BA = {};
Object.defineProperty(BA, "__esModule", {
    value: !0
});
BA.convertChangesToXML = mH;
function mH(e) {
    for(var t = [], n = 0; n < e.length; n++){
        var r = e[n];
        r.added ? t.push("<ins>") : r.removed && t.push("<del>"), t.push(_H(r.value)), r.added ? t.push("</ins>") : r.removed && t.push("</del>");
    }
    return t.join("");
}
function _H(e) {
    var t = e;
    return t = t.replace(/&/g, "&amp;"), t = t.replace(/</g, "&lt;"), t = t.replace(/>/g, "&gt;"), t = t.replace(/"/g, "&quot;"), t;
}
(function(e) {
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), Object.defineProperty(e, "Diff", {
        enumerable: !0,
        get: function() {
            return t.default;
        }
    }), Object.defineProperty(e, "diffChars", {
        enumerable: !0,
        get: function() {
            return n.diffChars;
        }
    }), Object.defineProperty(e, "diffWords", {
        enumerable: !0,
        get: function() {
            return r.diffWords;
        }
    }), Object.defineProperty(e, "diffWordsWithSpace", {
        enumerable: !0,
        get: function() {
            return r.diffWordsWithSpace;
        }
    }), Object.defineProperty(e, "diffLines", {
        enumerable: !0,
        get: function() {
            return s.diffLines;
        }
    }), Object.defineProperty(e, "diffTrimmedLines", {
        enumerable: !0,
        get: function() {
            return s.diffTrimmedLines;
        }
    }), Object.defineProperty(e, "diffSentences", {
        enumerable: !0,
        get: function() {
            return i.diffSentences;
        }
    }), Object.defineProperty(e, "diffCss", {
        enumerable: !0,
        get: function() {
            return a.diffCss;
        }
    }), Object.defineProperty(e, "diffJson", {
        enumerable: !0,
        get: function() {
            return o.diffJson;
        }
    }), Object.defineProperty(e, "canonicalize", {
        enumerable: !0,
        get: function() {
            return o.canonicalize;
        }
    }), Object.defineProperty(e, "diffArrays", {
        enumerable: !0,
        get: function() {
            return l.diffArrays;
        }
    }), Object.defineProperty(e, "applyPatch", {
        enumerable: !0,
        get: function() {
            return c.applyPatch;
        }
    }), Object.defineProperty(e, "applyPatches", {
        enumerable: !0,
        get: function() {
            return c.applyPatches;
        }
    }), Object.defineProperty(e, "parsePatch", {
        enumerable: !0,
        get: function() {
            return u.parsePatch;
        }
    }), Object.defineProperty(e, "merge", {
        enumerable: !0,
        get: function() {
            return E.merge;
        }
    }), Object.defineProperty(e, "reversePatch", {
        enumerable: !0,
        get: function() {
            return p.reversePatch;
        }
    }), Object.defineProperty(e, "structuredPatch", {
        enumerable: !0,
        get: function() {
            return A.structuredPatch;
        }
    }), Object.defineProperty(e, "createTwoFilesPatch", {
        enumerable: !0,
        get: function() {
            return A.createTwoFilesPatch;
        }
    }), Object.defineProperty(e, "createPatch", {
        enumerable: !0,
        get: function() {
            return A.createPatch;
        }
    }), Object.defineProperty(e, "formatPatch", {
        enumerable: !0,
        get: function() {
            return A.formatPatch;
        }
    }), Object.defineProperty(e, "convertChangesToDMP", {
        enumerable: !0,
        get: function() {
            return R.convertChangesToDMP;
        }
    }), Object.defineProperty(e, "convertChangesToXML", {
        enumerable: !0,
        get: function() {
            return C.convertChangesToXML;
        }
    });
    var t = O(ms), n = tc, r = So, s = hi, i = rc, a = sc, o = Ro, l = ic, c = hd, u = ac, E = Ad, p = UA, A = ra, R = FA, C = BA;
    function O(d) {
        return d && d.__esModule ? d : {
            default: d
        };
    }
})(Wg);
var NH = at && at.__createBinding || (Object.create ? function(e, t, n, r) {
    r === void 0 && (r = n);
    var s = Object.getOwnPropertyDescriptor(t, n);
    (!s || ("get" in s ? !t.__esModule : s.writable || s.configurable)) && (s = {
        enumerable: !0,
        get: function() {
            return t[n];
        }
    }), Object.defineProperty(e, r, s);
} : function(e, t, n, r) {
    r === void 0 && (r = n), e[r] = t[n];
}), IH = at && at.__setModuleDefault || (Object.create ? function(e, t) {
    Object.defineProperty(e, "default", {
        enumerable: !0,
        value: t
    });
} : function(e, t) {
    e.default = t;
}), OH = at && at.__importStar || function(e) {
    if (e && e.__esModule) return e;
    var t = {};
    if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && NH(t, e, n);
    return IH(t, e), t;
};
Object.defineProperty($s, "__esModule", {
    value: !0
});
$s.computeLineInformation = $s.DiffMethod = $s.DiffType = void 0;
const MT = OH(Wg), CH = MT;
var ts;
(function(e) {
    e[e.DEFAULT = 0] = "DEFAULT", e[e.ADDED = 1] = "ADDED", e[e.REMOVED = 2] = "REMOVED", e[e.CHANGED = 3] = "CHANGED";
})(ts || ($s.DiffType = ts = {}));
var RE;
(function(e) {
    e.CHARS = "diffChars", e.WORDS = "diffWords", e.WORDS_WITH_SPACE = "diffWordsWithSpace", e.LINES = "diffLines", e.TRIMMED_LINES = "diffTrimmedLines", e.SENTENCES = "diffSentences", e.CSS = "diffCss", e.JSON = "diffJson";
})(RE || ($s.DiffMethod = RE = {}));
const Sm = (e)=>e === "" ? [] : e.replace(/\n$/, "").split(`
`), gH = (e, t, n = RE.CHARS)=>{
    const r = CH[n](e, t), s = {
        left: [],
        right: []
    };
    return r.forEach(({ added: i, removed: a, value: o })=>{
        const l = {};
        return i && (l.type = ts.ADDED, l.value = o, s.right.push(l)), a && (l.type = ts.REMOVED, l.value = o, s.left.push(l)), !a && !i && (l.type = ts.DEFAULT, l.value = o, s.right.push(l), s.left.push(l)), l;
    }), s;
}, LH = (e, t, n = !1, r = RE.CHARS, s = 0, i = [])=>{
    let a = [];
    typeof e == "string" && typeof t == "string" ? a = MT.diffLines(e.trimRight(), t.trimRight(), {
        newlineIsToken: !1,
        ignoreWhitespace: !1,
        ignoreCase: !1
    }) : a = MT.diffJson(e, t);
    let o = s, l = s, c = [], u = 0;
    const E = [], p = [], A = (R, C, O, d, f)=>Sm(R).map((h, I)=>{
            const T = {}, N = {};
            if (!(p.includes(`${C}-${I}`) || f && I !== 0)) {
                if (O || d) {
                    let g = !0;
                    if (d) {
                        l += 1, T.lineNumber = l, T.type = ts.REMOVED, T.value = h || " ";
                        const b = a[C + 1];
                        if (b && b.added) {
                            const S = Sm(b.value)[I];
                            if (S) {
                                const P = A(S, C, !0, !1, !0), { value: w, lineNumber: G, type: k } = P[0].right;
                                if (p.push(`${C + 1}-${I}`), N.lineNumber = G, T.value === w) g = !1, N.type = 0, T.type = 0, N.value = w;
                                else if (N.type = k, n) N.value = w;
                                else {
                                    const Y = gH(h, w, r);
                                    N.value = Y.right, T.value = Y.left;
                                }
                            }
                        }
                    } else o += 1, N.lineNumber = o, N.type = ts.ADDED, N.value = h;
                    g && !f && (E.includes(u) || E.push(u));
                } else l += 1, o += 1, T.lineNumber = l, T.type = ts.DEFAULT, T.value = h, N.lineNumber = o, N.type = ts.DEFAULT, N.value = h;
                return (i != null && i.includes(`L-${T.lineNumber}`) || i != null && i.includes(`R-${N.lineNumber}`) && !E.includes(u)) && E.push(u), f || (u += 1), {
                    right: N,
                    left: T
                };
            }
        }).filter(Boolean);
    return a.forEach(({ added: R, removed: C, value: O }, d)=>{
        c = [
            ...c,
            ...A(O, d, R, C)
        ];
    }), {
        lineInformation: c,
        diffLines: E
    };
};
$s.computeLineInformation = LH;
var GA = {};
function yH(e) {
    if (e.sheet) return e.sheet;
    for(var t = 0; t < document.styleSheets.length; t++)if (document.styleSheets[t].ownerNode === e) return document.styleSheets[t];
}
function vH(e) {
    var t = document.createElement("style");
    return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var bH = /* @__PURE__ */ function() {
    function e(n) {
        var r = this;
        this._insertTag = function(s) {
            var i;
            r.tags.length === 0 ? r.insertionPoint ? i = r.insertionPoint.nextSibling : r.prepend ? i = r.container.firstChild : i = r.before : i = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(s, i), r.tags.push(s);
        }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
    }
    var t = e.prototype;
    return t.hydrate = function(r) {
        r.forEach(this._insertTag);
    }, t.insert = function(r) {
        this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(vH(this));
        var s = this.tags[this.tags.length - 1];
        if (this.isSpeedy) {
            var i = yH(s);
            try {
                i.insertRule(r, i.cssRules.length);
            } catch  {}
        } else s.appendChild(document.createTextNode(r));
        this.ctr++;
    }, t.flush = function() {
        this.tags.forEach(function(r) {
            var s;
            return (s = r.parentNode) == null ? void 0 : s.removeChild(r);
        }), this.tags = [], this.ctr = 0;
    }, e;
}(), on = "-ms-", mE = "-moz-", He = "-webkit-", tL = "comm", kA = "rule", HA = "decl", PH = "@import", nL = "@keyframes", MH = "@layer", DH = Math.abs, Rd = String.fromCharCode, wH = Object.assign;
function xH(e, t) {
    return qt(e, 0) ^ 45 ? (((t << 2 ^ qt(e, 0)) << 2 ^ qt(e, 1)) << 2 ^ qt(e, 2)) << 2 ^ qt(e, 3) : 0;
}
function rL(e) {
    return e.trim();
}
function UH(e, t) {
    return (e = t.exec(e)) ? e[0] : e;
}
function Ye(e, t, n) {
    return e.replace(t, n);
}
function DT(e, t) {
    return e.indexOf(t);
}
function qt(e, t) {
    return e.charCodeAt(t) | 0;
}
function Ml(e, t, n) {
    return e.slice(t, n);
}
function Mr(e) {
    return e.length;
}
function YA(e) {
    return e.length;
}
function Qc(e, t) {
    return t.push(e), e;
}
function FH(e, t) {
    return e.map(t).join("");
}
var md = 1, so = 1, sL = 0, wn = 0, It = 0, mo = "";
function _d(e, t, n, r, s, i, a) {
    return {
        value: e,
        root: t,
        parent: n,
        type: r,
        props: s,
        children: i,
        line: md,
        column: so,
        length: a,
        return: ""
    };
}
function Fo(e, t) {
    return wH(_d("", null, null, "", null, null, 0), e, {
        length: -e.length
    }, t);
}
function BH() {
    return It;
}
function GH() {
    return It = wn > 0 ? qt(mo, --wn) : 0, so--, It === 10 && (so = 1, md--), It;
}
function jn() {
    return It = wn < sL ? qt(mo, wn++) : 0, so++, It === 10 && (so = 1, md++), It;
}
function Hr() {
    return qt(mo, wn);
}
function _u() {
    return wn;
}
function oc(e, t) {
    return Ml(mo, e, t);
}
function Dl(e) {
    switch(e){
        case 0:
        case 9:
        case 10:
        case 13:
        case 32:
            return 5;
        case 33:
        case 43:
        case 44:
        case 47:
        case 62:
        case 64:
        case 126:
        case 59:
        case 123:
        case 125:
            return 4;
        case 58:
            return 3;
        case 34:
        case 39:
        case 40:
        case 91:
            return 2;
        case 41:
        case 93:
            return 1;
    }
    return 0;
}
function iL(e) {
    return md = so = 1, sL = Mr(mo = e), wn = 0, [];
}
function aL(e) {
    return mo = "", e;
}
function Nu(e) {
    return rL(oc(wn - 1, wT(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function kH(e) {
    for(; (It = Hr()) && It < 33;)jn();
    return Dl(e) > 2 || Dl(It) > 3 ? "" : " ";
}
function HH(e, t) {
    for(; --t && jn() && !(It < 48 || It > 102 || It > 57 && It < 65 || It > 70 && It < 97););
    return oc(e, _u() + (t < 6 && Hr() == 32 && jn() == 32));
}
function wT(e) {
    for(; jn();)switch(It){
        case e:
            return wn;
        case 34:
        case 39:
            e !== 34 && e !== 39 && wT(It);
            break;
        case 40:
            e === 41 && wT(e);
            break;
        case 92:
            jn();
            break;
    }
    return wn;
}
function YH(e, t) {
    for(; jn() && e + It !== 57;)if (e + It === 84 && Hr() === 47) break;
    return "/*" + oc(t, wn - 1) + "*" + Rd(e === 47 ? e : jn());
}
function VH(e) {
    for(; !Dl(Hr());)jn();
    return oc(e, wn);
}
function WH(e) {
    return aL(Iu("", null, null, null, [
        ""
    ], e = iL(e), 0, [
        0
    ], e));
}
function Iu(e, t, n, r, s, i, a, o, l) {
    for(var c = 0, u = 0, E = a, p = 0, A = 0, R = 0, C = 1, O = 1, d = 1, f = 0, _ = "", h = s, I = i, T = r, N = _; O;)switch(R = f, f = jn()){
        case 40:
            if (R != 108 && qt(N, E - 1) == 58) {
                DT(N += Ye(Nu(f), "&", "&\f"), "&\f") != -1 && (d = -1);
                break;
            }
        case 34:
        case 39:
        case 91:
            N += Nu(f);
            break;
        case 9:
        case 10:
        case 13:
        case 32:
            N += kH(R);
            break;
        case 92:
            N += HH(_u() - 1, 7);
            continue;
        case 47:
            switch(Hr()){
                case 42:
                case 47:
                    Qc(jH(YH(jn(), _u()), t, n), l);
                    break;
                default:
                    N += "/";
            }
            break;
        case 123 * C:
            o[c++] = Mr(N) * d;
        case 125 * C:
        case 59:
        case 0:
            switch(f){
                case 0:
                case 125:
                    O = 0;
                case 59 + u:
                    d == -1 && (N = Ye(N, /\f/g, "")), A > 0 && Mr(N) - E && Qc(A > 32 ? mm(N + ";", r, n, E - 1) : mm(Ye(N, " ", "") + ";", r, n, E - 2), l);
                    break;
                case 59:
                    N += ";";
                default:
                    if (Qc(T = Rm(N, t, n, c, u, s, o, _, h = [], I = [], E), i), f === 123) if (u === 0) Iu(N, t, T, T, h, i, E, o, I);
                    else switch(p === 99 && qt(N, 3) === 110 ? 100 : p){
                        case 100:
                        case 108:
                        case 109:
                        case 115:
                            Iu(e, T, T, r && Qc(Rm(e, T, T, 0, 0, s, o, _, s, h = [], E), I), s, I, E, o, r ? h : I);
                            break;
                        default:
                            Iu(N, T, T, T, [
                                ""
                            ], I, 0, o, I);
                    }
            }
            c = u = A = 0, C = d = 1, _ = N = "", E = a;
            break;
        case 58:
            E = 1 + Mr(N), A = R;
        default:
            if (C < 1) {
                if (f == 123) --C;
                else if (f == 125 && C++ == 0 && GH() == 125) continue;
            }
            switch(N += Rd(f), f * C){
                case 38:
                    d = u > 0 ? 1 : (N += "\f", -1);
                    break;
                case 44:
                    o[c++] = (Mr(N) - 1) * d, d = 1;
                    break;
                case 64:
                    Hr() === 45 && (N += Nu(jn())), p = Hr(), u = E = Mr(_ = N += VH(_u())), f++;
                    break;
                case 45:
                    R === 45 && Mr(N) == 2 && (C = 0);
            }
    }
    return i;
}
function Rm(e, t, n, r, s, i, a, o, l, c, u) {
    for(var E = s - 1, p = s === 0 ? i : [
        ""
    ], A = YA(p), R = 0, C = 0, O = 0; R < r; ++R)for(var d = 0, f = Ml(e, E + 1, E = DH(C = a[R])), _ = e; d < A; ++d)(_ = rL(C > 0 ? p[d] + " " + f : Ye(f, /&\f/g, p[d]))) && (l[O++] = _);
    return _d(e, t, n, s === 0 ? kA : o, l, c, u);
}
function jH(e, t, n) {
    return _d(e, t, n, tL, Rd(BH()), Ml(e, 2, -2), 0);
}
function mm(e, t, n, r) {
    return _d(e, t, n, HA, Ml(e, 0, r), Ml(e, r + 1, -1), r);
}
function Fa(e, t) {
    for(var n = "", r = YA(e), s = 0; s < r; s++)n += t(e[s], s, e, t) || "";
    return n;
}
function XH(e, t, n, r) {
    switch(e.type){
        case MH:
            if (e.children.length) break;
        case PH:
        case HA:
            return e.return = e.return || e.value;
        case tL:
            return "";
        case nL:
            return e.return = e.value + "{" + Fa(e.children, r) + "}";
        case kA:
            e.value = e.props.join(",");
    }
    return Mr(n = Fa(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function KH(e) {
    var t = YA(e);
    return function(n, r, s, i) {
        for(var a = "", o = 0; o < t; o++)a += e[o](n, r, s, i) || "";
        return a;
    };
}
function zH(e) {
    return function(t) {
        t.root || (t = t.return) && e(t);
    };
}
function JH(e) {
    var t = /* @__PURE__ */ Object.create(null);
    return function(n) {
        return t[n] === void 0 && (t[n] = e(n)), t[n];
    };
}
var qH = function(t, n, r) {
    for(var s = 0, i = 0; s = i, i = Hr(), s === 38 && i === 12 && (n[r] = 1), !Dl(i);)jn();
    return oc(t, wn);
}, ZH = function(t, n) {
    var r = -1, s = 44;
    do switch(Dl(s)){
        case 0:
            s === 38 && Hr() === 12 && (n[r] = 1), t[r] += qH(wn - 1, n, r);
            break;
        case 2:
            t[r] += Nu(s);
            break;
        case 4:
            if (s === 44) {
                t[++r] = Hr() === 58 ? "&\f" : "", n[r] = t[r].length;
                break;
            }
        default:
            t[r] += Rd(s);
    }
    while (s = jn())
    return t;
}, QH = function(t, n) {
    return aL(ZH(iL(t), n));
}, _m = /* @__PURE__ */ new WeakMap(), $H = function(t) {
    if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
    // negative .length indicates that this rule has been already prefixed
    t.length < 1)) {
        for(var n = t.value, r = t.parent, s = t.column === r.column && t.line === r.line; r.type !== "rule";)if (r = r.parent, !r) return;
        if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !_m.get(r)) && !s) {
            _m.set(t, !0);
            for(var i = [], a = QH(n, i), o = r.props, l = 0, c = 0; l < a.length; l++)for(var u = 0; u < o.length; u++, c++)t.props[c] = i[l] ? a[l].replace(/&\f/g, o[u]) : o[u] + " " + a[l];
        }
    }
}, eY = function(t) {
    if (t.type === "decl") {
        var n = t.value;
        // charcode for l
        n.charCodeAt(0) === 108 && // charcode for b
        n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
    }
};
function oL(e, t) {
    switch(xH(e, t)){
        case 5103:
            return He + "print-" + e + e;
        case 5737:
        case 4201:
        case 3177:
        case 3433:
        case 1641:
        case 4457:
        case 2921:
        case 5572:
        case 6356:
        case 5844:
        case 3191:
        case 6645:
        case 3005:
        case 6391:
        case 5879:
        case 5623:
        case 6135:
        case 4599:
        case 4855:
        case 4215:
        case 6389:
        case 5109:
        case 5365:
        case 5621:
        case 3829:
            return He + e + e;
        case 5349:
        case 4246:
        case 4810:
        case 6968:
        case 2756:
            return He + e + mE + e + on + e + e;
        case 6828:
        case 4268:
            return He + e + on + e + e;
        case 6165:
            return He + e + on + "flex-" + e + e;
        case 5187:
            return He + e + Ye(e, /(\w+).+(:[^]+)/, He + "box-$1$2" + on + "flex-$1$2") + e;
        case 5443:
            return He + e + on + "flex-item-" + Ye(e, /flex-|-self/, "") + e;
        case 4675:
            return He + e + on + "flex-line-pack" + Ye(e, /align-content|flex-|-self/, "") + e;
        case 5548:
            return He + e + on + Ye(e, "shrink", "negative") + e;
        case 5292:
            return He + e + on + Ye(e, "basis", "preferred-size") + e;
        case 6060:
            return He + "box-" + Ye(e, "-grow", "") + He + e + on + Ye(e, "grow", "positive") + e;
        case 4554:
            return He + Ye(e, /([^-])(transform)/g, "$1" + He + "$2") + e;
        case 6187:
            return Ye(Ye(Ye(e, /(zoom-|grab)/, He + "$1"), /(image-set)/, He + "$1"), e, "") + e;
        case 5495:
        case 3959:
            return Ye(e, /(image-set\([^]*)/, He + "$1$`$1");
        case 4968:
            return Ye(Ye(e, /(.+:)(flex-)?(.*)/, He + "box-pack:$3" + on + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + He + e + e;
        case 4095:
        case 3583:
        case 4068:
        case 2532:
            return Ye(e, /(.+)-inline(.+)/, He + "$1$2") + e;
        case 8116:
        case 7059:
        case 5753:
        case 5535:
        case 5445:
        case 5701:
        case 4933:
        case 4677:
        case 5533:
        case 5789:
        case 5021:
        case 4765:
            if (Mr(e) - 1 - t > 6) switch(qt(e, t + 1)){
                case 109:
                    if (qt(e, t + 4) !== 45) break;
                case 102:
                    return Ye(e, /(.+:)(.+)-([^]+)/, "$1" + He + "$2-$3$1" + mE + (qt(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
                case 115:
                    return ~DT(e, "stretch") ? oL(Ye(e, "stretch", "fill-available"), t) + e : e;
            }
            break;
        case 4949:
            if (qt(e, t + 1) !== 115) break;
        case 6444:
            switch(qt(e, Mr(e) - 3 - (~DT(e, "!important") && 10))){
                case 107:
                    return Ye(e, ":", ":" + He) + e;
                case 101:
                    return Ye(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + He + (qt(e, 14) === 45 ? "inline-" : "") + "box$3$1" + He + "$2$3$1" + on + "$2box$3") + e;
            }
            break;
        case 5936:
            switch(qt(e, t + 11)){
                case 114:
                    return He + e + on + Ye(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
                case 108:
                    return He + e + on + Ye(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
                case 45:
                    return He + e + on + Ye(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
            }
            return He + e + on + e + e;
    }
    return e;
}
var tY = function(t, n, r, s) {
    if (t.length > -1 && !t.return) switch(t.type){
        case HA:
            t.return = oL(t.value, t.length);
            break;
        case nL:
            return Fa([
                Fo(t, {
                    value: Ye(t.value, "@", "@" + He)
                })
            ], s);
        case kA:
            if (t.length) return FH(t.props, function(i) {
                switch(UH(i, /(::plac\w+|:read-\w+)/)){
                    case ":read-only":
                    case ":read-write":
                        return Fa([
                            Fo(t, {
                                props: [
                                    Ye(i, /:(read-\w+)/, ":" + mE + "$1")
                                ]
                            })
                        ], s);
                    case "::placeholder":
                        return Fa([
                            Fo(t, {
                                props: [
                                    Ye(i, /:(plac\w+)/, ":" + He + "input-$1")
                                ]
                            }),
                            Fo(t, {
                                props: [
                                    Ye(i, /:(plac\w+)/, ":" + mE + "$1")
                                ]
                            }),
                            Fo(t, {
                                props: [
                                    Ye(i, /:(plac\w+)/, on + "input-$1")
                                ]
                            })
                        ], s);
                }
                return "";
            });
    }
}, nY = [
    tY
], rY = function(t) {
    var n = t.key;
    if (n === "css") {
        var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
        Array.prototype.forEach.call(r, function(C) {
            var O = C.getAttribute("data-emotion");
            O.indexOf(" ") !== -1 && (document.head.appendChild(C), C.setAttribute("data-s", ""));
        });
    }
    var s = t.stylisPlugins || nY, i = {}, a, o = [];
    a = t.container || document.head, Array.prototype.forEach.call(// this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'), function(C) {
        for(var O = C.getAttribute("data-emotion").split(" "), d = 1; d < O.length; d++)i[O[d]] = !0;
        o.push(C);
    });
    var l, c = [
        $H,
        eY
    ];
    {
        var u, E = [
            XH,
            zH(function(C) {
                u.insert(C);
            })
        ], p = KH(c.concat(s, E)), A = function(O) {
            return Fa(WH(O), p);
        };
        l = function(O, d, f, _) {
            u = f, A(O ? O + "{" + d.styles + "}" : d.styles), _ && (R.inserted[d.name] = !0);
        };
    }
    var R = {
        key: n,
        sheet: new bH({
            key: n,
            container: a,
            nonce: t.nonce,
            speedy: t.speedy,
            prepend: t.prepend,
            insertionPoint: t.insertionPoint
        }),
        nonce: t.nonce,
        inserted: i,
        registered: {},
        insert: l
    };
    return R.sheet.hydrate(o), R;
};
function sY(e) {
    for(var t = 0, n, r = 0, s = e.length; s >= 4; ++r, s -= 4)n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */ (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */ n >>> 24, t = /* Math.imul(k, m): */ (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */ (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
    switch(s){
        case 3:
            t ^= (e.charCodeAt(r + 2) & 255) << 16;
        case 2:
            t ^= (e.charCodeAt(r + 1) & 255) << 8;
        case 1:
            t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */ (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
    }
    return t ^= t >>> 13, t = /* Math.imul(h, m): */ (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var iY = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    scale: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
}, aY = /[A-Z]|^ms/g, oY = /_EMO_([^_]+?)_([^]*?)_EMO_/g, lL = function(t) {
    return t.charCodeAt(1) === 45;
}, Nm = function(t) {
    return t != null && typeof t != "boolean";
}, Jf = /* @__PURE__ */ JH(function(e) {
    return lL(e) ? e : e.replace(aY, "-$&").toLowerCase();
}), Im = function(t, n) {
    switch(t){
        case "animation":
        case "animationName":
            if (typeof n == "string") return n.replace(oY, function(r, s, i) {
                return Bs = {
                    name: s,
                    styles: i,
                    next: Bs
                }, s;
            });
    }
    return iY[t] !== 1 && !lL(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function _E(e, t, n) {
    if (n == null) return "";
    var r = n;
    if (r.__emotion_styles !== void 0) return r;
    switch(typeof n){
        case "boolean":
            return "";
        case "object":
            {
                var s = n;
                if (s.anim === 1) return Bs = {
                    name: s.name,
                    styles: s.styles,
                    next: Bs
                }, s.name;
                var i = n;
                if (i.styles !== void 0) {
                    var a = i.next;
                    if (a !== void 0) for(; a !== void 0;)Bs = {
                        name: a.name,
                        styles: a.styles,
                        next: Bs
                    }, a = a.next;
                    var o = i.styles + ";";
                    return o;
                }
                return lY(e, t, n);
            }
    }
    var l = n;
    if (t == null) return l;
    var c = t[l];
    return c !== void 0 ? c : l;
}
function lY(e, t, n) {
    var r = "";
    if (Array.isArray(n)) for(var s = 0; s < n.length; s++)r += _E(e, t, n[s]) + ";";
    else for(var i in n){
        var a = n[i];
        if (typeof a != "object") {
            var o = a;
            t != null && t[o] !== void 0 ? r += i + "{" + t[o] + "}" : Nm(o) && (r += Jf(i) + ":" + Im(i, o) + ";");
        } else if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0)) for(var l = 0; l < a.length; l++)Nm(a[l]) && (r += Jf(i) + ":" + Im(i, a[l]) + ";");
        else {
            var c = _E(e, t, a);
            switch(i){
                case "animation":
                case "animationName":
                    {
                        r += Jf(i) + ":" + c + ";";
                        break;
                    }
                default:
                    r += i + "{" + c + "}";
            }
        }
    }
    return r;
}
var Om = /label:\s*([^\s;{]+)\s*(;|$)/g, Bs;
function qf(e, t, n) {
    if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0) return e[0];
    var r = !0, s = "";
    Bs = void 0;
    var i = e[0];
    if (i == null || i.raw === void 0) r = !1, s += _E(n, t, i);
    else {
        var a = i;
        s += a[0];
    }
    for(var o = 1; o < e.length; o++)if (s += _E(n, t, e[o]), r) {
        var l = i;
        s += l[o];
    }
    Om.lastIndex = 0;
    for(var c = "", u; (u = Om.exec(s)) !== null;)c += "-" + u[1];
    var E = sY(s) + c;
    return {
        name: E,
        styles: s,
        next: Bs
    };
}
function cL(e, t, n) {
    var r = "";
    return n.split(" ").forEach(function(s) {
        e[s] !== void 0 ? t.push(e[s] + ";") : s && (r += s + " ");
    }), r;
}
var cY = function(t, n, r) {
    var s = t.key + "-" + n.name;
    // we only need to add the styles to the registered cache if the
    // class name could be used further down
    // the tree but if it's a string tag, we know it won't
    // so we don't have to add it to registered cache.
    // this improves memory usage since we can avoid storing the whole style string
    t.registered[s] === void 0 && (t.registered[s] = n.styles);
}, uY = function(t, n, r) {
    cY(t, n);
    var s = t.key + "-" + n.name;
    if (t.inserted[n.name] === void 0) {
        var i = n;
        do t.insert(n === i ? "." + s : "", i, t.sheet, !0), i = i.next;
        while (i !== void 0)
    }
};
function Cm(e, t) {
    if (e.inserted[t.name] === void 0) return e.insert("", t, e.sheet, !0);
}
function gm(e, t, n) {
    var r = [], s = cL(e, r, n);
    return r.length < 2 ? n : s + t(r);
}
var EY = function(t) {
    var n = rY(t);
    n.sheet.speedy = function(o) {
        this.isSpeedy = o;
    }, n.compat = !0;
    var r = function() {
        for(var l = arguments.length, c = new Array(l), u = 0; u < l; u++)c[u] = arguments[u];
        var E = qf(c, n.registered, void 0);
        return uY(n, E), n.key + "-" + E.name;
    }, s = function() {
        for(var l = arguments.length, c = new Array(l), u = 0; u < l; u++)c[u] = arguments[u];
        var E = qf(c, n.registered), p = "animation-" + E.name;
        return Cm(n, {
            name: E.name,
            styles: "@keyframes " + p + "{" + E.styles + "}"
        }), p;
    }, i = function() {
        for(var l = arguments.length, c = new Array(l), u = 0; u < l; u++)c[u] = arguments[u];
        var E = qf(c, n.registered);
        Cm(n, E);
    }, a = function() {
        for(var l = arguments.length, c = new Array(l), u = 0; u < l; u++)c[u] = arguments[u];
        return gm(n.registered, r, dY(c));
    };
    return {
        css: r,
        cx: a,
        injectGlobal: i,
        keyframes: s,
        hydrate: function(l) {
            l.forEach(function(c) {
                n.inserted[c] = !0;
            });
        },
        flush: function() {
            n.registered = {}, n.inserted = {}, n.sheet.flush();
        },
        sheet: n.sheet,
        cache: n,
        getRegisteredStyles: cL.bind(null, n.registered),
        merge: gm.bind(null, n.registered, r)
    };
}, dY = function e(t) {
    for(var n = "", r = 0; r < t.length; r++){
        var s = t[r];
        if (s != null) {
            var i = void 0;
            switch(typeof s){
                case "boolean":
                    break;
                case "object":
                    {
                        if (Array.isArray(s)) i = e(s);
                        else {
                            i = "";
                            for(var a in s)s[a] && a && (i && (i += " "), i += a);
                        }
                        break;
                    }
                default:
                    i = s;
            }
            i && (n && (n += " "), n += i);
        }
    }
    return n;
};
const fY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    default: EY
}, Symbol.toStringTag, {
    value: "Module"
})), pY = /* @__PURE__ */ bm(fY);
var TY = at && at.__rest || function(e, t) {
    var n = {};
    for(var r in e)Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
    if (e != null && typeof Object.getOwnPropertySymbols == "function") for(var s = 0, r = Object.getOwnPropertySymbols(e); s < r.length; s++)t.indexOf(r[s]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[s]) && (n[r[s]] = e[r[s]]);
    return n;
}, hY = at && at.__importDefault || function(e) {
    return e && e.__esModule ? e : {
        default: e
    };
};
Object.defineProperty(GA, "__esModule", {
    value: !0
});
const AY = hY(pY);
GA.default = (e, t = !1, n = "")=>{
    const { variables: r = {} } = e, s = TY(e, [
        "variables"
    ]), i = {
        light: Object.assign({
            diffViewerBackground: "#fff",
            diffViewerColor: "#212529",
            addedBackground: "#e6ffed",
            addedColor: "#24292e",
            removedBackground: "#ffeef0",
            removedColor: "#24292e",
            changedBackground: "#fffbdd",
            wordAddedBackground: "#acf2bd",
            wordRemovedBackground: "#fdb8c0",
            addedGutterBackground: "#cdffd8",
            removedGutterBackground: "#ffdce0",
            gutterBackground: "#f7f7f7",
            gutterBackgroundDark: "#f3f1f1",
            highlightBackground: "#fffbdd",
            highlightGutterBackground: "#fff5b1",
            codeFoldGutterBackground: "#dbedff",
            codeFoldBackground: "#f1f8ff",
            emptyLineBackground: "#fafbfc",
            gutterColor: "#212529",
            addedGutterColor: "#212529",
            removedGutterColor: "#212529",
            codeFoldContentColor: "#212529",
            diffViewerTitleBackground: "#fafbfc",
            diffViewerTitleColor: "#212529",
            diffViewerTitleBorderColor: "#eee"
        }, r.light || {}),
        dark: Object.assign({
            diffViewerBackground: "#2e303c",
            diffViewerColor: "#FFF",
            addedBackground: "#044B53",
            addedColor: "white",
            removedBackground: "#632F34",
            removedColor: "white",
            changedBackground: "#3e302c",
            wordAddedBackground: "#055d67",
            wordRemovedBackground: "#7d383f",
            addedGutterBackground: "#034148",
            removedGutterBackground: "#632b30",
            gutterBackground: "#2c2f3a",
            gutterBackgroundDark: "#262933",
            highlightBackground: "#2a3967",
            highlightGutterBackground: "#2d4077",
            codeFoldGutterBackground: "#21232b",
            codeFoldBackground: "#262831",
            emptyLineBackground: "#363946",
            gutterColor: "#666c87",
            addedGutterColor: "#8c8c8c",
            removedGutterColor: "#8c8c8c",
            codeFoldContentColor: "#656a8b",
            diffViewerTitleBackground: "#2f323e",
            diffViewerTitleColor: "#555a7b",
            diffViewerTitleBorderColor: "#353846"
        }, r.dark || {})
    }, a = t ? i.dark : i.light, { css: o, cx: l } = (0, AY.default)({
        key: "react-diff",
        nonce: n
    }), c = o({
        width: "100%",
        label: "content"
    }), u = o({
        [`.${c}`]: {
            width: "50%"
        },
        label: "split-view"
    }), E = o({
        width: "100%",
        background: a.diffViewerBackground,
        pre: {
            margin: 0,
            whiteSpace: "pre-wrap",
            lineHeight: "25px"
        },
        label: "diff-container",
        borderCollapse: "collapse"
    }), p = o({
        color: a.codeFoldContentColor,
        label: "code-fold-content"
    }), A = o({
        color: a.diffViewerColor,
        label: "content-text"
    }), R = o({
        background: a.diffViewerTitleBackground,
        padding: 10,
        borderBottom: `1px solid ${a.diffViewerTitleBorderColor}`,
        label: "title-block",
        ":last-child": {
            borderLeft: `1px solid ${a.diffViewerTitleBorderColor}`
        },
        [`.${A}`]: {
            color: a.diffViewerTitleColor
        }
    }), C = o({
        color: a.gutterColor,
        label: "line-number"
    }), O = o({
        background: a.removedBackground,
        color: a.removedColor,
        pre: {
            color: a.removedColor
        },
        [`.${C}`]: {
            color: a.removedGutterColor
        },
        label: "diff-removed"
    }), d = o({
        background: a.addedBackground,
        color: a.addedColor,
        pre: {
            color: a.addedColor
        },
        [`.${C}`]: {
            color: a.addedGutterColor
        },
        label: "diff-added"
    }), f = o({
        background: a.changedBackground,
        [`.${C}`]: {
            color: a.gutterColor
        },
        label: "diff-changed"
    }), _ = o({
        padding: 2,
        display: "inline-flex",
        borderRadius: 4,
        wordBreak: "break-all",
        label: "word-diff"
    }), h = o({
        background: a.wordAddedBackground,
        label: "word-added"
    }), I = o({
        background: a.wordRemovedBackground,
        label: "word-removed"
    }), T = o({
        backgroundColor: a.codeFoldGutterBackground,
        label: "code-fold-gutter"
    }), N = o({
        backgroundColor: a.codeFoldBackground,
        height: 40,
        fontSize: 14,
        fontWeight: 700,
        label: "code-fold",
        a: {
            textDecoration: "underline !important",
            cursor: "pointer",
            pre: {
                display: "inline"
            }
        }
    }), g = o({
        backgroundColor: a.emptyLineBackground,
        label: "empty-line"
    }), b = o({
        width: 25,
        paddingLeft: 10,
        paddingRight: 10,
        userSelect: "none",
        label: "marker",
        [`&.${d}`]: {
            pre: {
                color: a.addedColor
            }
        },
        [`&.${O}`]: {
            pre: {
                color: a.removedColor
            }
        }
    }), S = o({
        background: a.highlightBackground,
        label: "highlighted-line",
        [`.${h}, .${I}`]: {
            backgroundColor: "initial"
        }
    }), P = o({
        label: "highlighted-gutter"
    }), w = o({
        userSelect: "none",
        minWidth: 50,
        padding: "0 10px",
        whiteSpace: "nowrap",
        label: "gutter",
        textAlign: "right",
        background: a.gutterBackground,
        "&:hover": {
            cursor: "pointer",
            background: a.gutterBackgroundDark,
            pre: {
                opacity: 1
            }
        },
        pre: {
            opacity: 0.5
        },
        [`&.${d}`]: {
            background: a.addedGutterBackground
        },
        [`&.${O}`]: {
            background: a.removedGutterBackground
        },
        [`&.${P}`]: {
            background: a.highlightGutterBackground,
            "&:hover": {
                background: a.highlightGutterBackground
            }
        }
    }), G = o({
        "&:hover": {
            background: a.gutterBackground,
            cursor: "initial"
        },
        label: "empty-gutter"
    }), k = o({
        verticalAlign: "baseline",
        label: "line"
    }), Y = {
        diffContainer: E,
        diffRemoved: O,
        diffAdded: d,
        diffChanged: f,
        splitView: u,
        marker: b,
        highlightedGutter: P,
        highlightedLine: S,
        gutter: w,
        line: k,
        wordDiff: _,
        wordAdded: h,
        wordRemoved: I,
        codeFoldGutter: T,
        codeFold: N,
        emptyGutter: G,
        emptyLine: g,
        lineNumber: C,
        contentText: A,
        content: c,
        codeFoldContent: p,
        titleBlock: R
    }, H = Object.keys(s).reduce((F, x)=>Object.assign(Object.assign({}, F), {
            [x]: o(s[x])
        }), {});
    return Object.keys(Y).reduce((F, x)=>Object.assign(Object.assign({}, F), {
            [x]: H[x] ? l(Y[x], H[x]) : Y[x]
        }), {});
};
var Nd = {};
Object.defineProperty(Nd, "__esModule", {
    value: !0
});
Nd.computeHiddenBlocks = void 0;
function SY(e, t, n) {
    let r = 0, s, i = {}, a = [];
    return e.forEach((o, l)=>{
        const c = t.some((u)=>u >= l - n && u <= l + n);
        !c && s == null ? (s = {
            index: r,
            startLine: l,
            endLine: l,
            lines: 1
        }, a.push(s), i[l] = s.index, r++) : c ? s = void 0 : (s.endLine = l, s.lines++, i[l] = s.index);
    }), {
        lineBlocks: i,
        blocks: a
    };
}
Nd.computeHiddenBlocks = SY;
var Lm = Number.isNaN || function(t) {
    return typeof t == "number" && t !== t;
};
function RY(e, t) {
    return !!(e === t || Lm(e) && Lm(t));
}
function mY(e, t) {
    if (e.length !== t.length) return !1;
    for(var n = 0; n < e.length; n++)if (!RY(e[n], t[n])) return !1;
    return !0;
}
function _Y(e, t) {
    t === void 0 && (t = mY);
    var n = null;
    function r() {
        for(var s = [], i = 0; i < arguments.length; i++)s[i] = arguments[i];
        if (n && n.lastThis === this && t(s, n.lastArgs)) return n.lastResult;
        var a = e.apply(this, s);
        return n = {
            lastResult: a,
            lastArgs: s,
            lastThis: this
        }, a;
    }
    return r.clear = function() {
        n = null;
    }, r;
}
const NY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    default: _Y
}, Symbol.toStringTag, {
    value: "Module"
})), IY = /* @__PURE__ */ bm(NY);
(function(e) {
    var t = at && at.__createBinding || (Object.create ? function(C, O, d, f) {
        f === void 0 && (f = d);
        var _ = Object.getOwnPropertyDescriptor(O, d);
        (!_ || ("get" in _ ? !O.__esModule : _.writable || _.configurable)) && (_ = {
            enumerable: !0,
            get: function() {
                return O[d];
            }
        }), Object.defineProperty(C, f, _);
    } : function(C, O, d, f) {
        f === void 0 && (f = d), C[f] = O[d];
    }), n = at && at.__setModuleDefault || (Object.create ? function(C, O) {
        Object.defineProperty(C, "default", {
            enumerable: !0,
            value: O
        });
    } : function(C, O) {
        C.default = O;
    }), r = at && at.__importStar || function(C) {
        if (C && C.__esModule) return C;
        var O = {};
        if (C != null) for(var d in C)d !== "default" && Object.prototype.hasOwnProperty.call(C, d) && t(O, C, d);
        return n(O, C), O;
    }, s = at && at.__importDefault || function(C) {
        return C && C.__esModule ? C : {
            default: C
        };
    };
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), e.DiffMethod = e.LineNumberPrefix = void 0;
    const i = m, a = r(L), o = s(Ik), l = $s;
    Object.defineProperty(e, "DiffMethod", {
        enumerable: !0,
        get: function() {
            return l.DiffMethod;
        }
    });
    const c = s(GA), u = Nd, E = IY, p = E.default || E;
    var A;
    (function(C) {
        C.LEFT = "L", C.RIGHT = "R";
    })(A || (e.LineNumberPrefix = A = {}));
    class R extends a.Component {
        constructor(O){
            super(O), this.resetCodeBlocks = ()=>this.state.expandedBlocks.length > 0 ? (this.setState({
                    expandedBlocks: []
                }), !0) : !1, this.onBlockExpand = (d)=>{
                const f = this.state.expandedBlocks.slice();
                f.push(d), this.setState({
                    expandedBlocks: f
                });
            }, this.computeStyles = p(c.default), this.onLineNumberClickProxy = (d)=>this.props.onLineNumberClick ? (f)=>this.props.onLineNumberClick(d, f) : ()=>{}, this.renderWordDiff = (d, f)=>d.map((_, h)=>(0, i.jsx)("span", {
                        className: (0, o.default)(this.styles.wordDiff, {
                            [this.styles.wordAdded]: _.type === l.DiffType.ADDED,
                            [this.styles.wordRemoved]: _.type === l.DiffType.REMOVED
                        }),
                        children: f ? f(_.value) : _.value
                    }, h)), this.renderLine = (d, f, _, h, I, T)=>{
                const N = `${_}-${d}`, g = `${T}-${I}`, b = this.props.highlightLines.includes(N) || this.props.highlightLines.includes(g), S = f === l.DiffType.ADDED, P = f === l.DiffType.REMOVED, w = f === l.DiffType.CHANGED;
                let G;
                return Array.isArray(h) ? G = this.renderWordDiff(h, this.props.renderContent) : this.props.renderContent ? G = this.props.renderContent(h) : G = h, (0, i.jsxs)(a.Fragment, {
                    children: [
                        !this.props.hideLineNumbers && (0, i.jsx)("td", {
                            onClick: d && this.onLineNumberClickProxy(N),
                            className: (0, o.default)(this.styles.gutter, {
                                [this.styles.emptyGutter]: !d,
                                [this.styles.diffAdded]: S,
                                [this.styles.diffRemoved]: P,
                                [this.styles.diffChanged]: w,
                                [this.styles.highlightedGutter]: b
                            }),
                            children: (0, i.jsx)("pre", {
                                className: this.styles.lineNumber,
                                children: d
                            })
                        }),
                        !this.props.splitView && !this.props.hideLineNumbers && (0, i.jsx)("td", {
                            onClick: I && this.onLineNumberClickProxy(g),
                            className: (0, o.default)(this.styles.gutter, {
                                [this.styles.emptyGutter]: !I,
                                [this.styles.diffAdded]: S,
                                [this.styles.diffRemoved]: P,
                                [this.styles.diffChanged]: w,
                                [this.styles.highlightedGutter]: b
                            }),
                            children: (0, i.jsx)("pre", {
                                className: this.styles.lineNumber,
                                children: I
                            })
                        }),
                        this.props.renderGutter ? this.props.renderGutter({
                            lineNumber: d,
                            type: f,
                            prefix: _,
                            value: h,
                            additionalLineNumber: I,
                            additionalPrefix: T,
                            styles: this.styles
                        }) : null,
                        !this.props.hideMarkers && (0, i.jsx)("td", {
                            className: (0, o.default)(this.styles.marker, {
                                [this.styles.emptyLine]: !G,
                                [this.styles.diffAdded]: S,
                                [this.styles.diffRemoved]: P,
                                [this.styles.diffChanged]: w,
                                [this.styles.highlightedLine]: b
                            }),
                            children: (0, i.jsxs)("pre", {
                                children: [
                                    S && "+",
                                    P && "-"
                                ]
                            })
                        }),
                        (0, i.jsx)("td", {
                            className: (0, o.default)(this.styles.content, {
                                [this.styles.emptyLine]: !G,
                                [this.styles.diffAdded]: S,
                                [this.styles.diffRemoved]: P,
                                [this.styles.diffChanged]: w,
                                [this.styles.highlightedLine]: b
                            }),
                            children: (0, i.jsx)("pre", {
                                className: this.styles.contentText,
                                children: G
                            })
                        })
                    ]
                });
            }, this.renderSplitView = ({ left: d, right: f }, _)=>(0, i.jsxs)("tr", {
                    className: this.styles.line,
                    children: [
                        this.renderLine(d.lineNumber, d.type, A.LEFT, d.value),
                        this.renderLine(f.lineNumber, f.type, A.RIGHT, f.value)
                    ]
                }, _), this.renderInlineView = ({ left: d, right: f }, _)=>{
                let h;
                return d.type === l.DiffType.REMOVED && f.type === l.DiffType.ADDED ? (0, i.jsxs)(a.Fragment, {
                    children: [
                        (0, i.jsx)("tr", {
                            className: this.styles.line,
                            children: this.renderLine(d.lineNumber, d.type, A.LEFT, d.value, null)
                        }),
                        (0, i.jsx)("tr", {
                            className: this.styles.line,
                            children: this.renderLine(null, f.type, A.RIGHT, f.value, f.lineNumber)
                        })
                    ]
                }, _) : (d.type === l.DiffType.REMOVED && (h = this.renderLine(d.lineNumber, d.type, A.LEFT, d.value, null)), d.type === l.DiffType.DEFAULT && (h = this.renderLine(d.lineNumber, d.type, A.LEFT, d.value, f.lineNumber, A.RIGHT)), f.type === l.DiffType.ADDED && (h = this.renderLine(null, f.type, A.RIGHT, f.value, f.lineNumber)), (0, i.jsx)("tr", {
                    className: this.styles.line,
                    children: h
                }, _));
            }, this.onBlockClickProxy = (d)=>()=>this.onBlockExpand(d), this.renderSkippedLineIndicator = (d, f, _, h)=>{
                const { hideLineNumbers: I, splitView: T } = this.props, N = this.props.codeFoldMessageRenderer ? this.props.codeFoldMessageRenderer(d, _, h) : (0, i.jsxs)("pre", {
                    className: this.styles.codeFoldContent,
                    children: [
                        "Expand ",
                        d,
                        " lines ..."
                    ]
                }), g = (0, i.jsx)("td", {
                    children: (0, i.jsx)("a", {
                        onClick: this.onBlockClickProxy(f),
                        tabIndex: 0,
                        children: N
                    })
                }), b = !T && !I;
                return (0, i.jsxs)("tr", {
                    className: this.styles.codeFold,
                    children: [
                        !I && (0, i.jsx)("td", {
                            className: this.styles.codeFoldGutter
                        }),
                        this.props.renderGutter ? (0, i.jsx)("td", {
                            className: this.styles.codeFoldGutter
                        }) : null,
                        (0, i.jsx)("td", {
                            className: (0, o.default)({
                                [this.styles.codeFoldGutter]: b
                            })
                        }),
                        b ? (0, i.jsxs)(a.Fragment, {
                            children: [
                                (0, i.jsx)("td", {}),
                                g
                            ]
                        }) : (0, i.jsxs)(a.Fragment, {
                            children: [
                                g,
                                this.props.renderGutter ? (0, i.jsx)("td", {}) : null,
                                (0, i.jsx)("td", {})
                            ]
                        }),
                        (0, i.jsx)("td", {}),
                        (0, i.jsx)("td", {})
                    ]
                }, `${_}-${h}`);
            }, this.renderDiff = ()=>{
                const { oldValue: d, newValue: f, splitView: _, disableWordDiff: h, compareMethod: I, linesOffset: T } = this.props, { lineInformation: N, diffLines: g } = (0, l.computeLineInformation)(d, f, h, I, T, this.props.alwaysShowLines), b = this.props.extraLinesSurroundingDiff < 0 ? 0 : Math.round(this.props.extraLinesSurroundingDiff), { lineBlocks: S, blocks: P } = (0, u.computeHiddenBlocks)(N, g, b);
                return N.map((w, G)=>{
                    if (this.props.showDiffOnly) {
                        const Y = S[G];
                        if (Y !== void 0) {
                            const H = P[Y].endLine === G;
                            if (!this.state.expandedBlocks.includes(Y) && H) return (0, i.jsx)(a.Fragment, {
                                children: this.renderSkippedLineIndicator(P[Y].lines, Y, w.left.lineNumber, w.right.lineNumber)
                            }, G);
                            if (!this.state.expandedBlocks.includes(Y)) return null;
                        }
                    }
                    return _ ? this.renderSplitView(w, G) : this.renderInlineView(w, G);
                });
            }, this.render = ()=>{
                const { oldValue: d, newValue: f, useDarkTheme: _, leftTitle: h, rightTitle: I, splitView: T, hideLineNumbers: N, hideMarkers: g, nonce: b } = this.props;
                if (this.props.compareMethod !== l.DiffMethod.JSON && (typeof d != "string" || typeof f != "string")) throw Error('"oldValue" and "newValue" should be strings');
                this.styles = this.computeStyles(this.props.styles, _, b);
                const S = this.renderDiff();
                let P = N ? 2 : 3, w = N ? 2 : 4;
                g && (P -= 1, w -= 1);
                const G = this.props.renderGutter ? 1 : 0, k = (h || I) && (0, i.jsxs)("tr", {
                    children: [
                        (0, i.jsx)("td", {
                            colSpan: (T ? P : w) + G,
                            className: this.styles.titleBlock,
                            children: (0, i.jsx)("pre", {
                                className: this.styles.contentText,
                                children: h
                            })
                        }),
                        T && (0, i.jsx)("td", {
                            colSpan: P + G,
                            className: this.styles.titleBlock,
                            children: (0, i.jsx)("pre", {
                                className: this.styles.contentText,
                                children: I
                            })
                        })
                    ]
                });
                return (0, i.jsx)("table", {
                    className: (0, o.default)(this.styles.diffContainer, {
                        [this.styles.splitView]: T
                    }),
                    children: (0, i.jsxs)("tbody", {
                        children: [
                            k,
                            S
                        ]
                    })
                });
            }, this.state = {
                expandedBlocks: []
            };
        }
    }
    R.defaultProps = {
        oldValue: "",
        newValue: "",
        splitView: !0,
        highlightLines: [],
        disableWordDiff: !1,
        compareMethod: l.DiffMethod.CHARS,
        styles: {},
        hideLineNumbers: !1,
        hideMarkers: !1,
        extraLinesSurroundingDiff: 3,
        showDiffOnly: !0,
        useDarkTheme: !1,
        linesOffset: 0,
        nonce: ""
    }, e.default = R;
})(PA);
const OY = /* @__PURE__ */ Ts(PA), uL = typeof window < "u", dn = uL ? window : null;
function CY() {
    const [e, t] = L.useState(""), [n, r] = L.useState(""), [s, i] = L.useState(!1), a = dn == null ? void 0 : dn.BUILDER_HYDRATION_OVERLAY.ERROR, o = dn == null ? void 0 : dn.BUILDER_HYDRATION_OVERLAY.SSR_HTML, l = dn == null ? void 0 : dn.BUILDER_HYDRATION_OVERLAY.CSR_HTML;
    L.useEffect({
        "CY.useEffect": ()=>{
            var u;
            if (uL) {
                if (!(dn != null && dn.BUILDER_HYDRATION_OVERLAY)) {
                    Pe("No hydration error found. Make sure you are using @builder.io/react-hydration-overlay");
                    return;
                }
                const E = (u = document.getElementById("sentry-spotlight-root")) == null ? void 0 : u.shadowRoot;
                if (!o || !l || !({
                    "CY.useEffect": ()=>{
                        if (s) return !0;
                        const O = document.head.querySelectorAll("style"), d = Array.from(O).filter({
                            "CY.useEffect.d": (h)=>h.getAttribute("data-emotion")
                        }["CY.useEffect.d"]), f = new CSSStyleSheet(), _ = Array.from(d).map({
                            "CY.useEffect._": (h)=>h.innerHTML
                        }["CY.useEffect._"]).join(`
`);
                        return f.replaceSync(_), E && E.adoptedStyleSheets && !(E.adoptedStyleSheets.indexOf(f) >= 0) && d.length > 0 ? (E.adoptedStyleSheets = [
                            ...E.adoptedStyleSheets,
                            f
                        ], i(!0), !0) : !1;
                    }
                })["CY.useEffect"]()) return;
                const A = sm(o, {
                    format: "html"
                });
                t(A);
                const R = sm(l, {
                    format: "html"
                });
                r(R);
            }
        }
    }["CY.useEffect"], [
        o,
        l,
        a
    ]);
    const c = {
        variables: {
            dark: {
                diffViewerBackground: "transparent",
                addedBackground: "transparent",
                removedBackground: "transparent",
                wordAddedBackground: "#055d67",
                wordRemovedBackground: "#7d383f",
                addedGutterBackground: "transparent",
                removedGutterBackground: "transparent",
                gutterBackground: "transparent",
                codeFoldBackground: "transparent",
                emptyLineBackground: "transparent",
                diffViewerTitleBorderColor: "transparent",
                highlightBackground: "transparent",
                highlightGutterBackground: "transparent",
                codeFoldGutterBackground: "transparent",
                gutterBackgroundDark: "transparent"
            }
        }
    };
    return dn != null && dn.BUILDER_HYDRATION_OVERLAY ? a ? /* @__PURE__ */ m.jsx("div", {
        className: "hydration-error-wrapper relative w-full overflow-x-auto",
        children: /* @__PURE__ */ m.jsx(OY, {
            styles: c,
            oldValue: e,
            newValue: n,
            leftTitle: s ? "Server-Side Render" : "",
            rightTitle: s ? "Client-Side Render" : "",
            compareMethod: PA.DiffMethod.WORDS,
            useDarkTheme: !0
        })
    }) : /* @__PURE__ */ m.jsx("div", {
        className: "text-primary-300 px-6 py-4",
        children: "No Hydration error found."
    }) : /* @__PURE__ */ m.jsx("div", {
        className: "text-primary-300 px-6 py-4",
        children: "No hydration error found. Make sure you are using @builder.io/react-hydration-overlay"
    });
}
function PY() {
    return {
        name: "hydration-error",
        tabs: ()=>[
                {
                    id: "hydration-error",
                    title: "Hydration Error",
                    content: CY
                }
            ]
    };
}
function gY() {
    return /* @__PURE__ */ m.jsx("div", {
        className: "divide-primary-900 bg-primary-950 h-full w-full divide-y",
        children: /* @__PURE__ */ m.jsx("div", {
            className: "flex h-full w-full flex-col gap-2",
            children: /* @__PURE__ */ m.jsx("iframe", {
                title: "vite-inspect",
                src: "http://localhost:4321/__inspect/",
                className: "h-full w-full"
            })
        })
    });
}
function MY() {
    return {
        name: "vite-inspect",
        tabs: ()=>[
                {
                    id: "vite-inspect",
                    title: "Vite Inspect",
                    content: gY
                }
            ],
        setup: ()=>{}
    };
}
function ym(e) {
    const t = new CSSStyleSheet();
    return t.replaceSync(e), t;
}
async function LY(e) {
    Hl("open", {
        path: e
    });
}
async function yY() {
    Hl("close");
}
async function DY(e) {
    kE("closed", e);
}
async function wY(e, t) {
    Hl("event", {
        contentType: e,
        data: t
    });
}
async function xY(e) {
    kE("opened", e);
}
async function UY(e) {
    kE("severeEventCount", (t)=>{
        var n;
        return e(((n = t.detail) == null ? void 0 : n.count) ?? 1);
    });
}
function vm() {
    return !!(window.__spotlight && window.document.getElementById("sentry-spotlight-root"));
}
async function FY(e = {}) {
    var P;
    if (typeof document > "u" || vm()) return;
    const t = (P = window.__spotlight) == null ? void 0 : P.initOptions;
    t && (e = {
        ...t,
        ...e
    });
    const { openOnInit: n = !1, sidecarUrl: r = E5, anchor: s = aI, integrations: i, experiments: a = jp, showClearEventsButton: o = !0, initialEvents: l = void 0, startFrom: c = void 0 } = e, u = new URL(r).origin === document.location.origin, E = EI(r, "/stream"), p = e.fullPage ?? u, A = e.showTriggerButton ?? !p, R = e.injectImmediately ?? (u || p), C = e.debug ?? document.location.hash.endsWith("debug");
    C && I5();
    const O = {
        ...jp,
        ...a
    }, d = ()=>[
            XG({
                injectIntoSDK: !u && !p
            })
        ], f = {
        open: LY,
        close: yY,
        experiments: O,
        sidecarUrl: E
    }, [_] = await uI(i ?? d(), f), h = document.createElement("div");
    h.id = "sentry-spotlight-root";
    const I = h.attachShadow({
        mode: "open"
    }), T = document.createElement("div");
    p ? (h.style.height = "100%", h.style.backgroundColor = s5.indigo[950], T.style.height = "inherit") : (T.style.position = "absolute", T.style.top = "0", T.style.left = "0", T.style.right = "0"), I.appendChild(T);
    const N = ym(g5);
    I.adoptedStyleSheets = [
        ym(zL),
        N
    ];
    const g = _.flatMap((w)=>{
        var G;
        return ((G = w.tabs) == null ? void 0 : G.call(w, {
            processedEvents: []
        }).map((k)=>({
                ...k,
                processedEvents: []
            }))) || [];
    }), b = c || (g.length ? `/${g[0].id}` : "/no-tabs");
    Pe("Starting from", b), p && (u || document.location.hash.startsWith("#spotlight")) && ek(b, {
        debug: C
    }), yT.createRoot(T).render(// <React.StrictMode>
    /* @__PURE__ */ m.jsx(Yv, {
        initialEntries: [
            b
        ],
        children: /* @__PURE__ */ m.jsx(UM, {
            context: f,
            children: /* @__PURE__ */ m.jsx(C5, {
                integrations: _,
                openOnInit: n,
                showTriggerButton: A,
                sidecarUrl: r,
                anchor: s,
                fullPage: p,
                showClearEventsButton: o,
                initialEvents: l
            })
        })
    }));
    function S() {
        if (vm()) {
            Pe("Spotlight already injected, bailing.");
            return;
        }
        Pe("Injecting into application");
        const w = new CSSStyleSheet();
        w.replaceSync(`body.${Xp} { overflow: hidden!important; }`), document.adoptedStyleSheets = [
            ...document.adoptedStyleSheets,
            w
        ], document.body.append(h);
    }
    document.readyState === "complete" || R ? S() : window.addEventListener("load", S), window.addEventListener("error", S);
}
;
 //# sourceMappingURL=sentry-spotlight.js.map
}}),
}]);

//# sourceMappingURL=node_modules_%40spotlightjs_overlay_dist_sentry-spotlight_42d9283f.js.map